### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult
    name: ExpressRouteCrossConnectionListResult
    fullName: ExpressRouteCrossConnectionListResult
    children:
      - azure-arm-network.ExpressRouteCrossConnectionListResult.Array
      - azure-arm-network.ExpressRouteCrossConnectionListResult.concat
      - azure-arm-network.ExpressRouteCrossConnectionListResult.concat_1
      - azure-arm-network.ExpressRouteCrossConnectionListResult.every
      - azure-arm-network.ExpressRouteCrossConnectionListResult.filter_1
      - azure-arm-network.ExpressRouteCrossConnectionListResult.filter
      - azure-arm-network.ExpressRouteCrossConnectionListResult.forEach
      - azure-arm-network.ExpressRouteCrossConnectionListResult.indexOf
      - azure-arm-network.ExpressRouteCrossConnectionListResult.join
      - azure-arm-network.ExpressRouteCrossConnectionListResult.lastIndexOf
      - azure-arm-network.ExpressRouteCrossConnectionListResult.length
      - azure-arm-network.ExpressRouteCrossConnectionListResult.map
      - azure-arm-network.ExpressRouteCrossConnectionListResult.nextLink
      - azure-arm-network.ExpressRouteCrossConnectionListResult.pop
      - azure-arm-network.ExpressRouteCrossConnectionListResult.push
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduce
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduce_1
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduce_2
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight_1
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight_2
      - azure-arm-network.ExpressRouteCrossConnectionListResult.reverse
      - azure-arm-network.ExpressRouteCrossConnectionListResult.shift
      - azure-arm-network.ExpressRouteCrossConnectionListResult.slice
      - azure-arm-network.ExpressRouteCrossConnectionListResult.some
      - azure-arm-network.ExpressRouteCrossConnectionListResult.sort
      - azure-arm-network.ExpressRouteCrossConnectionListResult.splice
      - azure-arm-network.ExpressRouteCrossConnectionListResult.splice_1
      - azure-arm-network.ExpressRouteCrossConnectionListResult.toLocaleString
      - azure-arm-network.ExpressRouteCrossConnectionListResult.toString
      - azure-arm-network.ExpressRouteCrossConnectionListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="24ffd-101">Ответ для вызова службы ListExpressRouteCrossConnection API.</span><span class="sxs-lookup"><span data-stu-id="24ffd-101">Response for ListExpressRouteCrossConnection API service call.</span></span>
    extends:
      name: Array<azure-arm-network.ExpressRouteCrossConnection>
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.concat
    name: 'concat(ConcatArray<ExpressRouteCrossConnection>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-102">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-102">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<ExpressRouteCrossConnection>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-network.ExpressRouteCrossConnection>[]'
          description: |
            <span data-ttu-id="24ffd-103">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="24ffd-103">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-104">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-104">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="24ffd-105">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="24ffd-105">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.every
    name: 'every((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-106">Определяет, удовлетворяют ли все элементы массива заданный тест.</span><span class="sxs-lookup"><span data-stu-id="24ffd-106">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean'
          description: '<span data-ttu-id="24ffd-107">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-107">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-108">Каждый метод вызывает функцию callbackfn для каждого элемента в Массив1, пока не callbackfn возвращает значение false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-108">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-109">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-109">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-110">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-110">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.filter_1
    name: 'filter((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-111">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-111">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => any'
          description: '<span data-ttu-id="24ffd-112">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-113">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-113">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-114">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-115">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.filter
    name: 'filter((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-116">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-116">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean'
          description: '<span data-ttu-id="24ffd-117">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-117">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-118">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-118">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-119">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-119">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-120">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-120">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.forEach
    name: 'forEach((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-121">Выполняет указанное действие для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-121">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => void'
          description: '<span data-ttu-id="24ffd-122">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-122">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-123">forEach вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-123">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-124">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-124">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-125">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-125">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.indexOf
    name: 'indexOf(ExpressRouteCrossConnection, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-126">Возвращает индекс первого вхождения значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-126">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: ExpressRouteCrossConnection, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-network.ExpressRouteCrossConnection
          description: '<span data-ttu-id="24ffd-127">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-127">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="24ffd-128">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="24ffd-128">The array index at which to begin the search.</span></span> <span data-ttu-id="24ffd-129">Если параметр fromIndex опущен, поиск начинается с индекса 0.</span><span class="sxs-lookup"><span data-stu-id="24ffd-129">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-130">Добавляет все элементы массива, разделенных указанной строкой-разделителем.</span><span class="sxs-lookup"><span data-stu-id="24ffd-130">Adds all the elements of an array separated by the specified separator string.</span></span>'
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="24ffd-131">Строка, используемая для разделения один элемент массива из следующего в результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="24ffd-131">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="24ffd-132">Если этот параметр опущен, элементы массива разделяются запятыми.</span><span class="sxs-lookup"><span data-stu-id="24ffd-132">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.lastIndexOf
    name: 'lastIndexOf(ExpressRouteCrossConnection, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-133">Возвращает индекс последнего вхождения указанного значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-133">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: ExpressRouteCrossConnection, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-network.ExpressRouteCrossConnection
          description: '<span data-ttu-id="24ffd-134">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-134">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="24ffd-135">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="24ffd-135">The array index at which to begin the search.</span></span> <span data-ttu-id="24ffd-136">Если параметр fromIndex опущен, поиск начинается с последнего индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-136">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="24ffd-137">Возвращает или задает длину массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-137">Gets or sets the length of the array.</span></span> <span data-ttu-id="24ffd-138">Это номер один, выше, чем наибольший элемент, определенный в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-138">This is a number one higher than the highest element defined in an array.</span></span>'
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.map
    name: 'map((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-139">Вызывает заданную функцию обратного вызова для каждого элемента массива и возвращает массив, содержащий результаты.</span><span class="sxs-lookup"><span data-stu-id="24ffd-139">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => U'
          description: '<span data-ttu-id="24ffd-140">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-140">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-141">Метод map вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-141">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-142">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-142">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-143">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-143">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="24ffd-144">URL-адрес для получения следующего набора результатов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-144">The URL to get the next set of results.</span></span>
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-145">Удаляет последний элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="24ffd-145">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.push
    name: 'push(ExpressRouteCrossConnection[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-146">Присоединяет новые элементы к массиву и возвращает новую длину массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-146">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: ExpressRouteCrossConnection[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-network.ExpressRouteCrossConnection[]'
          description: |
            <span data-ttu-id="24ffd-147">Новые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-147">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduce
    name: 'reduce((previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-148">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-148">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="24ffd-149">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-149">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection'
          description: '<span data-ttu-id="24ffd-150">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-150">A function that accepts up to four arguments.</span></span> <span data-ttu-id="24ffd-151">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-151">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduce_1
    name: 'reduce((previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection, ExpressRouteCrossConnection)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-152">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="24ffd-153">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection, initialValue: ExpressRouteCrossConnection)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection'
          description: ''
        - id: initialValue
          type:
            - azure-arm-network.ExpressRouteCrossConnection
          description: ''
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-154">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-154">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="24ffd-155">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-155">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U'
          description: '<span data-ttu-id="24ffd-156">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-156">A function that accepts up to four arguments.</span></span> <span data-ttu-id="24ffd-157">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-157">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="24ffd-158">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="24ffd-158">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="24ffd-159">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-159">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight
    name: 'reduceRight((previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-160">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="24ffd-160">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="24ffd-161">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-161">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection'
          description: '<span data-ttu-id="24ffd-162">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-162">A function that accepts up to four arguments.</span></span> <span data-ttu-id="24ffd-163">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-163">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight_1
    name: 'reduceRight((previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection, ExpressRouteCrossConnection)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-164">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="24ffd-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="24ffd-165">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection, initialValue: ExpressRouteCrossConnection)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: ExpressRouteCrossConnection, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => ExpressRouteCrossConnection'
          description: ''
        - id: initialValue
          type:
            - azure-arm-network.ExpressRouteCrossConnection
          description: ''
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-166">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="24ffd-166">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="24ffd-167">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="24ffd-167">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: ExpressRouteCrossConnection, currentIndex: number, array: ExpressRouteCrossConnection[]) => U'
          description: '<span data-ttu-id="24ffd-168">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-168">A function that accepts up to four arguments.</span></span> <span data-ttu-id="24ffd-169">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-169">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="24ffd-170">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="24ffd-170">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="24ffd-171">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-171">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-172">Резервирует элементы в массиве.</span><span class="sxs-lookup"><span data-stu-id="24ffd-172">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-173">Удаляет первый элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="24ffd-173">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-network.ExpressRouteCrossConnection | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-174">Возвращает фрагмент массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-174">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="24ffd-175">Начало указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-175">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="24ffd-176">Конец указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-176">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.some
    name: 'some((value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-177">Определяет, возвращает ли заданной функции обратного вызова значение true для любого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-177">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: ExpressRouteCrossConnection, index: number, array: ExpressRouteCrossConnection[]) => boolean'
          description: '<span data-ttu-id="24ffd-178">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-178">A function that accepts up to three arguments.</span></span> <span data-ttu-id="24ffd-179">Метод some вызывает функцию callbackfn для каждого элемента в массив1 callbackfn возвращает false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-179">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="24ffd-180">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="24ffd-180">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="24ffd-181">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="24ffd-181">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.sort
    name: 'sort((a: ExpressRouteCrossConnection, b: ExpressRouteCrossConnection) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-182">Сортирует массив.</span><span class="sxs-lookup"><span data-stu-id="24ffd-182">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: ExpressRouteCrossConnection, b: ExpressRouteCrossConnection) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: ExpressRouteCrossConnection, b: ExpressRouteCrossConnection) => number'
          description: |
            <span data-ttu-id="24ffd-183">Имя функции, используемое для определения порядка элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-183">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="24ffd-184">Если этот параметр опущен, элементы сортируются по возрастанию, ASCII символ.</span><span class="sxs-lookup"><span data-stu-id="24ffd-184">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-185">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="24ffd-185">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="24ffd-186">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-186">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="24ffd-187">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-187">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.splice_1
    name: 'splice(number, number, ExpressRouteCrossConnection[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-188">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="24ffd-188">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: ExpressRouteCrossConnection[])'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="24ffd-189">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-189">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="24ffd-190">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-190">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-network.ExpressRouteCrossConnection[]'
          description: |
            <span data-ttu-id="24ffd-191">Элементов для вставки в массив вместо удаленных элементов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-191">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-network.ExpressRouteCrossConnection[]'
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="24ffd-192">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-192">Returns a string representation of an array.</span></span> <span data-ttu-id="24ffd-193">Элементы преобразуются в строку, используя их toLocalString методов.</span><span class="sxs-lookup"><span data-stu-id="24ffd-193">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-194">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-194">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ExpressRouteCrossConnectionListResult.unshift
    name: 'unshift(ExpressRouteCrossConnection[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="24ffd-195">Вставляет новые элементы в начало массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-195">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: ExpressRouteCrossConnection[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-network.ExpressRouteCrossConnection[]'
          description: |
            <span data-ttu-id="24ffd-196">Элементов для вставки в начале массива.</span><span class="sxs-lookup"><span data-stu-id="24ffd-196">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-network
references:
  - uid: Array<azure-arm-network.ExpressRouteCrossConnection>
    name: ExpressRouteCrossConnection>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: ExpressRouteCrossConnection
        fullName: ExpressRouteCrossConnection
        uid: azure-arm-network.ExpressRouteCrossConnection
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-network.ExpressRouteCrossConnection>[]'
    name: 'ExpressRouteCrossConnection>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: ExpressRouteCrossConnection
        fullName: ExpressRouteCrossConnection
        uid: azure-arm-network.ExpressRouteCrossConnection
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-network.ExpressRouteCrossConnection[]'
    name: 'ExpressRouteCrossConnection[]'
    spec.typeScript:
      - name: ExpressRouteCrossConnection
        fullName: ExpressRouteCrossConnection
        uid: azure-arm-network.ExpressRouteCrossConnection
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-network.ExpressRouteCrossConnection
    name: ExpressRouteCrossConnection
    spec.typeScript:
      - name: ExpressRouteCrossConnection
        fullName: ExpressRouteCrossConnection
        uid: azure-arm-network.ExpressRouteCrossConnection
  - uid: azure-arm-network.ExpressRouteCrossConnection | undefined
    name: ExpressRouteCrossConnection | undefined
    spec.typeScript:
      - name: ExpressRouteCrossConnection
        fullName: ExpressRouteCrossConnection
        uid: azure-arm-network.ExpressRouteCrossConnection
      - name: ' | undefined'
        fullName: ' | undefined'