### YamlMime:UniversalReference
ms.openlocfilehash: c754be5dccd07eb709d40823872c40fcbc25f58c
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41683919"
items:
- uid: azure-arm-eventhub.ConsumerGroups
  name: ConsumerGroups
  fullName: ConsumerGroups
  children:
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate_2
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate_1
  - azure-arm-eventhub.ConsumerGroups.createOrUpdateWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.deleteMethod
  - azure-arm-eventhub.ConsumerGroups.deleteMethod_1
  - azure-arm-eventhub.ConsumerGroups.deleteMethod_2
  - azure-arm-eventhub.ConsumerGroups.deleteMethodWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.get
  - azure-arm-eventhub.ConsumerGroups.get_1
  - azure-arm-eventhub.ConsumerGroups.get_2
  - azure-arm-eventhub.ConsumerGroups.getWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.listByEventHub
  - azure-arm-eventhub.ConsumerGroups.listByEventHub_1
  - azure-arm-eventhub.ConsumerGroups.listByEventHub_2
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext_1
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext_2
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNextWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.listByEventHubWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-101">Создает или обновляет группу потребителей концентраторов событий в качестве вложенного ресурса в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-101">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-102">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-102">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-103">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-103">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-104">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-104">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-105">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-105">The consumer group name</span></span>
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: >
        <span data-ttu-id="8859a-106">Параметры для создания или обновления ресурса группы потребителей.</span><span class="sxs-lookup"><span data-stu-id="8859a-106">Parameters supplied to create or update a consumer group resource.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate_2
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-107">Создает или обновляет группу потребителей концентраторов событий в качестве вложенного ресурса в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-107">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options: Object, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate_1
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-108">Создает или обновляет группу потребителей концентраторов событий в качестве вложенного ресурса в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-108">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-109">Создает или обновляет группу потребителей концентраторов событий в качестве вложенного ресурса в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-109">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-110">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-110">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-111">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-111">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-112">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-112">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-113">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-113">The consumer group name</span></span>
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: >
        <span data-ttu-id="8859a-114">Параметры для создания или обновления ресурса группы потребителей.</span><span class="sxs-lookup"><span data-stu-id="8859a-114">Parameters supplied to create or update a consumer group resource.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-115">Удаляет группу потребителей из указанной группы ресурсов и концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="8859a-115">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-116">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-116">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-117">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-117">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-118">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-118">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-119">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-119">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-120">Удаляет группу потребителей из указанной группы ресурсов и концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="8859a-120">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-121">Удаляет группу потребителей из указанной группы ресурсов и концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="8859a-121">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-122">Удаляет группу потребителей из указанной группы ресурсов и концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="8859a-122">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-123">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-123">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-124">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-124">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-125">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-125">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-126">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-126">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-127">Получает описание для группы потребителей на указанный.</span><span class="sxs-lookup"><span data-stu-id="8859a-127">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-128">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-128">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-129">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-129">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-130">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-130">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-131">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-131">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-132">Получает описание для группы потребителей на указанный.</span><span class="sxs-lookup"><span data-stu-id="8859a-132">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-133">Получает описание для группы потребителей на указанный.</span><span class="sxs-lookup"><span data-stu-id="8859a-133">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: Object, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-134">Получает описание для группы потребителей на указанный.</span><span class="sxs-lookup"><span data-stu-id="8859a-134">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-135">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-135">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-136">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-136">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-137">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-137">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-138">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="8859a-138">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub
  name: listByEventHub
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-139">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-139">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-140">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-140">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-141">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-141">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-142">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-142">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-143">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-143">The Event Hub name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub_1
  name: listByEventHub
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-144">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-144">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-145">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-145">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub_2
  name: listByEventHub
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-146">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-146">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-147">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-147">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options: Object, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext
  name: listByEventHubNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-148">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-148">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-149">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-149">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="8859a-150">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="8859a-150">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext_1
  name: listByEventHubNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-151">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-151">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-152">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-152">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext_2
  name: listByEventHubNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-153">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-153">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-154">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-154">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, options: Object, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNextWithHttpOperationResponse
  name: listByEventHubNextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-155">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-155">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-156">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-156">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="8859a-157">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="8859a-157">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubWithHttpOperationResponse
  name: listByEventHubWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8859a-158">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-158">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="8859a-159">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="8859a-159">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-160">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="8859a-160">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-161">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="8859a-161">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="8859a-162">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="8859a-162">The Event Hub name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  package: azure-arm-eventhub
references:
- uid: azure-arm-eventhub.ConsumerGroup
  spec.typeScript:
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
- uid: Promise<azure-arm-eventhub.ConsumerGroup>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventhub.ConsumerGroup>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-eventhub.ConsumerGroupListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>>'
    fullName: '>>'
