### YamlMime:UniversalReference
items:
  - uid: azure-storage.azurestorage.services.file.FileService
    name: FileService
    fullName: FileService
    children:
      - azure-storage.azurestorage.services.file.FileService.abortCopyFile_1
      - azure-storage.azurestorage.services.file.FileService.abortCopyFile
      - azure-storage.azurestorage.services.file.FileService.clearRange_1
      - azure-storage.azurestorage.services.file.FileService.clearRange
      - azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
      - azure-storage.azurestorage.services.file.FileService.createDirectory
      - azure-storage.azurestorage.services.file.FileService.createDirectory_1
      - azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists
      - azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists_1
      - azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
      - azure-storage.azurestorage.services.file.FileService.createFile
      - azure-storage.azurestorage.services.file.FileService.createFile_1
      - azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile
      - azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile_1
      - azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile
      - azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile_1
      - azure-storage.azurestorage.services.file.FileService.createFileFromStream
      - azure-storage.azurestorage.services.file.FileService.createFileFromStream_1
      - azure-storage.azurestorage.services.file.FileService.createFileFromText
      - azure-storage.azurestorage.services.file.FileService.createFileFromText_1
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      - azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
      - azure-storage.azurestorage.services.file.FileService.createRangesFromStream
      - azure-storage.azurestorage.services.file.FileService.createRangesFromStream_1
      - azure-storage.azurestorage.services.file.FileService.createReadStream_1
      - azure-storage.azurestorage.services.file.FileService.createReadStream
      - azure-storage.azurestorage.services.file.FileService.createShare
      - azure-storage.azurestorage.services.file.FileService.createShare_1
      - azure-storage.azurestorage.services.file.FileService.createShareIfNotExists
      - azure-storage.azurestorage.services.file.FileService.createShareIfNotExists_1
      - azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
      - azure-storage.azurestorage.services.file.FileService.createShareSnapshot_1
      - azure-storage.azurestorage.services.file.FileService.createShareSnapshot
      - azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile
      - azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile_1
      - azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile
      - azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile_1
      - azure-storage.azurestorage.services.file.FileService.defaultClientRequestTimeoutInMs
      - azure-storage.azurestorage.services.file.FileService.defaultEnableReuseSocket
      - azure-storage.azurestorage.services.file.FileService.defaultLocationMode
      - azure-storage.azurestorage.services.file.FileService.defaultMaximumExecutionTimeInMs
      - azure-storage.azurestorage.services.file.FileService.defaultTimeoutIntervalInMs
      - azure-storage.azurestorage.services.file.FileService.deleteDirectory_1
      - azure-storage.azurestorage.services.file.FileService.deleteDirectory
      - azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists_1
      - azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists
      - azure-storage.azurestorage.services.file.FileService.deleteFile_1
      - azure-storage.azurestorage.services.file.FileService.deleteFile
      - azure-storage.azurestorage.services.file.FileService.deleteFileIfExists_1
      - azure-storage.azurestorage.services.file.FileService.deleteFileIfExists
      - azure-storage.azurestorage.services.file.FileService.deleteShare
      - azure-storage.azurestorage.services.file.FileService.deleteShare_1
      - azure-storage.azurestorage.services.file.FileService.deleteShareIfExists
      - azure-storage.azurestorage.services.file.FileService.deleteShareIfExists_1
      - azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
      - azure-storage.azurestorage.services.file.FileService.DirectoryResult
      - azure-storage.azurestorage.services.file.FileService.doesDirectoryExist_1
      - azure-storage.azurestorage.services.file.FileService.doesDirectoryExist
      - azure-storage.azurestorage.services.file.FileService.doesFileExist_1
      - azure-storage.azurestorage.services.file.FileService.doesFileExist
      - azure-storage.azurestorage.services.file.FileService.doesShareExist_1
      - azure-storage.azurestorage.services.file.FileService.doesShareExist
      - azure-storage.azurestorage.services.file.FileService.enableGlobalHttpAgent
      - azure-storage.azurestorage.services.file.FileService.FileResult
      - azure-storage.azurestorage.services.file.FileService.constructor
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      - azure-storage.azurestorage.services.file.FileService.FileToText
      - azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignature
      - azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignatureWithVersion
      - azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata_1
      - azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata
      - azure-storage.azurestorage.services.file.FileService.getDirectoryProperties_1
      - azure-storage.azurestorage.services.file.FileService.getDirectoryProperties
      - azure-storage.azurestorage.services.file.FileService.getFileMetadata_1
      - azure-storage.azurestorage.services.file.FileService.getFileMetadata
      - azure-storage.azurestorage.services.file.FileService.getFileProperties_1
      - azure-storage.azurestorage.services.file.FileService.getFileProperties
      - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
      - azure-storage.azurestorage.services.file.FileService.getFileToLocalFile_1
      - azure-storage.azurestorage.services.file.FileService.getFileToLocalFile
      - azure-storage.azurestorage.services.file.FileService.getFileToStream_1
      - azure-storage.azurestorage.services.file.FileService.getFileToStream
      - azure-storage.azurestorage.services.file.FileService.getFileToText_1
      - azure-storage.azurestorage.services.file.FileService.getFileToText
      - azure-storage.azurestorage.services.file.FileService.getServiceProperties_1
      - azure-storage.azurestorage.services.file.FileService.getServiceProperties
      - azure-storage.azurestorage.services.file.FileService.getShareAcl_1
      - azure-storage.azurestorage.services.file.FileService.getShareAcl
      - azure-storage.azurestorage.services.file.FileService.getShareMetadata_1
      - azure-storage.azurestorage.services.file.FileService.getShareMetadata
      - azure-storage.azurestorage.services.file.FileService.getShareProperties_1
      - azure-storage.azurestorage.services.file.FileService.getShareProperties
      - azure-storage.azurestorage.services.file.FileService.getShareStats_1
      - azure-storage.azurestorage.services.file.FileService.getShareStats
      - azure-storage.azurestorage.services.file.FileService.getUrl
      - azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
      - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented_1
      - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented
      - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix_1
      - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix
      - azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
      - azure-storage.azurestorage.services.file.FileService.listRanges_1
      - azure-storage.azurestorage.services.file.FileService.listRanges
      - azure-storage.azurestorage.services.file.FileService.ListRequestOptions
      - azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
      - azure-storage.azurestorage.services.file.FileService.ListSharesResult
      - azure-storage.azurestorage.services.file.FileService.listSharesSegmented_1
      - azure-storage.azurestorage.services.file.FileService.listSharesSegmented
      - azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix_1
      - azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix
      - azure-storage.azurestorage.services.file.FileService.logger
      - azure-storage.azurestorage.services.file.FileService.parallelOperationThreadCount
      - azure-storage.azurestorage.services.file.FileService.proxy
      - azure-storage.azurestorage.services.file.FileService.resizeFile_1
      - azure-storage.azurestorage.services.file.FileService.resizeFile
      - azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata_1
      - azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata
      - azure-storage.azurestorage.services.file.FileService.setFileMetadata_1
      - azure-storage.azurestorage.services.file.FileService.setFileMetadata
      - azure-storage.azurestorage.services.file.FileService.setFileProperties_1
      - azure-storage.azurestorage.services.file.FileService.setFileProperties
      - azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
      - azure-storage.azurestorage.services.file.FileService.setProxy
      - azure-storage.azurestorage.services.file.FileService.setServiceProperties_1
      - azure-storage.azurestorage.services.file.FileService.setServiceProperties
      - azure-storage.azurestorage.services.file.FileService.setShareAcl_1
      - azure-storage.azurestorage.services.file.FileService.setShareAcl
      - azure-storage.azurestorage.services.file.FileService.setShareMetadata_1
      - azure-storage.azurestorage.services.file.FileService.setShareMetadata
      - azure-storage.azurestorage.services.file.FileService.setShareProperties_1
      - azure-storage.azurestorage.services.file.FileService.setShareProperties
      - azure-storage.azurestorage.services.file.FileService.ShareAclResult
      - azure-storage.azurestorage.services.file.FileService.ShareProperties
      - azure-storage.azurestorage.services.file.FileService.ShareResult
      - azure-storage.azurestorage.services.file.FileService.singleFileThresholdInBytes
      - azure-storage.azurestorage.services.file.FileService.startCopyFile
      - azure-storage.azurestorage.services.file.FileService.startCopyFile_1
      - azure-storage.azurestorage.services.file.FileService.useNagleAlgorithm
      - azure-storage.azurestorage.services.file.FileService.withFilter
    langs:
      - typeScript
    type: module
    summary: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile_1
    name: 'abortCopyFile(string, string, string, string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Прервите операцию копирования файла.
    syntax:
      content: 'function abortCopyFile(share: string, directory: string, file: string, copyId: string, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: copyId
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile
    name: 'abortCopyFile(string, string, string, string, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Прервите операцию копирования файла.
    syntax:
      content: 'function abortCopyFile(share: string, directory: string, file: string, copyId: string, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: Имя целевого общего ресурса.
        - id: directory
          type:
            - string
          description: Имя конечного каталога.
        - id: file
          type:
            - string
          description: Имя конечного файла.
        - id: copyId
          type:
            - string
          description: Идентификатор операции копирования.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` будет содержать сведения, если произошла ошибка.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.clearRange_1
    name: 'clearRange(string, string, string, number, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Очищает диапазон. Удаляет все диапазоны по умолчанию или только наборов данных через определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.'
    syntax:
      content: 'function clearRange(share: string, directory: string, file: string, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: rangeStart
          type:
            - number
          description: ''
        - id: rangeEnd
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.clearRange
    name: 'clearRange(string, string, string, number, number, RequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Очищает диапазон. Удаляет все диапазоны по умолчанию или только наборов данных через определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.'
    syntax:
      content: 'function clearRange(share: string, directory: string, file: string, rangeStart: number, rangeEnd: number, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: rangeStart
          type:
            - number
          description: Начало диапазона.
        - id: rangeEnd
          type:
            - number
          description: Конец диапазона.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                                   `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectory
    name: 'createDirectory(string, string, CreateDirectoryRequestOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Создает новый каталог в указанной учетной записи.
      Если каталог с таким именем уже существует, операция завершится ошибкой.
    syntax:
      content: 'function createDirectory(share: string, directory: string, options: CreateDirectoryRequestOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectory_1
    name: 'createDirectory(string, string, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Создает новый каталог в указанной учетной записи.
      Если каталог с таким именем уже существует, операция завершится ошибкой.
    syntax:
      content: 'function createDirectory(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists
    name: 'createDirectoryIfNotExists(string, string, CreateDirectoryRequestOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создает новый каталог в указанной учетной записи, если каталог не существует.'
    syntax:
      content: 'function createDirectoryIfNotExists(share: string, directory: string, options: CreateDirectoryRequestOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог был создан, или значение false, если каталог уже существует.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists_1
    name: 'createDirectoryIfNotExists(string, string, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создает новый каталог в указанной учетной записи, если каталог не существует.'
    syntax:
      content: 'function createDirectoryIfNotExists(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFile
    name: 'createFile(string, string, string, number, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает файл указанной длины.
    syntax:
      content: 'function createFile(share: string, directory: string, file: string, length: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: length
          type:
            - number
          description: Длина файла в байтах.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                                      `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFile_1
    name: 'createFile(string, string, string, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает файл указанной длины.
    syntax:
      content: 'function createFile(share: string, directory: string, file: string, length: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: length
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile
    name: 'createFileFromBrowserFile(string, string, string, Object, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Передает файл в хранилище из объекта HTML-файл. Если файл уже существует в службе, он будет перезаписан.
      (Доступно только в клиентской библиотеке JavaScript для браузеров)
    syntax:
      content: 'function createFileFromBrowserFile(share: string, directory: string, file: string, browserFile: Object, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: browserFile
          type:
            - Object
          description: Объект файла для отправки создается с API файлов HTML.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |-
            `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:FileResult)` будет содержать сведения о файле.
                                                                                      `response` будет содержать сведения, относящиеся к этой операции.
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile_1
    name: 'createFileFromBrowserFile(string, string, string, Object, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Передает файл в хранилище из объекта HTML-файл. Если файл уже существует в службе, он будет перезаписан.
      (Доступно только в клиентской библиотеке JavaScript для браузеров)
    syntax:
      content: 'function createFileFromBrowserFile(share: string, directory: string, file: string, browserFile: Object, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: browserFile
          type:
            - Object
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile
    name: 'createFileFromLocalFile(string, string, string, string, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Передает файл в хранилище из локального файла.
    syntax:
      content: 'function createFileFromLocalFile(share: string, directory: string, file: string, localFileName: string, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: localFileName
          type:
            - string
          description: ''
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: Функция обратного вызова.
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile_1
    name: 'createFileFromLocalFile(string, string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Передает файл в хранилище из локального файла.
    syntax:
      content: 'function createFileFromLocalFile(share: string, directory: string, file: string, localFileName: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: localFileName
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream
    name: 'createFileFromStream(string, string, string, stream.Readable, number, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправляет файл из потока.
    syntax:
      content: 'function createFileFromStream(share: string, directory: string, file: string, stream: stream.Readable, streamLength: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: stream
          type:
            - stream.Readable
          description: ''
        - id: streamLength
          type:
            - number
          description: Длина потока для отправки.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: Функция обратного вызова.
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream_1
    name: 'createFileFromStream(string, string, string, stream.Readable, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправляет файл из потока.
    syntax:
      content: 'function createFileFromStream(share: string, directory: string, file: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: stream
          type:
            - stream.Readable
          description: ''
        - id: streamLength
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromText
    name: 'createFileFromText(string, string, string, string | Buffer, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправляет файл из текстовой строки.
    syntax:
      content: 'function createFileFromText(share: string, directory: string, file: string, text: string | Buffer, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: text
          type:
            - string | Buffer
          description: Файл текст как строку или в буфере.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; `result` будет содержать сведения о файле.
                                                                                      `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromText_1
    name: 'createFileFromText(string, string, string, string | Buffer, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправляет файл из текстовой строки.
    syntax:
      content: 'function createFileFromText(share: string, directory: string, file: string, text: string | Buffer, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: text
          type:
            - string | Buffer
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream
    name: 'createRangesFromStream(string, string, string, stream.Readable, number, number, CreateRangeRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет диапазон из потока.
    syntax:
      content: 'function createRangesFromStream(share: string, directory: string, file: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, options: CreateRangeRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: readStream
          type:
            - stream.Readable
          description: Поток для чтения Node.js.
        - id: rangeStart
          type:
            - number
          description: Начало диапазона.
        - id: rangeEnd
          type:
            - number
          description: Конец диапазона.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream_1
    name: 'createRangesFromStream(string, string, string, stream.Readable, number, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет диапазон из потока.
    syntax:
      content: 'function createRangesFromStream(share: string, directory: string, file: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: readStream
          type:
            - stream.Readable
          description: ''
        - id: rangeStart
          type:
            - number
          description: ''
        - id: rangeEnd
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createReadStream_1
    name: 'createReadStream(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Предоставляет поток для чтения из файла.
    syntax:
      content: 'function createReadStream(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - stream.Readable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createReadStream
    name: 'createReadStream(string, string, string, GetFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Предоставляет поток для чтения из файла.
    syntax:
      content: 'function createReadStream(share: string, directory: string, file: string, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |-
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
      return:
        type:
          - stream.Readable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShare
    name: 'createShare(string, CreateShareRequestOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Создает новую общую папку в указанной учетной записи.
      Если общую папку с тем же именем уже существует, операция завершится ошибкой.
    syntax:
      content: 'function createShare(share: string, options: CreateShareRequestOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения общей папки.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShare_1
    name: 'createShare(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Создает новую общую папку в указанной учетной записи.
      Если общую папку с тем же именем уже существует, операция завершится ошибкой.
    syntax:
      content: 'function createShare(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists
    name: 'createShareIfNotExists(string, CreateShareRequestOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создает новую общую папку в указанной учетной записи, если общий ресурс не существует.'
    syntax:
      content: 'function createShareIfNotExists(share: string, options: CreateShareRequestOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если был создан файловый ресурс, или значение false, если общий ресурс уже существует.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists_1
    name: 'createShareIfNotExists(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создает новую общую папку в указанной учетной записи, если общий ресурс не существует.'
    syntax:
      content: 'function createShareIfNotExists(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot_1
    name: 'createShareSnapshot(string, ErrorOrResult<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createShareSnapshot(share: string, callback: ErrorOrResult<string>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<string>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot
    name: 'createShareSnapshot(string, RequestOptions, ErrorOrResult<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createShareSnapshot(share: string, options: RequestOptions, callback: ErrorOrResult<string>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<string>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile
    name: 'createWriteStreamToExistingFile(string, string, string, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Предоставляет поток для записи в файл. Предполагается, что файл существует.
      Если нет, создайте файл, используя createFile перед вызовом этого метода или использовать createWriteStreamNewFile.
      Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
    syntax:
      content: 'function createWriteStreamToExistingFile(share: string, directory: string, file: string, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: Функция обратного вызова.
      return:
        type:
          - stream.Writable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile_1
    name: 'createWriteStreamToExistingFile(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Предоставляет поток для записи в файл. Предполагается, что файл существует.
      Если нет, создайте файл, используя createFile перед вызовом этого метода или использовать createWriteStreamNewFile.
      Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
    syntax:
      content: 'function createWriteStreamToExistingFile(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - stream.Writable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile
    name: 'createWriteStreamToNewFile(string, string, string, number, CreateFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Предоставляет поток для записи в файл. Создает файл перед записью данных.
      Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
    syntax:
      content: 'function createWriteStreamToNewFile(share: string, directory: string, file: string, length: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: length
          type:
            - number
          description: Длина файла.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: Функция обратного вызова.
      return:
        type:
          - stream.Writable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile_1
    name: 'createWriteStreamToNewFile(string, string, string, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Предоставляет поток для записи в файл. Создает файл перед записью данных.
      Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
    syntax:
      content: 'function createWriteStreamToNewFile(share: string, directory: string, file: string, length: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: length
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - stream.Writable
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
    fullName: defaultClientRequestTimeoutInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'По умолчанию время ожидания клиентских запросов, в миллисекундах, используемый для запроса.'
    syntax:
      content: 'defaultClientRequestTimeoutInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.defaultEnableReuseSocket
    name: defaultEnableReuseSocket
    fullName: defaultEnableReuseSocket
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'defaultEnableReuseSocket: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.defaultLocationMode
    name: defaultLocationMode
    fullName: defaultLocationMode
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Режим расположения по умолчанию для запросов, выполненных с помощью службы.'
    syntax:
      content: 'defaultLocationMode: LocationMode'
      return:
        type:
          - azure-storage.azurestorage.common.util.storageutilities.LocationMode
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
    fullName: defaultMaximumExecutionTimeInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'По умолчанию максимальное время выполнения по всем потенциальным попыткам для запросов, выполненных с помощью службы.'
    syntax:
      content: 'defaultMaximumExecutionTimeInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
    fullName: defaultTimeoutIntervalInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Интервал времени ожидания по умолчанию, в миллисекундах, используемый для запроса, выполненного с помощью службы.'
    syntax:
      content: 'defaultTimeoutIntervalInMs: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory_1
    name: 'deleteDirectory(string, string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный каталог для удаления. Каталог должен быть пустым, перед его удалением.'
    syntax:
      content: 'function deleteDirectory(share: string, directory: string, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory
    name: 'deleteDirectory(string, string, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный каталог для удаления. Каталог должен быть пустым, перед его удалением.'
    syntax:
      content: 'function deleteDirectory(share: string, directory: string, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists_1
    name: 'deleteDirectoryIfExists(string, string, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный каталог для удаления, если он существует. Каталог должен быть пустым, перед его удалением.'
    syntax:
      content: 'function deleteDirectoryIfExists(share: string, directory: string, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists
    name: 'deleteDirectoryIfExists(string, string, RequestOptions, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный каталог для удаления, если он существует. Каталог должен быть пустым, перед его удалением.'
    syntax:
      content: 'function deleteDirectoryIfExists(share: string, directory: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог существует и был удален, или значение false, если каталог не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFile_1
    name: 'deleteFile(string, string, string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отмечает указанный файл для удаления. Этот файл удаляется позже во время сборки мусора.
    syntax:
      content: 'function deleteFile(share: string, directory: string, file: string, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFile
    name: 'deleteFile(string, string, string, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Отмечает указанный файл для удаления. Этот файл удаляется позже во время сборки мусора.
    syntax:
      content: 'function deleteFile(share: string, directory: string, file: string, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists_1
    name: 'deleteFileIfExists(string, string, string, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный файл для удаления, если он существует. Этот файл удаляется позже во время сборки мусора.'
    syntax:
      content: 'function deleteFileIfExists(share: string, directory: string, file: string, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists
    name: 'deleteFileIfExists(string, string, string, RequestOptions, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отмечает указанный файл для удаления, если он существует. Этот файл удаляется позже во время сборки мусора.'
    syntax:
      content: 'function deleteFileIfExists(share: string, directory: string, file: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если файл был удален, или значение false, если файл не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShare
    name: 'deleteShare(string, DeleteShareOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Отмечает указанный общий ресурс для удаления.
      Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
    syntax:
      content: 'function deleteShare(share: string, options: DeleteShareOptions, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShare_1
    name: 'deleteShare(string, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Отмечает указанный общий ресурс для удаления.
      Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
    syntax:
      content: 'function deleteShare(share: string, callback: ErrorOrResponse)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists
    name: 'deleteShareIfExists(string, DeleteShareOptions, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Отмечает указанный общий ресурс для удаления, если он существует.
      Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
    syntax:
      content: 'function deleteShareIfExists(share: string, options: DeleteShareOptions, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если общий ресурс существует и был удален, или значение false, если общий ресурс не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists_1
    name: 'deleteShareIfExists(string, ErrorOrResult<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Отмечает указанный общий ресурс для удаления, если он существует.
      Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
    syntax:
      content: 'function deleteShareIfExists(share: string, callback: ErrorOrResult<boolean>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<boolean>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist_1
    name: 'doesDirectoryExist(string, string, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли каталог в службе.'
    syntax:
      content: 'function doesDirectoryExist(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist
    name: 'doesDirectoryExist(string, string, FileServiceOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли каталог в службе.'
    syntax:
      content: 'function doesDirectoryExist(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог существует, или значение false, если каталог не существует.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesFileExist_1
    name: 'doesFileExist(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли файл в службе.'
    syntax:
      content: 'function doesFileExist(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesFileExist
    name: 'doesFileExist(string, string, string, FileServiceOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли файл в службе.'
    syntax:
      content: 'function doesFileExist(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет значение true, если файл существует, или значение false, если файл не существует.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesShareExist_1
    name: 'doesShareExist(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли общую папку в службе.'
    syntax:
      content: 'function doesShareExist(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.doesShareExist
    name: 'doesShareExist(string, FileServiceOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Проверяет, существует ли общую папку в службе.'
    syntax:
      content: 'function doesShareExist(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если общий ресурс существует, или значение false, если общий ресурс не существует.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
    fullName: enableGlobalHttpAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Определяет, включена ли глобального агента HTTP (s); значение true, чтобы использовать агент глобального HTTP (s); в противном случае — значение false, чтобы использовать HTTP (s). Agent({keepAlive:true}).'
    syntax:
      content: 'enableGlobalHttpAgent: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.constructor
    name: 'FileService(string, string, StorageHost, boolean, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создает новый объект StorageServiceClient.
    syntax:
      content: 'new FileService(storageAccount?: string, storageAccessKey?: string, host?: StorageHost, usePathStyleUri?: boolean, sasToken?: string)'
      parameters:
        - id: storageAccount
          type:
            - string
          description: Учетная запись хранения.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: Ключ доступа к хранилищу.
          optional: true
        - id: host
          type:
            - azure-storage.azurestorage.StorageHost
          description: Узел для службы.
          optional: true
        - id: usePathStyleUri
          type:
            - boolean
          description: 'Логическое значение, указывающее допускает использование путь стиля идентификаторы URI.'
          optional: true
        - id: sasToken
          type:
            - string
          description: |
            Токен подписи общего доступа.
          optional: true
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignature
    name: 'generateSharedAccessSignature(string, string, string, SharedAccessPolicy, ContentSettingsHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Извлекает токен подписи общего доступа.
    syntax:
      content: 'function generateSharedAccessSignature(share: string, directory: string, file: string, sharedAccessPolicy: SharedAccessPolicy, headers?: ContentSettingsHeaders)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.common.SharedAccessPolicy
          description: Политика общего доступа.
        - id: headers
          type:
            - azure-storage.azurestorage.common.ContentSettingsHeaders
          description: ''
          optional: true
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignatureWithVersion
    name: 'generateSharedAccessSignatureWithVersion(string, string, string, SharedAccessPolicy, string, ContentSettingsHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Извлекает токен подписи общего доступа.
    syntax:
      content: 'function generateSharedAccessSignatureWithVersion(share: string, directory: string, file: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string, headers?: ContentSettingsHeaders)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: sharedAccessPolicy
          type:
            - azure-storage.azurestorage.common.SharedAccessPolicy
          description: Политика общего доступа.
        - id: sasVersion
          type:
            - string
          description: ''
        - id: headers
          type:
            - azure-storage.azurestorage.common.ContentSettingsHeaders
          description: ''
          optional: true
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata_1
    name: 'getDirectoryMetadata(string, string, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает все определяемые пользователем метаданные для указанного каталога.
    syntax:
      content: 'function getDirectoryMetadata(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata
    name: 'getDirectoryMetadata(string, string, FileServiceOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает все определяемые пользователем метаданные для указанного каталога.
    syntax:
      content: 'function getDirectoryMetadata(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties_1
    name: 'getDirectoryProperties(string, string, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает каталог и его свойства из указанной учетной записи.
    syntax:
      content: 'function getDirectoryProperties(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties
    name: 'getDirectoryProperties(string, string, FileServiceOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает каталог и его свойства из указанной учетной записи.
    syntax:
      content: 'function getDirectoryProperties(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata_1
    name: 'getFileMetadata(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Возвращает все определяемые пользователем метаданные для указанного файла.
      Не изменять и не возвращает содержимое файла.
    syntax:
      content: 'function getFileMetadata(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata
    name: 'getFileMetadata(string, string, string, FileServiceOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Возвращает все определяемые пользователем метаданные для указанного файла.
      Не изменять и не возвращает содержимое файла.
    syntax:
      content: 'function getFileMetadata(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileProperties_1
    name: 'getFileProperties(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства для файла.
      Он не вернуть или изменить содержимое файла.
    syntax:
      content: 'function getFileProperties(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileProperties
    name: 'getFileProperties(string, string, string, FileServiceOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства для файла.
      Он не вернуть или изменить содержимое файла.
    syntax:
      content: 'function getFileProperties(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile_1
    name: 'getFileToLocalFile(string, string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл Azure в файл.
    syntax:
      content: 'function getFileToLocalFile(share: string, directory: string, file: string, localFileName: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: localFileName
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile
    name: 'getFileToLocalFile(string, string, string, string, GetFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл Azure в файл.
    syntax:
      content: 'function getFileToLocalFile(share: string, directory: string, file: string, localFileName: string, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: localFileName
          type:
            - string
          description: Локальный путь к загружаемому файлу.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |-
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToStream_1
    name: 'getFileToStream(string, string, string, stream.Writable, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл в поток.
    syntax:
      content: 'function getFileToStream(share: string, directory: string, file: string, writeStream: stream.Writable, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: writeStream
          type:
            - stream.Writable
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToStream
    name: 'getFileToStream(string, string, string, stream.Writable, GetFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл в поток.
    syntax:
      content: 'function getFileToStream(share: string, directory: string, file: string, writeStream: stream.Writable, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: writeStream
          type:
            - stream.Writable
          description: 'Поток, доступный для записи Node.js.'
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
      return:
        type:
          - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToText_1
    name: 'getFileToText(string, string, string, FileToText)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл в текстовую строку.
    syntax:
      content: 'function getFileToText(share: string, directory: string, file: string, callback: FileToText)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.services.file.FileService.FileToText
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToText
    name: 'getFileToText(string, string, string, GetFileRequestOptions, FileToText)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Загружает файл в текстовую строку.
    syntax:
      content: 'function getFileToText(share: string, directory: string, file: string, options: GetFileRequestOptions, callback: FileToText)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.services.file.FileService.FileToText
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `text` будет содержать содержимое файла, и `file` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties_1
    name: getServiceProperties(ErrorOrResult<ServiceProperties>)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.'
    syntax:
      content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties
    name: 'getServiceProperties(RequestOptions, ErrorOrResult<ServiceProperties>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.'
    syntax:
      content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
      parameters:
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareAcl_1
    name: 'getShareAcl(string, ErrorOrResult<ShareAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает список ACL для общего ресурса.
    syntax:
      content: 'function getShareAcl(share: string, callback: ErrorOrResult<ShareAclResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareAcl
    name: 'getShareAcl(string, RequestOptions, ErrorOrResult<ShareAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает список ACL для общего ресурса.
    syntax:
      content: 'function getShareAcl(share: string, options: RequestOptions, callback: ErrorOrResult<ShareAclResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata_1
    name: 'getShareMetadata(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает все определяемые пользователем метаданные для общего ресурса.
    syntax:
      content: 'function getShareMetadata(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata
    name: 'getShareMetadata(string, FileServiceOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает все определяемые пользователем метаданные для общего ресурса.
    syntax:
      content: 'function getShareMetadata(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareProperties_1
    name: 'getShareProperties(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Извлекает из указанной учетной записи общей папке и ее свойства.
    syntax:
      content: 'function getShareProperties(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareProperties
    name: 'getShareProperties(string, FileServiceOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Извлекает из указанной учетной записи общей папке и ее свойства.
    syntax:
      content: 'function getShareProperties(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareStats_1
    name: 'getShareStats(string, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает статистику общую папку для общей папки.
    syntax:
      content: 'function getShareStats(share: string, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getShareStats
    name: 'getShareStats(string, RequestOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает статистику общую папку для общей папки.
    syntax:
      content: 'function getShareStats(share: string, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать статистику и `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.getUrl
    name: 'getUrl(string, string, string, string, boolean, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Извлекает URL-адрес файла или каталога.
    syntax:
      content: 'function getUrl(share: string, directory: string, file?: string, sasToken?: string, primary?: boolean, shareSnapshotId?: string)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: ''
          optional: true
        - id: sasToken
          type:
            - string
          description: ''
          optional: true
        - id: primary
          type:
            - boolean
          description: ''
          optional: true
        - id: shareSnapshotId
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - string
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented_1
    name: 'listFilesAndDirectoriesSegmented(string, string, ContinuationToken, ErrorOrResult<ListFilesAndDirectoriesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов файла в каталоге.'
    syntax:
      content: 'function listFilesAndDirectoriesSegmented(share: string, directory: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented
    name: 'listFilesAndDirectoriesSegmented(string, string, ContinuationToken, ListRequestOptions, ErrorOrResult<ListFilesAndDirectoriesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов файла в каталоге.'
    syntax:
      content: 'function listFilesAndDirectoriesSegmented(share: string, directory: string, currentToken: ContinuationToken, options: ListRequestOptions, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: 'Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.'
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.ListRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать entries.files, entries.directories и continuationToken для следующей операции перечисления.
                                                                          `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix_1
    name: 'listFilesAndDirectoriesSegmentedWithPrefix(string, string, string, ContinuationToken, ErrorOrResult<ListFilesAndDirectoriesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов файла в каталоге.'
    syntax:
      content: 'function listFilesAndDirectoriesSegmentedWithPrefix(share: string, directory: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: prefix
          type:
            - string
          description: ''
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix
    name: 'listFilesAndDirectoriesSegmentedWithPrefix(string, string, string, ContinuationToken, ListRequestOptions, ErrorOrResult<ListFilesAndDirectoriesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов файла в каталоге.'
    syntax:
      content: 'function listFilesAndDirectoriesSegmentedWithPrefix(share: string, directory: string, prefix: string, currentToken: ContinuationToken, options: ListRequestOptions, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: prefix
          type:
            - string
          description: Префикс имени файлы в каталоге.
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: 'Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.'
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.ListRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать entries.files, entries.directories и continuationToken для следующей операции перечисления.
                                                                          `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listRanges_1
    name: 'listRanges(string, string, string, ErrorOrResult<Range[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список диапазонов файла. Перечислены все диапазоны по умолчанию, или только диапазоны за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.'
    syntax:
      content: 'function listRanges(share: string, directory: string, file: string, callback: ErrorOrResult<Range[]>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>'
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listRanges
    name: 'listRanges(string, string, string, ListRangeRequestOptions, ErrorOrResult<Range[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список диапазонов файла. Перечислены все диапазоны по умолчанию, или только диапазоны за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.'
    syntax:
      content: 'function listRanges(share: string, directory: string, file: string, options: ListRangeRequestOptions, callback: ErrorOrResult<Range[]>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
          description: ''
        - id: callback
          type:
            - 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>'
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о диапазоне.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented_1
    name: 'listSharesSegmented(ContinuationToken, ErrorOrResult<ListSharesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов общего ресурса в указанной учетной записи.'
    syntax:
      content: 'function listSharesSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListSharesResult>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented
    name: 'listSharesSegmented(ContinuationToken, ListShareRequestOptions, ErrorOrResult<ListSharesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов общего ресурса в указанной учетной записи.'
    syntax:
      content: 'function listSharesSegmented(currentToken: ContinuationToken, options: ListShareRequestOptions, callback: ErrorOrResult<ListSharesResult>)'
      parameters:
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: 'Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.'
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                    `entries`  предоставляет список общих ресурсов и `continuationToken` используется для следующей операции перечисления.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix_1
    name: 'listSharesSegmentedWithPrefix(string, ContinuationToken, ErrorOrResult<ListSharesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов общего ресурса, имена которых начинаются с указанного префикса в указанной учетной записи.'
    syntax:
      content: 'function listSharesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListSharesResult>)'
      parameters:
        - id: prefix
          type:
            - string
          description: ''
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix
    name: 'listSharesSegmentedWithPrefix(string, ContinuationToken, ListShareRequestOptions, ErrorOrResult<ListSharesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Список сегмент, содержащий коллекцию элементов общего ресурса, имена которых начинаются с указанного префикса в указанной учетной записи.'
    syntax:
      content: 'function listSharesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListShareRequestOptions, callback: ErrorOrResult<ListSharesResult>)'
      parameters:
        - id: prefix
          type:
            - string
          description: Префикс имени общего ресурса.
        - id: currentToken
          type:
            - azure-storage.azurestorage.common.ContinuationToken
          description: 'Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.'
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                    `entries`  предоставляет список общих ресурсов и `continuationToken` используется для следующей операции перечисления.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.logger
    name: logger
    fullName: logger
    children: []
    langs:
      - typeScript
    type: property
    summary: Объект параметров ведения журнала.
    syntax:
      content: 'logger: Logger'
      return:
        type:
          - azure-storage.azurestorage.common.diagnostics.logger.Logger
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.parallelOperationThreadCount
    name: parallelOperationThreadCount
    fullName: parallelOperationThreadCount
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parallelOperationThreadCount: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.proxy
    name: proxy
    fullName: proxy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Прокси-объект, указанный вызывающим объектом.'
    syntax:
      content: 'proxy: Proxy'
      return:
        type:
          - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.resizeFile_1
    name: 'resizeFile(string, string, string, number, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Изменяет размер файла.
    syntax:
      content: 'function resizeFile(share: string, directory: string, file: string, size: number, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: size
          type:
            - number
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.resizeFile
    name: 'resizeFile(string, string, string, number, RequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Изменяет размер файла.
    syntax:
      content: 'function resizeFile(share: string, directory: string, file: string, size: number, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: size
          type:
            - number
          description: Размер файла в байтах.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                      `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata_1
    name: 'setDirectoryMetadata(string, string, Map<string>, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Задает определяемые пользователем метаданные для указанного каталога как один или несколько пар "имя значение"
    syntax:
      content: 'function setDirectoryMetadata(share: string, directory: string, metadata: Map<string>, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata
    name: 'setDirectoryMetadata(string, string, Map<string>, RequestOptions, ErrorOrResult<DirectoryResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Задает определяемые пользователем метаданные для указанного каталога как один или несколько пар "имя значение"
    syntax:
      content: 'function setDirectoryMetadata(share: string, directory: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<DirectoryResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: Пары ключ/значение метаданных.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata_1
    name: 'setFileMetadata(string, string, string, Map<string>, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Задает определяемые пользователем метаданные для указанного файла как пары имя значение, один или несколько его изменять и возвращает содержимое файла.'
    syntax:
      content: 'function setFileMetadata(share: string, directory: string, file: string, metadata: Map<string>, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata
    name: 'setFileMetadata(string, string, string, Map<string>, RequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Задает определяемые пользователем метаданные для указанного файла как пары имя значение, один или несколько его изменять и возвращает содержимое файла.'
    syntax:
      content: 'function setFileMetadata(share: string, directory: string, file: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: Пары ключ/значение метаданных.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setFileProperties_1
    name: 'setFileProperties(string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает определяемые пользователем свойства для указанного файла.
      Не изменять и не возвращает содержимое файла.
    syntax:
      content: 'function setFileProperties(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: directory
          type:
            - string
          description: ''
        - id: file
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setFileProperties
    name: 'setFileProperties(string, string, string, SetFilePropertiesRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает определяемые пользователем свойства для указанного файла.
      Не изменять и не возвращает содержимое файла.
    syntax:
      content: 'function setFileProperties(share: string, directory: string, file: string, options: SetFilePropertiesRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: directory
          type:
            - string
          description: Имя каталога. Используйте '' для ссылки на базовый каталог.
        - id: file
          type:
            - string
          description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setProxy
    name: setProxy(Proxy)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Задает объект прокси-сервер, указанный вызывающим объектом.'
    syntax:
      content: 'function setProxy(proxy: Proxy)'
      parameters:
        - id: proxy
          type:
            - azure-storage.azurestorage.common.services.storageserviceclient.Proxy
          description: |
            proxy to use for tunneling { host: hostname port: port number proxyAuth: 'user:password' for basic auth headers: {...} заголовки для ключа сервера прокси-сервера: ключей для ЦС сервера прокси-сервера: ЦС для сертификата сервера прокси-сервера: сертификат для прокси-сервера} null или не определено, очищает прокси-сервера
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties_1
    name: 'setServiceProperties(ServiceProperties, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.
      Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties
    name: 'setServiceProperties(ServiceProperties, RequestOptions, ErrorOrResponse)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.
      Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
    syntax:
      content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
      parameters:
        - id: serviceProperties
          type:
            - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
          description: Свойства службы.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResponse
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareAcl_1
    name: 'setShareAcl(string, [key: string]: AccessPolicy, ErrorOrResult<ShareAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет список ACL для общего ресурса.
    syntax:
      content: 'function setShareAcl(share: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<ShareAclResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareAcl
    name: 'setShareAcl(string, [key: string]: AccessPolicy, RequestOptions, ErrorOrResult<ShareAclResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет список ACL для общего ресурса.
    syntax:
      content: 'function setShareAcl(share: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback: ErrorOrResult<ShareAclResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: signedIdentifiers
          type:
            - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
          description: Идентификаторы со знаком. Со знаком идентификаторы должны быть в массиве.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata_1
    name: 'setShareMetadata(string, Map<string>, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Задает метаданные общего ресурса.
      Вызов операции задать совместное использование метаданных перезаписывает все существующие метаданные, связанные с общей папкой.
      Это не позволяет изменить пару отдельное имя/значение.
    syntax:
      content: 'function setShareMetadata(share: string, metadata: Map<string>, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata
    name: 'setShareMetadata(string, Map<string>, RequestOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Задает метаданные общего ресурса.
      Вызов операции задать совместное использование метаданных перезаписывает все существующие метаданные, связанные с общей папкой.
      Это не позволяет изменить пару отдельное имя/значение.
    syntax:
      content: 'function setShareMetadata(share: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: metadata
          type:
            - azure-storage.Map<string>
          description: Пары ключ/значение метаданных.
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareProperties_1
    name: 'setShareProperties(string, ShareProperties, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Задает свойства для указанной общей папке.
    syntax:
      content: 'function setShareProperties(share: string, properties: ShareProperties, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: ''
        - id: properties
          type:
            - azure-storage.azurestorage.services.file.FileService.ShareProperties
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.setShareProperties
    name: 'setShareProperties(string, ShareProperties, RequestOptions, ErrorOrResult<ShareResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Задает свойства для указанной общей папке.
    syntax:
      content: 'function setShareProperties(share: string, properties: ShareProperties, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
      parameters:
        - id: share
          type:
            - string
          description: Имя общего ресурса.
        - id: properties
          type:
            - azure-storage.azurestorage.services.file.FileService.ShareProperties
          description: ''
        - id: options
          type:
            - azure-storage.azurestorage.common.RequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об общей папки.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.singleFileThresholdInBytes
    name: singleFileThresholdInBytes
    fullName: singleFileThresholdInBytes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'singleFileThresholdInBytes: number'
      return:
        type:
          - number
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.startCopyFile
    name: 'startCopyFile(string, string, string, string, CopyFileRequestOptions, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Начинает копировать файл в место назначения в учетной записи хранения.
    syntax:
      content: 'function startCopyFile(sourceUri: string, targetshare: string, targetdirectory: string, targetfile: string, options: CopyFileRequestOptions, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: sourceUri
          type:
            - string
          description: Исходный файл или URI большого двоичного объекта.
        - id: targetshare
          type:
            - string
          description: ''
        - id: targetdirectory
          type:
            - string
          description: ''
        - id: targetfile
          type:
            - string
          description: ''
        - id: options
          type:
            - azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: |
            `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.startCopyFile_1
    name: 'startCopyFile(string, string, string, string, ErrorOrResult<FileResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Начинает копировать файл в место назначения в учетной записи хранения.
    syntax:
      content: 'function startCopyFile(sourceUri: string, targetshare: string, targetdirectory: string, targetfile: string, callback: ErrorOrResult<FileResult>)'
      parameters:
        - id: sourceUri
          type:
            - string
          description: ''
        - id: targetshare
          type:
            - string
          description: ''
        - id: targetdirectory
          type:
            - string
          description: ''
        - id: targetfile
          type:
            - string
          description: ''
        - id: callback
          type:
            - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
          description: ''
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.useNagleAlgorithm
    name: useNagleAlgorithm
    fullName: useNagleAlgorithm
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Определяет, используется ли алгоритм Nagle для запросов, выполненных с помощью службы очередей; значение true для использования алгоритма Nagle; в противном случае — значение false. По умолчанию для этого параметра используется значение false.'
    syntax:
      content: 'useNagleAlgorithm: boolean'
      return:
        type:
          - boolean
    package: azure-storage
  - uid: azure-storage.azurestorage.services.file.FileService.withFilter
    name: withFilter(IFilter)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Операция фильтрации свяжите с этой FileService. К операциям фильтрации могут относиться ведение журнала, автоматический повтор и т. д. Фильтр операции являются объектами, реализующими метод с сигнатурой: «функция дескриптор (requestOptions, далее)».

      Выполнив предварительную обработку параметров запроса, метод должен вызвать «next», передавая обратный вызов со следующей сигнатурой: подпись:

          "function (returnObject, finalCallback, next)"

      В этой функции обратного вызова и после обработки returnObject (ответ на запрос к серверу) функция обратного вызова должна либо вызвать "next", если он существует, чтобы продолжить обработку других фильтров, либо в противном случае просто вызвать "finalCallback" для завершения обращения к службе.
    syntax:
      content: 'function withFilter(newFilter: IFilter)'
      parameters:
        - id: newFilter
          type:
            - azure-storage.azurestorage.common.filters.IFilter
          description: ''
      return:
        type:
          - azure-storage.azurestorage.services.file.FileService
    package: azure-storage
references:
  - uid: azure-storage.azurestorage.common.RequestOptions
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: azure-storage.azurestorage.common.RequestOptions
  - uid: azure-storage.azurestorage.common.filters.Next
    name: Next
    spec.typeScript:
      - name: Next
        fullName: Next
        uid: azure-storage.azurestorage.common.filters.Next
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
    name: IRetryRequestOptions
    spec.typeScript:
      - name: IRetryRequestOptions
        fullName: IRetryRequestOptions
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  - uid: azure-storage.azurestorage.common.filters.IFilter
    name: IFilter
    spec.typeScript:
      - name: IFilter
        fullName: IFilter
        uid: azure-storage.azurestorage.common.filters.IFilter
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
    name: IRetryContext
    spec.typeScript:
      - name: IRetryContext
        fullName: IRetryContext
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  - uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
    name: RetryPolicyFilter
    spec.typeScript:
      - name: RetryPolicyFilter
        fullName: RetryPolicyFilter
        uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  - uid: azure-storage.Map<any>
    name: Map<any>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <any>
        fullName: <any>
  - uid: azure-storage.Map<string>
    name: Map<string>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.common.http.webresource.WebResource
    name: WebResource
    spec.typeScript:
      - name: WebResource
        fullName: WebResource
        uid: azure-storage.azurestorage.common.http.webresource.WebResource
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
    name: ServiceProperties
    spec.typeScript:
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
    name: DeleteRetentionPolicyProperties
    spec.typeScript:
      - name: DeleteRetentionPolicyProperties
        fullName: DeleteRetentionPolicyProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
    name: MetricsProperties
    spec.typeScript:
      - name: MetricsProperties
        fullName: MetricsProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
    name: LoggingProperties
    spec.typeScript:
      - name: LoggingProperties
        fullName: LoggingProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
    name: StaticWebsiteProperties
    spec.typeScript:
      - name: StaticWebsiteProperties
        fullName: StaticWebsiteProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
    name: RetentionPolicy
    spec.typeScript:
      - name: RetentionPolicy
        fullName: RetentionPolicy
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
    name: StorageServiceClient
    spec.typeScript:
      - name: StorageServiceClient
        fullName: StorageServiceClient
        uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  - uid: azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
    name: LocationMode
    spec.typeScript:
      - name: LocationMode
        fullName: LocationMode
        uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  - uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
    name: Logger
    spec.typeScript:
      - name: Logger
        fullName: Logger
        uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  - uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
    name: Proxy
    spec.typeScript:
      - name: Proxy
        fullName: Proxy
        uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  - uid: azure-storage.azurestorage.AccessConditions
    name: AccessConditions
    spec.typeScript:
      - name: AccessConditions
        fullName: AccessConditions
        uid: azure-storage.azurestorage.AccessConditions
  - uid: azure-storage.azurestorage.common.AccessPolicy
    name: AccessPolicy
    spec.typeScript:
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
    name: LeaseRequestOptions
    spec.typeScript:
      - name: LeaseRequestOptions
        fullName: LeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
    name: ConditionalRequestOption
    spec.typeScript:
      - name: ConditionalRequestOption
        fullName: ConditionalRequestOption
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]'
    name: 'Block[]'
    spec.typeScript:
      - name: Block
        fullName: Block
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
    name: ContainerOptions
    spec.typeScript:
      - name: ContainerOptions
        fullName: ContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
    name: ContainerResult
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
    name: AccessPolicy
    spec.typeScript:
      - name: '[key: string]: '
        fullName: '[key: string]: '
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
    name: BlobRequestOptions
    spec.typeScript:
      - name: BlobRequestOptions
        fullName: BlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  - uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
    name: SpeedSummary
    spec.typeScript:
      - name: SpeedSummary
        fullName: SpeedSummary
        uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
    name: CreateBlobRequestOptions
    spec.typeScript:
      - name: CreateBlobRequestOptions
        fullName: CreateBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  - uid: azure-storage.azurestorage.common.ContinuationToken
    name: ContinuationToken
    spec.typeScript:
      - name: ContinuationToken
        fullName: ContinuationToken
        uid: azure-storage.azurestorage.common.ContinuationToken
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult[]'
    name: 'BlobDirectoryResult[]'
    spec.typeScript:
      - name: BlobDirectoryResult
        fullName: BlobDirectoryResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobDirectoryResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
    name: ListBlobsSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobsSegmentedRequestOptions
        fullName: ListBlobsSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]'
    name: 'BlobResult[]'
    spec.typeScript:
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '[]'
        fullName: '[]'
  - uid: 'azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]'
    name: 'ContainerResult[]'
    spec.typeScript:
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '[]'
        fullName: '[]'
  - uid: string | azure-storage.azurestorage.StorageHost
    name: StorageHost
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: StorageHost
        fullName: StorageHost
        uid: azure-storage.azurestorage.StorageHost
  - uid: azure-storage.azurestorage.ErrorOrResponse
    name: ErrorOrResponse
    spec.typeScript:
      - name: ErrorOrResponse
        fullName: ErrorOrResponse
        uid: azure-storage.azurestorage.ErrorOrResponse
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
    name: LeaseResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: LeaseResult
        fullName: LeaseResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
    name: AcquireLeaseRequestOptions
    spec.typeScript:
      - name: AcquireLeaseRequestOptions
        fullName: AcquireLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
    name: AppendBlobRequestOptions
    spec.typeScript:
      - name: AppendBlobRequestOptions
        fullName: AppendBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
    name: BlobResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobResult
        fullName: BlobResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
    name: BreakLeaseRequestOptions
    spec.typeScript:
      - name: BreakLeaseRequestOptions
        fullName: BreakLeaseRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
    name: PutBlockListRequest
    spec.typeScript:
      - name: PutBlockListRequest
        fullName: PutBlockListRequest
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  - uid: azure-storage.azurestorage.ErrorOrResult<string>
    name: ErrorOrResult<string>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <string>
        fullName: <string>
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
    name: CreateBlockBlobRequestOptions
    spec.typeScript:
      - name: CreateBlockBlobRequestOptions
        fullName: CreateBlockBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
    name: CreateBlockRequestOptions
    spec.typeScript:
      - name: CreateBlockRequestOptions
        fullName: CreateBlockRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
    name: ContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerResult
        fullName: ContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
    name: CreateContainerOptions
    spec.typeScript:
      - name: CreateContainerOptions
        fullName: CreateContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
    name: CreatePageBlobOptions
    spec.typeScript:
      - name: CreatePageBlobOptions
        fullName: CreatePageBlobOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
    name: GetBlobRequestOptions
    spec.typeScript:
      - name: GetBlobRequestOptions
        fullName: GetBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
    name: DeleteBlobRequestOptions
    spec.typeScript:
      - name: DeleteBlobRequestOptions
        fullName: DeleteBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<boolean>
    name: ErrorOrResult<boolean>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.common.SharedAccessPolicy
    name: SharedAccessPolicy
    spec.typeScript:
      - name: SharedAccessPolicy
        fullName: SharedAccessPolicy
        uid: azure-storage.azurestorage.common.SharedAccessPolicy
  - uid: azure-storage.azurestorage.common.ContentSettingsHeaders
    name: ContentSettingsHeaders
    spec.typeScript:
      - name: ContentSettingsHeaders
        fullName: ContentSettingsHeaders
        uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
    name: AccountProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: AccountProperties
        fullName: AccountProperties
        uid: azure-storage.azurestorage.common.models.AccountProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
    name: BlobToText
    spec.typeScript:
      - name: BlobToText
        fullName: BlobToText
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
    name: ContainerAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ContainerAclResult
        fullName: ContainerAclResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>'
    name: 'RangeDiff[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: RangeDiff
        fullName: RangeDiff
        uid: azure-storage.azurestorage.common.RangeDiff
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
    name: BlobServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
    name: ServiceStats>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceStats
        fullName: ServiceStats
        uid: azure-storage.azurestorage.common.models.ServiceStats
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult>
    name: ListBlobDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobDirectoriesResult
        fullName: ListBlobDirectoriesResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
    name: ListBlobPrefixesSegmentedRequestOptions
    spec.typeScript:
      - name: ListBlobPrefixesSegmentedRequestOptions
        fullName: ListBlobPrefixesSegmentedRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobPrefixesSegmentedRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
    name: ListBlobsResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListBlobsResult
        fullName: ListBlobsResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
    name: BlockListResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BlockListResult
        fullName: BlockListResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
    name: ListContainerOptions
    spec.typeScript:
      - name: ListContainerOptions
        fullName: ListContainerOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
    name: ListContainerResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListContainerResult
        fullName: ListContainerResult
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
      - name: '>'
        fullName: '>'
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>'
    name: 'Range[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: Range
        fullName: Range
        uid: azure-storage.azurestorage.common.Range
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
    name: SetBlobPropertiesRequestOptions
    spec.typeScript:
      - name: SetBlobPropertiesRequestOptions
        fullName: SetBlobPropertiesRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
    name: ContainerAclOptions
    spec.typeScript:
      - name: ContainerAclOptions
        fullName: ContainerAclOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  - uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
    name: BlobServiceProperties
    spec.typeScript:
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
    name: CopyBlobRequestOptions
    spec.typeScript:
      - name: CopyBlobRequestOptions
        fullName: CopyBlobRequestOptions
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  - uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
    name: BlobService
    spec.typeScript:
      - name: BlobService
        fullName: BlobService
        uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  - uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
    name: FileServiceOptions
    spec.typeScript:
      - name: FileServiceOptions
        fullName: FileServiceOptions
        uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  - uid: 'azure-storage.azurestorage.services.file.FileService.ShareResult[]'
    name: 'ShareResult[]'
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.file.FileService.ShareResult
    name: ShareResult
    spec.typeScript:
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
    name: AccessPolicy>
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-storage.Map
      - name: <
        fullName: <
      - name: AccessPolicy
        fullName: AccessPolicy
        uid: azure-storage.azurestorage.common.AccessPolicy
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
    name: FileResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: FileResult
        fullName: FileResult
        uid: azure-storage.azurestorage.services.file.FileService.FileResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
    name: CreateDirectoryRequestOptions
    spec.typeScript:
      - name: CreateDirectoryRequestOptions
        fullName: CreateDirectoryRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
    name: DirectoryResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: DirectoryResult
        fullName: DirectoryResult
        uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
    name: CreateFileRequestOptions
    spec.typeScript:
      - name: CreateFileRequestOptions
        fullName: CreateFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
    name: CreateRangeRequestOptions
    spec.typeScript:
      - name: CreateRangeRequestOptions
        fullName: CreateRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
    name: GetFileRequestOptions
    spec.typeScript:
      - name: GetFileRequestOptions
        fullName: GetFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
    name: CreateShareRequestOptions
    spec.typeScript:
      - name: CreateShareRequestOptions
        fullName: CreateShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
    name: ShareResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareResult
        fullName: ShareResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
    name: DeleteShareOptions
    spec.typeScript:
      - name: DeleteShareOptions
        fullName: DeleteShareOptions
        uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  - uid: azure-storage.azurestorage.services.file.FileService.FileToText
    name: FileToText
    spec.typeScript:
      - name: FileToText
        fullName: FileToText
        uid: azure-storage.azurestorage.services.file.FileService.FileToText
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
    name: ServiceProperties>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ServiceProperties
        fullName: ServiceProperties
        uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
    name: ShareAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ShareAclResult
        fullName: ShareAclResult
        uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
    name: ListRequestOptions
    spec.typeScript:
      - name: ListRequestOptions
        fullName: ListRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
    name: ListFilesAndDirectoriesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListFilesAndDirectoriesResult
        fullName: ListFilesAndDirectoriesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
    name: ListRangeRequestOptions
    spec.typeScript:
      - name: ListRangeRequestOptions
        fullName: ListRangeRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
    name: ListShareRequestOptions
    spec.typeScript:
      - name: ListShareRequestOptions
        fullName: ListShareRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
    name: ListSharesResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListSharesResult
        fullName: ListSharesResult
        uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
    name: SetFilePropertiesRequestOptions
    spec.typeScript:
      - name: SetFilePropertiesRequestOptions
        fullName: SetFilePropertiesRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
    name: ShareProperties
    spec.typeScript:
      - name: ShareProperties
        fullName: ShareProperties
        uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  - uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
    name: CopyFileRequestOptions
    spec.typeScript:
      - name: CopyFileRequestOptions
        fullName: CopyFileRequestOptions
        uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  - uid: azure-storage.azurestorage.services.file.FileService
    name: FileService
    spec.typeScript:
      - name: FileService
        fullName: FileService
        uid: azure-storage.azurestorage.services.file.FileService
  - uid: 'azure-storage.azurestorage.services.queue.QueueService.QueueResult[]'
    name: 'QueueResult[]'
    spec.typeScript:
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
    name: QueueMessageEncoder
    spec.typeScript:
      - name: QueueMessageEncoder
        fullName: QueueMessageEncoder
        uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
    name: CreateMessageRequestOptions
    spec.typeScript:
      - name: CreateMessageRequestOptions
        fullName: CreateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
    name: QueueMessageResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
    name: CreateQueueRequestOptions
    spec.typeScript:
      - name: CreateQueueRequestOptions
        fullName: CreateQueueRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
    name: QueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueResult
        fullName: QueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
    name: GetMessageRequestOptions
    spec.typeScript:
      - name: GetMessageRequestOptions
        fullName: GetMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
    name: GetMessagesRequestOptions
    spec.typeScript:
      - name: GetMessagesRequestOptions
        fullName: GetMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>'
    name: 'QueueMessageResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueueMessageResult
        fullName: QueueMessageResult
        uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
    name: ListQueuesRequestOptions
    spec.typeScript:
      - name: ListQueuesRequestOptions
        fullName: ListQueuesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
    name: ListQueueResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListQueueResult
        fullName: ListQueueResult
        uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
    name: PeekMessagesRequestOptions
    spec.typeScript:
      - name: PeekMessagesRequestOptions
        fullName: PeekMessagesRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
    name: UpdateMessageRequestOptions
    spec.typeScript:
      - name: UpdateMessageRequestOptions
        fullName: UpdateMessageRequestOptions
        uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  - uid: azure-storage.azurestorage.services.queue.QueueService
    name: QueueService
    spec.typeScript:
      - name: QueueService
        fullName: QueueService
        uid: azure-storage.azurestorage.services.queue.QueueService
  - uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
    name: BatchResponse
    spec.typeScript:
      - name: BatchResponse
        fullName: BatchResponse
        uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  - uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
    name: TableEntityRequestOptions
    spec.typeScript:
      - name: TableEntityRequestOptions
        fullName: TableEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  - uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
    name: PropertyResolver
    spec.typeScript:
      - name: PropertyResolver
        fullName: PropertyResolver
        uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
    name: ListTablesContinuationToken
    spec.typeScript:
      - name: ListTablesContinuationToken
        fullName: ListTablesContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
    name: TableContinuationToken
    spec.typeScript:
      - name: TableContinuationToken
        fullName: TableContinuationToken
        uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  - uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
    name: TableAccessPolicy
    spec.typeScript:
      - name: TableAccessPolicy
        fullName: TableAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
    name: TableResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: TableResult
        fullName: TableResult
        uid: azure-storage.azurestorage.services.table.TableService.TableResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableBatch
    name: TableBatch
    spec.typeScript:
      - name: TableBatch
        fullName: TableBatch
        uid: azure-storage.azurestorage.services.table.TableBatch
  - uid: 'azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>'
    name: 'BatchResult[]>'
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: BatchResult
        fullName: BatchResult
        uid: azure-storage.azurestorage.services.table.TableService.BatchResult
      - name: '[]>'
        fullName: '[]>'
  - uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
    name: TableSharedAccessPolicy
    spec.typeScript:
      - name: TableSharedAccessPolicy
        fullName: TableSharedAccessPolicy
        uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
    name: GetTableAclResult>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: GetTableAclResult
        fullName: GetTableAclResult
        uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
    name: InsertEntityRequestOptions
    spec.typeScript:
      - name: InsertEntityRequestOptions
        fullName: InsertEntityRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: '<T | '
        fullName: '<T | '
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
    name: EntityMetadata>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: EntityMetadata
        fullName: EntityMetadata
        uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
    name: ListTablesRequestOptions
    spec.typeScript:
      - name: ListTablesRequestOptions
        fullName: ListTablesRequestOptions
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
    name: ListTablesResponse>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: ListTablesResponse
        fullName: ListTablesResponse
        uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
      - name: '>'
        fullName: '>'
  - uid: azure-storage.azurestorage.services.table.TableQuery
    name: TableQuery
    spec.typeScript:
      - name: TableQuery
        fullName: TableQuery
        uid: azure-storage.azurestorage.services.table.TableQuery
  - uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
    name: QueryEntitiesResult<T>>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <
        fullName: <
      - name: QueryEntitiesResult
        fullName: QueryEntitiesResult
        uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
      - name: <T>>
        fullName: <T>>
  - uid: azure-storage.azurestorage.ErrorOrResult<T>
    name: ErrorOrResult<T>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <T>
        fullName: <T>
  - uid: azure-storage.azurestorage.ErrorOrResult<Object>
    name: ErrorOrResult<Object>
    spec.typeScript:
      - name: ErrorOrResult
        fullName: ErrorOrResult
        uid: azure-storage.azurestorage.ErrorOrResult
      - name: <Object>
        fullName: <Object>
  - uid: azure-storage.azurestorage.services.table.TableService
    name: TableService
    spec.typeScript:
      - name: TableService
        fullName: TableService
        uid: azure-storage.azurestorage.services.table.TableService
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
    name: EntityProperty<Buffer>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Buffer>
        fullName: <Buffer>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
    name: EntityProperty<boolean>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <boolean>
        fullName: <boolean>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
    name: EntityProperty<Date>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <Date>
        fullName: <Date>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
    name: EntityProperty<number>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <number>
        fullName: <number>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
    name: EntityProperty<any>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <any>
        fullName: <any>
  - uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
    name: EntityProperty<string>
    spec.typeScript:
      - name: EntityProperty
        fullName: EntityProperty
        uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
      - name: <string>
        fullName: <string>
  - uid: 'azure-storage.azurestorage.services.table.TableOperation[]'
    name: 'TableOperation[]'
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
      - name: '[]'
        fullName: '[]'
  - uid: azure-storage.azurestorage.services.table.TableOperation
    name: TableOperation
    spec.typeScript:
      - name: TableOperation
        fullName: TableOperation
        uid: azure-storage.azurestorage.services.table.TableOperation
  - uid: azure-storage.azurestorage.StorageError | Error
    name: StorageError | Error
    spec.typeScript:
      - name: StorageError
        fullName: StorageError
        uid: azure-storage.azurestorage.StorageError
      - name: ' | Error'
        fullName: ' | Error'
  - uid: azure-storage.azurestorage.ServiceResponse
    name: ServiceResponse
    spec.typeScript:
      - name: ServiceResponse
        fullName: ServiceResponse
        uid: azure-storage.azurestorage.ServiceResponse
  - uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
    name: TokenCredential
    spec.typeScript:
      - name: TokenCredential
        fullName: TokenCredential
        uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  - uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile_1
    name: abortCopyFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile
    name: abortCopyFile
  - uid: azure-storage.azurestorage.services.file.FileService.clearRange_1
    name: clearRange_1
  - uid: azure-storage.azurestorage.services.file.FileService.clearRange
    name: clearRange
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectory
    name: createDirectory
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectory_1
    name: createDirectory_1
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists
    name: createDirectoryIfNotExists
  - uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists_1
    name: createDirectoryIfNotExists_1
  - uid: azure-storage.azurestorage.services.file.FileService.createFile
    name: createFile
  - uid: azure-storage.azurestorage.services.file.FileService.createFile_1
    name: createFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile
    name: createFileFromBrowserFile
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile_1
    name: createFileFromBrowserFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile
    name: createFileFromLocalFile
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile_1
    name: createFileFromLocalFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream
    name: createFileFromStream
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream_1
    name: createFileFromStream_1
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromText
    name: createFileFromText
  - uid: azure-storage.azurestorage.services.file.FileService.createFileFromText_1
    name: createFileFromText_1
  - uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream
    name: createRangesFromStream
  - uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream_1
    name: createRangesFromStream_1
  - uid: azure-storage.azurestorage.services.file.FileService.createReadStream_1
    name: createReadStream_1
  - uid: azure-storage.azurestorage.services.file.FileService.createReadStream
    name: createReadStream
  - uid: azure-storage.azurestorage.services.file.FileService.createShare
    name: createShare
  - uid: azure-storage.azurestorage.services.file.FileService.createShare_1
    name: createShare_1
  - uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists
    name: createShareIfNotExists
  - uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists_1
    name: createShareIfNotExists_1
  - uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot_1
    name: createShareSnapshot_1
  - uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot
    name: createShareSnapshot
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile
    name: createWriteStreamToExistingFile
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile_1
    name: createWriteStreamToExistingFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile
    name: createWriteStreamToNewFile
  - uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile_1
    name: createWriteStreamToNewFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.defaultClientRequestTimeoutInMs
    name: defaultClientRequestTimeoutInMs
  - uid: azure-storage.azurestorage.services.file.FileService.defaultEnableReuseSocket
    name: defaultEnableReuseSocket
  - uid: azure-storage.azurestorage.services.file.FileService.defaultLocationMode
    name: defaultLocationMode
  - uid: azure-storage.azurestorage.services.file.FileService.defaultMaximumExecutionTimeInMs
    name: defaultMaximumExecutionTimeInMs
  - uid: azure-storage.azurestorage.services.file.FileService.defaultTimeoutIntervalInMs
    name: defaultTimeoutIntervalInMs
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory_1
    name: deleteDirectory_1
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory
    name: deleteDirectory
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists_1
    name: deleteDirectoryIfExists_1
  - uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists
    name: deleteDirectoryIfExists
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFile_1
    name: deleteFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFile
    name: deleteFile
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists_1
    name: deleteFileIfExists_1
  - uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists
    name: deleteFileIfExists
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShare
    name: deleteShare
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShare_1
    name: deleteShare_1
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists
    name: deleteShareIfExists
  - uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists_1
    name: deleteShareIfExists_1
  - uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
    name: DirectoryResult
  - uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist_1
    name: doesDirectoryExist_1
  - uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist
    name: doesDirectoryExist
  - uid: azure-storage.azurestorage.services.file.FileService.doesFileExist_1
    name: doesFileExist_1
  - uid: azure-storage.azurestorage.services.file.FileService.doesFileExist
    name: doesFileExist
  - uid: azure-storage.azurestorage.services.file.FileService.doesShareExist_1
    name: doesShareExist_1
  - uid: azure-storage.azurestorage.services.file.FileService.doesShareExist
    name: doesShareExist
  - uid: azure-storage.azurestorage.services.file.FileService.enableGlobalHttpAgent
    name: enableGlobalHttpAgent
  - uid: azure-storage.azurestorage.services.file.FileService.FileResult
    name: FileResult
  - uid: azure-storage.azurestorage.services.file.FileService.constructor
    name: constructor
  - uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignature
    name: generateSharedAccessSignature
  - uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignatureWithVersion
    name: generateSharedAccessSignatureWithVersion
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata_1
    name: getDirectoryMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata
    name: getDirectoryMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties_1
    name: getDirectoryProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties
    name: getDirectoryProperties
  - uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata_1
    name: getFileMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata
    name: getFileMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.getFileProperties_1
    name: getFileProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.getFileProperties
    name: getFileProperties
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile_1
    name: getFileToLocalFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile
    name: getFileToLocalFile
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToStream_1
    name: getFileToStream_1
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToStream
    name: getFileToStream
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToText_1
    name: getFileToText_1
  - uid: azure-storage.azurestorage.services.file.FileService.getFileToText
    name: getFileToText
  - uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties_1
    name: getServiceProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties
    name: getServiceProperties
  - uid: azure-storage.azurestorage.services.file.FileService.getShareAcl_1
    name: getShareAcl_1
  - uid: azure-storage.azurestorage.services.file.FileService.getShareAcl
    name: getShareAcl
  - uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata_1
    name: getShareMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata
    name: getShareMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.getShareProperties_1
    name: getShareProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.getShareProperties
    name: getShareProperties
  - uid: azure-storage.azurestorage.services.file.FileService.getShareStats_1
    name: getShareStats_1
  - uid: azure-storage.azurestorage.services.file.FileService.getShareStats
    name: getShareStats
  - uid: azure-storage.azurestorage.services.file.FileService.getUrl
    name: getUrl
  - uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
    name: ListFilesAndDirectoriesResult
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented_1
    name: listFilesAndDirectoriesSegmented_1
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented
    name: listFilesAndDirectoriesSegmented
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix_1
    name: listFilesAndDirectoriesSegmentedWithPrefix_1
  - uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix
    name: listFilesAndDirectoriesSegmentedWithPrefix
  - uid: azure-storage.azurestorage.services.file.FileService.listRanges_1
    name: listRanges_1
  - uid: azure-storage.azurestorage.services.file.FileService.listRanges
    name: listRanges
  - uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
    name: ListSharesResult
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented_1
    name: listSharesSegmented_1
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented
    name: listSharesSegmented
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix_1
    name: listSharesSegmentedWithPrefix_1
  - uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix
    name: listSharesSegmentedWithPrefix
  - uid: azure-storage.azurestorage.services.file.FileService.logger
    name: logger
  - uid: azure-storage.azurestorage.services.file.FileService.parallelOperationThreadCount
    name: parallelOperationThreadCount
  - uid: azure-storage.azurestorage.services.file.FileService.proxy
    name: proxy
  - uid: azure-storage.azurestorage.services.file.FileService.resizeFile_1
    name: resizeFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.resizeFile
    name: resizeFile
  - uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata_1
    name: setDirectoryMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata
    name: setDirectoryMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata_1
    name: setFileMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata
    name: setFileMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.setFileProperties_1
    name: setFileProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.setFileProperties
    name: setFileProperties
  - uid: azure-storage.azurestorage.services.file.FileService.setProxy
    name: setProxy
  - uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties_1
    name: setServiceProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties
    name: setServiceProperties
  - uid: azure-storage.azurestorage.services.file.FileService.setShareAcl_1
    name: setShareAcl_1
  - uid: azure-storage.azurestorage.services.file.FileService.setShareAcl
    name: setShareAcl
  - uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata_1
    name: setShareMetadata_1
  - uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata
    name: setShareMetadata
  - uid: azure-storage.azurestorage.services.file.FileService.setShareProperties_1
    name: setShareProperties_1
  - uid: azure-storage.azurestorage.services.file.FileService.setShareProperties
    name: setShareProperties
  - uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
    name: ShareAclResult
  - uid: azure-storage.azurestorage.services.file.FileService.singleFileThresholdInBytes
    name: singleFileThresholdInBytes
  - uid: azure-storage.azurestorage.services.file.FileService.startCopyFile
    name: startCopyFile
  - uid: azure-storage.azurestorage.services.file.FileService.startCopyFile_1
    name: startCopyFile_1
  - uid: azure-storage.azurestorage.services.file.FileService.useNagleAlgorithm
    name: useNagleAlgorithm
  - uid: azure-storage.azurestorage.services.file.FileService.withFilter
    name: withFilter