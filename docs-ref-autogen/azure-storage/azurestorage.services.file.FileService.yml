### YamlMime:UniversalReference
ms.openlocfilehash: 195272c8c293f5bd4ed86837a9fa1def7f11bdf0
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40073657"
items:
- uid: azure-storage.azurestorage.services.file.FileService
  name: FileService
  fullName: FileService
  children:
  - azure-storage.azurestorage.services.file.FileService.abortCopyFile_1
  - azure-storage.azurestorage.services.file.FileService.abortCopyFile
  - azure-storage.azurestorage.services.file.FileService.clearRange
  - azure-storage.azurestorage.services.file.FileService.clearRange_1
  - azure-storage.azurestorage.services.file.FileService.createDirectory
  - azure-storage.azurestorage.services.file.FileService.createDirectory_1
  - azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists_1
  - azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists
  - azure-storage.azurestorage.services.file.FileService.createFile_1
  - azure-storage.azurestorage.services.file.FileService.createFile
  - azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile
  - azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile_1
  - azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile_1
  - azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile
  - azure-storage.azurestorage.services.file.FileService.createFileFromStream_1
  - azure-storage.azurestorage.services.file.FileService.createFileFromStream
  - azure-storage.azurestorage.services.file.FileService.createFileFromText_1
  - azure-storage.azurestorage.services.file.FileService.createFileFromText
  - azure-storage.azurestorage.services.file.FileService.createRangesFromStream
  - azure-storage.azurestorage.services.file.FileService.createRangesFromStream_1
  - azure-storage.azurestorage.services.file.FileService.createReadStream
  - azure-storage.azurestorage.services.file.FileService.createReadStream_1
  - azure-storage.azurestorage.services.file.FileService.createShare
  - azure-storage.azurestorage.services.file.FileService.createShare_1
  - azure-storage.azurestorage.services.file.FileService.createShareIfNotExists_1
  - azure-storage.azurestorage.services.file.FileService.createShareIfNotExists
  - azure-storage.azurestorage.services.file.FileService.createShareSnapshot
  - azure-storage.azurestorage.services.file.FileService.createShareSnapshot_1
  - azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile
  - azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile_1
  - azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile_1
  - azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile
  - azure-storage.azurestorage.services.file.FileService.defaultEnableReuseSocket
  - azure-storage.azurestorage.services.file.FileService.deleteDirectory
  - azure-storage.azurestorage.services.file.FileService.deleteDirectory_1
  - azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists
  - azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists_1
  - azure-storage.azurestorage.services.file.FileService.deleteFile
  - azure-storage.azurestorage.services.file.FileService.deleteFile_1
  - azure-storage.azurestorage.services.file.FileService.deleteFileIfExists
  - azure-storage.azurestorage.services.file.FileService.deleteFileIfExists_1
  - azure-storage.azurestorage.services.file.FileService.deleteShare
  - azure-storage.azurestorage.services.file.FileService.deleteShare_1
  - azure-storage.azurestorage.services.file.FileService.deleteShareIfExists_1
  - azure-storage.azurestorage.services.file.FileService.deleteShareIfExists
  - azure-storage.azurestorage.services.file.FileService.doesDirectoryExist
  - azure-storage.azurestorage.services.file.FileService.doesDirectoryExist_1
  - azure-storage.azurestorage.services.file.FileService.doesFileExist
  - azure-storage.azurestorage.services.file.FileService.doesFileExist_1
  - azure-storage.azurestorage.services.file.FileService.doesShareExist_1
  - azure-storage.azurestorage.services.file.FileService.doesShareExist
  - azure-storage.azurestorage.services.file.FileService.FileToText
  - azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata_1
  - azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata
  - azure-storage.azurestorage.services.file.FileService.getDirectoryProperties_1
  - azure-storage.azurestorage.services.file.FileService.getDirectoryProperties
  - azure-storage.azurestorage.services.file.FileService.getFileMetadata
  - azure-storage.azurestorage.services.file.FileService.getFileMetadata_1
  - azure-storage.azurestorage.services.file.FileService.getFileProperties
  - azure-storage.azurestorage.services.file.FileService.getFileProperties_1
  - azure-storage.azurestorage.services.file.FileService.getFileToLocalFile
  - azure-storage.azurestorage.services.file.FileService.getFileToLocalFile_1
  - azure-storage.azurestorage.services.file.FileService.getFileToStream_1
  - azure-storage.azurestorage.services.file.FileService.getFileToStream
  - azure-storage.azurestorage.services.file.FileService.getFileToText
  - azure-storage.azurestorage.services.file.FileService.getFileToText_1
  - azure-storage.azurestorage.services.file.FileService.getServiceProperties_1
  - azure-storage.azurestorage.services.file.FileService.getServiceProperties
  - azure-storage.azurestorage.services.file.FileService.getShareAcl_1
  - azure-storage.azurestorage.services.file.FileService.getShareAcl
  - azure-storage.azurestorage.services.file.FileService.getShareMetadata_1
  - azure-storage.azurestorage.services.file.FileService.getShareMetadata
  - azure-storage.azurestorage.services.file.FileService.getShareProperties_1
  - azure-storage.azurestorage.services.file.FileService.getShareProperties
  - azure-storage.azurestorage.services.file.FileService.getShareStats
  - azure-storage.azurestorage.services.file.FileService.getShareStats_1
  - azure-storage.azurestorage.services.file.FileService.getUrl
  - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented_1
  - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented
  - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix
  - azure-storage.azurestorage.services.file.FileService.listRanges_1
  - azure-storage.azurestorage.services.file.FileService.listRanges
  - azure-storage.azurestorage.services.file.FileService.listSharesSegmented
  - azure-storage.azurestorage.services.file.FileService.listSharesSegmented_1
  - azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix
  - azure-storage.azurestorage.services.file.FileService.parallelOperationThreadCount
  - azure-storage.azurestorage.services.file.FileService.resizeFile
  - azure-storage.azurestorage.services.file.FileService.resizeFile_1
  - azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata
  - azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata_1
  - azure-storage.azurestorage.services.file.FileService.setFileMetadata_1
  - azure-storage.azurestorage.services.file.FileService.setFileMetadata
  - azure-storage.azurestorage.services.file.FileService.setFileProperties_1
  - azure-storage.azurestorage.services.file.FileService.setFileProperties
  - azure-storage.azurestorage.services.file.FileService.setServiceProperties
  - azure-storage.azurestorage.services.file.FileService.setServiceProperties_1
  - azure-storage.azurestorage.services.file.FileService.setShareAcl
  - azure-storage.azurestorage.services.file.FileService.setShareAcl_1
  - azure-storage.azurestorage.services.file.FileService.setShareMetadata_1
  - azure-storage.azurestorage.services.file.FileService.setShareMetadata
  - azure-storage.azurestorage.services.file.FileService.setShareProperties
  - azure-storage.azurestorage.services.file.FileService.setShareProperties_1
  - azure-storage.azurestorage.services.file.FileService.singleFileThresholdInBytes
  - azure-storage.azurestorage.services.file.FileService.startCopyFile
  - azure-storage.azurestorage.services.file.FileService.startCopyFile_1
  - azure-storage.azurestorage.services.file.FileService.withFilter
  langs:
  - typeScript
  type: module
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile_1
  name: abortCopyFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Прервите операцию копирования файла.
  syntax:
    content: 'function abortCopyFile(share: string, directory: string, file: string, copyId: string, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: copyId
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.abortCopyFile
  name: abortCopyFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Прервите операцию копирования файла.
  syntax:
    content: 'function abortCopyFile(share: string, directory: string, file: string, copyId: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: Имя целевого общего ресурса.
    - id: directory
      type:
      - string
      description: Имя конечного каталога.
    - id: file
      type:
      - string
      description: Имя конечного файла.
    - id: copyId
      type:
      - string
      description: Идентификатор операции копирования.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.clearRange
  name: clearRange
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает диапазон. Удаляет все диапазоны по умолчанию или только наборов данных через определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function clearRange(share: string, directory: string, file: string, rangeStart: number, rangeEnd: number, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: rangeStart
      type:
      - number
      description: Начало диапазона.
    - id: rangeEnd
      type:
      - number
      description: Конец диапазона.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                               `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.clearRange_1
  name: clearRange
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает диапазон. Удаляет все диапазоны по умолчанию или только наборов данных через определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function clearRange(share: string, directory: string, file: string, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createDirectory
  name: createDirectory
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый каталог в указанной учетной записи.

    Если каталог с таким именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createDirectory(share: string, directory: string, options: CreateDirectoryRequestOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createDirectory_1
  name: createDirectory
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый каталог в указанной учетной записи.

    Если каталог с таким именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createDirectory(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists_1
  name: createDirectoryIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый каталог в указанной учетной записи, если каталог не существует.
  syntax:
    content: 'function createDirectoryIfNotExists(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createDirectoryIfNotExists
  name: createDirectoryIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый каталог в указанной учетной записи, если каталог не существует.
  syntax:
    content: 'function createDirectoryIfNotExists(share: string, directory: string, options: CreateDirectoryRequestOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог был создан, или значение false, если каталог уже существует.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFile_1
  name: createFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает файл указанной длины.
  syntax:
    content: 'function createFile(share: string, directory: string, file: string, length: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFile
  name: createFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает файл указанной длины.
  syntax:
    content: 'function createFile(share: string, directory: string, file: string, length: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: length
      type:
      - number
      description: Длина файла в байтах.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile
  name: createFileFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает файл в хранилище из объекта HTML-файл. Если файл уже существует в службе, он будет перезаписан.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createFileFromBrowserFile(share: string, directory: string, file: string, browserFile: Object, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: browserFile
      type:
      - Object
      description: Объект файла для отправки создается с API файлов HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:FileResult)` будет содержать сведения о файле.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromBrowserFile_1
  name: createFileFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает файл в хранилище из объекта HTML-файл. Если файл уже существует в службе, он будет перезаписан.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createFileFromBrowserFile(share: string, directory: string, file: string, browserFile: Object, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile_1
  name: createFileFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает файл в хранилище из локального файла.
  syntax:
    content: 'function createFileFromLocalFile(share: string, directory: string, file: string, localFileName: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromLocalFile
  name: createFileFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает файл в хранилище из локального файла.
  syntax:
    content: 'function createFileFromLocalFile(share: string, directory: string, file: string, localFileName: string, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: localFileName
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream_1
  name: createFileFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Отправляет файл из потока.
  syntax:
    content: 'function createFileFromStream(share: string, directory: string, file: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromStream
  name: createFileFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Отправляет файл из потока.
  syntax:
    content: 'function createFileFromStream(share: string, directory: string, file: string, stream: stream.Readable, streamLength: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromText_1
  name: createFileFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Отправляет файл из текстовой строки.
  syntax:
    content: 'function createFileFromText(share: string, directory: string, file: string, text: string | Buffer, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createFileFromText
  name: createFileFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Отправляет файл из текстовой строки.
  syntax:
    content: 'function createFileFromText(share: string, directory: string, file: string, text: string | Buffer, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: text
      type:
      - string | Buffer
      description: Файл текст как строку или в буфере.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; `result` будет содержать сведения о файле.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream
  name: createRangesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет диапазон из потока.
  syntax:
    content: 'function createRangesFromStream(share: string, directory: string, file: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, options: CreateRangeRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: readStream
      type:
      - stream.Readable
      description: Поток для чтения Node.js.
    - id: rangeStart
      type:
      - number
      description: Начало диапазона.
    - id: rangeEnd
      type:
      - number
      description: Конец диапазона.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createRangesFromStream_1
  name: createRangesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет диапазон из потока.
  syntax:
    content: 'function createRangesFromStream(share: string, directory: string, file: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createReadStream
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Предоставляет поток для чтения из файла.
  syntax:
    content: 'function createReadStream(share: string, directory: string, file: string, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createReadStream_1
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Предоставляет поток для чтения из файла.
  syntax:
    content: 'function createReadStream(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShare
  name: createShare
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую общую папку в указанной учетной записи.

    Если общую папку с тем же именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createShare(share: string, options: CreateShareRequestOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения общей папки.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShare_1
  name: createShare
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую общую папку в указанной учетной записи.

    Если общую папку с тем же именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createShare(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists_1
  name: createShareIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую общую папку в указанной учетной записи, если общий ресурс не существует.
  syntax:
    content: 'function createShareIfNotExists(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShareIfNotExists
  name: createShareIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую общую папку в указанной учетной записи, если общий ресурс не существует.
  syntax:
    content: 'function createShareIfNotExists(share: string, options: CreateShareRequestOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если был создан файловый ресурс, или значение false, если общий ресурс уже существует.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot
  name: createShareSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createShareSnapshot(share: string, options: RequestOptions, callback: ErrorOrResult<string>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createShareSnapshot_1
  name: createShareSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createShareSnapshot(share: string, callback: ErrorOrResult<string>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile
  name: createWriteStreamToExistingFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в файл. Предполагается, что файл существует.

    Если нет, создайте файл, используя createFile перед вызовом этого метода или использовать createWriteStreamNewFile.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingFile(share: string, directory: string, file: string, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: Функция обратного вызова.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToExistingFile_1
  name: createWriteStreamToExistingFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в файл. Предполагается, что файл существует.

    Если нет, создайте файл, используя createFile перед вызовом этого метода или использовать createWriteStreamNewFile.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingFile(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile_1
  name: createWriteStreamToNewFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в файл. Создает файл перед записью данных.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewFile(share: string, directory: string, file: string, length: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.createWriteStreamToNewFile
  name: createWriteStreamToNewFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в файл. Создает файл перед записью данных.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewFile(share: string, directory: string, file: string, length: number, options: CreateFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: length
      type:
      - number
      description: Длина файла.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: Функция обратного вызова.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.defaultEnableReuseSocket
  name: defaultEnableReuseSocket
  fullName: defaultEnableReuseSocket
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultEnableReuseSocket: boolean'
    return:
      type:
      - boolean
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory
  name: deleteDirectory
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный каталог для удаления. Каталог должен быть пустым, перед его удалением.
  syntax:
    content: 'function deleteDirectory(share: string, directory: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteDirectory_1
  name: deleteDirectory
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный каталог для удаления. Каталог должен быть пустым, перед его удалением.
  syntax:
    content: 'function deleteDirectory(share: string, directory: string, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists
  name: deleteDirectoryIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный каталог для удаления, если он существует. Каталог должен быть пустым, перед его удалением.
  syntax:
    content: 'function deleteDirectoryIfExists(share: string, directory: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог существует и был удален, или значение false, если каталог не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteDirectoryIfExists_1
  name: deleteDirectoryIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный каталог для удаления, если он существует. Каталог должен быть пустым, перед его удалением.
  syntax:
    content: 'function deleteDirectoryIfExists(share: string, directory: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteFile
  name: deleteFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный файл для удаления. Этот файл удаляется позже во время сборки мусора.
  syntax:
    content: 'function deleteFile(share: string, directory: string, file: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteFile_1
  name: deleteFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный файл для удаления. Этот файл удаляется позже во время сборки мусора.
  syntax:
    content: 'function deleteFile(share: string, directory: string, file: string, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists
  name: deleteFileIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный файл для удаления, если он существует. Этот файл удаляется позже во время сборки мусора.
  syntax:
    content: 'function deleteFileIfExists(share: string, directory: string, file: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если файл был удален, или значение false, если файл не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteFileIfExists_1
  name: deleteFileIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Отмечает указанный файл для удаления, если он существует. Этот файл удаляется позже во время сборки мусора.
  syntax:
    content: 'function deleteFileIfExists(share: string, directory: string, file: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteShare
  name: deleteShare
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный общий ресурс для удаления.

    Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteShare(share: string, options: DeleteShareOptions, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteShare_1
  name: deleteShare
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный общий ресурс для удаления.

    Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteShare(share: string, callback: ErrorOrResponse)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists_1
  name: deleteShareIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный общий ресурс для удаления, если он существует.

    Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteShareIfExists(share: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.deleteShareIfExists
  name: deleteShareIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный общий ресурс для удаления, если он существует.

    Общий ресурс и все файлы, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteShareIfExists(share: string, options: DeleteShareOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если общий ресурс существует и был удален, или значение false, если общий ресурс не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist
  name: doesDirectoryExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли каталог в службе.
  syntax:
    content: 'function doesDirectoryExist(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если каталог существует, или значение false, если каталог не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesDirectoryExist_1
  name: doesDirectoryExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли каталог в службе.
  syntax:
    content: 'function doesDirectoryExist(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesFileExist
  name: doesFileExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли файл в службе.
  syntax:
    content: 'function doesFileExist(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет значение true, если файл существует, или значение false, если файл не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesFileExist_1
  name: doesFileExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли файл в службе.
  syntax:
    content: 'function doesFileExist(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesShareExist_1
  name: doesShareExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли общую папку в службе.
  syntax:
    content: 'function doesShareExist(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.doesShareExist
  name: doesShareExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли общую папку в службе.
  syntax:
    content: 'function doesShareExist(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если общий ресурс существует, или значение false, если общий ресурс не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  name: FileToText
  fullName: FileToText
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignature
  name: generateSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignature(share: string, directory: string, file: string, sharedAccessPolicy: SharedAccessPolicy, headers?: ContentSettingsHeaders)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(share: string, directory: string, file: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string, headers?: ContentSettingsHeaders)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    - id: sasVersion
      type:
      - string
      description: ''
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata_1
  name: getDirectoryMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для указанного каталога.
  syntax:
    content: 'function getDirectoryMetadata(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getDirectoryMetadata
  name: getDirectoryMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для указанного каталога.
  syntax:
    content: 'function getDirectoryMetadata(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties_1
  name: getDirectoryProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает каталог и его свойства из указанной учетной записи.
  syntax:
    content: 'function getDirectoryProperties(share: string, directory: string, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getDirectoryProperties
  name: getDirectoryProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает каталог и его свойства из указанной учетной записи.
  syntax:
    content: 'function getDirectoryProperties(share: string, directory: string, options: FileServiceOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о каталоге.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata
  name: getFileMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные для указанного файла.

    Не изменять и не возвращает содержимое файла.
  syntax:
    content: 'function getFileMetadata(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileMetadata_1
  name: getFileMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные для указанного файла.

    Не изменять и не возвращает содержимое файла.
  syntax:
    content: 'function getFileMetadata(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileProperties
  name: getFileProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства для файла.

    Он не вернуть или изменить содержимое файла.
  syntax:
    content: 'function getFileProperties(share: string, directory: string, file: string, options: FileServiceOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileProperties_1
  name: getFileProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства для файла.

    Он не вернуть или изменить содержимое файла.
  syntax:
    content: 'function getFileProperties(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile
  name: getFileToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл Azure в файл.
  syntax:
    content: 'function getFileToLocalFile(share: string, directory: string, file: string, localFileName: string, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: localFileName
      type:
      - string
      description: Локальный путь к загружаемому файлу.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToLocalFile_1
  name: getFileToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл Azure в файл.
  syntax:
    content: 'function getFileToLocalFile(share: string, directory: string, file: string, localFileName: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToStream_1
  name: getFileToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл в поток.
  syntax:
    content: 'function getFileToStream(share: string, directory: string, file: string, writeStream: stream.Writable, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: writeStream
      type:
      - stream.Writable
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToStream
  name: getFileToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл в поток.
  syntax:
    content: 'function getFileToStream(share: string, directory: string, file: string, writeStream: stream.Writable, options: GetFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: writeStream
      type:
      - stream.Writable
      description: Поток, доступный для записи Node.js.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToText
  name: getFileToText
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл в текстовую строку.
  syntax:
    content: 'function getFileToText(share: string, directory: string, file: string, options: GetFileRequestOptions, callback: FileToText)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.file.FileService.FileToText
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `text` будет содержать содержимое файла, и `file` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getFileToText_1
  name: getFileToText
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает файл в текстовую строку.
  syntax:
    content: 'function getFileToText(share: string, directory: string, file: string, callback: FileToText)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.file.FileService.FileToText
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties_1
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.
  syntax:
    content: 'function getServiceProperties(callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getServiceProperties
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareAcl_1
  name: getShareAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL для общего ресурса.
  syntax:
    content: 'function getShareAcl(share: string, callback: ErrorOrResult<ShareAclResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareAcl
  name: getShareAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL для общего ресурса.
  syntax:
    content: 'function getShareAcl(share: string, options: RequestOptions, callback: ErrorOrResult<ShareAclResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata_1
  name: getShareMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для общего ресурса.
  syntax:
    content: 'function getShareMetadata(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareMetadata
  name: getShareMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для общего ресурса.
  syntax:
    content: 'function getShareMetadata(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareProperties_1
  name: getShareProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает из указанной учетной записи общей папке и ее свойства.
  syntax:
    content: 'function getShareProperties(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareProperties
  name: getShareProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает из указанной учетной записи общей папке и ее свойства.
  syntax:
    content: 'function getShareProperties(share: string, options: FileServiceOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.FileServiceOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareStats
  name: getShareStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику общую папку для общей папки.
  syntax:
    content: 'function getShareStats(share: string, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать статистику и `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getShareStats_1
  name: getShareStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику общую папку для общей папки.
  syntax:
    content: 'function getShareStats(share: string, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.getUrl
  name: getUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает URL-адрес файла или каталога.
  syntax:
    content: 'function getUrl(share: string, directory: string, file?: string, sasToken?: string, primary?: boolean, shareSnapshotId?: string)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    - id: shareSnapshotId
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented_1
  name: listFilesAndDirectoriesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов файла в каталоге.
  syntax:
    content: 'function listFilesAndDirectoriesSegmented(share: string, directory: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmented
  name: listFilesAndDirectoriesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов файла в каталоге.
  syntax:
    content: 'function listFilesAndDirectoriesSegmented(share: string, directory: string, currentToken: ContinuationToken, options: ListRequestOptions, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.ListRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать entries.files, entries.directories и continuationToken для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix_1
  name: listFilesAndDirectoriesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов файла в каталоге.
  syntax:
    content: 'function listFilesAndDirectoriesSegmentedWithPrefix(share: string, directory: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: prefix
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listFilesAndDirectoriesSegmentedWithPrefix
  name: listFilesAndDirectoriesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов файла в каталоге.
  syntax:
    content: 'function listFilesAndDirectoriesSegmentedWithPrefix(share: string, directory: string, prefix: string, currentToken: ContinuationToken, options: ListRequestOptions, callback: ErrorOrResult<ListFilesAndDirectoriesResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: prefix
      type:
      - string
      description: Префикс имени файлы в каталоге.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.ListRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать entries.files, entries.directories и continuationToken для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listRanges_1
  name: listRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: Список диапазонов файла. Перечислены все диапазоны по умолчанию, или только диапазоны за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function listRanges(share: string, directory: string, file: string, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listRanges
  name: listRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: Список диапазонов файла. Перечислены все диапазоны по умолчанию, или только диапазоны за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function listRanges(share: string, directory: string, file: string, options: ListRangeRequestOptions, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о диапазоне.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented
  name: listSharesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов общего ресурса в указанной учетной записи.
  syntax:
    content: 'function listSharesSegmented(currentToken: ContinuationToken, options: ListShareRequestOptions, callback: ErrorOrResult<ListSharesResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список общих ресурсов и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmented_1
  name: listSharesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов общего ресурса в указанной учетной записи.
  syntax:
    content: 'function listSharesSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListSharesResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix_1
  name: listSharesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов общего ресурса, имена которых начинаются с указанного префикса в указанной учетной записи.
  syntax:
    content: 'function listSharesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListSharesResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.listSharesSegmentedWithPrefix
  name: listSharesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов общего ресурса, имена которых начинаются с указанного префикса в указанной учетной записи.
  syntax:
    content: 'function listSharesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListShareRequestOptions, callback: ErrorOrResult<ListSharesResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: Префикс имени общего ресурса.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список общих ресурсов и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.parallelOperationThreadCount
  name: parallelOperationThreadCount
  fullName: parallelOperationThreadCount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'parallelOperationThreadCount: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.resizeFile
  name: resizeFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет размер файла.
  syntax:
    content: 'function resizeFile(share: string, directory: string, file: string, size: number, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: size
      type:
      - number
      description: Размер файла в байтах.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.resizeFile_1
  name: resizeFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет размер файла.
  syntax:
    content: 'function resizeFile(share: string, directory: string, file: string, size: number, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: size
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata
  name: setDirectoryMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного каталога как один или несколько пар "имя значение"
  syntax:
    content: 'function setDirectoryMetadata(share: string, directory: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setDirectoryMetadata_1
  name: setDirectoryMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного каталога как один или несколько пар "имя значение"
  syntax:
    content: 'function setDirectoryMetadata(share: string, directory: string, metadata: Map<string>, callback: ErrorOrResult<DirectoryResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata_1
  name: setFileMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного файла как пары имя значение, один или несколько его изменять и возвращает содержимое файла.
  syntax:
    content: 'function setFileMetadata(share: string, directory: string, file: string, metadata: Map<string>, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setFileMetadata
  name: setFileMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного файла как пары имя значение, один или несколько его изменять и возвращает содержимое файла.
  syntax:
    content: 'function setFileMetadata(share: string, directory: string, file: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setFileProperties_1
  name: setFileProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает определяемые пользователем свойства для указанного файла.

    Не изменять и не возвращает содержимое файла.
  syntax:
    content: 'function setFileProperties(share: string, directory: string, file: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: directory
      type:
      - string
      description: ''
    - id: file
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setFileProperties
  name: setFileProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает определяемые пользователем свойства для указанного файла.

    Не изменять и не возвращает содержимое файла.
  syntax:
    content: 'function setFileProperties(share: string, directory: string, file: string, options: SetFilePropertiesRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: directory
      type:
      - string
      description: Имя каталога. Используйте '' для ссылки на базовый каталог.
    - id: file
      type:
      - string
      description: Имя файла. Имена файлов не может начинаться или заканчиваться разделитель «/».
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: Свойства службы.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setServiceProperties_1
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы файлов учетной записи хранения, включая аналитику хранилища Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareAcl
  name: setShareAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список ACL для общего ресурса.
  syntax:
    content: 'function setShareAcl(share: string, signedIdentifiers: function, options: RequestOptions, callback: ErrorOrResult<ShareAclResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: signedIdentifiers
      type:
      - function
      description: Идентификаторы со знаком. Со знаком идентификаторы должны быть в массиве.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения для общего ресурса.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareAcl_1
  name: setShareAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список ACL для общего ресурса.
  syntax:
    content: 'function setShareAcl(share: string, signedIdentifiers: function, callback: ErrorOrResult<ShareAclResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: signedIdentifiers
      type:
      - function
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata_1
  name: setShareMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Задает метаданные общего ресурса.

    Вызов операции задать совместное использование метаданных перезаписывает все существующие метаданные, связанные с общей папкой.

    Это не позволяет изменить пару отдельное имя/значение.
  syntax:
    content: 'function setShareMetadata(share: string, metadata: Map<string>, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareMetadata
  name: setShareMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Задает метаданные общего ресурса.

    Вызов операции задать совместное использование метаданных перезаписывает все существующие метаданные, связанные с общей папкой.

    Это не позволяет изменить пару отдельное имя/значение.
  syntax:
    content: 'function setShareMetadata(share: string, metadata: Map<string>, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareProperties
  name: setShareProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает свойства для указанной общей папке.
  syntax:
    content: 'function setShareProperties(share: string, properties: ShareProperties, options: RequestOptions, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: Имя общего ресурса.
    - id: properties
      type:
      - azure-storage.azurestorage.services.file.FileService.ShareProperties
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об общей папки.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.setShareProperties_1
  name: setShareProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает свойства для указанной общей папке.
  syntax:
    content: 'function setShareProperties(share: string, properties: ShareProperties, callback: ErrorOrResult<ShareResult>)'
    parameters:
    - id: share
      type:
      - string
      description: ''
    - id: properties
      type:
      - azure-storage.azurestorage.services.file.FileService.ShareProperties
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.singleFileThresholdInBytes
  name: singleFileThresholdInBytes
  fullName: singleFileThresholdInBytes
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'singleFileThresholdInBytes: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.startCopyFile
  name: startCopyFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Начинает копировать файл в место назначения в учетной записи хранения.
  syntax:
    content: 'function startCopyFile(sourceUri: string, targetshare: string, targetdirectory: string, targetfile: string, options: CopyFileRequestOptions, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: Исходный файл или URI большого двоичного объекта.
    - id: targetshare
      type:
      - string
      description: ''
    - id: targetdirectory
      type:
      - string
      description: ''
    - id: targetfile
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о файле.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.startCopyFile_1
  name: startCopyFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Начинает копировать файл в место назначения в учетной записи хранения.
  syntax:
    content: 'function startCopyFile(sourceUri: string, targetshare: string, targetdirectory: string, targetfile: string, callback: ErrorOrResult<FileResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: ''
    - id: targetshare
      type:
      - string
      description: ''
    - id: targetdirectory
      type:
      - string
      description: ''
    - id: targetfile
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.file.FileService.withFilter
  name: withFilter
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Операция фильтрации свяжите с этой FileService. К операциям фильтрации могут относиться ведение журнала, автоматический повтор и т. д. Фильтр операции являются объектами, реализующими метод с сигнатурой: «функция дескриптор (requestOptions, далее)».


    Выполнив предварительную обработку параметров запроса, метод должен вызвать «next», передавая обратный вызов со следующей сигнатурой: подпись:

        "function (returnObject, finalCallback, next)"

    В этой функции обратного вызова и после обработки returnObject (ответ на запрос к серверу) функция обратного вызова должна либо вызвать "next", если он существует, чтобы продолжить обработку других фильтров, либо в противном случае просто вызвать "finalCallback" для завершения обращения к службе.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.file.FileService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<function>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <function>
    fullName: <function>
- uid: azure-storage.azurestorage.services.table.TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
