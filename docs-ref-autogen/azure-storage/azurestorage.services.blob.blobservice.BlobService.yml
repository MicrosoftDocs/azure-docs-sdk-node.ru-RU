### YamlMime:UniversalReference
ms.openlocfilehash: 5dcc68225e6caabef46f217741c3354b79095ca1
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41695043"
items:
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  name: BlobService
  fullName: BlobService
  children:
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  - azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob_1
  name: abortCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Прервите операцию копирования BLOB-объектов.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: copyId
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.abortCopyBlob
  name: abortCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Прервите операцию копирования BLOB-объектов.
  syntax:
    content: 'function abortCopyBlob(container: string, blob: string, copyId: string, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера назначения.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта назначения.
    - id: copyId
      type:
      - string
      description: Идентификатор операции копирования.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease_1
  name: acquireLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Запрашивает новую аренду. Если указаны контейнера и BLOB-объектов, получает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, получает аренду контейнера.
  syntax:
    content: 'function acquireLease(container: string, blob: string, options: AcquireLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.acquireLease
  name: acquireLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Запрашивает новую аренду. Если указаны контейнера и BLOB-объектов, получает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, получает аренду контейнера.
  syntax:
    content: 'function acquireLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream
  name: appendBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую блокировку, из потока, чтения, добавляемая к добавочный большой двоичный объект.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: readStream
      type:
      - stream.Readable
      description: Поток для чтения Node.js.
    - id: streamLength
      type:
      - number
      description: Длина потока.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromStream_1
  name: appendBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую блокировку, из потока, чтения, добавляемая к добавочный большой двоичный объект.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendBlockFromStream(container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText
  name: appendBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую блокировку, из текста, добавляемая к добавочный большой двоичный объект.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, options: AppendBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: content
      type:
      - string | Buffer
      description: Блок текста, как строка или в буфере.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendBlockFromText_1
  name: appendBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новую блокировку, из текста, добавляемая к добавочный большой двоичный объект.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendBlockFromText(container: string, blob: string, content: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile_1
  name: appendFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из объекта HTML-файл. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromBrowserFile
  name: appendFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из объекта HTML-файл. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function appendFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: browserFile
      type:
      - Object
      description: Объект файла для отправки создается с API файлов HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile
  name: appendFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из локального файла. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: localFileName
      type:
      - string
      description: Локальный путь к файлу для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromLocalFile_1
  name: appendFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из локального файла. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream
  name: appendFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из потока. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromStream_1
  name: appendFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из потока. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText
  name: appendFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из текстовой строки. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: text
      type:
      - string
      description: Текст BLOB-объектов, как строка или в буфере.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.appendFromText_1
  name: appendFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет добавочный большой двоичный объект из текстовой строки. Предполагается, что большой двоичный объект уже существует в службе.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.
  syntax:
    content: 'function appendFromText(container: string, blob: string, text: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.constructor
  name: BlobService
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >-
    Создает объект BlobService.

    Если нет строки подключения или учетная запись хранения и storageaccesskey, будет использоваться в переменных среды AZURE_STORAGE_CONNECTION_STRING или AZURE_STORAGE_ACCOUNT и AZURE_STORAGE_ACCESS_KEY.
  syntax:
    content: 'new BlobService(storageAccountOrConnectionString: string, storageAccessKey?: string, host?: string | StorageHost, sasToken?: string, endpointSuffix?: string)'
    parameters:
    - id: storageAccountOrConnectionString
      type:
      - string
      description: ''
    - id: storageAccessKey
      type:
      - string
      description: ''
      optional: true
    - id: host
      type:
      - string | azure-storage.azurestorage.StorageHost
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: endpointSuffix
      type:
      - string
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  name: BlobToText
  fullName: BlobToText
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease
  name: breakLease
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Прекращает аренду, но гарантирует, что другой клиент не сможет получить новую аренду, пока не истечет текущий период аренды. Если указаны контейнера и BLOB-объектов, прекращает аренду большого двоичного объекта.

    В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, прекращает аренду контейнера.
  syntax:
    content: 'function breakLease(container: string, blob: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.breakLease_1
  name: breakLease
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Прекращает аренду, но гарантирует, что другой клиент не сможет получить новую аренду, пока не истечет текущий период аренды. Если указаны контейнера и BLOB-объектов, прекращает аренду большого двоичного объекта.

    В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, прекращает аренду контейнера.
  syntax:
    content: 'function breakLease(container: string, blob: string, options: BreakLeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease
  name: changeLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет идентификатор активной аренды. Если указаны контейнера и большого двоичного объекта, изменяет аренды большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, изменяет аренды контейнера.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Текущий идентификатор аренды.
    - id: proposedLeaseId
      type:
      - string
      description: Идентификатор предлагаемой аренды. Должен быть GUID.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.changeLease_1
  name: changeLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет идентификатор активной аренды. Если указаны контейнера и большого двоичного объекта, изменяет аренды большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, изменяет аренды контейнера.
  syntax:
    content: 'function changeLease(container: string, blob: string, leaseId: string, proposedLeaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Текущий идентификатор аренды.
    - id: proposedLeaseId
      type:
      - string
      description: Идентификатор предлагаемой аренды. Должен быть GUID.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange_1
  name: clearPageRange
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает диапазон страниц.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.clearPageRange
  name: clearPageRange
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает диапазон страниц.
  syntax:
    content: 'function clearPageRange(container: string, blob: string, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: rangeStart
      type:
      - number
      description: Начало диапазона.
    - id: rangeEnd
      type:
      - number
      description: Конец диапазона.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks
  name: commitBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Записывает большой двоичный объект, указывая список идентификаторов блокировок, входящие в состав большого двоичного объекта.

    Для записи в составе большого двоичного объекта, блок должен успешно записаны на сервер в предыдущих createBlock операции.

    Примечание: Если список отсутствует допустимый указан в параметре блокировки, BLOB-объектов будут обновлены с пустым содержимым, т. е. существующих блоков в большой двоичный объект будет удален, такое поведение сохраняется соображений обратной совместимости.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: >-
        Оболочка для списка блокировок идентификатор содержит идентификаторов блокировок, входящие в состав большого двоичного объекта.

        Предоставляются три вида списка, выберите из них следует использовать в соответствии с требованием.

        Дополнительные фоновые знания см. в статье https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-list
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные из списка блокировки.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.commitBlocks_1
  name: commitBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Записывает большой двоичный объект, указывая список идентификаторов блокировок, входящие в состав большого двоичного объекта.

    Для записи в составе большого двоичного объекта, блок должен успешно записаны на сервер в предыдущих createBlock операции.

    Примечание: Если список отсутствует допустимый указан в параметре блокировки, BLOB-объектов будут обновлены с пустым содержимым, т. е. существующих блоков в большой двоичный объект будет удален, такое поведение сохраняется соображений обратной совместимости.
  syntax:
    content: 'function commitBlocks(container: string, blob: string, blockList: PutBlockListRequest, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blockList
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile_1
  name: createAppendBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый добавочный большой двоичный объект из объекта HTML-файл. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromBrowserFile.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromBrowserFile
  name: createAppendBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый добавочный большой двоичный объект из объекта HTML-файл. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromBrowserFile.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createAppendBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: browserFile
      type:
      - Object
      description: Объект файла для отправки создается с API файлов HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile
  name: createAppendBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый добавочный большой двоичный объект из локального файла. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromLocalFile.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: localFileName
      type:
      - string
      description: Локальный путь к файлу для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromLocalFile_1
  name: createAppendBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый добавочный большой двоичный объект из локального файла. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromLocalFile.
  syntax:
    content: 'function createAppendBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream
  name: createAppendBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает добавочный большой двоичный объект из потока. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromStream.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromStream_1
  name: createAppendBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает добавочный большой двоичный объект из потока. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromStream.
  syntax:
    content: 'function createAppendBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText_1
  name: createAppendBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает добавочный большой двоичный объект из текстовой строки. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromText.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createAppendBlobFromText
  name: createAppendBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает добавочный большой двоичный объект из текстовой строки. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Если вы хотите добавить данные в уже существующий большой двоичный объект, см. в appendFromText.
  syntax:
    content: 'function createAppendBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: text
      type:
      - string | Buffer
      description: Текст BLOB-объектов, как строка или в буфере.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot_1
  name: createBlobSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает моментальный снимок большого двоичного объекта только для чтения.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlobSnapshot
  name: createBlobSnapshot
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает моментальный снимок большого двоичного объекта только для чтения.
  syntax:
    content: 'function createBlobSnapshot(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<string>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<string>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать идентификатор моментального снимка.
                                                                          `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile_1
  name: createBlockBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый большой двоичный объект блока. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromBrowserFile
  name: createBlockBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый большой двоичный объект блока. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createBlockBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: browserFile
      type:
      - Object
      description: Объект файла для отправки создается с API файлов HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile
  name: createBlockBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый большой двоичный объект или обновляет содержимое существующего большого двоичного объекта блока.

    Обновление существующего большого двоичного объекта блока перезаписывает все существующие метаданные большого двоичного объекта.

    Частичные обновления не поддерживаются с помощью Put Blob; Содержимое существующего большого двоичного объекта перезаписывается содержимым нового большого двоичного объекта.

    Чтобы выполнить частичное обновление содержимого блочного BLOB-объекта, используйте операцию Put Block List.

    Вызов Put Blob, чтобы создать страничный большой двоичный объект только к инициализации большого двоичного объекта. Чтобы добавить содержимое в страничный большой двоичный объект, вызовите операцию Put Page.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: localFileName
      type:
      - string
      description: Локальный путь к файлу для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromLocalFile_1
  name: createBlockBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый большой двоичный объект или обновляет содержимое существующего большого двоичного объекта блока.

    Обновление существующего большого двоичного объекта блока перезаписывает все существующие метаданные большого двоичного объекта.

    Частичные обновления не поддерживаются с помощью Put Blob; Содержимое существующего большого двоичного объекта перезаписывается содержимым нового большого двоичного объекта.

    Чтобы выполнить частичное обновление содержимого блочного BLOB-объекта, используйте операцию Put Block List.

    Вызов Put Blob, чтобы создать страничный большой двоичный объект только к инициализации большого двоичного объекта. Чтобы добавить содержимое в страничный большой двоичный объект, вызовите операцию Put Page.
  syntax:
    content: 'function createBlockBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream
  name: createBlockBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект блока из потока.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromStream_1
  name: createBlockBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект блока из потока.
  syntax:
    content: 'function createBlockBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreateBlockBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText
  name: createBlockBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект блока из текстовой строки.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: text
      type:
      - string | Buffer
      description: Текст BLOB-объектов, как строка или в буфере.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockBlobFromText_1
  name: createBlockBlobFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект блока из текстовой строки.
  syntax:
    content: 'function createBlockBlobFromText(container: string, blob: string, text: string | Buffer, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: text
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream
  name: createBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: Идентификатор блока.
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: readStream
      type:
      - stream.Readable
      description: Поток для чтения Node.js.
    - id: streamLength
      type:
      - number
      description: Длина потока.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromStream_1
  name: createBlockFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта.
  syntax:
    content: 'function createBlockFromStream(blockId: string, container: string, blob: string, readStream: stream.Readable, streamLength: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText_1
  name: createBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: content
      type:
      - string | Buffer
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromText
  name: createBlockFromText
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта.
  syntax:
    content: 'function createBlockFromText(blockId: string, container: string, blob: string, content: string | Buffer, options: BlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: Идентификатор блока.
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: content
      type:
      - string | Buffer
      description: Содержимое блока.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL
  name: createBlockFromURL
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта из URL-адрес BLOB-объектов Azure или файла.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, options: CreateBlockRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: Идентификатор блока.
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: sourceURL
      type:
      - string
      description: >-
        URL-адрес источника данных.

        Он может указывать на любой BLOB-объектов Azure или файл, то есть либо public или присоединил подписи общего доступа.
    - id: sourceRangeStart
      type:
      - number
      description: Начало диапазона bytes(inclusive), который должен быть взят из источника копирования.
    - id: sourceRangeEnd
      type:
      - number
      description: Конец диапазона bytes(inclusive), который должен быть взят из источника копирования.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createBlockFromURL_1
  name: createBlockFromURL
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую блокировку, которую нужно зафиксировать как часть большого двоичного объекта из URL-адрес BLOB-объектов Azure или файла.
  syntax:
    content: 'function createBlockFromURL(blockId: string, container: string, blob: string, sourceURL: string, sourceRangeStart: number, sourceRangeEnd: number, callback: ErrorOrResponse)'
    parameters:
    - id: blockId
      type:
      - string
      description: ''
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sourceURL
      type:
      - string
      description: ''
    - id: sourceRangeStart
      type:
      - number
      description: ''
    - id: sourceRangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer
  name: createContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый контейнер в указанной учетной записи.

    Если контейнер с таким именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createContainer(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о контейнере.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainer_1
  name: createContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает новый контейнер в указанной учетной записи.

    Если контейнер с таким именем уже существует, операция завершится ошибкой.
  syntax:
    content: 'function createContainer(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о контейнере.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists_1
  name: createContainerIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, если контейнер не существует.
  syntax:
    content: 'function createContainerIfNotExists(container: string, options: CreateContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер был создан, или значение false, если контейнер уже существует.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createContainerIfNotExists
  name: createContainerIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, если контейнер не существует.
  syntax:
    content: 'function createContainerIfNotExists(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер был создан, или значение false, если контейнер уже существует.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob_1
  name: createOrReplaceAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает пустой добавочный большой двоичный объект. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createOrReplaceAppendBlob
  name: createOrReplaceAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Создает пустой добавочный большой двоичный объект. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.
  syntax:
    content: 'function createOrReplaceAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob
  name: createPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlob_1
  name: createPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile_1
  name: createPageBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает большой двоичный объект страницы из файла HTML. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: browserFile
      type:
      - Object
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromBrowserFile
  name: createPageBlobFromBrowserFile
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Передает большой двоичный объект страницы из файла HTML. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    (Доступно только в клиентской библиотеке JavaScript для браузеров)
  syntax:
    content: 'function createPageBlobFromBrowserFile(container: string, blob: string, browserFile: Object, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: browserFile
      type:
      - Object
      description: Объект файла для отправки создается с API файлов HTML.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                        `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile
  name: createPageBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект страницы из файла.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: localFileName
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromLocalFile_1
  name: createPageBlobFromLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает большой двоичный объект страницы из файла.
  syntax:
    content: 'function createPageBlobFromLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream_1
  name: createPageBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает страничный большой двоичный объект из потока.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPageBlobFromStream
  name: createPageBlobFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Передает страничный большой двоичный объект из потока.
  syntax:
    content: 'function createPageBlobFromStream(container: string, blob: string, stream: stream.Readable, streamLength: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: stream
      type:
      - stream.Readable
      description: ''
    - id: streamLength
      type:
      - number
      description: Длина потока для отправки.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: Функция обратного вызова.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream_1
  name: createPagesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет страничный большой двоичный объект из потока.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: readStream
      type:
      - stream.Readable
      description: ''
    - id: rangeStart
      type:
      - number
      description: ''
    - id: rangeEnd
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createPagesFromStream
  name: createPagesFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет страничный большой двоичный объект из потока.
  syntax:
    content: 'function createPagesFromStream(container: string, blob: string, readStream: stream.Readable, rangeStart: number, rangeEnd: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: readStream
      type:
      - stream.Readable
      description: Поток для чтения Node.js.
    - id: rangeStart
      type:
      - number
      description: Начало диапазона.
    - id: rangeEnd
      type:
      - number
      description: Конец диапазона.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Предоставляет поток для чтения из большого двоичного объекта.
  syntax:
    content: 'function createReadStream(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createReadStream_1
  name: createReadStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Предоставляет поток для чтения из большого двоичного объекта.
  syntax:
    content: 'function createReadStream(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Readable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob_1
  name: createWriteStreamToBlockBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в большой двоичный объект блока.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToBlockBlob
  name: createWriteStreamToBlockBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в большой двоичный объект блока.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToBlockBlob(container: string, blob: string, options: CreateBlockBlobRequestOptions, callback?: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob
  name: createWriteStreamToExistingAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в существующий добавочный BLOB-объект. Предполагается, что существует большой двоичный объект.

    Если нет, создайте большой двоичный объект, с помощью createAppendBlob перед вызовом этого метода или использовать createWriteStreamToNewAppendBlob.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingAppendBlob_1
  name: createWriteStreamToExistingAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в существующий добавочный BLOB-объект. Предполагается, что существует большой двоичный объект.

    Если нет, создайте большой двоичный объект, с помощью createAppendBlob перед вызовом этого метода или использовать createWriteStreamToNewAppendBlob.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob
  name: createWriteStreamToExistingPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в страничный большой двоичный объект. Предполагается, что существует большой двоичный объект.

    Если нет, создайте большой двоичный объект, с помощью createPageBlob перед вызовом этого метода или использовать createWriteStreamNewPageBlob.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToExistingPageBlob_1
  name: createWriteStreamToExistingPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в страничный большой двоичный объект. Предполагается, что существует большой двоичный объект.

    Если нет, создайте большой двоичный объект, с помощью createPageBlob перед вызовом этого метода или использовать createWriteStreamNewPageBlob.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToExistingPageBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob
  name: createWriteStreamToNewAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в новый добавочный большой двоичный объект. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, options: CreateBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewAppendBlob_1
  name: createWriteStreamToNewAppendBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в новый добавочный большой двоичный объект. Если большой двоичный объект уже существует в службе, он будет перезаписан.

    Чтобы избежать перезаписи и вместо этого создавалось сообщение об ошибке, если существует большой двоичный объект, передайте в параметре accessConditions в объект параметров.

    Этот API следует использовать только в сценарии одного писателя так, как условный заголовок append смещение внутренним образом использует API во избежание дублированных блоков.

    Если вы всегда имеют одного писателя сценарий, рассмотрим options.absorbConditionalErrorsOnRetry и см. в разделе, если присвоить этому флагу значение true будет доступен для вас.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewAppendBlob(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob_1
  name: createWriteStreamToNewPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в страничный большой двоичный объект. Создает большой двоичный объект перед записью данных.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: length
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.createWriteStreamToNewPageBlob
  name: createWriteStreamToNewPageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Предоставляет поток для записи в страничный большой двоичный объект. Создает большой двоичный объект перед записью данных.

    Имейте в виду `Stream` возвращает этот API следует использовать с помощью передачи по конвейеру.
  syntax:
    content: 'function createWriteStreamToNewPageBlob(container: string, blob: string, length: number, options: CreatePageBlobOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: length
      type:
      - number
      description: Длина большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:BlobResult)` будет содержать данные больших двоичных объектов.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - stream.Writable
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.defaultEnableReuseSocket
  name: defaultEnableReuseSocket
  fullName: defaultEnableReuseSocket
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'defaultEnableReuseSocket: boolean'
    return:
      type:
      - boolean
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob
  name: deleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный большой двоичный объект или моментальный снимок для удаления. BLOB-объекта удаляется позже во время сборки мусора.

    Если большой двоичный объект имеет моментальные снимки, их необходимо удалить при удалении большого двоичного объекта. С помощью параметра deleteSnapshots, вы можете удалить большой двоичный объект и его моментальные снимки, либо удалить только моментальные снимки, но не самого объекта. Если BLOB-объекта имеются моментальные снимки, необходимо включить параметр deleteSnapshots или служба BLOB-объектов вернет ошибку и ничего не будут удалены.

    При удалении определенного моментального снимка с помощью параметра snapshotId deleteSnapshots параметр не должен быть включен.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlob_1
  name: deleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный большой двоичный объект или моментальный снимок для удаления. BLOB-объекта удаляется позже во время сборки мусора.

    Если большой двоичный объект имеет моментальные снимки, их необходимо удалить при удалении большого двоичного объекта. С помощью параметра deleteSnapshots, вы можете удалить большой двоичный объект и его моментальные снимки, либо удалить только моментальные снимки, но не самого объекта. Если BLOB-объекта имеются моментальные снимки, необходимо включить параметр deleteSnapshots или служба BLOB-объектов вернет ошибку и ничего не будут удалены.

    При удалении определенного моментального снимка с помощью параметра snapshotId deleteSnapshots параметр не должен быть включен.
  syntax:
    content: 'function deleteBlob(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists
  name: deleteBlobIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный большой двоичный объект или моментальный снимок для удаления, если он существует. BLOB-объекта удаляется позже во время сборки мусора.

    Если большой двоичный объект имеет моментальные снимки, их необходимо удалить при удалении большого двоичного объекта. С помощью параметра deleteSnapshots, вы можете удалить большой двоичный объект и его моментальные снимки, либо удалить только моментальные снимки, но не самого объекта. Если BLOB-объекта имеются моментальные снимки, необходимо включить параметр deleteSnapshots или служба BLOB-объектов вернет ошибку и ничего не будут удалены.

    При удалении определенного моментального снимка с помощью параметра snapshotId deleteSnapshots параметр не должен быть включен.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если большой двоичный объект был удален, или значение false, если большой двоичный объект не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteBlobIfExists_1
  name: deleteBlobIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный большой двоичный объект или моментальный снимок для удаления, если он существует. BLOB-объекта удаляется позже во время сборки мусора.

    Если большой двоичный объект имеет моментальные снимки, их необходимо удалить при удалении большого двоичного объекта. С помощью параметра deleteSnapshots, вы можете удалить большой двоичный объект и его моментальные снимки, либо удалить только моментальные снимки, но не самого объекта. Если BLOB-объекта имеются моментальные снимки, необходимо включить параметр deleteSnapshots или служба BLOB-объектов вернет ошибку и ничего не будут удалены.

    При удалении определенного моментального снимка с помощью параметра snapshotId deleteSnapshots параметр не должен быть включен.
  syntax:
    content: 'function deleteBlobIfExists(container: string, blob: string, options: DeleteBlobRequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если большой двоичный объект был удален, или значение false, если большой двоичный объект не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer
  name: deleteContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный контейнер для удаления.

    Контейнер и все большие двоичные объекты, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteContainer(container: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainer_1
  name: deleteContainer
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный контейнер для удаления.

    Контейнер и все большие двоичные объекты, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteContainer(container: string, options: ContainerOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists_1
  name: deleteContainerIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный контейнер для удаления, если он существует.

    Контейнер и все большие двоичные объекты, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteContainerIfExists(container: string, options: ContainerOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер существует и был удален, или значение false, если контейнер не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.deleteContainerIfExists
  name: deleteContainerIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Отмечает указанный контейнер для удаления, если он существует.

    Контейнер и все большие двоичные объекты, содержащиеся в нем будут удалены позднее во время сборки мусора.
  syntax:
    content: 'function deleteContainerIfExists(container: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер существует и был удален, или значение false, если контейнер не существует.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist_1
  name: doesBlobExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли большой двоичный объект в службе.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет значение true, если большой двоичный объект существует, или значение false, если большой двоичный объект не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesBlobExist
  name: doesBlobExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли большой двоичный объект в службе.
  syntax:
    content: 'function doesBlobExist(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет значение true, если большой двоичный объект существует, или значение false, если большой двоичный объект не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist
  name: doesContainerExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли контейнер в службе.
  syntax:
    content: 'function doesContainerExist(container: string, options: RequestOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер существует, или значение false, если контейнер не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.doesContainerExist_1
  name: doesContainerExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли контейнер в службе.
  syntax:
    content: 'function doesContainerExist(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет значение true, если контейнер существует, или значение false, если контейнер не существует.
                                                                            `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateBlockIdPrefix
  name: generateBlockIdPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает идентификатор префиксы случайного блока
  syntax:
    content: function generateBlockIdPrefix()
    parameters: []
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignature
  name: generateSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignature(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(container: string, blob: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string, headers?: ContentSettingsHeaders)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: ''
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    - id: sasVersion
      type:
      - string
      description: ''
    - id: headers
      type:
      - azure-storage.azurestorage.common.ContentSettingsHeaders
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties
  name: getAccountProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства учетной записи хранения.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, options?: RequestOptions, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:AccountProperties)` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getAccountProperties_1
  name: getAccountProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства учетной записи хранения.
  syntax:
    content: 'function getAccountProperties(container?: string, blob?: string, callback?: ErrorOrResult<AccountProperties>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
      optional: true
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata
  name: getBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные для указанного большого двоичного объекта или моментального снимка.

    Не изменять и не возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobMetadata_1
  name: getBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные для указанного большого двоичного объекта или моментального снимка.

    Не изменять и не возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function getBlobMetadata(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties
  name: getBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства большого двоичного объекта.

    Он не вернуть или изменить содержимое большого двоичного объекта.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobProperties_1
  name: getBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Возвращает все определяемые пользователем метаданные, стандартные свойства HTTP и системные свойства большого двоичного объекта.

    Он не вернуть или изменить содержимое большого двоичного объекта.
  syntax:
    content: 'function getBlobProperties(container: string, blob: string, optionsOrCallback: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile_1
  name: getBlobToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в файл.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: localFileName
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToLocalFile
  name: getBlobToLocalFile
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в файл.
  syntax:
    content: 'function getBlobToLocalFile(container: string, blob: string, localFileName: string, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: localFileName
      type:
      - string
      description: Локальный путь к загружаемому файлу.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream_1
  name: getBlobToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в поток.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, options: GetBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: writeStream
      type:
      - stream.Writable
      description: Поток, доступный для записи Node.js.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToStream
  name: getBlobToStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в поток.
  syntax:
    content: 'function getBlobToStream(container: string, blob: string, writeStream: stream.Writable, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: writeStream
      type:
      - stream.Writable
      description: Поток, доступный для записи Node.js.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText_1
  name: getBlobToText
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в строку текста.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlobToText
  name: getBlobToText
  children: []
  type: method
  langs:
  - typeScript
  summary: Загружает большой двоичный объект в строку текста.
  syntax:
    content: 'function getBlobToText(container: string, blob: string, options: GetBlobRequestOptions, callback: BlobToText)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `text` будет содержать содержимое большого двоичного объекта, и `blockBlob` будет содержать данные больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getBlockId
  name: getBlockId
  children: []
  type: method
  langs:
  - typeScript
  summary: Получить идентификатор блокировки в соответствии с номером префикс и блок
  syntax:
    content: 'function getBlockId(prefix: string, number: number | string)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: number
      type:
      - number | string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl
  name: getContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL контейнера.
  syntax:
    content: 'function getContainerAcl(container: string, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerAcl_1
  name: getContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL контейнера.
  syntax:
    content: 'function getContainerAcl(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata
  name: getContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для контейнера.
  syntax:
    content: 'function getContainerMetadata(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerMetadata_1
  name: getContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все определяемые пользователем метаданные для контейнера.
  syntax:
    content: 'function getContainerMetadata(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties
  name: getContainerProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает контейнер и его свойства из указанной учетной записи.
  syntax:
    content: 'function getContainerProperties(container: string, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getContainerProperties_1
  name: getContainerProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает контейнер и его свойства из указанной учетной записи.
  syntax:
    content: 'function getContainerProperties(container: string, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                        `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff_1
  name: getPageRangesDiff
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getPageRangesDiff
  name: getPageRangesDiff
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getPageRangesDiff(container: string, blob: string, previousSnapshotTime: string, options: GetBlobRequestOptions, callback: ErrorOrResult<RangeDiff[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: previousSnapshotTime
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties_1
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства службы BLOB-объектов учетной записи хранения, включая аналитику хранилища Azure.
  syntax:
    content: 'function getServiceProperties(callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceProperties
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства службы BLOB-объектов учетной записи хранения, включая аналитику хранилища Azure.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback?: ErrorOrResult<BlobServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику службы для службы BLOB-объектов учетной записи хранения.
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать статистику и `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getServiceStats_1
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику службы для службы BLOB-объектов учетной записи хранения.
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.getUrl
  name: getUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает URL-адрес большого двоичного объекта или контейнера.
  syntax:
    content: 'function getUrl(container: string, blob?: string, sasToken?: string, primary?: boolean, snapshotId?: string)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    - id: snapshotId
      type:
      - string
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  name: LeaseRequestOptions
  fullName: LeaseRequestOptions
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  extends:
    name: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented
  name: listBlobsSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов большого двоичного объекта в контейнере.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                      `entries`  предоставляет список больших двоичных объектов и `continuationToken` используется для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmented_1
  name: listBlobsSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов большого двоичного объекта в контейнере.
  syntax:
    content: 'function listBlobsSegmented(container: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                      `entries`  предоставляет список больших двоичных объектов и `continuationToken` используется для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix_1
  name: listBlobsSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов большого двоичного объекта, имена которых начинаются с указанного префикса в контейнере.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, options: ListBlobsSegmentedRequestOptions, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: prefix
      type:
      - string
      description: Префикс имени большого двоичного объекта.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать записи больших двоичных объектов и маркер продолжения для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlobsSegmentedWithPrefix
  name: listBlobsSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов большого двоичного объекта, имена которых начинаются с указанного префикса в контейнере.
  syntax:
    content: 'function listBlobsSegmentedWithPrefix(container: string, prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListBlobsResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: prefix
      type:
      - string
      description: Префикс имени большого двоичного объекта.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать записи больших двоичных объектов и маркер продолжения для следующей операции перечисления.
                                                                      `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks
  name: listBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает список блокировок, которые были загружены как часть блочного BLOB-объекта.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, options: BlobRequestOptions, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: blocklisttype
      type:
      - string
      description: Тип списка блокировок для извлечения.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные из списка блокировки.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listBlocks_1
  name: listBlocks
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает список блокировок, которые были загружены как часть блочного BLOB-объекта.
  syntax:
    content: 'function listBlocks(container: string, blob: string, blocklisttype: string, callback: ErrorOrResult<BlockListResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blocklisttype
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented
  name: listContainersSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию контейнеров элементов в указанной учетной записи.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список контейнеров и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmented_1
  name: listContainersSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию контейнеров элементов в указанной учетной записи.
  syntax:
    content: 'function listContainersSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix
  name: listContainersSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов контейнера, имена которых начинаются с указанного префикса для указанной учетной.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListContainerOptions, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: Префикс имени контейнера.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список контейнеров и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listContainersSegmentedWithPrefix_1
  name: listContainersSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов контейнера, имена которых начинаются с указанного префикса для указанной учетной.
  syntax:
    content: 'function listContainersSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListContainerResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: ''
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges
  name: listPageRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: Список диапазонов страниц. Перечислены все диапазоны страниц по умолчанию, или только диапазоны страниц за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, options: GetBlobRequestOptions, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о диапазоне страниц.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.listPageRanges_1
  name: listPageRanges
  children: []
  type: method
  langs:
  - typeScript
  summary: Список диапазонов страниц. Перечислены все диапазоны страниц по умолчанию, или только диапазоны страниц за определенный диапазон байтов, если указаны rangeStart "и" rangeEnd.
  syntax:
    content: 'function listPageRanges(container: string, blob: string, callback: ErrorOrResult<Range[]>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.parallelOperationThreadCount
  name: parallelOperationThreadCount
  fullName: parallelOperationThreadCount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'parallelOperationThreadCount: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease
  name: releaseLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Освобождает аренду. Если указаны контейнера и BLOB-объектов, освобождает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, освобождает аренду контейнера.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Идентификатор аренды.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.releaseLease_1
  name: releaseLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Освобождает аренду. Если указаны контейнера и BLOB-объектов, освобождает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, освобождает аренду контейнера.
  syntax:
    content: 'function releaseLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Идентификатор аренды.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease
  name: renewLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновление существующей аренды. Если указаны контейнера и BLOB-объектов, продлевает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, продлевает аренду контейнера.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Идентификатор аренды. Должен быть GUID.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.renewLease_1
  name: renewLease
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновление существующей аренды. Если указаны контейнера и BLOB-объектов, продлевает аренду большого двоичного объекта. В противном случае если только для указанного контейнера и большого двоичного объекта имеет значение null, продлевает аренду контейнера.
  syntax:
    content: 'function renewLease(container: string, blob: string, leaseId: string, options: LeaseRequestOptions, callback: ErrorOrResult<LeaseResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: leaseId
      type:
      - string
      description: Идентификатор аренды. Должен быть GUID.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения об аренде.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob
  name: resizePageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет размер страничного BLOB-объекта.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: size
      type:
      - number
      description: Размер страничного BLOB-объекта, в байтах.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.resizePageBlob_1
  name: resizePageBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Изменяет размер страничного BLOB-объекта.
  syntax:
    content: 'function resizePageBlob(container: string, blob: string, size: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: size
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata
  name: setBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного большого двоичного объекта или моментального снимка в виде одну или несколько пар имя значение, не изменяйте и возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobMetadata_1
  name: setBlobMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные для указанного большого двоичного объекта или моментального снимка в виде одну или несколько пар имя значение, не изменяйте и возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function setBlobMetadata(container: string, blob: string, metadata: Map<string>, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties_1
  name: setBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает определяемые пользователем свойства для указанного большого двоичного объекта или моментального снимка.

    Не изменять и не возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, optionsOrCallback: SetBlobPropertiesRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobProperties
  name: setBlobProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Очищает определяемые пользователем свойства для указанного большого двоичного объекта или моментального снимка.

    Не изменять и не возвращает содержимое большого двоичного объекта.
  syntax:
    content: 'function setBlobProperties(container: string, blob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier_1
  name: setBlobTier
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает уровень blockblob под учетной записью копий (lrs) хранилища BLOB-объектов или на уровне pageblob под учетной записью хранения уровня "премиум".
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: blobTier
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setBlobTier
  name: setBlobTier
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает уровень blockblob под учетной записью копий (lrs) хранилища BLOB-объектов или на уровне pageblob под учетной записью хранения уровня "премиум".
  syntax:
    content: 'function setBlobTier(container: string, blob: string, blobTier: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: blobTier
      type:
      - string
      description: Дополнительные сведения см. BlobUtilities.BlobTier.StandardBlobTier или BlobUtilities.BlobTier.PremiumPageBlobTier возможные значения.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl
  name: setContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список управления Доступом контейнера.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: [key: string]: AccessPolicy, options: ContainerAclOptions, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: Параметры ACL контейнера. См. в разделе `[AccessPolicy](xref:AccessPolicy)` подробные сведения.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для контейнера.
                                                                                    `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerAcl_1
  name: setContainerAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список управления Доступом контейнера.
  syntax:
    content: 'function setContainerAcl(container: string, signedIdentifiers: [key: string]: AccessPolicy, callback: ErrorOrResult<ContainerAclResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata
  name: setContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Задает метаданные контейнера.

    Вызов операции задать метаданные контейнера перезаписывает все существующие метаданные, связанные с контейнером.

    Это не позволяет изменить пару отдельное имя/значение.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setContainerMetadata_1
  name: setContainerMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Задает метаданные контейнера.

    Вызов операции задать метаданные контейнера перезаписывает все существующие метаданные, связанные с контейнером.

    Это не позволяет изменить пару отдельное имя/значение.
  syntax:
    content: 'function setContainerMetadata(container: string, metadata: Map<string>, options: ContainerOptions, callback: ErrorOrResult<ContainerResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: metadata
      type:
      - azure-storage.Map<string>
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber
  name: setPageBlobSequenceNumber
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает порядковый номер большого двоичного объекта страницы.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, options: BlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: sequenceNumberAction
      type:
      - string
      description: >-
        Значение, указывающее операцию для выполнения с порядковым номером.

        Допустимые значения определяются в azure. BlobUtilities.SequenceNumberAction.
    - id: sequenceNumber
      type:
      - number
      description: >-
        Порядковый номер.  Значение порядкового номера должно быть в диапазоне от 0 до 2 ^ 63-1.

        Присвойте этому параметру значение null, если эта операция является действие инкремента.
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о больших двоичных объектов.
                                                                                  `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setPageBlobSequenceNumber_1
  name: setPageBlobSequenceNumber
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает порядковый номер большого двоичного объекта страницы.
  syntax:
    content: 'function setPageBlobSequenceNumber(container: string, blob: string, sequenceNumberAction: string, sequenceNumber: number, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: sequenceNumberAction
      type:
      - string
      description: ''
    - id: sequenceNumber
      type:
      - number
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties_1
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы BLOB-объектов учетной записи хранения, включая аналитику хранилища Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.

    При задании свойств службы BLOB-объектов (например, включение обратимого удаления), может занять до 30 секунд, в силу.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.setServiceProperties
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы BLOB-объектов учетной записи хранения, включая аналитику хранилища Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.

    При задании свойств службы BLOB-объектов (например, включение обратимого удаления), может занять до 30 секунд, в силу.
  syntax:
    content: 'function setServiceProperties(serviceProperties: BlobServiceProperties, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
      description: Свойства службы.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.singleBlobPutThresholdInBytes
  name: singleBlobPutThresholdInBytes
  fullName: singleBlobPutThresholdInBytes
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'singleBlobPutThresholdInBytes: number'
    return:
      type:
      - number
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SpeedSummary
  name: SpeedSummary
  fullName: SpeedSummary
  children: []
  langs:
  - typeScript
  type: property
  summary: Обратный вызов для {BlobService ~ getBlobToText}.
  syntax:
    content: 'static SpeedSummary: SpeedSummary'
    return:
      type:
      - azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob
  name: startCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Начинает копировать BLOB-объекта или файла хранилища Azure в BLOB-объект назначения.

    Для асинхронного копирования (по умолчанию) эта операция возвращает объект, включая идентификатор копии, который можно использовать для проверки или аварийного завершения операции копирования. Служба BLOB-объектов копирует большие двоичные объекты на основе результативности.

    Исходного большого двоичного объекта для операции асинхронного копирования может быть большой двоичный объект, добавочный большой двоичный объект, большой двоичный объект страницы или файла хранилища Azure.


    Ссылаться на https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob для получения дополнительных сведений.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, options: CopyBlobRequestOptions, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: Исходный URI большого двоичного объекта.
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные больших двоичных объектов.
                                                                              `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.startCopyBlob_1
  name: startCopyBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Начинает копировать BLOB-объекта или файла хранилища Azure в BLOB-объект назначения.

    Для асинхронного копирования (по умолчанию) эта операция возвращает объект, включая идентификатор копии, который можно использовать для проверки или аварийного завершения операции копирования. Служба BLOB-объектов копирует большие двоичные объекты на основе результативности.

    Исходного большого двоичного объекта для операции асинхронного копирования может быть большой двоичный объект, добавочный большой двоичный объект, большой двоичный объект страницы или файла хранилища Azure.


    Ссылаться на https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob для получения дополнительных сведений.
  syntax:
    content: 'function startCopyBlob(sourceUri: string, targetcontainer: string, targetblob: string, callback: ErrorOrResult<BlobResult>)'
    parameters:
    - id: sourceUri
      type:
      - string
      description: ''
    - id: targetcontainer
      type:
      - string
      description: ''
    - id: targetblob
      type:
      - string
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob
  name: undeleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Операции отмены удаления большого двоичного объекта восстанавливает содержимого и метаданных обратимо удаленного большого двоичного объекта или моментального снимка.

    Отмена удаления большого двоичного объекта или моментального снимка, который не обратимо удаленные будет выполнена успешно без изменений.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: Имя контейнера.
    - id: blob
      type:
      - string
      description: Имя большого двоичного объекта.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.undeleteBlob_1
  name: undeleteBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Операции отмены удаления большого двоичного объекта восстанавливает содержимого и метаданных обратимо удаленного большого двоичного объекта или моментального снимка.

    Отмена удаления большого двоичного объекта или моментального снимка, который не обратимо удаленные будет выполнена успешно без изменений.
  syntax:
    content: 'function undeleteBlob(container: string, blob: string, options: ConditionalRequestOption, callback: ErrorOrResponse)'
    parameters:
    - id: container
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
    - id: options
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: ''
  package: azure-storage
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.withFilter
  name: withFilter
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Операция фильтрации свяжите с этой BlobService. К операциям фильтрации могут относиться ведение журнала, автоматический повтор и т. д. Фильтр операции являются объектами, реализующими метод с сигнатурой: «функция дескриптор (requestOptions, далее)».


    Выполнив предварительную обработку параметров запроса, метод должен вызвать «next», передавая обратный вызов со следующей сигнатурой: подпись:

        "function (returnObject, finalCallback, next)"

    В этой функции обратного вызова и после обработки returnObject (ответ на запрос к серверу) функция обратного вызова должна либо вызвать "next", если он существует, чтобы продолжить обработку других фильтров, либо в противном случае просто вызвать "finalCallback" для завершения обращения к службе.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.blob.blobservice.BlobService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
  spec.typeScript:
  - name: '[key: string]: '
    fullName: '[key: string]: '
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<Object>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <Object>
    fullName: <Object>
- uid: azure-storage.azurestorage.services.table.TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
