### YamlMime:UniversalReference
ms.openlocfilehash: c524d346bcc2bc896dea71c76ff1e3493960a261
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41687263"
items:
- uid: azure-storage.azurestorage.services.queue.QueueService
  name: QueueService
  fullName: QueueService
  children:
  - azure-storage.azurestorage.services.queue.QueueService.clearMessages
  - azure-storage.azurestorage.services.queue.QueueService.clearMessages_1
  - azure-storage.azurestorage.services.queue.QueueService.createMessage_1
  - azure-storage.azurestorage.services.queue.QueueService.createMessage
  - azure-storage.azurestorage.services.queue.QueueService.createQueue_1
  - azure-storage.azurestorage.services.queue.QueueService.createQueue
  - azure-storage.azurestorage.services.queue.QueueService.createQueueIfNotExists_1
  - azure-storage.azurestorage.services.queue.QueueService.createQueueIfNotExists
  - azure-storage.azurestorage.services.queue.QueueService.deleteMessage_1
  - azure-storage.azurestorage.services.queue.QueueService.deleteMessage
  - azure-storage.azurestorage.services.queue.QueueService.deleteQueue
  - azure-storage.azurestorage.services.queue.QueueService.deleteQueue_1
  - azure-storage.azurestorage.services.queue.QueueService.deleteQueueIfExists
  - azure-storage.azurestorage.services.queue.QueueService.deleteQueueIfExists_1
  - azure-storage.azurestorage.services.queue.QueueService.doesQueueExist
  - azure-storage.azurestorage.services.queue.QueueService.doesQueueExist_1
  - azure-storage.azurestorage.services.queue.QueueService.generateSharedAccessSignature
  - azure-storage.azurestorage.services.queue.QueueService.generateSharedAccessSignatureWithVersion
  - azure-storage.azurestorage.services.queue.QueueService.getMessage_1
  - azure-storage.azurestorage.services.queue.QueueService.getMessage
  - azure-storage.azurestorage.services.queue.QueueService.getMessages
  - azure-storage.azurestorage.services.queue.QueueService.getMessages_1
  - azure-storage.azurestorage.services.queue.QueueService.getQueueAcl_1
  - azure-storage.azurestorage.services.queue.QueueService.getQueueAcl
  - azure-storage.azurestorage.services.queue.QueueService.getQueueMetadata_1
  - azure-storage.azurestorage.services.queue.QueueService.getQueueMetadata
  - azure-storage.azurestorage.services.queue.QueueService.getServiceProperties_1
  - azure-storage.azurestorage.services.queue.QueueService.getServiceProperties
  - azure-storage.azurestorage.services.queue.QueueService.getServiceStats
  - azure-storage.azurestorage.services.queue.QueueService.getServiceStats_1
  - azure-storage.azurestorage.services.queue.QueueService.getUrl
  - azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmented
  - azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmented_1
  - azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmentedWithPrefix_1
  - azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmentedWithPrefix
  - azure-storage.azurestorage.services.queue.QueueService.messageEncoder
  - azure-storage.azurestorage.services.queue.QueueService.peekMessage
  - azure-storage.azurestorage.services.queue.QueueService.peekMessage_1
  - azure-storage.azurestorage.services.queue.QueueService.peekMessages
  - azure-storage.azurestorage.services.queue.QueueService.peekMessages_1
  - azure-storage.azurestorage.services.queue.QueueService.constructor
  - azure-storage.azurestorage.services.queue.QueueService.setQueueAcl_1
  - azure-storage.azurestorage.services.queue.QueueService.setQueueAcl
  - azure-storage.azurestorage.services.queue.QueueService.setQueueMetadata
  - azure-storage.azurestorage.services.queue.QueueService.setQueueMetadata_1
  - azure-storage.azurestorage.services.queue.QueueService.setServiceProperties
  - azure-storage.azurestorage.services.queue.QueueService.setServiceProperties_1
  - azure-storage.azurestorage.services.queue.QueueService.updateMessage
  - azure-storage.azurestorage.services.queue.QueueService.updateMessage_1
  - azure-storage.azurestorage.services.queue.QueueService.withFilter
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.clearMessages
  name: clearMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет все сообщения из очереди.
  syntax:
    content: 'function clearMessages(queue: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.clearMessages_1
  name: clearMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет все сообщения из очереди.
  syntax:
    content: 'function clearMessages(queue: string, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createMessage_1
  name: createMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет новое сообщение в конец очереди сообщений.

    Закодированное сообщение может быть до 64 КБ в версиях 2011-08-18 и более поздних и до 8 КБ в более ранних версиях.

    Без кодировки сообщения должны быть в формате, который может быть включено в запрос XML с кодировкой UTF-8.

    Сообщений в очереди, шифруются по умолчанию. См. в разделе queueService.messageEncoder задать кодировку по умолчанию —.
  syntax:
    content: 'function createMessage(queue: string, messageText: string | Buffer, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageText
      type:
      - string | Buffer
      description: Текст сообщения.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createMessage
  name: createMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Добавляет новое сообщение в конец очереди сообщений.

    Закодированное сообщение может быть до 64 КБ в версиях 2011-08-18 и более поздних и до 8 КБ в более ранних версиях.

    Без кодировки сообщения должны быть в формате, который может быть включено в запрос XML с кодировкой UTF-8.

    Сообщений в очереди, шифруются по умолчанию. См. в разделе queueService.messageEncoder задать кодировку по умолчанию —.
  syntax:
    content: 'function createMessage(queue: string, messageText: string | Buffer, options: CreateMessageRequestOptions, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageText
      type:
      - string | Buffer
      description: Текст сообщения.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `[result](xref:QueueMessageResult)` содержит сообщение.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createQueue_1
  name: createQueue
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую очередь в данной учетной записи.
  syntax:
    content: 'function createQueue(queue: string, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createQueue
  name: createQueue
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую очередь в данной учетной записи.
  syntax:
    content: 'function createQueue(queue: string, optionsOrCallback: CreateQueueRequestOptions, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createQueueIfNotExists_1
  name: createQueueIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую очередь в данной учетной записи, если он не существует.
  syntax:
    content: 'function createQueueIfNotExists(queue: string, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет иметь значение true, если очередь создан с помощью этой операции и значение false, если это не так, и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.createQueueIfNotExists
  name: createQueueIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новую очередь в данной учетной записи, если он не существует.
  syntax:
    content: 'function createQueueIfNotExists(queue: string, optionsOrCallback: CreateQueueRequestOptions, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: optionsOrCallback
      type:
      - azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет иметь значение true, если очередь создан с помощью этой операции и значение false, если это не так, и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteMessage_1
  name: deleteMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет указанное сообщение из очереди.
  syntax:
    content: 'function deleteMessage(queue: string, messageId: string, popReceipt: string, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageId
      type:
      - string
      description: Идентификатор сообщения, сообщения для удаления.
    - id: popReceipt
      type:
      - string
      description: Действительное подтверждение — значение, возвращаемое из предыдущего вызова операции получения сообщений или сообщение об обновлении
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteMessage
  name: deleteMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет указанное сообщение из очереди.
  syntax:
    content: 'function deleteMessage(queue: string, messageId: string, popReceipt: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageId
      type:
      - string
      description: Идентификатор сообщения, сообщения для удаления.
    - id: popReceipt
      type:
      - string
      description: Действительное подтверждение — значение, возвращаемое из предыдущего вызова операции получения сообщений или сообщение об обновлении
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteQueue
  name: deleteQueue
  children: []
  type: method
  langs:
  - typeScript
  summary: Окончательно удаляет указанную очередь.
  syntax:
    content: 'function deleteQueue(queue: string, options: RequestOptions, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteQueue_1
  name: deleteQueue
  children: []
  type: method
  langs:
  - typeScript
  summary: Окончательно удаляет указанную очередь.
  syntax:
    content: 'function deleteQueue(queue: string, callback: ErrorOrResponse)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteQueueIfExists
  name: deleteQueueIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Окончательно удаляет указанную очередь, если он существует.
  syntax:
    content: 'function deleteQueueIfExists(queue: string, options: RequestOptions, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать «true», если очередь была deleted и «false», если очередь не существовала.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.deleteQueueIfExists_1
  name: deleteQueueIfExists
  children: []
  type: method
  langs:
  - typeScript
  summary: Окончательно удаляет указанную очередь, если он существует.
  syntax:
    content: 'function deleteQueueIfExists(queue: string, callback: ErrorOrResult<boolean>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<boolean>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать «true», если очередь была deleted и «false», если очередь не существовала.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.doesQueueExist
  name: doesQueueExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли очередь.
  syntax:
    content: 'function doesQueueExist(queue: string, options: RequestOptions, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` значение true, если очередь существует и значение false, если не будет, и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.doesQueueExist_1
  name: doesQueueExist
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, существует ли очередь.
  syntax:
    content: 'function doesQueueExist(queue: string, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` значение true, если очередь существует и значение false, если не будет, и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.generateSharedAccessSignature
  name: generateSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignature(queue: string, sharedAccessPolicy: SharedAccessPolicy)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.generateSharedAccessSignatureWithVersion
  name: generateSharedAccessSignatureWithVersion
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает токен подписи общего доступа.
  syntax:
    content: 'function generateSharedAccessSignatureWithVersion(queue: string, sharedAccessPolicy: SharedAccessPolicy, sasVersion: string)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: sharedAccessPolicy
      type:
      - azure-storage.azurestorage.common.SharedAccessPolicy
      description: Политика общего доступа.
    - id: sasVersion
      type:
      - string
      description: ''
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getMessage_1
  name: getMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает сообщение из очереди и делает его невидимым для других потребителей.
  syntax:
    content: 'function getMessage(queue: string, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` содержит сообщение.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getMessage
  name: getMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Извлекает сообщение из очереди и делает его невидимым для других потребителей.
  syntax:
    content: 'function getMessage(queue: string, options: GetMessageRequestOptions, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` содержит сообщение.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getMessages
  name: getMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщения из очереди и делает их невидимым для других потребителей.
  syntax:
    content: 'function getMessages(queue: string, options: GetMessagesRequestOptions, callback?: ErrorOrResult<QueueMessageResult[]>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getMessages_1
  name: getMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщения из очереди и делает их невидимым для других потребителей.
  syntax:
    content: 'function getMessages(queue: string, callback?: ErrorOrResult<QueueMessageResult[]>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getQueueAcl_1
  name: getQueueAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL очереди.
  syntax:
    content: 'function getQueueAcl(queue: string, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для очереди.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getQueueAcl
  name: getQueueAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает список ACL очереди.
  syntax:
    content: 'function getQueueAcl(queue: string, options: RequestOptions, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для очереди.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getQueueMetadata_1
  name: getQueueMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства очереди, включая определяемые пользователем метаданные.
  syntax:
    content: 'function getQueueMetadata(queue: string, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getQueueMetadata
  name: getQueueMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства очереди, включая определяемые пользователем метаданные.
  syntax:
    content: 'function getQueueMetadata(queue: string, options: RequestOptions, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getServiceProperties_1
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства службы очередей учетной записи хранения, включая аналитику хранилища Microsoft Azure.
  syntax:
    content: 'function getServiceProperties(callback?: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getServiceProperties
  name: getServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства службы очередей учетной записи хранения, включая аналитику хранилища Microsoft Azure.
  syntax:
    content: 'function getServiceProperties(options: RequestOptions, callback?: ErrorOrResult<ServiceProperties>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `errorOrResult` будет содержать свойства и `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getServiceStats
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику службы для службы очередей учетной записи хранения.
  syntax:
    content: 'function getServiceStats(options: RequestOptions, callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать статистику и `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getServiceStats_1
  name: getServiceStats
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает статистику службы для службы очередей учетной записи хранения.
  syntax:
    content: 'function getServiceStats(callback: ErrorOrResult<ServiceStats>)'
    parameters:
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать статистику и `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.getUrl
  name: getUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getUrl(queue: string, sasToken?: string, primary?: boolean)'
    parameters:
    - id: queue
      type:
      - string
      description: ''
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: primary
      type:
      - boolean
      description: ''
      optional: true
    return:
      type:
      - string
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmented
  name: listQueuesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов очереди, имена которых начинаются с указанного префикса под данной учетной записи.
  syntax:
    content: 'function listQueuesSegmented(currentToken: ContinuationToken, options: ListQueuesRequestOptions, callback: ErrorOrResult<ListQueueResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список очередей и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmented_1
  name: listQueuesSegmented
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов очереди, имена которых начинаются с указанного префикса под данной учетной записи.
  syntax:
    content: 'function listQueuesSegmented(currentToken: ContinuationToken, callback: ErrorOrResult<ListQueueResult>)'
    parameters:
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первая операция.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список очередей и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmentedWithPrefix_1
  name: listQueuesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов очереди под данной учетной записи.
  syntax:
    content: 'function listQueuesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, callback: ErrorOrResult<ListQueueResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: Префикс имени очереди.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первый operation.*
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список очередей и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.listQueuesSegmentedWithPrefix
  name: listQueuesSegmentedWithPrefix
  children: []
  type: method
  langs:
  - typeScript
  summary: Список сегмент, содержащий коллекцию элементов очереди под данной учетной записи.
  syntax:
    content: 'function listQueuesSegmentedWithPrefix(prefix: string, currentToken: ContinuationToken, options: ListQueuesRequestOptions, callback: ErrorOrResult<ListQueueResult>)'
    parameters:
    - id: prefix
      type:
      - string
      description: Префикс имени очереди.
    - id: currentToken
      type:
      - azure-storage.azurestorage.common.ContinuationToken
      description: Маркер продолжения, возвращенный предыдущей операцией получения листинга. Используйте «null» или «undefined», если это первый operation.*
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать `entries` и `continuationToken`.
                                                                                `entries`  предоставляет список очередей и `continuationToken` используется для следующей операции перечисления.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.messageEncoder
  name: messageEncoder
  fullName: messageEncoder
  children: []
  langs:
  - typeScript
  type: property
  summary: '{значение типа boolean} QueueService #queueMessagEncoder'
  syntax:
    content: 'messageEncoder: QueueMessageEncoder'
    return:
      type:
      - azure-storage.azurestorage.services.queue.QueueMessageEncoder
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.peekMessage
  name: peekMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщение из начала очереди, не меняя его видимость.
  syntax:
    content: 'function peekMessage(queue: string, options: RequestOptions, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` содержит сообщение.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.peekMessage_1
  name: peekMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщение из начала очереди, не меняя его видимость.
  syntax:
    content: 'function peekMessage(queue: string, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` содержит сообщение.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.peekMessages
  name: peekMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщения из очереди, не изменяя видимость сообщения.
  syntax:
    content: 'function peekMessages(queue: string, options: PeekMessagesRequestOptions, callback?: ErrorOrResult<QueueMessageResult[]>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.peekMessages_1
  name: peekMessages
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает сообщения из очереди, не изменяя видимость сообщения.
  syntax:
    content: 'function peekMessages(queue: string, callback?: ErrorOrResult<QueueMessageResult[]>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.constructor
  name: QueueService
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >-
    Создает новый объект QueueService.

    Класс QueueService используется для выполнения операций в службе очередей Microsoft Azure.


    Дополнительные сведения об использовании службы очередей, а также как задачи Дополнительные сведения об использовании его из приложения Node.js, см. в разделе [Практическое использование службы очередей из Node.js](http://azure.microsoft.com/en-us/documentation/articles/storage-nodejs-how-to-use-queues/).

    Можно задать следующие значения по умолчанию в службе очередей.

    messageEncoder кодировщик сообщений, чтобы указать, каким образом QueueService кодирует и декодирует сообщения очереди. Значение по умолчанию — `[TextXmlQueueMessageEncoder](xref:TextXmlQueueMessageEncoder)`.

    defaultTimeoutIntervalInMs интервал времени ожидания по умолчанию, в миллисекундах, используемый для запроса, выполненного с помощью службы очередей.

    defaultClientRequestTimeoutInMs время ожидания по умолчанию для запросов клиента, в миллисекундах, используемый для запроса, выполненного с помощью службы очередей.

    defaultMaximumExecutionTimeInMs максимальное время выполнения по умолчанию для всех потенциальных попыток для запросов, выполненных с помощью службы очередей.

    defaultLocationMode режима расположения по умолчанию для запросов, выполненных с помощью службы очередей.

    useNagleAlgorithm определяет, используется ли алгоритм Nagle для запросов, выполненных с помощью службы очередей; значение true для использования алгоритма Nagle; в противном случае — значение false. По умолчанию для этого параметра используется значение false.

    enableGlobalHttpAgent определяет, включена ли глобального агента HTTP (s); значение true, чтобы использовать агент глобального HTTP (s); в противном случае — значение false, чтобы использовать HTTP (s). Agent({keepAlive:true}).

    Если нет строки подключения или учетная запись хранения и storageaccesskey, будет использоваться в переменных среды AZURE_STORAGE_CONNECTION_STRING или AZURE_STORAGE_ACCOUNT и AZURE_STORAGE_ACCESS_KEY.
  syntax:
    content: 'new QueueService(storageAccountOrConnectionString?: string, storageAccessKey?: string, host?: string | StorageHost, sasToken?: string, endpointSuffix?: string)'
    parameters:
    - id: storageAccountOrConnectionString
      type:
      - string
      description: ''
      optional: true
    - id: storageAccessKey
      type:
      - string
      description: ''
      optional: true
    - id: host
      type:
      - string | azure-storage.azurestorage.StorageHost
      description: ''
      optional: true
    - id: sasToken
      type:
      - string
      description: ''
      optional: true
    - id: endpointSuffix
      type:
      - string
      description: ''
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setQueueAcl_1
  name: setQueueAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список управления Доступом очереди.
  syntax:
    content: 'function setQueueAcl(queue: string, signedIdentifiers: [key: string]: AccessPolicy, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: Идентификаторы со знаком. Со знаком идентификаторы должны быть в массиве.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для очереди.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setQueueAcl
  name: setQueueAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет список управления Доступом очереди.
  syntax:
    content: 'function setQueueAcl(queue: string, signedIdentifiers: [key: string]: AccessPolicy, options: RequestOptions, callback?: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: signedIdentifiers
      type:
      - '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
      description: Идентификаторы со знаком. Со знаком идентификаторы должны быть в массиве.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >-
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать информацию для очереди.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setQueueMetadata
  name: setQueueMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные в указанной очереди. Метаданные связаны с очередью в виде пар "имя значение".
  syntax:
    content: 'function setQueueMetadata(queue: string, metadata: [key: string]: string, options: RequestOptions, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: metadata
      type:
      - '[key: string]: string'
      description: Пары ключ/значение метаданных.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setQueueMetadata_1
  name: setQueueMetadata
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает определяемые пользователем метаданные в указанной очереди. Метаданные связаны с очередью в виде пар "имя значение".
  syntax:
    content: 'function setQueueMetadata(queue: string, metadata: [key: string]: string, callback: ErrorOrResult<QueueResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: metadata
      type:
      - '[key: string]: string'
      description: Пары ключ/значение метаданных.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать данные об очередях.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setServiceProperties
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы очередей учетной записи хранения, включая аналитику хранилища Microsoft Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, options: RequestOptions, callback?: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: Свойства службы.
    - id: options
      type:
      - azure-storage.azurestorage.common.RequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.setServiceProperties_1
  name: setServiceProperties
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Задает свойства службы очередей учетной записи хранения, включая аналитику хранилища Microsoft Azure.

    Кроме того, эту операцию можно использовать для задания версии запроса по умолчанию для всех входящих запросов, которые не указана версия.
  syntax:
    content: 'function setServiceProperties(serviceProperties: ServiceProperties, callback?: ErrorOrResponse)'
    parameters:
    - id: serviceProperties
      type:
      - azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
      description: Свойства службы.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResponse
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.updateMessage
  name: updateMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Обновляет время ожидания видимости сообщения. Кроме того, эту операцию можно использовать для обновления содержимого сообщения.

    Сообщение должно быть в формате, который может быть включено в запрос XML с кодировкой UTF-8 и закодированное сообщение может быть размером до 64 КБ.
  syntax:
    content: 'function updateMessage(queue: string, messageId: string, popReceipt: string, visibilityTimeout: number, options: UpdateMessageRequestOptions, callback: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageId
      type:
      - string
      description: Идентификатор сообщения, сообщения для обновления.
    - id: popReceipt
      type:
      - string
      description: Действительное подтверждение — значение, возвращаемое из предыдущего вызова операции получения сообщений или сообщение об обновлении
    - id: visibilityTimeout
      type:
      - number
      description: Указывает новое значение времени ожидания видимости, в секундах, отсчитываемое относительно времени сервера. Новое значение должно быть больше или равно 0 и не может превышать 7 дней. Время ожидания видимости сообщения можно присвоить значение позже времени окончания срока действия.
    - id: options
      type:
      - azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
      description: ''
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о результате сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.updateMessage_1
  name: updateMessage
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Обновляет время ожидания видимости сообщения. Кроме того, эту операцию можно использовать для обновления содержимого сообщения.

    Сообщение должно быть в формате, который может быть включено в запрос XML с кодировкой UTF-8 и закодированное сообщение может быть размером до 64 КБ.
  syntax:
    content: 'function updateMessage(queue: string, messageId: string, popReceipt: string, visibilityTimeout: number, callback?: ErrorOrResult<QueueMessageResult>)'
    parameters:
    - id: queue
      type:
      - string
      description: Имя очереди.
    - id: messageId
      type:
      - string
      description: Идентификатор сообщения, сообщения для обновления.
    - id: popReceipt
      type:
      - string
      description: Действительное подтверждение — значение, возвращаемое из предыдущего вызова операции получения сообщений или сообщение об обновлении
    - id: visibilityTimeout
      type:
      - number
      description: Указывает новое значение времени ожидания видимости, в секундах, отсчитываемое относительно времени сервера. Новое значение должно быть больше или равно 0 и не может превышать 7 дней. Время ожидания видимости сообщения можно присвоить значение позже времени окончания срока действия.
    - id: callback
      type:
      - azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
      description: >
        `error` будет содержать сведения, если произошла ошибка; в противном случае `result` будет содержать сведения о результате сообщения.
                                                                                `response` будет содержать сведения, относящиеся к этой операции.
      optional: true
  package: azure-storage
- uid: azure-storage.azurestorage.services.queue.QueueService.withFilter
  name: withFilter
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Операция фильтрации свяжите с этой QueueService. К операциям фильтрации могут относиться ведение журнала, автоматический повтор и т. д. Фильтр операции являются объектами, реализующими метод с сигнатурой: «функция дескриптор (requestOptions, далее)».


    Выполнив предварительную обработку параметров запроса, метод должен вызвать «next», передавая обратный вызов со следующей сигнатурой: подпись:

        "function (returnObject, finalCallback, next)"

    В этой функции обратного вызова и после обработки returnObject (ответ на запрос к серверу) функция обратного вызова должна либо вызвать "next", если он существует, чтобы продолжить обработку других фильтров, либо в противном случае просто вызвать "finalCallback" для завершения обращения к службе.
  syntax:
    content: 'function withFilter(newFilter: IFilter)'
    parameters:
    - id: newFilter
      type:
      - azure-storage.azurestorage.common.filters.IFilter
      description: ''
    return:
      type:
      - azure-storage.azurestorage.services.queue.QueueService
  package: azure-storage
references:
- uid: azure-storage.azurestorage.common.RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: azure-storage.azurestorage.common.RequestOptions
- uid: azure-storage.azurestorage.common.filters.Next
  spec.typeScript:
  - name: Next
    fullName: Next
    uid: azure-storage.azurestorage.common.filters.Next
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
  spec.typeScript:
  - name: IRetryRequestOptions
    fullName: IRetryRequestOptions
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryRequestOptions
- uid: azure-storage.azurestorage.common.filters.IFilter
  spec.typeScript:
  - name: IFilter
    fullName: IFilter
    uid: azure-storage.azurestorage.common.filters.IFilter
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
  spec.typeScript:
  - name: IRetryContext
    fullName: IRetryContext
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter.IRetryContext
- uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
  spec.typeScript:
  - name: RetryPolicyFilter
    fullName: RetryPolicyFilter
    uid: azure-storage.azurestorage.common.filters.retrypolicyfilter.RetryPolicyFilter
- uid: azure-storage.Map<any>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <any>
    fullName: <any>
- uid: azure-storage.Map<string>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.common.http.webresource.WebResource
  spec.typeScript:
  - name: WebResource
    fullName: WebResource
    uid: azure-storage.azurestorage.common.http.webresource.WebResource
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  spec.typeScript:
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
  spec.typeScript:
  - name: StaticWebsiteProperties
    fullName: StaticWebsiteProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.StaticWebsiteProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
  spec.typeScript:
  - name: RetentionPolicy
    fullName: RetentionPolicy
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.RetentionPolicy
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
  spec.typeScript:
  - name: DeleteRetentionPolicyProperties
    fullName: DeleteRetentionPolicyProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.DeleteRetentionPolicyProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
  spec.typeScript:
  - name: MetricsProperties
    fullName: MetricsProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.MetricsProperties
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
  spec.typeScript:
  - name: LoggingProperties
    fullName: LoggingProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.LoggingProperties
- uid: azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
  spec.typeScript:
  - name: LocationMode
    fullName: LocationMode
    uid: azure-storage.azurestorage.common.util.storageutilities.LocationMode
- uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
  spec.typeScript:
  - name: Logger
    fullName: Logger
    uid: azure-storage.azurestorage.common.diagnostics.logger.Logger
- uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
  spec.typeScript:
  - name: Proxy
    fullName: Proxy
    uid: azure-storage.azurestorage.common.services.storageserviceclient.Proxy
- uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
  spec.typeScript:
  - name: StorageServiceClient
    fullName: StorageServiceClient
    uid: azure-storage.azurestorage.common.services.storageserviceclient.StorageServiceClient
- uid: azure-storage.azurestorage.AccessConditions
  spec.typeScript:
  - name: AccessConditions
    fullName: AccessConditions
    uid: azure-storage.azurestorage.AccessConditions
- uid: azure-storage.azurestorage.common.AccessPolicy
  spec.typeScript:
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
  spec.typeScript:
  - name: LeaseRequestOptions
    fullName: LeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
  spec.typeScript:
  - name: ConditionalRequestOption
    fullName: ConditionalRequestOption
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ConditionalRequestOption
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block[]
  spec.typeScript:
  - name: Block
    fullName: Block
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.Block
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
  spec.typeScript:
  - name: ContainerOptions
    fullName: ContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
- uid: '[key: string]: azure-storage.azurestorage.common.AccessPolicy'
  spec.typeScript:
  - name: '[key: string]: '
    fullName: '[key: string]: '
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
  spec.typeScript:
  - name: BlobRequestOptions
    fullName: BlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobRequestOptions
- uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
  spec.typeScript:
  - name: SpeedSummary
    fullName: SpeedSummary
    uid: azure-storage.azurestorage.common.streams.speedsummary.SpeedSummary
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
  spec.typeScript:
  - name: CreateBlobRequestOptions
    fullName: CreateBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlobRequestOptions
- uid: azure-storage.azurestorage.common.ContinuationToken
  spec.typeScript:
  - name: ContinuationToken
    fullName: ContinuationToken
    uid: azure-storage.azurestorage.common.ContinuationToken
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult[]
  spec.typeScript:
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult[]
  spec.typeScript:
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '[]'
    fullName: '[]'
- uid: string | azure-storage.azurestorage.StorageHost
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: StorageHost
    fullName: StorageHost
    uid: azure-storage.azurestorage.StorageHost
- uid: azure-storage.azurestorage.ErrorOrResponse
  spec.typeScript:
  - name: ErrorOrResponse
    fullName: ErrorOrResponse
    uid: azure-storage.azurestorage.ErrorOrResponse
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: LeaseResult
    fullName: LeaseResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.LeaseResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
  spec.typeScript:
  - name: AcquireLeaseRequestOptions
    fullName: AcquireLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AcquireLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
  spec.typeScript:
  - name: AppendBlobRequestOptions
    fullName: AppendBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.AppendBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobResult
    fullName: BlobResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
  spec.typeScript:
  - name: BreakLeaseRequestOptions
    fullName: BreakLeaseRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BreakLeaseRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
  spec.typeScript:
  - name: PutBlockListRequest
    fullName: PutBlockListRequest
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.PutBlockListRequest
- uid: azure-storage.azurestorage.ErrorOrResult<string>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
  spec.typeScript:
  - name: CreateBlockBlobRequestOptions
    fullName: CreateBlockBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
  spec.typeScript:
  - name: CreateBlockRequestOptions
    fullName: CreateBlockRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateBlockRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerResult
    fullName: ContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
  spec.typeScript:
  - name: CreateContainerOptions
    fullName: CreateContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreateContainerOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
  spec.typeScript:
  - name: CreatePageBlobOptions
    fullName: CreatePageBlobOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CreatePageBlobOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
  spec.typeScript:
  - name: GetBlobRequestOptions
    fullName: GetBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.GetBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
  spec.typeScript:
  - name: DeleteBlobRequestOptions
    fullName: DeleteBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.DeleteBlobRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<boolean>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.common.SharedAccessPolicy
  spec.typeScript:
  - name: SharedAccessPolicy
    fullName: SharedAccessPolicy
    uid: azure-storage.azurestorage.common.SharedAccessPolicy
- uid: azure-storage.azurestorage.common.ContentSettingsHeaders
  spec.typeScript:
  - name: ContentSettingsHeaders
    fullName: ContentSettingsHeaders
    uid: azure-storage.azurestorage.common.ContentSettingsHeaders
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.AccountProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: AccountProperties
    fullName: AccountProperties
    uid: azure-storage.azurestorage.common.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
  spec.typeScript:
  - name: BlobToText
    fullName: BlobToText
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlobToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ContainerAclResult
    fullName: ContainerAclResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.RangeDiff[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: RangeDiff
    fullName: RangeDiff
    uid: azure-storage.azurestorage.common.RangeDiff
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServiceStats>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceStats
    fullName: ServiceStats
    uid: azure-storage.azurestorage.common.models.ServiceStats
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListBlobsResult
    fullName: ListBlobsResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
  spec.typeScript:
  - name: ListBlobsSegmentedRequestOptions
    fullName: ListBlobsSegmentedRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListBlobsSegmentedRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BlockListResult
    fullName: BlockListResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.BlockListResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
  spec.typeScript:
  - name: ListContainerOptions
    fullName: ListContainerOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListContainerResult
    fullName: ListContainerResult
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ListContainerResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.Range[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: Range
    fullName: Range
    uid: azure-storage.azurestorage.common.Range
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
  spec.typeScript:
  - name: SetBlobPropertiesRequestOptions
    fullName: SetBlobPropertiesRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.SetBlobPropertiesRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
  spec.typeScript:
  - name: ContainerAclOptions
    fullName: ContainerAclOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.ContainerAclOptions
- uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
  spec.typeScript:
  - name: BlobServiceProperties
    fullName: BlobServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.BlobServiceProperties
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
  spec.typeScript:
  - name: CopyBlobRequestOptions
    fullName: CopyBlobRequestOptions
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService.CopyBlobRequestOptions
- uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
  spec.typeScript:
  - name: BlobService
    fullName: BlobService
    uid: azure-storage.azurestorage.services.blob.blobservice.BlobService
- uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
  spec.typeScript:
  - name: FileServiceOptions
    fullName: FileServiceOptions
    uid: azure-storage.azurestorage.services.file.FileService.FileServiceOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult[]
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  spec.typeScript:
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
- uid: azure-storage.Map<azure-storage.azurestorage.common.AccessPolicy>
  spec.typeScript:
  - name: Map
    fullName: Map
    uid: azure-storage.Map
  - name: <
    fullName: <
  - name: AccessPolicy
    fullName: AccessPolicy
    uid: azure-storage.azurestorage.common.AccessPolicy
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.FileResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: FileResult
    fullName: FileResult
    uid: azure-storage.azurestorage.services.file.FileService.FileResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
  spec.typeScript:
  - name: CreateDirectoryRequestOptions
    fullName: CreateDirectoryRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateDirectoryRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.DirectoryResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: DirectoryResult
    fullName: DirectoryResult
    uid: azure-storage.azurestorage.services.file.FileService.DirectoryResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
  spec.typeScript:
  - name: CreateFileRequestOptions
    fullName: CreateFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
  spec.typeScript:
  - name: CreateRangeRequestOptions
    fullName: CreateRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
  spec.typeScript:
  - name: GetFileRequestOptions
    fullName: GetFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.GetFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
  spec.typeScript:
  - name: CreateShareRequestOptions
    fullName: CreateShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CreateShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareResult
    fullName: ShareResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
  spec.typeScript:
  - name: DeleteShareOptions
    fullName: DeleteShareOptions
    uid: azure-storage.azurestorage.services.file.FileService.DeleteShareOptions
- uid: azure-storage.azurestorage.services.file.FileService.FileToText
  spec.typeScript:
  - name: FileToText
    fullName: FileToText
    uid: azure-storage.azurestorage.services.file.FileService.FileToText
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ServiceProperties
    fullName: ServiceProperties
    uid: azure-storage.azurestorage.common.models.ServicePropertiesResult.ServiceProperties
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ShareAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ShareAclResult
    fullName: ShareAclResult
    uid: azure-storage.azurestorage.services.file.FileService.ShareAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
  spec.typeScript:
  - name: ListRequestOptions
    fullName: ListRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListFilesAndDirectoriesResult
    fullName: ListFilesAndDirectoriesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListFilesAndDirectoriesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
  spec.typeScript:
  - name: ListRangeRequestOptions
    fullName: ListRangeRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListRangeRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
  spec.typeScript:
  - name: ListShareRequestOptions
    fullName: ListShareRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.ListShareRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.file.FileService.ListSharesResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListSharesResult
    fullName: ListSharesResult
    uid: azure-storage.azurestorage.services.file.FileService.ListSharesResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
  spec.typeScript:
  - name: SetFilePropertiesRequestOptions
    fullName: SetFilePropertiesRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.SetFilePropertiesRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
  spec.typeScript:
  - name: ShareProperties
    fullName: ShareProperties
    uid: azure-storage.azurestorage.services.file.FileService.ShareProperties
- uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
  spec.typeScript:
  - name: CopyFileRequestOptions
    fullName: CopyFileRequestOptions
    uid: azure-storage.azurestorage.services.file.FileService.CopyFileRequestOptions
- uid: azure-storage.azurestorage.services.file.FileService
  spec.typeScript:
  - name: FileService
    fullName: FileService
    uid: azure-storage.azurestorage.services.file.FileService
- uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult[]
  spec.typeScript:
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
  spec.typeScript:
  - name: QueueMessageEncoder
    fullName: QueueMessageEncoder
    uid: azure-storage.azurestorage.services.queue.QueueMessageEncoder
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
  spec.typeScript:
  - name: CreateMessageRequestOptions
    fullName: CreateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateMessageRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
  spec.typeScript:
  - name: CreateQueueRequestOptions
    fullName: CreateQueueRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.CreateQueueRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueResult
    fullName: QueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
  spec.typeScript:
  - name: GetMessageRequestOptions
    fullName: GetMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
  spec.typeScript:
  - name: GetMessagesRequestOptions
    fullName: GetMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.GetMessagesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueueMessageResult
    fullName: QueueMessageResult
    uid: azure-storage.azurestorage.services.queue.QueueService.QueueMessageResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
  spec.typeScript:
  - name: ListQueuesRequestOptions
    fullName: ListQueuesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueuesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.queue.QueueService.ListQueueResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListQueueResult
    fullName: ListQueueResult
    uid: azure-storage.azurestorage.services.queue.QueueService.ListQueueResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
  spec.typeScript:
  - name: PeekMessagesRequestOptions
    fullName: PeekMessagesRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.PeekMessagesRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
  spec.typeScript:
  - name: UpdateMessageRequestOptions
    fullName: UpdateMessageRequestOptions
    uid: azure-storage.azurestorage.services.queue.QueueService.UpdateMessageRequestOptions
- uid: azure-storage.azurestorage.services.queue.QueueService
  spec.typeScript:
  - name: QueueService
    fullName: QueueService
    uid: azure-storage.azurestorage.services.queue.QueueService
- uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
  spec.typeScript:
  - name: BatchResponse
    fullName: BatchResponse
    uid: azure-storage.azurestorage.services.table.TableService.BatchResponse
- uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
  spec.typeScript:
  - name: TableEntityRequestOptions
    fullName: TableEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.TableEntityRequestOptions
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
  spec.typeScript:
  - name: ListTablesContinuationToken
    fullName: ListTablesContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
  spec.typeScript:
  - name: TableContinuationToken
    fullName: TableContinuationToken
    uid: azure-storage.azurestorage.services.table.TableService.TableContinuationToken
- uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
  spec.typeScript:
  - name: PropertyResolver
    fullName: PropertyResolver
    uid: azure-storage.azurestorage.services.table.TableService.PropertyResolver
- uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
  spec.typeScript:
  - name: TableAccessPolicy
    fullName: TableAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.TableResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: TableResult
    fullName: TableResult
    uid: azure-storage.azurestorage.services.table.TableService.TableResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableBatch
  spec.typeScript:
  - name: TableBatch
    fullName: TableBatch
    uid: azure-storage.azurestorage.services.table.TableBatch
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.BatchResult[]>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: BatchResult
    fullName: BatchResult
    uid: azure-storage.azurestorage.services.table.TableService.BatchResult
  - name: '[]>'
    fullName: '[]>'
- uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
  spec.typeScript:
  - name: TableSharedAccessPolicy
    fullName: TableSharedAccessPolicy
    uid: azure-storage.azurestorage.services.table.TableService.TableSharedAccessPolicy
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.GetTableAclResult>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: GetTableAclResult
    fullName: GetTableAclResult
    uid: azure-storage.azurestorage.services.table.TableService.GetTableAclResult
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
  spec.typeScript:
  - name: InsertEntityRequestOptions
    fullName: InsertEntityRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.InsertEntityRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<T | azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: '<T | '
    fullName: '<T | '
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.EntityMetadata>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: EntityMetadata
    fullName: EntityMetadata
    uid: azure-storage.azurestorage.services.table.TableService.EntityMetadata
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
  spec.typeScript:
  - name: ListTablesRequestOptions
    fullName: ListTablesRequestOptions
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesRequestOptions
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.ListTablesResponse>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: ListTablesResponse
    fullName: ListTablesResponse
    uid: azure-storage.azurestorage.services.table.TableService.ListTablesResponse
  - name: '>'
    fullName: '>'
- uid: azure-storage.azurestorage.services.table.TableQuery
  spec.typeScript:
  - name: TableQuery
    fullName: TableQuery
    uid: azure-storage.azurestorage.services.table.TableQuery
- uid: azure-storage.azurestorage.ErrorOrResult<azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult<T>>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <
    fullName: <
  - name: QueryEntitiesResult
    fullName: QueryEntitiesResult
    uid: azure-storage.azurestorage.services.table.TableService.QueryEntitiesResult
  - name: <T>>
    fullName: <T>>
- uid: azure-storage.azurestorage.ErrorOrResult<T>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <T>
    fullName: <T>
- uid: azure-storage.azurestorage.ErrorOrResult<Object>
  spec.typeScript:
  - name: ErrorOrResult
    fullName: ErrorOrResult
    uid: azure-storage.azurestorage.ErrorOrResult
  - name: <Object>
    fullName: <Object>
- uid: azure-storage.azurestorage.services.table.TableService
  spec.typeScript:
  - name: TableService
    fullName: TableService
    uid: azure-storage.azurestorage.services.table.TableService
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Buffer>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Buffer>
    fullName: <Buffer>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<boolean>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <boolean>
    fullName: <boolean>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<Date>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <Date>
    fullName: <Date>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<number>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <number>
    fullName: <number>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<any>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <any>
    fullName: <any>
- uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty<string>
  spec.typeScript:
  - name: EntityProperty
    fullName: EntityProperty
    uid: azure-storage.azurestorage.services.table.TableUtilities.entityGenerator.EntityProperty
  - name: <string>
    fullName: <string>
- uid: azure-storage.azurestorage.services.table.TableOperation[]
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
  - name: '[]'
    fullName: '[]'
- uid: azure-storage.azurestorage.services.table.TableOperation
  spec.typeScript:
  - name: TableOperation
    fullName: TableOperation
    uid: azure-storage.azurestorage.services.table.TableOperation
- uid: azure-storage.azurestorage.StorageError | Error
  spec.typeScript:
  - name: StorageError
    fullName: StorageError
    uid: azure-storage.azurestorage.StorageError
  - name: " | Error"
    fullName: " | Error"
- uid: azure-storage.azurestorage.ServiceResponse
  spec.typeScript:
  - name: ServiceResponse
    fullName: ServiceResponse
    uid: azure-storage.azurestorage.ServiceResponse
- uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
  spec.typeScript:
  - name: TokenCredential
    fullName: TokenCredential
    uid: azure-storage.azurestorage.common.models.tokenCredential.TokenCredential
