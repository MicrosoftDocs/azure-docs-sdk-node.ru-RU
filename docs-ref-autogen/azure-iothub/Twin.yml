### YamlMime:UniversalReference
ms.openlocfilehash: c498376468484e0299280e5468ad24cdafd77fdd
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/20/2018
ms.locfileid: "53675013"
items:
- uid: azure-iothub.Twin
  name: Twin
  fullName: Twin
  children:
  - azure-iothub.Twin.deviceId
  - azure-iothub.Twin.etag
  - azure-iothub.Twin.get_1
  - azure-iothub.Twin.get
  - azure-iothub.Twin.moduleId
  - azure-iothub.Twin.properties
  - azure-iothub.Twin.tags
  - azure-iothub.Twin.toJSON
  - azure-iothub.Twin.constructor
  - azure-iothub.Twin.update_1
  - azure-iothub.Twin.update
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="2db57-101">Двойник устройства — документ, описывающий состояние устройства, которое хранится по центру Интернета вещей Azure и доступен, даже если устройство находится в автономном режиме.</span><span class="sxs-lookup"><span data-stu-id="2db57-101">A Device Twin is document describing the state of a device that is stored by an Azure IoT hub and is available even if the device is offline.</span></span>

    <span data-ttu-id="2db57-102">Изначально около 3 разделов:</span><span class="sxs-lookup"><span data-stu-id="2db57-102">It is built around 3 sections:</span></span>
      - <span data-ttu-id="2db57-103">Теги: доступна только на стороне службы пар ключ/значение</span><span class="sxs-lookup"><span data-stu-id="2db57-103">Tags: key/value pairs only accessible from the service side</span></span>
      - <span data-ttu-id="2db57-104">Требуемые свойства: обновлен службы и принятых устройством</span><span class="sxs-lookup"><span data-stu-id="2db57-104">Desired Properties: updated by a service and received by the device</span></span>
      - <span data-ttu-id="2db57-105">Сообщаемые свойства: обновлен на устройстве и полученных службой.</span><span class="sxs-lookup"><span data-stu-id="2db57-105">Reported Properties: updated by the device and received by the service.</span></span>
    <span data-ttu-id="2db57-106">Обратите внимание, что несмотря на то, что это возможно, требуемые и сообщаемые свойства не имеют в соответствии с и что логику для синхронизации этих двух коллекций, при необходимости оставить пользователю пакета SDK.</span><span class="sxs-lookup"><span data-stu-id="2db57-106">Note that although it is a possibility, desired and reported properties do not have to match and that the logic to sync these two collections, if necessary, is left to the user of the SDK.</span></span>


    <span data-ttu-id="2db57-107">Дополнительные сведения см. в разделе [основные сведения о Двойниках устройств](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).</span><span class="sxs-lookup"><span data-stu-id="2db57-107">For more information see [Understanding Device Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).</span></span>


    <span data-ttu-id="2db57-108">Рекомендуемый способ получения <xref:azure-iothub.Twin> для конкретного устройства — использовать <xref:azure-iothub.Registry.getTwin> метод.</span><span class="sxs-lookup"><span data-stu-id="2db57-108">The recommended way to obtain a <xref:azure-iothub.Twin> for a specific device is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.deviceId
  name: deviceId
  fullName: deviceId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2db57-109">Уникальный идентификатор устройства с учетными данными на "двойнике", как оно существует в реестре удостоверений устройств.</span><span class="sxs-lookup"><span data-stu-id="2db57-109">Unique identifier of the device identity associated with the twin, as it exists in the device identity registry.</span></span>
  syntax:
    content: 'deviceId: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.etag
  name: etag
  fullName: etag
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2db57-110">Тег, используемый при оптимистическом параллелизме во избежание нескольких параллельных выпусков двойника устройства.</span><span class="sxs-lookup"><span data-stu-id="2db57-110">Tag used in optimistic concurrency to avoid multiple parallel editions of the device twin.</span></span>
  syntax:
    content: 'etag: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.get_1
  name: get()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2db57-111">Возвращает последнюю версию этого двойника устройства из службы центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="2db57-111">Gets the latest version of this device twin from the IoT Hub service.</span></span>
  syntax:
    content: function get()
    parameters: []
    return:
      type:
      - Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  package: azure-iothub
- uid: azure-iothub.Twin.get
  name: get(IncomingMessageCallback<Twin>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2db57-112">Возвращает последнюю версию этого двойника устройства из службы центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="2db57-112">Gets the latest version of this device twin from the IoT Hub service.</span></span>
  syntax:
    content: 'function get(done: IncomingMessageCallback<Twin>)'
    parameters:
    - id: done
      type:
      - azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
      description: ''
  package: azure-iothub
- uid: azure-iothub.Twin.moduleId
  name: moduleId
  fullName: moduleId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2db57-113">Идентификатор модуля для модуля, связанные с двойника, как оно существует в реестре удостоверений устройств.</span><span class="sxs-lookup"><span data-stu-id="2db57-113">Module identifier for the module associated with the twin, as it exists in the device identity registry.</span></span>
  optional: true
  syntax:
    content: 'moduleId?: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.properties
  name: properties
  fullName: properties
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2db57-114">Требуемые и сообщаемые свойства dictionnaries (соответственно в `properties.desired` и `properties.reported`).</span><span class="sxs-lookup"><span data-stu-id="2db57-114">The desired and reported properties dictionnaries (respectively in `properties.desired` and `properties.reported`).</span></span>
  syntax:
    content: 'properties: Object'
    return:
      type:
      - Object
  package: azure-iothub
- uid: azure-iothub.Twin.tags
  name: tags
  fullName: tags
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2db57-115">Коллекция пар "ключ значение", доступна только на стороне службы и может использоваться в запросах для поиска конкретных устройств.</span><span class="sxs-lookup"><span data-stu-id="2db57-115">Collection of key/value pairs that is available only on the service side and can be used in queries to find specific devices.</span></span>
  syntax:
    content: 'tags: [key: string]: string'
    return:
      type:
      - '[key: string]: string'
  package: azure-iothub
- uid: azure-iothub.Twin.toJSON
  name: toJSON()
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function toJSON()
    parameters: []
    return:
      type:
      - object
  package: azure-iothub
- uid: azure-iothub.Twin.constructor
  name: Twin(DeviceIdentity | string, Registry)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="2db57-116">Создает новый экземпляр <xref:azure-iothub.Twin>.</span><span class="sxs-lookup"><span data-stu-id="2db57-116">Instantiates a new <xref:azure-iothub.Twin>.</span></span> <span data-ttu-id="2db57-117">Рекомендуемый способ получения нового <xref:azure-iothub.Twin> объекта заключается в использовании <xref:azure-iothub.Registry.getTwin> метод.</span><span class="sxs-lookup"><span data-stu-id="2db57-117">The recommended way to get a new <xref:azure-iothub.Twin> object is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  syntax:
    content: 'new Twin(device: DeviceIdentity | string, registryClient: Registry)'
    parameters:
    - id: device
      type:
      - DeviceIdentity | string
      description: <span data-ttu-id="2db57-118">Строка, идентификатор устройства или объект, описывающий устройства.</span><span class="sxs-lookup"><span data-stu-id="2db57-118">A device identifier string or an object describing the device.</span></span> <span data-ttu-id="2db57-119">Если объект, он должен содержать свойство deviceId.</span><span class="sxs-lookup"><span data-stu-id="2db57-119">If an Object, it must contain a deviceId property.</span></span>
    - id: registryClient
      type:
      - azure-iothub.Registry
      description: >
        <span data-ttu-id="2db57-120">Клиент реестра HTTP, используемый для выполнения вызовов REST API.</span><span class="sxs-lookup"><span data-stu-id="2db57-120">The HTTP registry client used to execute REST API calls.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.update_1
  name: update(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2db57-121">Обновление двойников устройств с улучшением, предоставляется как аргумент.</span><span class="sxs-lookup"><span data-stu-id="2db57-121">Update the device twin with the patch provided as argument.</span></span>
  syntax:
    content: 'function update(patch: any)'
    parameters:
    - id: patch
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  package: azure-iothub
- uid: azure-iothub.Twin.update
  name: update(any, IncomingMessageCallback<Twin>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2db57-122">Обновление двойников устройств с улучшением, предоставляется как аргумент.</span><span class="sxs-lookup"><span data-stu-id="2db57-122">Update the device twin with the patch provided as argument.</span></span>
  syntax:
    content: 'function update(patch: any, done: IncomingMessageCallback<Twin>)'
    parameters:
    - id: patch
      type:
      - any
      description: <span data-ttu-id="2db57-123">Объект, содержащий новые значения для применения к двойнику этого устройства.</span><span class="sxs-lookup"><span data-stu-id="2db57-123">Object containing the new values to apply to this device twin.</span></span>
    - id: done
      type:
      - azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
      description: ''
  package: azure-iothub
references:
- uid: azure-iothub.Registry
  name: Registry
  spec.typeScript:
  - name: Registry
    fullName: Registry
    uid: azure-iothub.Registry
- uid: azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
  name: Twin>
  spec.typeScript:
  - name: IncomingMessageCallback
    fullName: IncomingMessageCallback
    uid: azure-iothub.IncomingMessageCallback
  - name: <
    fullName: <
  - name: Twin
    fullName: Twin
    uid: azure-iothub.Twin
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  name: Twin>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ResultWithIncomingMessage
    fullName: ResultWithIncomingMessage
    uid: azure-iothub.ResultWithIncomingMessage
  - name: <
    fullName: <
  - name: Twin
    fullName: Twin
    uid: azure-iothub.Twin
  - name: '>>'
    fullName: '>>'
