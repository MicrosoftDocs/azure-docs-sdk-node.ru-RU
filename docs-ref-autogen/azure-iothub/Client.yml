### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40073560"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="b816c-101">Клиент службы центра Интернета вещей используется для взаимодействия с устройствами с помощью центра Интернета вещей Azure.</span><span class="sxs-lookup"><span data-stu-id="b816c-101">The IoT Hub service client is used to communicate with devices through an Azure IoT hub.</span></span>

    <span data-ttu-id="b816c-102">Она позволяет пользователю SDK:</span><span class="sxs-lookup"><span data-stu-id="b816c-102">It lets the SDK user:</span></span>
      - <span data-ttu-id="b816c-103">Отправка устройства в облако (также известный как команды) на устройствах: команды в очередь в центр Интернета вещей и доставляются асинхронно, только когда устройство подключено.</span><span class="sxs-lookup"><span data-stu-id="b816c-103">send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected.</span></span> <span data-ttu-id="b816c-104">50 команды могут быть поставлены в очередь, на каждом устройстве.</span><span class="sxs-lookup"><span data-stu-id="b816c-104">Only 50 commands can be queued per device.</span></span>
      - <span data-ttu-id="b816c-105">вызов прямых методов на устройствах (которой будет работать только в том случае, если устройство подключено: это синхронным способом взаимодействия с устройством)</span><span class="sxs-lookup"><span data-stu-id="b816c-105">invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)</span></span>
      - <span data-ttu-id="b816c-106">прослушивание отзыв сообщений, отправляемых с устройства, для предыдущей команды.</span><span class="sxs-lookup"><span data-stu-id="b816c-106">listen for feedback messages sent by devices for previous commands.</span></span>
      - <span data-ttu-id="b816c-107">прослушивать уведомления об отправке файлов с устройств.</span><span class="sxs-lookup"><span data-stu-id="b816c-107">listen for file upload notifications from devices.</span></span>
    <span data-ttu-id="b816c-108">Пользователи должны создавать новые <xref:azure-iothub.Client> экземпляров путем вызова одного из заводских методов, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) или [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), для создания клиента службы центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="b816c-108">Users should create new <xref:azure-iothub.Client> instances by calling one of the factory methods, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), to create an IoT Hub service Client.</span></span>
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-109">Закрывает подключение к центру Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="b816c-109">Closes the connection to an IoT hub.</span></span>
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        <span data-ttu-id="b816c-110">Функция, вызываемая при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="b816c-110">The function to call when the operation is complete.</span></span> <span data-ttu-id="b816c-111">`done` передается аргумент объекта ошибки, который будет иметь значение null, если операция завершилась успешно.</span><span class="sxs-lookup"><span data-stu-id="b816c-111">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-112">Создает клиент службы центра Интернета вещей из строки соединения с использованием транспорта по умолчанию (Amqp) или значением, указанным во втором аргументе.</span><span class="sxs-lookup"><span data-stu-id="b816c-112">Creates an IoT Hub service client from the given connection string using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="b816c-113">Строку подключения, которая инкапсулирует «подключение» разрешения для центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="b816c-113">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-114">Создает клиент службы центра Интернета вещей из заданного подписанного с помощью транспорта по умолчанию (Amqp) или приемник, указанный в качестве второго аргумента.</span><span class="sxs-lookup"><span data-stu-id="b816c-114">Creates an IoT Hub service client from the given shared access signature using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="b816c-115">Подпись общего доступа, который инкапсулирует «подключение службы» разрешения для центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="b816c-115">A shared access signature which encapsulates "service connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-116">Возвращает объект AmqpReceiver, который генерирует события при получении новых сообщений обратной связи с помощью клиента.</span><span class="sxs-lookup"><span data-stu-id="b816c-116">Returns a AmqpReceiver object which emits events when new feedback messages are received by the client.</span></span>
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="b816c-117">Функция, вызываемая при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="b816c-117">The function to call when the operation is complete.</span></span> <span data-ttu-id="b816c-118">`done` будет вызван с двумя аргументами: объект ошибки (может иметь значение null) и объект AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="b816c-118">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-119">Возвращает объект AmqpReceiver, который генерирует события при получении нового уведомления об отправке файлов с помощью клиента.</span><span class="sxs-lookup"><span data-stu-id="b816c-119">Returns a AmqpReceiver object which emits events when new file upload notifications are received by the client.</span></span>
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="b816c-120">Функция, вызываемая при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="b816c-120">The function to call when the operation is complete.</span></span> <span data-ttu-id="b816c-121">`done` будет вызван с двумя аргументами: объект ошибки (может иметь значение null) и объект AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="b816c-121">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-122">Вызывает метод для обработки конкретного устройства или модуля.</span><span class="sxs-lookup"><span data-stu-id="b816c-122">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="b816c-123">Идентификатор существующего удостоверения устройства.</span><span class="sxs-lookup"><span data-stu-id="b816c-123">The identifier of an existing device identity.</span></span>
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        <span data-ttu-id="b816c-124">Обратный вызов для вызова с результатом выполнения метода.</span><span class="sxs-lookup"><span data-stu-id="b816c-124">The callback to call with the result of the method execution.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-125">Вызывает метод для обработки конкретного устройства или модуля.</span><span class="sxs-lookup"><span data-stu-id="b816c-125">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-126">Открывает подключение к центру Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="b816c-126">Opens the connection to an IoT hub.</span></span>
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        <span data-ttu-id="b816c-127">Функция, вызываемая при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="b816c-127">The function to call when the operation is complete.</span></span> <span data-ttu-id="b816c-128">`done` передается аргумент объекта ошибки, который будет иметь значение null, если операция завершилась успешно.</span><span class="sxs-lookup"><span data-stu-id="b816c-128">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-129">Отправляет сообщение на устройство.</span><span class="sxs-lookup"><span data-stu-id="b816c-129">Sends a message to a device.</span></span>
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="b816c-130">Идентификатор существующего удостоверения устройства.</span><span class="sxs-lookup"><span data-stu-id="b816c-130">The identifier of an existing device identity.</span></span>
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        <span data-ttu-id="b816c-131">Текст сообщения для отправки на устройство.</span><span class="sxs-lookup"><span data-stu-id="b816c-131">The body of the message to send to the device.</span></span>

        <span data-ttu-id="b816c-132">Если `message` не относится к типу [сообщение](xref:azure-iot-common.Message), он будет преобразован.</span><span class="sxs-lookup"><span data-stu-id="b816c-132">If `message` is not of type [Message](xref:azure-iot-common.Message), it will be converted.</span></span>
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        <span data-ttu-id="b816c-133">Функция, вызываемая при завершении операции.</span><span class="sxs-lookup"><span data-stu-id="b816c-133">The function to call when the operation is complete.</span></span> <span data-ttu-id="b816c-134">`done` будет вызван с двумя аргументами: объект ошибки (может иметь значение null) и объект ответа на уровне транспорта, полезно для отладки или ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="b816c-134">`done` will be called with two arguments: an Error object (can be null) and a transport-specific response object useful for logging or debugging.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b816c-135">Задайте политику, используемый клиентом, чтобы повторить попытку сетевых операций.</span><span class="sxs-lookup"><span data-stu-id="b816c-135">Set the policy used by the client to retry network operations.</span></span>
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        <span data-ttu-id="b816c-136">политика, используемая для повторного выполнения операций (например)</span><span class="sxs-lookup"><span data-stu-id="b816c-136">policy used to retry operations (eg.</span></span> <span data-ttu-id="b816c-137">открытия, отправки, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="b816c-137">open, send, etc.).</span></span>

        <span data-ttu-id="b816c-138">Пакет SDK содержит 2 «встроенные» политики: ExponentialBackoffWithJitter (по умолчанию) и NoRetry (для отмены повторных попыток в любой форме).</span><span class="sxs-lookup"><span data-stu-id="b816c-138">The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default) and NoRetry (to cancel any form of retry).</span></span> <span data-ttu-id="b816c-139">Пользователь также может передать свой собственный объект, до тех пор, пока он реализует два метода:-shouldRetry(err: Error): логическое: Указывает, следует ли повторить операцию на основе типа ошибка - nextRetryTimeout (retryCount: номер, регулирование: логическое значение): номер: возвращает время ожидания (в миллисекундах) перед повторной попыткой на основе последние числа попыток (retryCount) и тот факт, что ошибки является ошибка регулирования или нет.</span><span class="sxs-lookup"><span data-stu-id="b816c-139">The user can also pass its own object as long as it implements 2 methods: - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds) before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
