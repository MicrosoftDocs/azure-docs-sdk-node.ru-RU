### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.addUserAgentInfo
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStoreWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStoreWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStoreWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStoreWithHttpOperationResponse
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.getPackageJsonInfo
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.constructor
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest_1
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
      - azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequestWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="b4d35-101">Добавляет пользовательскую информацию заголовка агента пользователя</span><span class="sxs-lookup"><span data-stu-id="b4d35-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="b4d35-102">сведения для добавления заголовка агента пользователя, как строка.</span><span class="sxs-lookup"><span data-stu-id="b4d35-102">information to be added to user agent header, as string.</span></span>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage
    name: 'classifyImage(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-103">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-103">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-104">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-104">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-105">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-105">Binary image data.</span></span> <span data-ttu-id="b4d35-106">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-106">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-107">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-107">Supports images up to 4MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2
    name: 'classifyImage(string, string, stream.Readable, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: stream.Readable, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1
    name: 'classifyImage(string, string, stream.Readable, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: stream.Readable, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl
    name: 'classifyImageUrl(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-108">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-108">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-109">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-109">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-110">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-110">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2
    name: 'classifyImageUrl(string, string, ImageUrl, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1
    name: 'classifyImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithHttpOperationResponse
    name: 'classifyImageUrlWithHttpOperationResponse(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithHttpOperationResponse(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-111">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-111">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-112">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-112">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-113">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-113">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-114">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-114">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-115">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-115">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-116">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-116">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStoreWithHttpOperationResponse
    name: 'classifyImageUrlWithNoStoreWithHttpOperationResponse(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStoreWithHttpOperationResponse(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-117">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-117">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-118">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-118">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-119">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-119">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithHttpOperationResponse
    name: 'classifyImageWithHttpOperationResponse(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithHttpOperationResponse(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-120">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-120">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-121">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-121">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-122">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-122">Binary image data.</span></span> <span data-ttu-id="b4d35-123">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-123">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-124">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-124">Supports images up to 4MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore
    name: 'classifyImageWithNoStore(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-125">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-125">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-126">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-126">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-127">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-127">Binary image data.</span></span> <span data-ttu-id="b4d35-128">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-128">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-129">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-129">Supports images up to 0MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2
    name: 'classifyImageWithNoStore(string, string, stream.Readable, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1
    name: 'classifyImageWithNoStore(string, string, stream.Readable, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStoreWithHttpOperationResponse
    name: 'classifyImageWithNoStoreWithHttpOperationResponse(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStoreWithHttpOperationResponse(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-130">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-130">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-131">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-131">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-132">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-132">Binary image data.</span></span> <span data-ttu-id="b4d35-133">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-133">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-134">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-134">Supports images up to 0MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage
    name: 'detectImage(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-135">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-135">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-136">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-136">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-137">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-137">Binary image data.</span></span> <span data-ttu-id="b4d35-138">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-138">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-139">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-139">Supports images up to 4MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2
    name: 'detectImage(string, string, stream.Readable, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: stream.Readable, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1
    name: 'detectImage(string, string, stream.Readable, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: stream.Readable, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl
    name: 'detectImageUrl(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-140">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-140">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-141">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-141">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-142">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-142">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2
    name: 'detectImageUrl(string, string, ImageUrl, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithHttpOperationResponse
    name: 'detectImageUrlWithHttpOperationResponse(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithHttpOperationResponse(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-143">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-143">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-144">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-144">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-145">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-145">An ImageUrl that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-146">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-146">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-147">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-147">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-148">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-148">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStoreWithHttpOperationResponse
    name: 'detectImageUrlWithNoStoreWithHttpOperationResponse(string, string, ImageUrl, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStoreWithHttpOperationResponse(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-149">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-149">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-150">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-150">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - azure-cognitiveservices-customvision-prediction.ImageUrl
          description: |
            <span data-ttu-id="b4d35-151">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="b4d35-151">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithHttpOperationResponse
    name: 'detectImageWithHttpOperationResponse(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithHttpOperationResponse(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-152">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-152">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-153">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-153">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-154">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-154">Binary image data.</span></span> <span data-ttu-id="b4d35-155">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-155">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-156">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-156">Supports images up to 4MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore
    name: 'detectImageWithNoStore(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-157">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-157">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-158">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-158">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-159">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-159">Binary image data.</span></span> <span data-ttu-id="b4d35-160">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-160">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-161">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-161">Supports images up to 0MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2
    name: 'detectImageWithNoStore(string, string, stream.Readable, Object, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, options: Object, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1
    name: 'detectImageWithNoStore(string, string, stream.Readable, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: stream.Readable, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: publishedName
          type:
            - string
          description: ''
        - id: imageData
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStoreWithHttpOperationResponse
    name: 'detectImageWithNoStoreWithHttpOperationResponse(string, string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStoreWithHttpOperationResponse(projectId: string, publishedName: string, imageData: stream.Readable, options?: Object)'
      parameters:
        - id: projectId
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-162">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="b4d35-162">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-163">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="b4d35-163">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="b4d35-164">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="b4d35-164">Binary image data.</span></span> <span data-ttu-id="b4d35-165">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="b4d35-165">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="b4d35-166">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="b4d35-166">Supports images up to 0MB.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="b4d35-167">Пытается найти package.json для заданного azure nodejs пакета.</span><span class="sxs-lookup"><span data-stu-id="b4d35-167">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="b4d35-168">Если найден, возвращает имя и версию пакета, считывая package.json. Если package.json не найден, возвращает значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b4d35-168">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="b4d35-169">Передайте каталог клиента управления azure.</span><span class="sxs-lookup"><span data-stu-id="b4d35-169">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.constructor
    name: 'PredictionAPIClient(string, string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new PredictionAPIClient(apiKey: string, endpoint: string, options?: ServiceClientOptions)'
      parameters:
        - id: apiKey
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-170">Ключ API.</span><span class="sxs-lookup"><span data-stu-id="b4d35-170">API key.</span></span>
        - id: endpoint
          type:
            - string
          description: |
            <span data-ttu-id="b4d35-171">Поддерживаемые конечные точки Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="b4d35-171">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-customvision-prediction
  - uid: azure-cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-customvision-prediction
references:
  - uid: Promise<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: azure-cognitiveservices-customvision-prediction.ImagePrediction
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: azure-cognitiveservices-customvision-prediction.ImagePrediction
      - name: '>'
        fullName: '>'
  - uid: azure-cognitiveservices-customvision-prediction.ImageUrl
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: azure-cognitiveservices-customvision-prediction.ImageUrl
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-customvision-prediction.ImagePrediction>>
    name: ImagePrediction>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: azure-cognitiveservices-customvision-prediction.ImagePrediction
      - name: '>>'
        fullName: '>>'