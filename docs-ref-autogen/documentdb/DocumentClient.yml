### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/13/2018
ms.locfileid: "40064714"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    Предоставляет клиентский логическое представление учетной записи базы данных Azure Cosmos DB.

    Этот клиент используется для настройки и выполнения запросов в службу базы данных Azure Cosmos DB.
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    Предоставляет клиентский логическое представление учетной записи базы данных Azure Cosmos DB.

    Этот клиент используется для настройки и выполнения запросов в службу базы данных Azure Cosmos DB.
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: Конечная точка службы, используемая для создания клиента.
    - id: auth
      type:
      - object
      description: Объект, который используется для запросов проверки подлинности и должен содержит один из параметров
    - id: auth.masterKey
      type:
      - string
      description: Главный ключ авторизации для использования для создания клиента.
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: 'Объект, содержащий токены ресурсов. Ключи для объекта, идентификаторы ресурсов и значения: маркеры ресурсов.'
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: Массив <xref:Permission> объектов.
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: Экземпляр <xref:ConnectionPolicy> класса. Этот параметр является необязательным и connectionPolicy по умолчанию будет использоваться, если не указано.
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: Необязательный параметр, который представляет уровень согласованности. Он может содержать любое значение из <xref:ConsistencyLevel>.
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: Возвращает конечную точку текущая запись для учетной записи геореплицированную базу данных.
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: Функция обратного вызова, который принимает endpoint(string) в качестве аргумента.
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: Получает curent, конечную точку для учетной записи геореплицированную базу данных для чтения.
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: Функция обратного вызова, который принимает endpoint(string) в качестве аргумента.
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    Отправка запроса для создания базы данных.

    <p>
     Базы данных управляет пользователями, разрешениями и набор коллекций.  <br>
     Каждая учетная запись базы данных Azure Cosmos DB поддерживает несколько независимых именованных баз данных, база данных находится логический контейнер для данных. <br>
     Каждая база данных состоит из одной или нескольких коллекций, каждая из которых в свою очередь содержит один или несколько документов. Так как базы данных являются ресурс администратора главного ключа службы потребуется для получения доступа и успешно выполнить любое действие, с помощью API-интерфейсы пользователя. <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: Объект json, представляющий создать базу данных.
    - id: body.id
      type:
      - string
      description: Идентификатор базы данных.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    Создает коллекцию.

    <p>

    Коллекция — это именованный логический контейнер для документов. <br>

    База данных может содержать ноль или более именованных коллекций и каждой коллекции состоит из нуля или более документов JSON. <br>

    Отсутствие схем, документы в коллекции не обязательно должны совместно использовать одну и ту же структуру или поля. <br>

    Так как коллекции ресурсов приложения, их можно авторизовать с помощью главного ключа или ключей ресурсов. <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: body
      type:
      - object
      description: Представляет текст в коллекцию.
    - id: body.id
      type:
      - string
      description: Идентификатор коллекции.
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: Политики индексирования, связанную с коллекцией.
    - id: body.defaultTtl
      type:
      - number
      description: Время существования по умолчанию в секундах для документов в коллекции.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Создайте документ.

    <p>

    Нет набора схем для документов JSON. Они могут содержать любое количество пользовательских свойств, а также необязательный список вложений. <br>

    Ресурс приложения и документ можно авторизовать с помощью главного ключа или ключей ресурсов

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Ссылку на коллекцию или ссылку базы данных при использовании сопоставителя секций
    - id: body
      type:
      - object
      description: Представляет текст документа. Может содержать любое количество пользовательских свойств.
    - id: body.id
      type:
      - string
      description: Идентификатор документа, должно быть уникальным для каждого документа.
      optional: true
    - id: body.ttl
      type:
      - number
      description: Срок жизни в секундах документа.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Отключает создание автоматического идентификатора. Если идентификатор отсутствует в тексте, и этот параметр имеет значение true, будет возвращена ошибка.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    Создание вложения для объекта документа.

    <p>

    Каждый документ может содержать ноль или несколько вложений. Вложения могут быть любого типа MIME - текст, изображения, двоичные данные. <br>

    Внешне они хранятся в хранилище BLOB-объектов Azure. Вложения будут автоматически удалены при удалении родительского документа.

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: body
      type:
      - Object
      description: Метаданные определяет носителя вложения, например мультимедиа, contentType. Он может включать другие свойства как часть метаданных.
    - id: body.contentType
      type:
      - string
      description: Тип содержимого MIME вложения.
    - id: body.media
      type:
      - string
      description: Ссылка мультимедиа, связанная с содержимое вложения.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: Создание пользователя базы данных.
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: body
      type:
      - object
      description: Представляет текст пользователя.
    - id: body.id
      type:
      - string
      description: Идентификатор пользователя.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    Создание разрешения.

    <p> Разрешение предоставляет разрешения на доступ к определенному ресурсу, например документ или коллекция каждого пользователя.  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: body
      type:
      - object
      description: Представляет текст разрешения.
    - id: body.id
      type:
      - string
      description: Идентификатор разрешения
    - id: body.permissionMode
      type:
      - string
      description: Режим разрешения, должен иметь значение <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Ссылка, ресурса, который применяется разрешение.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Создайте триггер.

    <p>

    Azure Cosmos DB поддерживает pre и post-триггеры, определенные в JavaScript, которые будут выполнены в создает, обновляет и удаляет. <br>

    Дополнительные сведения см. в документации JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: trigger
      type:
      - object
      description: Представляет текст триггера.
    - id: trigger.id
      type:
      - string
      description: Идентификатор триггера.
    - id: trigger.triggerType
      type:
      - string
      description: Тип триггера, должно быть одно из значений из <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: Операция триггера, должно быть одно из значений из <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Текст триггера, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Создайте UserDefinedFunction.

    <p>

    Azure Cosmos DB поддерживает определяемые пользователем функции JavaScript, который может использоваться внутри запросов, хранимых процедур и триггеров. <br>

    Дополнительные сведения см. в документации JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: udf
      type:
      - object
      description: Представляет текст userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: Идентификатор, определяемой пользователем функции.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Тип определяемой пользователем функции, он должен быть одним из значений <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Представляет текст определяемой пользователем функции, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Создание хранимой процедуры.

    <p>

    Azure Cosmos DB обеспечивает хранимых процедур для выполнения на уровне хранилища, непосредственно в коллекции документов. Сценарий <br>

    Получает выполняться в контексте транзакции ACID в разделе основного хранилища в указанной коллекции. Для получения дополнительных сведений <br>

    см. в документации по JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: sproc
      type:
      - object
      description: Представляет текст хранимой процедуры.
    - id: sproc.id
      type:
      - string
      description: Идентификатор хранимой процедуры.
    - id: sproc.serverScript
      type:
      - function
      description: Тело хранимой процедуры, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Создание вложения для объекта документа.
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: поток, который представляет сам носитель, который необходимо передать.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: Считывает базу данных.
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: Считывает коллекции.
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: Выполняет чтение документа.
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: Считывает объект вложения.
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Самостоятельно ссылку на вложение.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: Считывает пользователя.
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: Считывает разрешения.
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Ссылок разрешения.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: Считывает объект триггера.
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Ссылок триггера.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: Считывает объект определяемой пользователем функции.
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Ссылок пользователя определенные функции.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: Считывает объект StoredProcedure.
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Ссылок хранимой процедуры.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: Считывает конфликт.
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Ссылок в конфликте.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: Список всех баз данных.
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: Получение всех коллекций в этой базе данных.
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: Получение всех документов в этой коллекции.
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: Получение всех разделов ключа диапазоны в этой коллекции.
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: Получение всех вложений для этого документа.
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: Получение всех пользователей в этой базе данных.
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: Получите все разрешения для этого пользователя.
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: Получите все триггеры в данной коллекции.
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: Получите все UserDefinedFunctions в этой коллекции.
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: Получите все StoredProcedures в этой коллекции.
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: Получите все конфликты в этой коллекции.
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр QueryIterator для обработки веб-канала чтения.'
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: Список всех баз данных, удовлетворяющих запросу.
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр QueryIterator для обработки веб-канала чтения.'
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: Выполните запрос к коллекциям для базы данных.
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: Запросы к документам в коллекции.
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Ссылку на коллекцию или ссылку базы данных при использовании сопоставителя секций
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: Ключ секции необязательно для использования с сопоставителя секций
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: Запрос диапазонов ключей разделов
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: Запрос вложений для документа.
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: Запрашивать данные пользователей для базы данных.
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: Запросите разрешение пользователя.
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: Запрос триггеров для коллекции.
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: Запрос пользователя, определенный функции для коллекции.
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: Запрос storedProcedures для коллекции.
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: Запрашивать конфликты для коллекции.
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Представляет параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: Удалите объект базы данных.
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: Удалите объект коллекции.
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: Удалите объект "документ".
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: Удалите объект вложения.
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Самостоятельно ссылку на вложение.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: Удалите объект пользователя.
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: Удалите объект разрешения.
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Ссылок разрешения.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: Удаление объекта триггера.
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Ссылок триггера.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: Удаление объекта UserDefinedFunction.
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Ссылок пользователя определенные функции.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: Удаление объекта StoredProcedure.
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Ссылок хранимой процедуры.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: Удалите объект конфликт.
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Ссылок в конфликте.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: Замените коллекции документов.
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок коллекции документов.
    - id: collection
      type:
      - object
      description: Представления коллекции текста используется новый документ.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: Замените объект документа.
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: document
      type:
      - object
      description: Представления текста используется новый документ.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: Замените объект вложения.
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Самостоятельно ссылку на вложение.
    - id: attachment
      type:
      - object
      description: Представления текста используется новый вложения.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: Замените объекта пользователя.
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: user
      type:
      - object
      description: Представления текста используется новый пользователь.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: Замените объект разрешения.
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Ссылок разрешения.
    - id: permission
      type:
      - object
      description: Представляет новую область разрешений.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: Замените объекта триггера.
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Ссылок триггера.
    - id: trigger
      type:
      - object
      description: Представления текста используется новый триггер.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: Замените объект UserDefinedFunction.
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Ссылок пользователя определенные функции.
    - id: udf
      type:
      - object
      description: Представляет новый текст определяемой пользователем функции.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: Замените объект StoredProcedure.
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Ссылок хранимой процедуры.
    - id: sproc
      type:
      - object
      description: Представления текста используется новый sproc.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Upsert документа.

    <p>

    Нет набора схем для документов JSON. Они могут содержать любое количество пользовательских свойств, а также необязательный список вложений. <br>

    Ресурс приложения и документ можно авторизовать с помощью главного ключа или ключей ресурсов

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Ссылку на коллекцию или ссылку базы данных при использовании сопоставителя секций
    - id: body
      type:
      - object
      description: Представляет текст документа. Может содержать любое количество пользовательских свойств.
    - id: body.id
      type:
      - string
      description: Идентификатор документа, должно быть уникальным для каждого документа.
      optional: true
    - id: body.ttl
      type:
      - number
      description: Срок жизни в секундах документа.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Отключает создание автоматического идентификатора. Если идентификатор отсутствует в тексте, и этот параметр имеет значение true, будет возвращена ошибка.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: >-
    Upsert вложения для объекта документа.

    <p>

    Каждый документ может содержать ноль или несколько вложений. Вложения могут быть любого типа MIME - текст, изображения, двоичные данные. <br>

    Внешне они хранятся в хранилище BLOB-объектов Azure. Вложения будут автоматически удалены при удалении родительского документа.

    </P>
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: body
      type:
      - Object
      description: Метаданные определяет носителя вложения, например мультимедиа, contentType. Он может включать другие свойства как часть метаданных.
    - id: body.contentType
      type:
      - string
      description: Тип содержимого MIME вложения.
    - id: body.media
      type:
      - string
      description: Ссылка мультимедиа, связанная с содержимое вложения.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: Upsert пользователя базы данных.
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Ссылок базы данных.
    - id: body
      type:
      - object
      description: Представляет текст пользователя.
    - id: body.id
      type:
      - string
      description: Идентификатор пользователя.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: >-
    Upsert разрешение.

    <p> Разрешение предоставляет разрешения на доступ к определенному ресурсу, например документ или коллекция каждого пользователя.  </p>
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Ссылок пользователя.
    - id: body
      type:
      - object
      description: Представляет текст разрешения.
    - id: body.id
      type:
      - string
      description: Идентификатор разрешения
    - id: body.permissionMode
      type:
      - string
      description: Режим разрешения, должен иметь значение <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Ссылка, ресурса, который применяется разрешение.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Upsert триггера.

    <p>

    Azure Cosmos DB поддерживает pre и post-триггеры, определенные в JavaScript, которые будут выполнены в создает, обновляет и удаляет. <br>

    Дополнительные сведения см. в документации JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: trigger
      type:
      - object
      description: Представляет текст триггера.
    - id: trigger.id
      type:
      - string
      description: Идентификатор триггера.
    - id: trigger.triggerType
      type:
      - string
      description: Тип триггера, должно быть одно из значений из <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: Операция триггера, должно быть одно из значений из <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Текст триггера, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Upsert UserDefinedFunction.

    <p>

    Azure Cosmos DB поддерживает определяемые пользователем функции JavaScript, который может использоваться внутри запросов, хранимых процедур и триггеров. <br>

    Дополнительные сведения см. в документации JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: udf
      type:
      - object
      description: Представляет текст userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: Идентификатор, определяемой пользователем функции.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Тип определяемой пользователем функции, он должен быть одним из значений <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Представляет текст определяемой пользователем функции, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Upsert StoredProcedure.

    <p>

    Azure Cosmos DB обеспечивает хранимых процедур для выполнения на уровне хранилища, непосредственно в коллекции документов. Сценарий <br>

    Получает выполняться в контексте транзакции ACID в разделе основного хранилища в указанной коллекции. Для получения дополнительных сведений <br>

    см. в документации по JavaScript API на стороне сервера.

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Ссылок в коллекцию.
    - id: sproc
      type:
      - object
      description: Представляет текст хранимой процедуры.
    - id: sproc.id
      type:
      - string
      description: Идентификатор хранимой процедуры.
    - id: sproc.serverScript
      type:
      - function
      description: Тело хранимой процедуры, ее можно передать как переведенные в строку слишком.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Upsert вложения для объекта документа.
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Ссылок документа.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: поток, который представляет сам носитель, который необходимо передать.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Параметры запроса.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: Считывание данных для объекта вложения.
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Ссылка мультимедиа носителя во вложении.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса, параметр результата может быть буфер или поток в зависимости от значения <xref:documentdb.MediaReadMode>.
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: Обновите носитель для вложения
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Ссылка мультимедиа носителя во вложении.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: Поток, который представляет сам носитель, который необходимо передать.
    - id: options
      type:
      - documentdb.MediaOptions
      description: параметры для файла мультимедиа
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: Выполнение хранимой процедуры, представленный объектом с ключом секции.
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Ссылок хранимой процедуры.
    - id: params
      type:
      - Array
      description: Представляет параметры хранимой процедуры.
      optional: true
    - id: options
      type:
      - Object
      description: ключ раздела
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: Замените объектом предложения.
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Ссылок предложения.
    - id: offer
      type:
      - object
      description: Представления текста используется нового предложения.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: Считывает предложения.
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Ссылок предложения.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса.
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: Список всех предложений.
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр queryIterator для обработки веб-канала чтения.'
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: Список всех предложений, удовлетворяющих запросу.
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL-запроса.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Параметры веб-канала.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Экземпляр QueryIterator для обработки веб-канала чтения.'
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: Возвращает сведения об учетной записи базы данных.
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: Конечная точка URL-адрес учетной записи, базы данных нужно получить. Если не будет использоваться URL-адрес отсутствует, поэтому текущего клиента.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Обратный вызов для запроса. Второй параметр обратного вызова будет иметь тип <xref:documentdb.DatabaseAccount>.
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: Возвращает для заданного collectionLink SessionToken
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: Ссылки в коллекцию, для которого требуется токен сеанса
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
