### YamlMime:UniversalReference
items:
  - uid: msal.UserAgentApplication
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - msal.UserAgentApplication.acquireTokenPopup
      - msal.UserAgentApplication.acquireTokenRedirect
      - msal.UserAgentApplication.acquireTokenSilent
      - msal.UserAgentApplication.authority
      - msal.UserAgentApplication.getAccount
      - msal.UserAgentApplication.getAllAccounts
      - msal.UserAgentApplication.getAuthorityInstance
      - msal.UserAgentApplication.getCurrentConfiguration
      - msal.UserAgentApplication.getLoginInProgress
      - msal.UserAgentApplication.getPostLogoutRedirectUri
      - msal.UserAgentApplication.getRedirectUri
      - msal.UserAgentApplication.loginPopup
      - msal.UserAgentApplication.loginRedirect
      - msal.UserAgentApplication.logout
      - msal.UserAgentApplication.constructor
    langs:
      - typeScript
    type: class
    summary: |
      <span data-ttu-id="c3121-101">Класс UserAgentApplication экземпляр объекта, разработчик может использовать, чтобы сделать loginXX acquireTokenXX функции OR</span><span class="sxs-lookup"><span data-stu-id="c3121-101">UserAgentApplication class Object Instance that the developer can use to make loginXX OR acquireTokenXX functions</span></span>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenPopup
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c3121-102">Используется, если вы хотите получить маркер доступа для API через Открытие всплывающего окна в браузере пользователя</span><span class="sxs-lookup"><span data-stu-id="c3121-102">Use when you want to obtain an access_token for your API via opening a popup window in the user''s browser</span></span>'
    syntax:
      content: 'function acquireTokenPopup(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenRedirect
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c3121-103">Используется, если вы хотите получить маркер доступа для API путем перенаправления браузера пользователя в конечную точку авторизации.</span><span class="sxs-lookup"><span data-stu-id="c3121-103">Use when you want to obtain an access_token for your API by redirecting the user''s browser window to the authorization endpoint.</span></span>'
    syntax:
      content: 'function acquireTokenRedirect(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenSilent
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="c3121-104">Эту функцию можно использовать для получения маркера перед каждым вызовом API / поставщик ресурсов возврата MSAL в кэшированный маркер, если они доступны или отправить его в скрытом запросе iframe с помощью запроса к STS для получения нового маркера.</span><span class="sxs-lookup"><span data-stu-id="c3121-104">Use this function to obtain a token before every call to the API / resource provider MSAL return's a cached token when available Or it send's a request to the STS to obtain a new token using a hidden iframe.</span></span>
    syntax:
      content: 'function acquireTokenSilent(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c3121-105">Метод для управления URL-адрес центра.</span><span class="sxs-lookup"><span data-stu-id="c3121-105">Method to manage the authority URL.</span></span>
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getAccount
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c3121-106">Возвращает подписанный в учетной записи (объект учетной записи создается во время успешного входа в систему) или значение null, если состояние не будет найдена</span><span class="sxs-lookup"><span data-stu-id="c3121-106">Returns the signed in account (the account object is created at the time of successful login) or null when no state is found</span></span>'
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - msal.Account
    package: msal
  - uid: msal.UserAgentApplication.getAllAccounts
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c3121-107">Позволяет получить список уникальных учетных записей в зависимости от homeAccountIdentifier кэша MSAL.</span><span class="sxs-lookup"><span data-stu-id="c3121-107">Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.</span></span>
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<msal.Account>
    package: msal
  - uid: msal.UserAgentApplication.getAuthorityInstance
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c3121-108">Получение текущего экземпляра центра из объекта конфигурации MSAL</span><span class="sxs-lookup"><span data-stu-id="c3121-108">Get the current authority instance from the MSAL configuration object</span></span>
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
    package: msal
  - uid: msal.UserAgentApplication.getCurrentConfiguration
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c3121-109">Использовать для получения текущего <xref:Configuration> объекта в MSAL</span><span class="sxs-lookup"><span data-stu-id="c3121-109">Use to get the current <xref:Configuration> object in MSAL</span></span>'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - msal.Configuration
    package: msal
  - uid: msal.UserAgentApplication.getLoginInProgress
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="c3121-110">Возвращает логический флаг для разработчика способствует информационному, если имени входа выполняется</span><span class="sxs-lookup"><span data-stu-id="c3121-110">Return boolean flag to developer to help inform if login is in progress</span></span>'
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
    package: msal
  - uid: msal.UserAgentApplication.getPostLogoutRedirectUri
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c3121-111">Используйте для получения uri перенаправления выхода post, настроенных в MSAL или значение null.</span><span class="sxs-lookup"><span data-stu-id="c3121-111">Use to get the post logout redirect uri configured in MSAL or null.</span></span>
      <span data-ttu-id="c3121-112">Результатом является postLogoutredirectUri Если это функция, в противном случае просто возвращает свое значение.</span><span class="sxs-lookup"><span data-stu-id="c3121-112">Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.</span></span>
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getRedirectUri
    name: getRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c3121-113">Используйте для получения uri перенаправления, настроенные в MSAL или значение null.</span><span class="sxs-lookup"><span data-stu-id="c3121-113">Use to get the redirect uri configured in MSAL or null.</span></span>
      <span data-ttu-id="c3121-114">Вычисляет URI перенаправления, если это функция, в противном случае просто возвращает свое значение.</span><span class="sxs-lookup"><span data-stu-id="c3121-114">Evaluates redirectUri if its a function, otherwise simply returns its value.</span></span>
    syntax:
      content: function getRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.loginPopup
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c3121-115">Используйте при запуске процесса входа в систему через Открытие всплывающего окна в браузере пользователя</span><span class="sxs-lookup"><span data-stu-id="c3121-115">Use when initiating the login process via opening a popup window in the user's browser</span></span>
    syntax:
      content: 'function loginPopup(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.loginRedirect
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c3121-116">Используйте при запуске процесса входа в систему путем перенаправления браузера пользователя в конечную точку авторизации.</span><span class="sxs-lookup"><span data-stu-id="c3121-116">Use when initiating the login process by redirecting the user's browser to the authorization endpoint.</span></span>
    syntax:
      content: 'function loginRedirect(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
    package: msal
  - uid: msal.UserAgentApplication.logout
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="c3121-117">Используйте для входа текущего пользователя и перенаправит пользователя postLogoutRedirectUri.</span><span class="sxs-lookup"><span data-stu-id="c3121-117">Use to log out the current user, and redirect the user to the postLogoutRedirectUri.</span></span>
      <span data-ttu-id="c3121-118">Поведением по умолчанию является перенаправить пользователя на `window.location.href`.</span><span class="sxs-lookup"><span data-stu-id="c3121-118">Default behaviour is to redirect the user to `window.location.href`.</span></span>
    syntax:
      content: function logout()
      parameters: []
    package: msal
  - uid: msal.UserAgentApplication.constructor
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - msal.Configuration
          description: |
            <span data-ttu-id="c3121-119">объект для экземпляра MSAL UserAgentApplication</span><span class="sxs-lookup"><span data-stu-id="c3121-119">object for the MSAL UserAgentApplication instance</span></span>
    package: msal
references:
  - uid: msal.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: msal.Configuration
  - uid: msal.AuthenticationParameters
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: msal.AuthenticationParameters
  - uid: Promise<msal.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: msal.AuthResponse
      - name: '>'
        fullName: '>'
  - uid: msal.Account
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: msal.Account
  - uid: Array<msal.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: msal.Account
      - name: '>'
        fullName: '>'