### YamlMime:UniversalReference
ms.openlocfilehash: 66563aed7f5d93528fadde232b081c0f2703287f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40075352"
items:
- uid: azure-cognitiveservices-contentmoderator.ImageModeration
  name: ImageModeration
  fullName: ImageModeration
  children:
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-101">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-101">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-102">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-102">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-103">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-103">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-104">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-104">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options: function, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  name: evaluateFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-105">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-105">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-106">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-106">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-107">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-107">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-108">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-108">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options: function, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-109">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-109">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  name: evaluateMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-110">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-110">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethodWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-111">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-111">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-112">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-112">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-113">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-113">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-114">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-114">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-115">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-115">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options: function, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  name: evaluateUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-116">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="c0585-116">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-117">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-117">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-118">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-118">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-119">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-119">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-120">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-120">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-121">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-121">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options: function, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-122">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-122">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-123">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-123">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-124">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-124">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-125">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-125">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options: function, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  name: findFacesFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-126">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-126">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-127">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-127">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-128">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-128">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-129">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-129">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-130">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-130">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-131">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-131">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-132">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-132">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options: function, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  name: findFacesUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-133">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-133">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-134">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-134">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-135">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-135">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  name: findFacesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-136">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="c0585-136">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-137">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-137">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-138">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-138">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-139">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-139">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-140">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-140">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-141">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-141">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-142">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-142">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-143">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-143">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-144">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-144">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-145">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-145">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-146">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-146">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-147">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-147">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-148">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-148">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-149">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-149">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options: function, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  name: matchFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-150">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-150">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-151">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-151">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-152">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-152">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-153">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-153">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: function)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-154">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-154">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-155">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-155">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-156">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-156">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-157">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-157">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-158">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-158">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-159">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-159">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-160">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-160">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-161">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-161">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-162">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-162">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options: function, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-163">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-163">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-164">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-164">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-165">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-165">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-166">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-166">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  name: matchMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-167">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-167">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-168">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-168">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-169">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-169">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-170">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-170">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethodWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-171">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-171">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-172">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-172">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-173">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-173">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-174">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-174">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-175">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-175">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-176">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-176">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-177">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-177">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-178">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-178">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-179">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-179">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-180">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-180">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-181">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-181">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-182">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-182">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-183">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-183">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-184">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-184">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options: function, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  name: matchUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="c0585-185">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="c0585-185">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="c0585-186">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="c0585-186">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="c0585-187">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="c0585-187">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="c0585-188">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="c0585-188">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-189">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-189">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-190">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-190">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-191">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-191">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-192">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-192">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-193">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-193">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-194">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-194">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-195">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-195">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-196">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-196">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-197">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-197">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-198">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-198">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options: function, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  name: oCRFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-199">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-199">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-200">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-200">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInputWithHttpOperationResponse(language: string, imageStream: stream.Readable, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-201">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-201">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="c0585-202">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-202">The image file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-203">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-203">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-204">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-204">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-205">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-205">Language of the terms.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-206">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-206">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-207">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-207">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-208">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-208">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-209">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-209">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options: function, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  name: oCRMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-210">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-210">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-211">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-211">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethodWithHttpOperationResponse(language: string, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-212">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-212">Language of the terms.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-213">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-213">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-214">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-214">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-215">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-215">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-216">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-216">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-217">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-217">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-218">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-218">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-219">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-219">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-220">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-220">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-221">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-221">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options: function, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  name: oCRUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="c0585-222">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="c0585-222">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="c0585-223">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="c0585-223">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInputWithHttpOperationResponse(language: string, contentType: string, imageUrl: BodyModel, options?: function)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="c0585-224">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="c0585-224">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="c0585-225">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="c0585-225">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="c0585-226">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="c0585-226">The image url.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.BodyModel
  spec.typeScript:
  - name: BodyModel
    fullName: BodyModel
    uid: azure-cognitiveservices-contentmoderator.BodyModel
- uid: Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.OCR>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>>'
    fullName: '>>'
