### YamlMime:UniversalReference
ms.openlocfilehash: f770d41079731aee612e5a393205ce5c933d59b6
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41700973"
items:
- uid: azure-cognitiveservices-contentmoderator.ImageModeration
  name: ImageModeration
  fullName: ImageModeration
  children:
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-101">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-101">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-102">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-102">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-103">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-103">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  name: evaluateFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-104">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-104">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  name: evaluateFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-105">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-105">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-106">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-106">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-107">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-107">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-108">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-108">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  name: evaluateMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-109">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-109">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  name: evaluateMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-110">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-110">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethodWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-111">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-111">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-112">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-112">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-113">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-113">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-114">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-114">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  name: evaluateUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-115">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-115">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  name: evaluateUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-116">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="e1373-116">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-117">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-117">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-118">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-118">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-119">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-119">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-120">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-120">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  name: findFaces
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-121">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-121">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-122">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-122">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-123">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-123">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-124">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-124">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  name: findFacesFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-125">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-125">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  name: findFacesFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-126">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-126">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-127">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-127">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-128">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-128">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-129">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-129">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-130">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-130">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-131">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-131">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  name: findFacesUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-132">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-132">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  name: findFacesUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-133">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-133">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-134">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-134">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-135">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-135">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  name: findFacesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-136">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="e1373-136">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-137">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-137">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-138">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-138">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-139">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-139">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-140">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-140">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-141">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-141">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-142">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-142">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-143">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-143">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-144">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-144">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-145">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-145">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  name: matchFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-146">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-146">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-147">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-147">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-148">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-148">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-149">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-149">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  name: matchFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-150">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-150">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-151">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-151">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-152">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-152">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-153">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-153">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-154">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-154">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-155">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-155">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-156">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-156">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-157">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-157">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-158">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-158">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-159">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-159">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-160">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-160">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-161">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-161">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-162">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-162">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  name: matchMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-163">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-163">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-164">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-164">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-165">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-165">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-166">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-166">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  name: matchMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-167">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-167">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-168">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-168">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-169">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-169">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-170">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-170">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethodWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-171">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-171">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-172">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-172">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-173">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-173">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-174">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-174">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-175">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-175">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-176">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-176">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-177">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-177">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-178">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-178">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-179">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-179">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-180">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-180">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  name: matchUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-181">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-181">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-182">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-182">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-183">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-183">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-184">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-184">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  name: matchUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="e1373-185">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="e1373-185">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="e1373-186">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="e1373-186">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="e1373-187">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="e1373-187">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="e1373-188">Примечание: Обновления индекса должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="e1373-188">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-189">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-189">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-190">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-190">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-191">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-191">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-192">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-192">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-193">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-193">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-194">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-194">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-195">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-195">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-196">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-196">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  name: oCRFileInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-197">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-197">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-198">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-198">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  name: oCRFileInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-199">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-199">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-200">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-200">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInputWithHttpOperationResponse(language: string, imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-201">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-201">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e1373-202">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-202">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-203">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-203">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-204">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-204">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-205">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-205">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-206">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-206">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-207">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-207">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  name: oCRMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-208">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-208">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-209">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-209">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  name: oCRMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-210">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-210">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-211">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-211">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethodWithHttpOperationResponse(language: string, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-212">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-212">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-213">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-213">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-214">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-214">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-215">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-215">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-216">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-216">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-217">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-217">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-218">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-218">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-219">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-219">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  name: oCRUrlInput
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-220">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-220">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-221">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-221">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  name: oCRUrlInputWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e1373-222">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="e1373-222">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="e1373-223">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="e1373-223">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInputWithHttpOperationResponse(language: string, contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="e1373-224">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="e1373-224">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="e1373-225">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="e1373-225">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="e1373-226">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="e1373-226">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.BodyModel
  spec.typeScript:
  - name: BodyModel
    fullName: BodyModel
    uid: azure-cognitiveservices-contentmoderator.BodyModel
- uid: Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.OCR>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>>'
    fullName: '>>'
