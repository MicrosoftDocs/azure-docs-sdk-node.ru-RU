### YamlMime:UniversalReference
ms.openlocfilehash: 5c472bbcb7b5427294bf0ce559bf818d95eaa21d
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52148299"
items:
- uid: azure-cognitiveservices-contentmoderator.ImageModeration
  name: ImageModeration
  fullName: ImageModeration
  children:
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  - azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput
  name: evaluateFileInput(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-101">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-101">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-102">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-102">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2
  name: evaluateFileInput(stream.Readable, Object, ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-103">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-103">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1
  name: evaluateFileInput(stream.Readable, ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-104">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-104">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInput(imageStream: stream.Readable, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse
  name: evaluateFileInputWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-105">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-105">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-106">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-106">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod
  name: evaluateMethod(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-107">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-107">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2
  name: evaluateMethod(Object, ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-108">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-108">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1
  name: evaluateMethod(ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-109">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-109">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethod(callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse
  name: evaluateMethodWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-110">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-110">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateMethodWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput
  name: evaluateUrlInput(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-111">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-111">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-112">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-112">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-113">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-113">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2
  name: evaluateUrlInput(string, BodyModel, Object, ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-114">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-114">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1
  name: evaluateUrlInput(string, BodyModel, ServiceCallback<Evaluate>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-115">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-115">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<Evaluate>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse
  name: evaluateUrlInputWithHttpOperationResponse(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-116">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="8116e-116">Returns probabilities of the image containing racy or adult content.</span></span>
  syntax:
    content: 'function evaluateUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-117">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-117">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-118">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-118">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces
  name: findFaces(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-119">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-119">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_2
  name: findFaces(Object, ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-120">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-120">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFaces_1
  name: findFaces(ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-121">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-121">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFaces(callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput
  name: findFacesFileInput(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-122">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-122">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-123">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-123">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2
  name: findFacesFileInput(stream.Readable, Object, ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-124">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-124">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1
  name: findFacesFileInput(stream.Readable, ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-125">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-125">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInput(imageStream: stream.Readable, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse
  name: findFacesFileInputWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-126">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-126">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-127">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-127">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput
  name: findFacesUrlInput(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-128">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-128">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-129">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-129">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-130">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-130">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2
  name: findFacesUrlInput(string, BodyModel, Object, ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-131">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-131">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1
  name: findFacesUrlInput(string, BodyModel, ServiceCallback<FoundFaces>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-132">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-132">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<FoundFaces>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse
  name: findFacesUrlInputWithHttpOperationResponse(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-133">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-133">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-134">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-134">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-135">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-135">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse
  name: findFacesWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-136">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="8116e-136">Returns the list of faces found.</span></span>
  syntax:
    content: 'function findFacesWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput
  name: matchFileInput(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-137">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-137">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-138">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-138">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-139">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-139">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-140">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-140">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-141">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-141">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2
  name: matchFileInput(stream.Readable, Object, ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-142">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-142">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-143">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-143">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-144">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-144">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-145">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-145">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1
  name: matchFileInput(stream.Readable, ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-146">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-146">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-147">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-147">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-148">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-148">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-149">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-149">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInput(imageStream: stream.Readable, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse
  name: matchFileInputWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-150">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-150">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-151">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-151">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-152">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-152">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-153">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-153">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchFileInputWithHttpOperationResponse(imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-154">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-154">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod
  name: matchMethod(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-155">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-155">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-156">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-156">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-157">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-157">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-158">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-158">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_2
  name: matchMethod(Object, ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-159">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-159">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-160">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-160">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-161">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-161">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-162">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-162">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod_1
  name: matchMethod(ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-163">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-163">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-164">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-164">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-165">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-165">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-166">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-166">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethod(callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse
  name: matchMethodWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-167">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-167">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-168">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-168">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-169">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-169">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-170">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-170">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchMethodWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput
  name: matchUrlInput(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-171">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-171">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-172">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-172">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-173">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-173">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-174">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-174">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-175">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-175">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-176">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-176">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2
  name: matchUrlInput(string, BodyModel, Object, ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-177">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-177">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-178">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-178">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-179">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-179">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-180">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-180">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1
  name: matchUrlInput(string, BodyModel, ServiceCallback<MatchResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-181">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-181">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-182">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-182">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-183">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-183">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-184">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-184">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<MatchResponse>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse
  name: matchUrlInputWithHttpOperationResponse(string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="8116e-185">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="8116e-185">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="8116e-186">Можно создавать и управлять списками пользовательский образ с помощью <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="8116e-186">You can create and manage your custom image lists using <a

    href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>

    <span data-ttu-id="8116e-187">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="8116e-187">Returns ID and tags of matching image.</span></span><br/>

    <br/>

    <span data-ttu-id="8116e-188">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="8116e-188">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
  syntax:
    content: 'function matchUrlInputWithHttpOperationResponse(contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-189">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-189">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-190">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-190">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput
  name: oCRFileInput(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-191">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-191">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-192">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-192">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-193">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-193">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-194">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-194">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2
  name: oCRFileInput(string, stream.Readable, Object, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-195">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-195">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-196">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-196">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1
  name: oCRFileInput(string, stream.Readable, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-197">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-197">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-198">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-198">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInput(language: string, imageStream: stream.Readable, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: imageStream
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse
  name: oCRFileInputWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-199">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-199">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-200">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-200">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRFileInputWithHttpOperationResponse(language: string, imageStream: stream.Readable, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-201">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-201">Language of the terms.</span></span>
    - id: imageStream
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="8116e-202">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-202">The image file.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod
  name: oCRMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-203">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-203">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-204">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-204">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-205">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-205">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2
  name: oCRMethod(string, Object, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-206">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-206">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-207">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-207">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1
  name: oCRMethod(string, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-208">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-208">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-209">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-209">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethod(language: string, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse
  name: oCRMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-210">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-210">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-211">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-211">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRMethodWithHttpOperationResponse(language: string, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-212">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-212">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput
  name: oCRUrlInput(string, string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-213">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-213">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-214">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-214">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-215">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-215">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-216">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-216">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-217">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-217">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2
  name: oCRUrlInput(string, string, BodyModel, Object, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-218">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-218">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-219">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-219">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options: Object, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1
  name: oCRUrlInput(string, string, BodyModel, ServiceCallback<OCR>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-220">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-220">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-221">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-221">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, callback: ServiceCallback<OCR>)'
    parameters:
    - id: language
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.OCR>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse
  name: oCRUrlInputWithHttpOperationResponse(string, string, BodyModel, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8116e-222">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="8116e-222">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="8116e-223">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="8116e-223">If no language is specified in input then the detection defaults to English.</span></span>
  syntax:
    content: 'function oCRUrlInputWithHttpOperationResponse(language: string, contentType: string, imageUrl: BodyModel, options?: Object)'
    parameters:
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="8116e-224">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="8116e-224">Language of the terms.</span></span>
    - id: contentType
      type:
      - string
      description: >
        <span data-ttu-id="8116e-225">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="8116e-225">The content type.</span></span>
    - id: imageUrl
      type:
      - azure-cognitiveservices-contentmoderator.BodyModel
      description: >
        <span data-ttu-id="8116e-226">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="8116e-226">The image url.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: Promise<azure-cognitiveservices-contentmoderator.Evaluate>
  name: Evaluate>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Evaluate>
  name: Evaluate>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Evaluate>>
  name: Evaluate>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Evaluate
    fullName: Evaluate
    uid: azure-cognitiveservices-contentmoderator.Evaluate
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.BodyModel
  name: BodyModel
  spec.typeScript:
  - name: BodyModel
    fullName: BodyModel
    uid: azure-cognitiveservices-contentmoderator.BodyModel
- uid: Promise<azure-cognitiveservices-contentmoderator.FoundFaces>
  name: FoundFaces>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.FoundFaces>
  name: FoundFaces>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.FoundFaces>>
  name: FoundFaces>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FoundFaces
    fullName: FoundFaces
    uid: azure-cognitiveservices-contentmoderator.FoundFaces
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.MatchResponse>
  name: MatchResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.MatchResponse>
  name: MatchResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.MatchResponse>>
  name: MatchResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: MatchResponse
    fullName: MatchResponse
    uid: azure-cognitiveservices-contentmoderator.MatchResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.OCR>
  name: OCR>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.OCR>
  name: OCR>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.OCR>>
  name: OCR>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OCR
    fullName: OCR
    uid: azure-cognitiveservices-contentmoderator.OCR
  - name: '>>'
    fullName: '>>'
