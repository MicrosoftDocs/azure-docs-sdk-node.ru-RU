### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    fullName: SpeechTranslationConfig
    children:
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    langs:
      - typeScript
    type: class
    summary: Конфигурация перевода речи.
    extends:
      name: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
    name: addTargetLanguage(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Добавление целевого языка для преобразования в (текст).
    syntax:
      content: 'function addTargetLanguage(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: |
            Язык, например de-DE
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Получает или задает маркер авторизации.
      Примечание. Вызывающий объект должен проверить допустимость маркера проверки подлинности. До истечения срока действия маркера авторизации, вызывающему объекту необходимо обновить его путем вызова этого метода установки с новым допустимым маркером.
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Освободить связанные ресурсы.
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Получает или задает идентификатор конечной точки, настроенные речи модели, которая используется для распознавания речи.'
    syntax:
      content: 'public endpointId: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Статический экземпляр SpeechTranslationConfig, возвращаемых путем передачи область токена и службы авторизации.
      Примечание. Вызывающий объект должен проверить допустимость маркера проверки подлинности. До истечения срока действия маркера авторизации, вызывающему объекту необходимо обновить его, задав authorizationToken свойство с новым допустимым маркером. В противном случае все распознавателями, созданными этим экземпляром SpeechTranslationConfig будут возникать ошибки во время распознавания.
      При копировании значения конфигурации при создании нового распознаватель новым значением маркера не будет применяться к распознаватели, которые уже были созданы.
      Для распознаватели, созданные перед необходимо задать маркер авторизации соответствующий распознавателя обновить токен. В противном случае распознаватели будут возникать ошибки во время распознавания.
    syntax:
      content: 'static function fromAuthorizationToken(authorizationToken: string, region: string)'
      parameters:
        - id: authorizationToken
          type:
            - string
          description: Маркер авторизации.
        - id: region
          type:
            - string
          description: 'Имя региона (см. в разделе <a href="https://aka.ms/csspeech/region">область страницы</a>).'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
    name: 'fromEndpoint(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Создает экземпляр конфигурации перевод речи с заданной конечной точки и ключ подписки.
      Этот метод предназначен только для пользователей, которые используют нестандартные службы конечной точки или параметры.
      Примечание. Свойства запроса, указанного в URL-адрес конечной точки, не изменяются, даже если они заданы с других API. Например, если язык задан в uri как параметр запроса «языка = de-DE», а также задать в свойстве speechRecognitionLanguage, приоритет имеет параметр языка в uri, и эффективный язык «de-DE».
      Только свойства, которые не описаны в конечной точке URL-адрес можно задать другие API-интерфейсами.
      Примечание. Чтобы использовать маркер авторизации с fromEndpoint, передать пустую строку для subscriptionKey в методе fromEndpoint и задайте authorizationToken = «token» на созданный экземпляр SpeechConfig использовать маркер авторизации.
    syntax:
      content: 'static function fromEndpoint(endpoint: URL, subscriptionKey: string)'
      parameters:
        - id: endpoint
          type:
            - URL
          description: Для подключения к конечной точки службы.
        - id: subscriptionKey
          type:
            - string
          description: Ключ подписки.
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
    name: 'fromSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Статический экземпляр SpeechTranslationConfig возвращен, передав ключ подписки и региона службы.'
    syntax:
      content: 'static function fromSubscription(subscriptionKey: string, region: string)'
      parameters:
        - id: subscriptionKey
          type:
            - string
          description: Ключ подписки.
        - id: region
          type:
            - string
          description: 'Имя региона (см. в разделе <a href="https://aka.ms/csspeech/region">область страницы</a>).'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
    name: 'getProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает текущее значение произвольные свойства.
    syntax:
      content: 'function getProperty(name: string, def?: string)'
      parameters:
        - id: name
          type:
            - string
          description: Имя свойства для запроса.
        - id: def
          type:
            - string
          description: 'Значение, возвращаемое в случае, если свойство не известен.'
          optional: true
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: Получает или задает формат вывода.
    syntax:
      content: 'public outputFormat: OutputFormat'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Задает именованное свойство в качестве значения
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: Имя свойства.
        - id: value
          type:
            - string
          description: |
            Значение.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
    name: 'setProxy(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает конфигурацию прокси-сервера.
      Применимо только в средах Node.js.
      Добавлена в версии 1.4.0.
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: Имя узла прокси-сервера.
        - id: proxyPort
          type:
            - number
          description: |
            Номер порта прокси-сервера.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Задает конфигурацию прокси-сервера.
      Применимо только в средах Node.js.
      Добавлена в версии 1.4.0.
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: 'Имя узла прокси-сервера, без схемы протокола (http://)'
        - id: proxyPort
          type:
            - number
          description: ''
        - id: proxyUserName
          type:
            - string
          description: Имя пользователя прокси-сервера.
        - id: proxyPassword
          type:
            - string
          description: |
            Пароль прокси-сервера.
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: Получает или задает язык распознавания речи.
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
    name: targetLanguages
    fullName: targetLanguages
    children: []
    langs:
      - typeScript
    type: property
    summary: Возвращает целевой язык (текст) для преобразования в.
    syntax:
      content: 'public targetLanguages: string[]'
      return:
        type:
          - 'string[]'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    name: voiceName
    fullName: voiceName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Получает или задает голосовой переведенные языка, включить вывод голоса синтеза.'
    syntax:
      content: 'public voiceName: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    spec.typeScript:
      - name: SpeechTranslationConfig
        fullName: SpeechTranslationConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig