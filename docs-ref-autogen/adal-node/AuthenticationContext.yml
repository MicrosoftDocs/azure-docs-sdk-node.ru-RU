### YamlMime:UniversalReference
ms.openlocfilehash: 5b26e2e8d37b7e100c33489055ed7e76cdaf2099
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41685273"
items:
- uid: adal-node.AuthenticationContext
  name: AuthenticationContext
  fullName: AuthenticationContext
  children:
  - adal-node.AuthenticationContext.acquireToken
  - adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  - adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  - adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  - adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  - adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  - adal-node.AuthenticationContext.acquireUserCode
  - adal-node.AuthenticationContext.constructor
  - adal-node.AuthenticationContext.authority
  - adal-node.AuthenticationContext.cache
  - adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  - adal-node.AuthenticationContext.correlationId
  - adal-node.AuthenticationContext.options
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireToken
  name: acquireToken
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-101">Получает токен для данного ресурса.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-101">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireToken(resource: string, userId: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-102">URI, идентифицирующий ресурс, для которого маркер является допустимым.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-102">A URI that identifies the resource for which the token is valid.</span></span>
    - id: userId
      type:
      - string
      description: <span data-ttu-id="5ca0b-103">Имя пользователя, от имени этого приложение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-103">The username of the user on behalf this application is authenticating.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-104">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-104">The OAuth client id of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-105">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-105">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  name: acquireTokenWithAuthorizationCode
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-106">Получает токен для данного ресурса.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-106">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithAuthorizationCode(authorizationCode: string, redirectUri: string, resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: authorizationCode
      type:
      - string
      description: <span data-ttu-id="5ca0b-107">Код авторизации, возвращаемых из клиента.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-107">An authorization code returned from a client.</span></span>
    - id: redirectUri
      type:
      - string
      description: <span data-ttu-id="5ca0b-108">Uri перенаправления, который использовался в вызове authorize.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-108">The redirect uri that was used in the authorize call.</span></span>
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-109">URI, идентифицирующий ресурс, для которого маркер является допустимым.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-109">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-110">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-110">The OAuth client id of the calling application.</span></span>
    - id: clientSecret
      type:
      - string
      description: <span data-ttu-id="5ca0b-111">Секрет клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-111">The OAuth client secret of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-112">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-112">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  name: acquireTokenWithClientCertificate
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-113">Получает новый доступ маркер с помощью с помощью учетных данных сертификата.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-113">Gets a new access token using via a certificate credential.</span></span>
  syntax:
    content: 'function acquireTokenWithClientCertificate(resource: string, clientId: string, certificate: string, thumbprint: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-114">URI, идентифицирующий ресурс, для которого маркер является допустимым.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-114">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-115">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-115">The OAuth client id of the calling application.</span></span>
    - id: certificate
      type:
      - string
      description: <span data-ttu-id="5ca0b-116">Закрытый ключ сертификат в кодировке PEM.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-116">A PEM encoded certificate private key.</span></span>
    - id: thumbprint
      type:
      - string
      description: <span data-ttu-id="5ca0b-117">Отпечаток сертификата в кодировке hex.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-117">A hex encoded thumbprint of the certificate.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-118">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-118">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  name: acquireTokenWithClientCredentials
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-119">Получает токен для данного ресурса.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-119">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithClientCredentials(resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-120">URI, идентифицирующий ресурс, для которого маркер является допустимым.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-120">A URI that identifies the resource for which the token is valid.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-121">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-121">The OAuth client id of the calling application.</span></span>
    - id: clientSecret
      type:
      - string
      description: <span data-ttu-id="5ca0b-122">Секрет клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-122">The OAuth client secret of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-123">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-123">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  name: acquireTokenWithDeviceCode
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-124">Получает новый доступ маркер с помощью с помощью кода устройства.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-124">Gets a new access token using via a device code.</span></span>
  syntax:
    content: 'function acquireTokenWithDeviceCode(resource: string, clientId: string, userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-125">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-125">The OAuth client id of the calling application.</span></span>
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: <span data-ttu-id="5ca0b-126">Содержит device_code, интервал повторных попыток и истечения времени для запроса для получения маркера.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-126">Contains device_code, retry interval, and expire time for the request for get the token.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-127">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-127">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  name: acquireTokenWithRefreshToken
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-128">Получает новый доступ через маркер обновления, ранее выданный маркер.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-128">Gets a new access token via a previously issued refresh token.</span></span>
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, clientSecret: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: ''
    - id: clientSecret
      type:
      - string
      description: ''
    - id: resource
      type:
      - string
      description: ''
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  name: acquireTokenWithRefreshToken
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-129">Получает новый доступ через маркер обновления, ранее выданный маркер.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-129">Gets a new access token via a previously issued refresh token.</span></span>
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: <span data-ttu-id="5ca0b-130">Маркер обновления, возвращаемых в ответе tokne из предыдущего вызова acquireToken.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-130">A refresh token returned in a tokne response from a previous invocation of acquireToken.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-131">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-131">The OAuth client id of the calling application.</span></span>
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-132">Ресурс OAuth, для которого маркер выполняется запрос.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-132">The OAuth resource for which a token is being request.</span></span>  <span data-ttu-id="5ca0b-133">Этот параметр является необязательным и может быть присвоено значение null.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-133">This parameter is optional and can be set to null.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-134">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-134">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  name: acquireTokenWithUsernamePassword
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-135">Получает токен для данного ресурса.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-135">Gets a token for a given resource.</span></span>
  syntax:
    content: 'function acquireTokenWithUsernamePassword(resource: string, username: string, password: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-136">URI, идентифицирующий ресурс, для которого маркер является допустимым.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-136">A URI that identifies the resource for which the token is valid.</span></span>
    - id: username
      type:
      - string
      description: <span data-ttu-id="5ca0b-137">Имя пользователя, от имени этого приложение проходит проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-137">The username of the user on behalf this application is authenticating.</span></span>
    - id: password
      type:
      - string
      description: <span data-ttu-id="5ca0b-138">Пароль пользователя, указанного в параметре имени пользователя.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-138">The password of the user named in the username parameter.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-139">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-139">The OAuth client id of the calling application.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-140">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-140">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireUserCode
  name: acquireUserCode
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-141">Получает userCodeInfo, который содержит user_code device_code для проверки подлинности пользователя на устройстве.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-141">Gets the userCodeInfo which contains user_code, device_code for authenticating user on device.</span></span>
  syntax:
    content: 'function acquireUserCode(resource: string, clientId: string, language: string, callback: AcquireUserCodeCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: <span data-ttu-id="5ca0b-142">URI, определяющий ресурс, для которого device_code и user_code является допустимым для.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-142">A URI that identifies the resource for which the device_code and user_code is valid for.</span></span>
    - id: clientId
      type:
      - string
      description: <span data-ttu-id="5ca0b-143">Идентификатор клиента OAuth вызывающего приложения.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-143">The OAuth client id of the calling application.</span></span>
    - id: language
      type:
      - string
      description: <span data-ttu-id="5ca0b-144">Код языка, указывающий, как сообщение должно быть локализовано для.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-144">The language code specifying how the message should be localized to.</span></span>
    - id: callback
      type:
      - adal-node.AcquireUserCodeCallback
      description: >
        <span data-ttu-id="5ca0b-145">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-145">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.constructor
  name: AuthenticationContext
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-146">Создает новый объект AuthenticationContext.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-146">Creates a new AuthenticationContext object.</span></span>  <span data-ttu-id="5ca0b-147">По умолчанию полномочия будут проверяться список известных центров Azure Active Directory.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-147">By default the authority will be checked against a list of known Azure Active Directory authorities.</span></span>  <span data-ttu-id="5ca0b-148">Если полномочия не является одним из этих центров известное получения маркера произойдет сбой.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-148">If the authority is not recognized as one of these well known authorities then token acquisition will fail.</span></span>  <span data-ttu-id="5ca0b-149">Это поведение можно отключить с помощью параметра validateAuthority ниже.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-149">This behavior can be turned off via the validateAuthority parameter below.</span></span>
  syntax:
    content: 'new AuthenticationContext(authority: string, validateAuthority?: boolean, cache?: TokenCache)'
    parameters:
    - id: authority
      type:
      - string
      description: <span data-ttu-id="5ca0b-150">URL-адрес, определяющий центром токена.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-150">A URL that identifies a token authority.</span></span>
    - id: validateAuthority
      type:
      - boolean
      description: ''
      optional: true
    - id: cache
      type:
      - adal-node.TokenCache
      description: ''
      optional: true
  package: adal-node
- uid: adal-node.AuthenticationContext.authority
  name: authority
  fullName: authority
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5ca0b-151">Центр сертификации {строка} URL-адрес, который идентифицирует центром токена.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-151">{string}  authority A URL that identifies a token authority.</span></span>
  syntax:
    content: 'public authority: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.cache
  name: cache
  fullName: cache
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5ca0b-152">{TokenCache} кэша кэш маркеров, используемый данным экземпляром AuthenticationContext</span><span class="sxs-lookup"><span data-stu-id="5ca0b-152">{TokenCache} cache The token cache used by this AuthenticationContext instance</span></span>
  syntax:
    content: 'public cache: TokenCache'
    return:
      type:
      - adal-node.TokenCache
  package: adal-node
- uid: adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  name: cancelRequestToGetTokenWithDeviceCode
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5ca0b-153">Отменяет опрашивающий запрос, чтобы получить маркер с помощью кода устройства.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-153">Cancels the polling request to get token with device code.</span></span>
  syntax:
    content: 'function cancelRequestToGetTokenWithDeviceCode(userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: <span data-ttu-id="5ca0b-154">Содержит device_code, интервал повторных попыток и истечения времени для запроса для получения маркера.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-154">Contains device_code, retry interval, and expire time for the request for get the token.</span></span>
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        <span data-ttu-id="5ca0b-155">Функция обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-155">The callback function.</span></span>
  package: adal-node
- uid: adal-node.AuthenticationContext.correlationId
  name: correlationId
  fullName: correlationId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5ca0b-156">{Строка} correlationId идентификатор корреляции, который будет использоваться для следующего запроса acquireToken.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-156">{string} correlationId The correlation id that will be used for the next acquireToken request.</span></span>
  syntax:
    content: 'public correlationId: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.options
  name: options
  fullName: options
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="5ca0b-157">{любой} параметры, которые применяются к запросам, созданным экземпляром AuthenticationContext.</span><span class="sxs-lookup"><span data-stu-id="5ca0b-157">{any} options Options that are applied to requests generated by this AuthenticationContext instance.</span></span>
  syntax:
    content: 'public options: any'
    return:
      type:
      - any
  package: adal-node
references:
- uid: adal-node.TokenCache
  spec.typeScript:
  - name: TokenCache
    fullName: TokenCache
    uid: adal-node.TokenCache
- uid: adal-node.AcquireTokenCallback
  spec.typeScript:
  - name: AcquireTokenCallback
    fullName: AcquireTokenCallback
    uid: adal-node.AcquireTokenCallback
- uid: adal-node.UserCodeInfo
  spec.typeScript:
  - name: UserCodeInfo
    fullName: UserCodeInfo
    uid: adal-node.UserCodeInfo
- uid: adal-node.AcquireUserCodeCallback
  spec.typeScript:
  - name: AcquireUserCodeCallback
    fullName: AcquireUserCodeCallback
    uid: adal-node.AcquireUserCodeCallback
