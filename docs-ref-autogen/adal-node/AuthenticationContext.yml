### YamlMime:UniversalReference
ms.openlocfilehash: 718b5e201a01e0a07231aa2a48f11df17d286ec6
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52167849"
items:
- uid: adal-node.AuthenticationContext
  name: AuthenticationContext
  fullName: AuthenticationContext
  children:
  - adal-node.AuthenticationContext.acquireToken
  - adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  - adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  - adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  - adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  - adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  - adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  - adal-node.AuthenticationContext.acquireUserCode
  - adal-node.AuthenticationContext.constructor
  - adal-node.AuthenticationContext.authority
  - adal-node.AuthenticationContext.cache
  - adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  - adal-node.AuthenticationContext.correlationId
  - adal-node.AuthenticationContext.options
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireToken
  name: acquireToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает токен для данного ресурса.
  syntax:
    content: 'function acquireToken(resource: string, userId: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: URI, идентифицирующий ресурс, для которого маркер является допустимым.
    - id: userId
      type:
      - string
      description: Имя пользователя, от имени этого приложение проходит проверку подлинности.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithAuthorizationCode
  name: acquireTokenWithAuthorizationCode(string, string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает токен для данного ресурса.
  syntax:
    content: 'function acquireTokenWithAuthorizationCode(authorizationCode: string, redirectUri: string, resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: authorizationCode
      type:
      - string
      description: Код авторизации, возвращаемых из клиента.
    - id: redirectUri
      type:
      - string
      description: Uri перенаправления, который использовался в вызове authorize.
    - id: resource
      type:
      - string
      description: URI, идентифицирующий ресурс, для которого маркер является допустимым.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: clientSecret
      type:
      - string
      description: Секрет клиента OAuth вызывающего приложения.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCertificate
  name: acquireTokenWithClientCertificate(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает новый доступ маркер с помощью с помощью учетных данных сертификата.
  syntax:
    content: 'function acquireTokenWithClientCertificate(resource: string, clientId: string, certificate: string, thumbprint: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: URI, идентифицирующий ресурс, для которого маркер является допустимым.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: certificate
      type:
      - string
      description: Закрытый ключ сертификат в кодировке PEM.
    - id: thumbprint
      type:
      - string
      description: Отпечаток сертификата в кодировке hex.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithClientCredentials
  name: acquireTokenWithClientCredentials(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает токен для данного ресурса.
  syntax:
    content: 'function acquireTokenWithClientCredentials(resource: string, clientId: string, clientSecret: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: URI, идентифицирующий ресурс, для которого маркер является допустимым.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: clientSecret
      type:
      - string
      description: Секрет клиента OAuth вызывающего приложения.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithDeviceCode
  name: acquireTokenWithDeviceCode(string, string, UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает новый доступ маркер с помощью с помощью кода устройства.
  syntax:
    content: 'function acquireTokenWithDeviceCode(resource: string, clientId: string, userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: Содержит device_code, интервал повторных попыток и истечения времени для запроса для получения маркера.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken
  name: acquireTokenWithRefreshToken(string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает новый доступ через маркер обновления, ранее выданный маркер.
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: Маркер обновления, возвращаемых в ответе tokne из предыдущего вызова acquireToken.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: resource
      type:
      - string
      description: Ресурс OAuth, для которого маркер выполняется запрос.  Этот параметр является необязательным и может быть присвоено значение null.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithRefreshToken_1
  name: acquireTokenWithRefreshToken(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает новый доступ через маркер обновления, ранее выданный маркер.
  syntax:
    content: 'function acquireTokenWithRefreshToken(refreshToken: string, clientId: string, clientSecret: string, resource: string, callback: AcquireTokenCallback)'
    parameters:
    - id: refreshToken
      type:
      - string
      description: ''
    - id: clientId
      type:
      - string
      description: ''
    - id: clientSecret
      type:
      - string
      description: ''
    - id: resource
      type:
      - string
      description: ''
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: ''
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireTokenWithUsernamePassword
  name: acquireTokenWithUsernamePassword(string, string, string, string, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает токен для данного ресурса.
  syntax:
    content: 'function acquireTokenWithUsernamePassword(resource: string, username: string, password: string, clientId: string, callback: AcquireTokenCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: URI, идентифицирующий ресурс, для которого маркер является допустимым.
    - id: username
      type:
      - string
      description: Имя пользователя, от имени этого приложение проходит проверку подлинности.
    - id: password
      type:
      - string
      description: Пароль пользователя, указанного в параметре имени пользователя.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.acquireUserCode
  name: acquireUserCode(string, string, string, AcquireUserCodeCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает userCodeInfo, который содержит user_code device_code для проверки подлинности пользователя на устройстве.
  syntax:
    content: 'function acquireUserCode(resource: string, clientId: string, language: string, callback: AcquireUserCodeCallback)'
    parameters:
    - id: resource
      type:
      - string
      description: URI, определяющий ресурс, для которого device_code и user_code является допустимым для.
    - id: clientId
      type:
      - string
      description: Идентификатор клиента OAuth вызывающего приложения.
    - id: language
      type:
      - string
      description: Код языка, указывающий, как сообщение должно быть локализовано для.
    - id: callback
      type:
      - adal-node.AcquireUserCodeCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.constructor
  name: AuthenticationContext(string, undefined | false | true, TokenCache)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Создает новый объект AuthenticationContext.  По умолчанию полномочия будут проверяться список известных центров Azure Active Directory.  Если полномочия не является одним из этих центров известное получения маркера произойдет сбой.  Это поведение можно отключить с помощью параметра validateAuthority ниже.
  syntax:
    content: 'new AuthenticationContext(authority: string, validateAuthority?: undefined | false | true, cache?: TokenCache)'
    parameters:
    - id: authority
      type:
      - string
      description: URL-адрес, определяющий центром токена.
    - id: validateAuthority
      type:
      - undefined | false | true
      description: ''
      optional: true
    - id: cache
      type:
      - adal-node.TokenCache
      description: ''
      optional: true
  package: adal-node
- uid: adal-node.AuthenticationContext.authority
  name: authority
  fullName: authority
  children: []
  langs:
  - typeScript
  type: property
  summary: Центр сертификации {строка} URL-адрес, который идентифицирует центром токена.
  syntax:
    content: 'public authority: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.cache
  name: cache
  fullName: cache
  children: []
  langs:
  - typeScript
  type: property
  summary: '{TokenCache} кэша кэш маркеров, используемый данным экземпляром AuthenticationContext'
  syntax:
    content: 'public cache: TokenCache'
    return:
      type:
      - adal-node.TokenCache
  package: adal-node
- uid: adal-node.AuthenticationContext.cancelRequestToGetTokenWithDeviceCode
  name: cancelRequestToGetTokenWithDeviceCode(UserCodeInfo, AcquireTokenCallback)
  children: []
  type: method
  langs:
  - typeScript
  summary: Отменяет опрашивающий запрос, чтобы получить маркер с помощью кода устройства.
  syntax:
    content: 'function cancelRequestToGetTokenWithDeviceCode(userCodeInfo: UserCodeInfo, callback: AcquireTokenCallback)'
    parameters:
    - id: userCodeInfo
      type:
      - adal-node.UserCodeInfo
      description: Содержит device_code, интервал повторных попыток и истечения времени для запроса для получения маркера.
    - id: callback
      type:
      - adal-node.AcquireTokenCallback
      description: >
        Функция обратного вызова.
  package: adal-node
- uid: adal-node.AuthenticationContext.correlationId
  name: correlationId
  fullName: correlationId
  children: []
  langs:
  - typeScript
  type: property
  summary: '{Строка} correlationId идентификатор корреляции, который будет использоваться для следующего запроса acquireToken.'
  syntax:
    content: 'public correlationId: string'
    return:
      type:
      - string
  package: adal-node
- uid: adal-node.AuthenticationContext.options
  name: options
  fullName: options
  children: []
  langs:
  - typeScript
  type: property
  summary: '{любой} параметры, которые применяются к запросам, созданным экземпляром AuthenticationContext.'
  syntax:
    content: 'public options: any'
    return:
      type:
      - any
  package: adal-node
references:
- uid: adal-node.TokenCache
  name: TokenCache
  spec.typeScript:
  - name: TokenCache
    fullName: TokenCache
    uid: adal-node.TokenCache
- uid: adal-node.AcquireTokenCallback
  name: AcquireTokenCallback
  spec.typeScript:
  - name: AcquireTokenCallback
    fullName: AcquireTokenCallback
    uid: adal-node.AcquireTokenCallback
- uid: adal-node.UserCodeInfo
  name: UserCodeInfo
  spec.typeScript:
  - name: UserCodeInfo
    fullName: UserCodeInfo
    uid: adal-node.UserCodeInfo
- uid: adal-node.AcquireUserCodeCallback
  name: AcquireUserCodeCallback
  spec.typeScript:
  - name: AcquireUserCodeCallback
    fullName: AcquireUserCodeCallback
    uid: adal-node.AcquireUserCodeCallback
