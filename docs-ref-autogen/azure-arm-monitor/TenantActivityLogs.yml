### YamlMime:UniversalReference
ms.openlocfilehash: c50017beef5eca401ee3caf977dc1e1b944cdb04
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52010868"
items:
- uid: azure-arm-monitor.TenantActivityLogs
  name: TenantActivityLogs
  fullName: TenantActivityLogs
  children:
  - azure-arm-monitor.TenantActivityLogs.list
  - azure-arm-monitor.TenantActivityLogs.list_2
  - azure-arm-monitor.TenantActivityLogs.list_1
  - azure-arm-monitor.TenantActivityLogs.listNext
  - azure-arm-monitor.TenantActivityLogs.listNext_2
  - azure-arm-monitor.TenantActivityLogs.listNext_1
  - azure-arm-monitor.TenantActivityLogs.listNextWithHttpOperationResponse
  - azure-arm-monitor.TenantActivityLogs.listWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-101">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-101">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-102">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-102">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-103">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-103">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.list_2
  name: list(Object, ServiceCallback<EventDataCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-104">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-104">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-105">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-105">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-106">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-106">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<EventDataCollection>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-monitor.EventDataCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.list_1
  name: list(ServiceCallback<EventDataCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-107">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-107">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-108">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-108">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-109">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-109">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<EventDataCollection>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-monitor.EventDataCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.listNext
  name: listNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-110">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-110">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-111">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-111">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-112">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-112">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function listNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="bc42b-113">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="bc42b-113">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.listNext_2
  name: listNext(string, Object, ServiceCallback<EventDataCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-114">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-114">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-115">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-115">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-116">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-116">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function listNext(nextPageLink: string, options: Object, callback: ServiceCallback<EventDataCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-monitor.EventDataCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.listNext_1
  name: listNext(string, ServiceCallback<EventDataCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-117">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-117">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-118">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-118">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-119">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-119">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<EventDataCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-monitor.EventDataCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-monitor.EventDataCollection>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.listNextWithHttpOperationResponse
  name: listNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-120">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-120">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-121">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-121">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-122">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-122">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function listNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="bc42b-123">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="bc42b-123">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-monitor.EventDataCollection>>
  package: azure-arm-monitor
- uid: azure-arm-monitor.TenantActivityLogs.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="bc42b-124">Получает журналы действий для клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-124">Gets the Activity Logs for the Tenant.</span></span><br><span data-ttu-id="bc42b-125">Все, что применимо к API, чтобы получить журналы действий для подписки применяется к этому API (параметры $filter, и т.д.).</span><span class="sxs-lookup"><span data-stu-id="bc42b-125">Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).</span></span><br><span data-ttu-id="bc42b-126">Следует отметить, вот что делает этот API *не* получить журналы в отдельные подписки клиента, но только поверхности журналы, созданные на уровне клиента.</span><span class="sxs-lookup"><span data-stu-id="bc42b-126">One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-monitor.EventDataCollection>>
  package: azure-arm-monitor
references:
- uid: Promise<azure-arm-monitor.EventDataCollection>
  name: EventDataCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventDataCollection
    fullName: EventDataCollection
    uid: azure-arm-monitor.EventDataCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-monitor.EventDataCollection>
  name: EventDataCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventDataCollection
    fullName: EventDataCollection
    uid: azure-arm-monitor.EventDataCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-monitor.EventDataCollection>>
  name: EventDataCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventDataCollection
    fullName: EventDataCollection
    uid: azure-arm-monitor.EventDataCollection
  - name: '>>'
    fullName: '>>'
