### YamlMime:UniversalReference
ms.openlocfilehash: b4e03fb52861a9bc6680bace6ed9e9af650863db
ms.sourcegitcommit: f774f8ce6b26593f73a5893bfa47f9c510fc51a7
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 06/21/2018
ms.locfileid: "40072257"
items:
- uid: ms-rest
  name: ms-rest
  langs:
  - js
  type: package
  summary: ''
  children:
  - ms-rest.WebResource
  - ms-rest.ServiceClient
  - ms-rest.HttpOperationResponse
  - ms-rest.SystemErrorRetryPolicyFilter
  - ms-rest.ExponentialRetryPolicyFilter
  - ms-rest.TokenCredentials
  - ms-rest.BasicAuthenticationCredentials
  - ms-rest.ApiKeyCredentials
  - ms-rest.create
  - ms-rest.setAgent
  - ms-rest.checkRPNotRegisteredError
  - ms-rest.extractSubscriptionUrl
  - ms-rest.registerRP
  - ms-rest.getRegistrationStatus
  - ms-rest.createWithSink
  - ms-rest.createCompositeFilter
  - ms-rest.interimStream
  - ms-rest.serializeObject
  - ms-rest.serialize
  - ms-rest.deserialize
  - ms-rest.urlIsHTTPS
  - ms-rest.objectIsNull
  - ms-rest.encodeUri
  - ms-rest.stripResponse
  - ms-rest.stripRequest
  - ms-rest.isValidUuid
  - ms-rest.objectValues
  - ms-rest.generateUuid
  - ms-rest.homeDir
- uid: ms-rest.create
  id: ms-rest.create
  name: create()
  summary: formDataFilter - этот фильтр является resposnsible для свойства формы для объекта запроса, если заголовок Content-Type — «application/x-www-формы-urlencoded»
  fullName: ms-rest.create()
  type: Function
  syntax:
    content: function create()
  langs:
  - js
- uid: ms-rest.setAgent
  id: ms-rest.setAgent
  name: setAgent(resouce, proxy)
  summary: Агент для использования в запросе результирующий набор зависит от того, параметры прокси-сервера и протокола
  fullName: ms-rest.setAgent(resouce, proxy)
  type: Function
  syntax:
    parameters:
    - id: resouce
      type:
      - object
      description: Параметры запроса для запроса.
    - id: proxy
      type:
      - object
      description: Проанализированный URL-адрес прокси-сервера.
    content: function setAgent(resouce, proxy)
  langs:
  - js
- uid: ms-rest.checkRPNotRegisteredError
  id: ms-rest.checkRPNotRegisteredError
  name: checkRPNotRegisteredError(body)
  summary: Проверяет, код ошибки и сообщение, связанное с кодом состояния 409 ответа. Если он соответствует значению RP не зарегистрирован затем он возвращает имя поставщика ресурсов else возвращает значение undefined.
  fullName: ms-rest.checkRPNotRegisteredError(body)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - string
      description: Текст ответа, после первоначального запроса.
    return:
      type:
      - string
      description: результат имя поставщика ресурсов, если выполняется условие else не указано.
    content: function checkRPNotRegisteredError(body)
  langs:
  - js
- uid: ms-rest.extractSubscriptionUrl
  id: ms-rest.extractSubscriptionUrl
  name: extractSubscriptionUrl(url)
  summary: 'Извлекает первую часть URL-адрес, сразу после подписки: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/'
  fullName: ms-rest.extractSubscriptionUrl(url)
  type: Function
  syntax:
    parameters:
    - id: url
      type:
      - string
      description: Исходный URL-адрес запроса
    return:
      type:
      - string
      description: urlPrefix префикс URL-адреса, как описано выше.
    content: function extractSubscriptionUrl(url)
  langs:
  - js
- uid: ms-rest.registerRP
  id: ms-rest.registerRP
  name: registerRP(urlPrefix, provider, originalRequest, callback)
  summary: Регистрирует данного поставщика.
  fullName: ms-rest.registerRP(urlPrefix, provider, originalRequest, callback)
  type: Function
  syntax:
    parameters:
    - id: urlPrefix
      type:
      - string
      description: https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/
    - id: provider
      type:
      - string
      description: Имя поставщика для регистрации.
    - id: originalRequest
      type:
      - object
      description: Исходного запроса, отправленного пользователем, который вернул 409 ответ с сообщением, что поставщик не зарегистрирован.
    - id: callback
      type:
      - ms-rest.registrationCallback
      description: Обратный вызов, который обрабатывает зарегистрировать поставщика Ресурсов
    content: function registerRP(urlPrefix, provider, originalRequest, callback)
  langs:
  - js
- uid: ms-rest.getRegistrationStatus
  id: ms-rest.getRegistrationStatus
  name: getRegistrationStatus(url, originalRequest, callback)
  summary: >-
    Опрашивает состояние регистрации поставщика, который был зарегистрирован. Опрос происходит с интервалом 30 секунд.

    Опрос будет происходить, пока свойство registrationState тела ответа «зарегистрировано».
  fullName: ms-rest.getRegistrationStatus(url, originalRequest, callback)
  type: Function
  syntax:
    parameters:
    - id: url
      type:
      - string
      description: Запрос URL-адрес для опроса
    - id: originalRequest
      type:
      - object
      description: Исходного запроса, отправленного пользователем, который вернул 409 ответ с сообщением, что поставщик не зарегистрирован.
    - id: callback
      type:
      - ms-rest.registrationCallback
      description: Обратный вызов, который обрабатывает зарегистрировать поставщика Ресурсов.
    content: function getRegistrationStatus(url, originalRequest, callback)
  langs:
  - js
- uid: ms-rest.createWithSink
  id: ms-rest.createWithSink
  name: createWithSink()
  summary: Создайте конвейер клиента http, оканчивающуюся на вызов, чтобы библиотека запросов, с помощью функции данного приемника действительно использовать HTTP-запроса.
  fullName: ms-rest.createWithSink()
  type: Function
  syntax:
    return:
      description: функция (запрос, обратный вызов) - функция для создания запроса.
    content: function createWithSink()
  langs:
  - js
- uid: ms-rest.createCompositeFilter
  id: ms-rest.createCompositeFilter
  name: createCompositeFilter(filters)
  summary: Создайте новый фильтр, который представляет собой сочетание всех фильтров, заданному в списке аргументов.
  fullName: ms-rest.createCompositeFilter(filters)
  type: Function
  syntax:
    parameters:
    - id: filters
      type:
      - ms-rest.varargs
      description: 'для запуска. Первый фильтр в списке в ближайшем к приемнику, таким образом последнего, чтобы запустить перед запросом, во-первых, для запуска в ответ: точно так же, как в том случае, если вызывается pipeline.add или передаваемые pipeline.create списка.'
    return:
      description: новый фильтр.
    content: function createCompositeFilter(filters)
  langs:
  - js
- uid: ms-rest.interimStream
  id: ms-rest.interimStream
  name: interimStream(setPipe)
  summary: Создает промежуточные поток, который возвращается вызывающему объекту синхронно, асинхронных операций может по-прежнему подключить для потоковой передачи выходных данных позже. Используется, когда нужно сделать асинхронной работы, прежде чем они могут вызвать оставшуюся часть конвейера фильтров.
  fullName: ms-rest.interimStream(setPipe)
  type: Function
  syntax:
    parameters:
    - id: setPipe
      description: >-
        функция (входные, выходные данные) Эта функция вызывается синхронно, для передачи двух базовый поток. входные данные должен быть выведен результат следующему фильтру. Должен быть выведен результат следующего выходные данные.

        Довольно часто для входного потока, чтобы предотвратить потерю данных, прежде чем фактически возвращать реальных потока для подключения до приостановки.
    return:
      description: дуплексный поток, который записывает входного потока и создает данные из потока вывода.
    content: function interimStream(setPipe)
  langs:
  - js
- uid: ms-rest.serializeObject
  id: ms-rest.serializeObject
  name: serializeObject(toSerialize)
  summary: Выполняет сериализацию объекта JSON. Он сериализует объект буфера в строку «» в кодировке base64 и объект даты в строку, соответствующих формату ISO8601.
  fullName: ms-rest.serializeObject(toSerialize)
  type: Function
  syntax:
    parameters:
    - id: toSerialize
      type:
      - Object
      description: ''
    return:
      type:
      - Object
      description: serializedObject
    content: function serializeObject(toSerialize)
  langs:
  - js
- uid: ms-rest.serialize
  id: ms-rest.serialize
  name: serialize(mapper, object, objectName)
  summary: Сериализации заданного объекта зависимости от его метаданные, определенные в модуле сопоставления
  fullName: ms-rest.serialize(mapper, object, objectName)
  type: Function
  syntax:
    parameters:
    - id: mapper
      type:
      - object
      description: Сопоставитель, который определяет метаданные сериализованного объекта
    - id: object
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Допустимый объект Javascript для сериализации
    - id: objectName
      type:
      - string
      description: Имя сериализованного объекта
    return:
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Допустимый сериализованный объект Javascript
    content: function serialize(mapper, object, objectName)
  langs:
  - js
- uid: ms-rest.deserialize
  id: ms-rest.deserialize
  name: deserialize(mapper, responseBody, objectName)
  summary: Десериализация данного объекта на основании его метаданные, определенные в модуле сопоставления
  fullName: ms-rest.deserialize(mapper, responseBody, objectName)
  type: Function
  syntax:
    parameters:
    - id: mapper
      type:
      - object
      description: Сопоставитель, который определяет метаданные сериализованного объекта
    - id: responseBody
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Допустимый объект Javascript для десериализации
    - id: objectName
      type:
      - string
      description: Имя десериализованного объекта
    return:
      type:
      - object
      - string
      - Array
      - number
      - boolean
      - Date
      - ms-rest.stream
      description: Является допустимым Десериализованный объект Javascript
    content: function deserialize(mapper, responseBody, objectName)
  langs:
  - js
- uid: ms-rest.urlIsHTTPS
  id: ms-rest.urlIsHTTPS
  name: urlIsHTTPS(urlToCheck)
  summary: Проверяет, является ли анализируемый URL-адрес HTTPS
  fullName: ms-rest.urlIsHTTPS(urlToCheck)
  type: Function
  syntax:
    parameters:
    - id: urlToCheck
      type:
      - object
      description: URL-адрес для проверки
    return:
      type:
      - ms-rest.bool
      description: Значение true, если URL-адрес HTTPS; значение false в противном случае.
    content: function urlIsHTTPS(urlToCheck)
  langs:
  - js
- uid: ms-rest.objectIsNull
  id: ms-rest.objectIsNull
  name: objectIsNull(value)
  summary: Проверяет, является ли значение null или быть неопределенным.
  fullName: ms-rest.objectIsNull(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Значение для проверки null или быть неопределенным.
    return:
      type:
      - ms-rest.bool
      description: Значение true, если значение равно null или undefined, false в противном случае.
    content: function objectIsNull(value)
  langs:
  - js
- uid: ms-rest.encodeUri
  id: ms-rest.encodeUri
  name: encodeUri(uri)
  summary: Кодирует URI.
  fullName: ms-rest.encodeUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: Кодируемый URI.
    return:
      type:
      - string
      description: Зашифрованный URI-адрес.
    content: function encodeUri(uri)
  langs:
  - js
- uid: ms-rest.stripResponse
  id: ms-rest.stripResponse
  name: stripResponse(response)
  summary: Возвращает удаленный версию HTTP-ответа, который содержит только тело, заголовки и код состояния.
  fullName: ms-rest.stripResponse(response)
  type: Function
  syntax:
    parameters:
    - id: response
      type:
      - ms-rest.stream
      description: HTTP-ответа
    return:
      type:
      - object
      description: strippedResponse - удаленный версию HTTP-ответа.
    content: function stripResponse(response)
  langs:
  - js
- uid: ms-rest.stripRequest
  id: ms-rest.stripRequest
  name: stripRequest(request)
  summary: Возвращает удаленный версию HTTP-запроса, который не содержит заголовок авторизации.
  fullName: ms-rest.stripRequest(request)
  type: Function
  syntax:
    parameters:
    - id: request
      type:
      - object
      description: Объект HTTP-запроса
    return:
      type:
      - object
      description: strippedRequest - удаленный версию HTTP-запроса.
    content: function stripRequest(request)
  langs:
  - js
- uid: ms-rest.isValidUuid
  id: ms-rest.isValidUuid
  name: isValidUuid(uuid)
  summary: Проверяет заданный идентификатор uuid как строка
  fullName: ms-rest.isValidUuid(uuid)
  type: Function
  syntax:
    parameters:
    - id: uuid
      type:
      - string
      description: Uuid, как строка, которая должна быть проверена
    return:
      type:
      - boolean
      description: привести - значение True, если идентификатор uuid является допустимым; значение false в противном случае.
    content: function isValidUuid(uuid)
  langs:
  - js
- uid: ms-rest.objectValues
  id: ms-rest.objectValues
  name: objectValues(obj)
  summary: "Предоставляет массив значений объекта. Например для данного объекта {'a': 'foo', 'b': 'bar'}, этот метод возвращает ['foo', 'bar']."
  fullName: ms-rest.objectValues(obj)
  type: Function
  syntax:
    parameters:
    - id: obj
      type:
      - object
      description: Объект, свойства которого необходимо перечислить в том случае, так как это значения можно указать в виде массива
    return:
      type:
      - array
      description: результат — массив значений данного объекта.
    content: function objectValues(obj)
  langs:
  - js
- uid: ms-rest.generateUuid
  id: ms-rest.generateUuid
  name: generateUuid()
  summary: Создаваемый UUID
  fullName: ms-rest.generateUuid()
  type: Function
  syntax:
    return:
      type:
      - string
      description: RFC4122 v4 UUID.
    content: function generateUuid()
  langs:
  - js
- uid: ms-rest.homeDir
  id: ms-rest.homeDir
  name: homeDir()
  summary: Предоставляет путь к корневой каталог.
  fullName: ms-rest.homeDir()
  type: Function
  syntax:
    content: function homeDir()
  langs:
  - js
references:
- uid: ms-rest.WebResource
  name: WebResource
- uid: ms-rest.ServiceClient
  name: ServiceClient
- uid: ms-rest.HttpOperationResponse
  name: HttpOperationResponse
- uid: ms-rest.SystemErrorRetryPolicyFilter
  name: SystemErrorRetryPolicyFilter
- uid: ms-rest.ExponentialRetryPolicyFilter
  name: ExponentialRetryPolicyFilter
- uid: ms-rest.TokenCredentials
  name: TokenCredentials
- uid: ms-rest.BasicAuthenticationCredentials
  name: BasicAuthenticationCredentials
- uid: ms-rest.ApiKeyCredentials
  name: ApiKeyCredentials
