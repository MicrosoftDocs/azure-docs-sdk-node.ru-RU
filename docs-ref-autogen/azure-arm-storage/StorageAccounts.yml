### YamlMime:UniversalReference
ms.openlocfilehash: 33945b61dbd6568d91a15e01777e820b24584032
ms.sourcegitcommit: 0e294f7c4dcdfae9df18ff3e82b6563680ef2519
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/25/2019
ms.locfileid: "55051195"
items:
- uid: azure-arm-storage.StorageAccounts
  name: StorageAccounts
  fullName: StorageAccounts
  children:
  - azure-arm-storage.StorageAccounts.beginCreate
  - azure-arm-storage.StorageAccounts.beginCreate_2
  - azure-arm-storage.StorageAccounts.beginCreate_1
  - azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.beginFailover
  - azure-arm-storage.StorageAccounts.beginFailover_2
  - azure-arm-storage.StorageAccounts.beginFailover_1
  - azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.checkNameAvailability
  - azure-arm-storage.StorageAccounts.checkNameAvailability_2
  - azure-arm-storage.StorageAccounts.checkNameAvailability_1
  - azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.create
  - azure-arm-storage.StorageAccounts.create_2
  - azure-arm-storage.StorageAccounts.create_1
  - azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.deleteMethod
  - azure-arm-storage.StorageAccounts.deleteMethod_2
  - azure-arm-storage.StorageAccounts.deleteMethod_1
  - azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.failover
  - azure-arm-storage.StorageAccounts.failover_2
  - azure-arm-storage.StorageAccounts.failover_1
  - azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.getProperties
  - azure-arm-storage.StorageAccounts.getProperties_2
  - azure-arm-storage.StorageAccounts.getProperties_1
  - azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.list
  - azure-arm-storage.StorageAccounts.list_2
  - azure-arm-storage.StorageAccounts.list_1
  - azure-arm-storage.StorageAccounts.listAccountSAS
  - azure-arm-storage.StorageAccounts.listAccountSAS_2
  - azure-arm-storage.StorageAccounts.listAccountSAS_1
  - azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listByResourceGroup
  - azure-arm-storage.StorageAccounts.listByResourceGroup_2
  - azure-arm-storage.StorageAccounts.listByResourceGroup_1
  - azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listKeys
  - azure-arm-storage.StorageAccounts.listKeys_2
  - azure-arm-storage.StorageAccounts.listKeys_1
  - azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listServiceSAS
  - azure-arm-storage.StorageAccounts.listServiceSAS_2
  - azure-arm-storage.StorageAccounts.listServiceSAS_1
  - azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.regenerateKey
  - azure-arm-storage.StorageAccounts.regenerateKey_2
  - azure-arm-storage.StorageAccounts.regenerateKey_1
  - azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
  - azure-arm-storage.StorageAccounts.update
  - azure-arm-storage.StorageAccounts.update_2
  - azure-arm-storage.StorageAccounts.update_1
  - azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate
  name: beginCreate(string, string, StorageAccountCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        Параметры, чтобы предоставить для него учетную запись.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate_2
  name: beginCreate(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreate_1
  name: beginCreate(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function beginCreate(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginCreateWithHttpOperationResponse
  name: beginCreateWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        Параметры, чтобы предоставить для него учетную запись.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginFailover
  name: beginFailover(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function beginFailover(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginFailover_2
  name: beginFailover(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function beginFailover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginFailover_1
  name: beginFailover(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function beginFailover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.beginFailoverWithHttpOperationResponse
  name: beginFailoverWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function beginFailoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability
  name: checkNameAvailability(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, что имя учетной записи хранения является допустимым и уже не используется.
  syntax:
    content: 'function checkNameAvailability(name: string, options?: Object)'
    parameters:
    - id: name
      type:
      - string
      description: >
        имя учетной записи хранения.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability_2
  name: checkNameAvailability(string, Object, ServiceCallback<CheckNameAvailabilityResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, что имя учетной записи хранения является допустимым и уже не используется.
  syntax:
    content: 'function checkNameAvailability(name: string, options: Object, callback: ServiceCallback<CheckNameAvailabilityResult>)'
    parameters:
    - id: name
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailability_1
  name: checkNameAvailability(string, ServiceCallback<CheckNameAvailabilityResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, что имя учетной записи хранения является допустимым и уже не используется.
  syntax:
    content: 'function checkNameAvailability(name: string, callback: ServiceCallback<CheckNameAvailabilityResult>)'
    parameters:
    - id: name
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.CheckNameAvailabilityResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.checkNameAvailabilityWithHttpOperationResponse
  name: checkNameAvailabilityWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Проверяет, что имя учетной записи хранения является допустимым и уже не используется.
  syntax:
    content: 'function checkNameAvailabilityWithHttpOperationResponse(name: string, options?: Object)'
    parameters:
    - id: name
      type:
      - string
      description: >
        имя учетной записи хранения.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create
  name: create(string, string, StorageAccountCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        Параметры, чтобы предоставить для него учетную запись.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create_2
  name: create(string, string, StorageAccountCreateParameters, Object, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.create_1
  name: create(string, string, StorageAccountCreateParameters, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, StorageAccountCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Асинхронно создает учетную запись хранения с указанными параметрами.

    Если уже создается учетная запись, с различными свойствами выдается запрос на создание последующих свойства учетной записи будет обновляться. Если учетная запись уже создается и последующий запрос создания или обновления, выпущенные с одинаковые наборы свойств, запрос завершится успешно.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountCreateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountCreateParameters
      description: >
        Параметры, чтобы предоставить для него учетную запись.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет учетную запись хранения в Microsoft Azure.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет учетную запись хранения в Microsoft Azure.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет учетную запись хранения в Microsoft Azure.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет учетную запись хранения в Microsoft Azure.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.failover
  name: failover(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function failover(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.failover_2
  name: failover(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function failover(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.failover_1
  name: failover(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function failover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.failoverWithHttpOperationResponse
  name: failoverWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Запроса отработку отказа можно активировать для учетной записи хранения в случае проблем с доступностью. Отработки отказа основного кластера учетной записи хранения для вторичного кластера для учетных записей RA-GRS. После отработки отказа во вторичном кластере станет источником.
  syntax:
    content: 'function failoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties
  name: getProperties(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства для указанной учетной записи хранения в том числе имя, номер SKU имя, расположение и состояние учетной записи. Операция ListKeys должен использоваться для получения ключей к хранилищу.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties_2
  name: getProperties(string, string, Object, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства для указанной учетной записи хранения в том числе имя, номер SKU имя, расположение и состояние учетной записи. Операция ListKeys должен использоваться для получения ключей к хранилищу.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getProperties_1
  name: getProperties(string, string, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства для указанной учетной записи хранения в том числе имя, номер SKU имя, расположение и состояние учетной записи. Операция ListKeys должен использоваться для получения ключей к хранилищу.
  syntax:
    content: 'function getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.getPropertiesWithHttpOperationResponse
  name: getPropertiesWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает свойства для указанной учетной записи хранения в том числе имя, номер SKU имя, расположение и состояние учетной записи. Операция ListKeys должен использоваться для получения ключей к хранилищу.
  syntax:
    content: 'function getPropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список всех доступных учетных записей хранения в подписке. Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list_2
  name: list(Object, ServiceCallback<StorageAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список всех доступных учетных записей хранения в подписке. Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.list_1
  name: list(ServiceCallback<StorageAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список всех доступных учетных записей хранения в подписке. Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function list(callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS
  name: listAccountSAS(string, string, AccountSasParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS учетной записи хранения.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: >
        Параметры, чтобы предоставить список учетных данных SAS для учетной записи хранения.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS_2
  name: listAccountSAS(string, string, AccountSasParameters, Object, ServiceCallback<ListAccountSasResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS учетной записи хранения.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options: Object, callback: ServiceCallback<ListAccountSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSAS_1
  name: listAccountSAS(string, string, AccountSasParameters, ServiceCallback<ListAccountSasResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS учетной записи хранения.
  syntax:
    content: 'function listAccountSAS(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, callback: ServiceCallback<ListAccountSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListAccountSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListAccountSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listAccountSASWithHttpOperationResponse
  name: listAccountSASWithHttpOperationResponse(string, string, AccountSasParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS учетной записи хранения.
  syntax:
    content: 'function listAccountSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: AccountSasParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.AccountSasParameters
      description: >
        Параметры, чтобы предоставить список учетных данных SAS для учетной записи хранения.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup
  name: listByResourceGroup(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Список всех доступных учетных записей хранения в указанной группе ресурсов.

    Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup_2
  name: listByResourceGroup(string, Object, ServiceCallback<StorageAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Список всех доступных учетных записей хранения в указанной группе ресурсов.

    Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroup_1
  name: listByResourceGroup(string, ServiceCallback<StorageAccountListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Список всех доступных учетных записей хранения в указанной группе ресурсов.

    Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<StorageAccountListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listByResourceGroupWithHttpOperationResponse
  name: listByResourceGroupWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Список всех доступных учетных записей хранения в указанной группе ресурсов.

    Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys
  name: listKeys(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys_2
  name: listKeys(string, string, Object, ServiceCallback<StorageAccountListKeysResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeys_1
  name: listKeys(string, string, ServiceCallback<StorageAccountListKeysResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listKeysWithHttpOperationResponse
  name: listKeysWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS
  name: listServiceSAS(string, string, ServiceSasParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS службы определенного ресурса.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: >
        Параметры для предоставления учетных данных SAS службы списка.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS_2
  name: listServiceSAS(string, string, ServiceSasParameters, Object, ServiceCallback<ListServiceSasResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS службы определенного ресурса.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options: Object, callback: ServiceCallback<ListServiceSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSAS_1
  name: listServiceSAS(string, string, ServiceSasParameters, ServiceCallback<ListServiceSasResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS службы определенного ресурса.
  syntax:
    content: 'function listServiceSAS(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, callback: ServiceCallback<ListServiceSasResponse>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListServiceSasResponse>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListServiceSasResponse>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listServiceSASWithHttpOperationResponse
  name: listServiceSASWithHttpOperationResponse(string, string, ServiceSasParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Вывод списка учетных данных SAS службы определенного ресурса.
  syntax:
    content: 'function listServiceSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: ServiceSasParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.ServiceSasParameters
      description: >
        Параметры для предоставления учетных данных SAS службы списка.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Список всех доступных учетных записей хранения в подписке. Обратите внимание, что хранилище ключей не возвращаются; Используйте операцию ListKeys для этого.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey
  name: regenerateKey(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Повторное создание ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: keyName
      type:
      - string
      description: >
        Имя хранилища ключей, должны быть создан повторно, возможные значения — key1, key2.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey_2
  name: regenerateKey(string, string, string, Object, ServiceCallback<StorageAccountListKeysResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Повторное создание ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: Object, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKey_1
  name: regenerateKey(string, string, string, ServiceCallback<StorageAccountListKeysResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Повторное создание ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<StorageAccountListKeysResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: keyName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccountListKeysResult>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.regenerateKeyWithHttpOperationResponse
  name: regenerateKeyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Повторное создание ключей доступа для указанной учетной записи хранения.
  syntax:
    content: 'function regenerateKeyWithHttpOperationResponse(resourceGroupName: string, accountName: string, keyName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: keyName
      type:
      - string
      description: >
        Имя хранилища ключей, должны быть создан повторно, возможные значения — key1, key2.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update
  name: update(string, string, StorageAccountUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Операция обновления может использоваться для обновления SKU, шифрования, а также уровень доступа или теги для учетной записи хранения. Он может также использоваться для сопоставления учетной записи с личным доменом. Только один личный домен в секунду на учетную запись хранения. Замена или изменение личного домена не поддерживается. Чтобы заменить старый пользовательский домен, старое значение должен быть очищен или отменена его регистрация, прежде чем можно задать новое значение. Поддерживается обновление нескольких свойств. Этот вызов не меняйте ключи хранилища для учетной записи. Если вы хотите изменить ключи учетной записи хранения, используйте операцию повторное создание ключей. После создания невозможно изменить расположение и имя учетной записи хранения.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: >
        Параметры, чтобы указать для обновленной записи.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update_2
  name: update(string, string, StorageAccountUpdateParameters, Object, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Операция обновления может использоваться для обновления SKU, шифрования, а также уровень доступа или теги для учетной записи хранения. Он может также использоваться для сопоставления учетной записи с личным доменом. Только один личный домен в секунду на учетную запись хранения. Замена или изменение личного домена не поддерживается. Чтобы заменить старый пользовательский домен, старое значение должен быть очищен или отменена его регистрация, прежде чем можно задать новое значение. Поддерживается обновление нескольких свойств. Этот вызов не меняйте ключи хранилища для учетной записи. Если вы хотите изменить ключи учетной записи хранения, используйте операцию повторное создание ключей. После создания невозможно изменить расположение и имя учетной записи хранения.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options: Object, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.update_1
  name: update(string, string, StorageAccountUpdateParameters, ServiceCallback<StorageAccount>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Операция обновления может использоваться для обновления SKU, шифрования, а также уровень доступа или теги для учетной записи хранения. Он может также использоваться для сопоставления учетной записи с личным доменом. Только один личный домен в секунду на учетную запись хранения. Замена или изменение личного домена не поддерживается. Чтобы заменить старый пользовательский домен, старое значение должен быть очищен или отменена его регистрация, прежде чем можно задать новое значение. Поддерживается обновление нескольких свойств. Этот вызов не меняйте ключи хранилища для учетной записи. Если вы хотите изменить ключи учетной записи хранения, используйте операцию повторное создание ключей. После создания невозможно изменить расположение и имя учетной записи хранения.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, callback: ServiceCallback<StorageAccount>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.StorageAccount>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.StorageAccount>
  package: azure-arm-storage
- uid: azure-arm-storage.StorageAccounts.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, StorageAccountUpdateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Операция обновления может использоваться для обновления SKU, шифрования, а также уровень доступа или теги для учетной записи хранения. Он может также использоваться для сопоставления учетной записи с личным доменом. Только один личный домен в секунду на учетную запись хранения. Замена или изменение личного домена не поддерживается. Чтобы заменить старый пользовательский домен, старое значение должен быть очищен или отменена его регистрация, прежде чем можно задать новое значение. Поддерживается обновление нескольких свойств. Этот вызов не меняйте ключи хранилища для учетной записи. Если вы хотите изменить ключи учетной записи хранения, используйте операцию повторное создание ключей. После создания невозможно изменить расположение и имя учетной записи хранения.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: StorageAccountUpdateParameters, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: parameters
      type:
      - azure-arm-storage.StorageAccountUpdateParameters
      description: >
        Параметры, чтобы указать для обновленной записи.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  package: azure-arm-storage
references:
- uid: azure-arm-storage.StorageAccountCreateParameters
  name: StorageAccountCreateParameters
  spec.typeScript:
  - name: StorageAccountCreateParameters
    fullName: StorageAccountCreateParameters
    uid: azure-arm-storage.StorageAccountCreateParameters
- uid: Promise<azure-arm-storage.StorageAccount>
  name: StorageAccount>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccount>
  name: StorageAccount>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccount>>
  name: StorageAccount>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccount
    fullName: StorageAccount
    uid: azure-arm-storage.StorageAccount
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.CheckNameAvailabilityResult>
  name: CheckNameAvailabilityResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.CheckNameAvailabilityResult>
  name: CheckNameAvailabilityResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.CheckNameAvailabilityResult>>
  name: CheckNameAvailabilityResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    uid: azure-arm-storage.CheckNameAvailabilityResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.StorageAccountListResult>
  name: StorageAccountListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccountListResult>
  name: StorageAccountListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>'
    fullName: '>'
- uid: azure-arm-storage.AccountSasParameters
  name: AccountSasParameters
  spec.typeScript:
  - name: AccountSasParameters
    fullName: AccountSasParameters
    uid: azure-arm-storage.AccountSasParameters
- uid: Promise<azure-arm-storage.ListAccountSasResponse>
  name: ListAccountSasResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListAccountSasResponse>
  name: ListAccountSasResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListAccountSasResponse>>
  name: ListAccountSasResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListAccountSasResponse
    fullName: ListAccountSasResponse
    uid: azure-arm-storage.ListAccountSasResponse
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListResult>>
  name: StorageAccountListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccountListResult
    fullName: StorageAccountListResult
    uid: azure-arm-storage.StorageAccountListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.StorageAccountListKeysResult>
  name: StorageAccountListKeysResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.StorageAccountListKeysResult>
  name: StorageAccountListKeysResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.StorageAccountListKeysResult>>
  name: StorageAccountListKeysResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: StorageAccountListKeysResult
    fullName: StorageAccountListKeysResult
    uid: azure-arm-storage.StorageAccountListKeysResult
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-storage.ServiceSasParameters
  name: ServiceSasParameters
  spec.typeScript:
  - name: ServiceSasParameters
    fullName: ServiceSasParameters
    uid: azure-arm-storage.ServiceSasParameters
- uid: Promise<azure-arm-storage.ListServiceSasResponse>
  name: ListServiceSasResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListServiceSasResponse>
  name: ListServiceSasResponse>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListServiceSasResponse>>
  name: ListServiceSasResponse>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListServiceSasResponse
    fullName: ListServiceSasResponse
    uid: azure-arm-storage.ListServiceSasResponse
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-storage.StorageAccountUpdateParameters
  name: StorageAccountUpdateParameters
  spec.typeScript:
  - name: StorageAccountUpdateParameters
    fullName: StorageAccountUpdateParameters
    uid: azure-arm-storage.StorageAccountUpdateParameters
