### YamlMime:UniversalReference
ms.openlocfilehash: c801eb9f9b016119944940a10e39ea87b797030a
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52145029"
items:
- uid: azure-arm-storage.BlobContainers
  name: BlobContainers
  fullName: BlobContainers
  children:
  - azure-arm-storage.BlobContainers.clearLegalHold
  - azure-arm-storage.BlobContainers.clearLegalHold_2
  - azure-arm-storage.BlobContainers.clearLegalHold_1
  - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.create
  - azure-arm-storage.BlobContainers.create_2
  - azure-arm-storage.BlobContainers.create_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteMethod
  - azure-arm-storage.BlobContainers.deleteMethod_2
  - azure-arm-storage.BlobContainers.deleteMethod_1
  - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.get
  - azure-arm-storage.BlobContainers.get_2
  - azure-arm-storage.BlobContainers.get_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.list
  - azure-arm-storage.BlobContainers.list_2
  - azure-arm-storage.BlobContainers.list_1
  - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.setLegalHold
  - azure-arm-storage.BlobContainers.setLegalHold_2
  - azure-arm-storage.BlobContainers.setLegalHold_1
  - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.update
  - azure-arm-storage.BlobContainers.update_2
  - azure-arm-storage.BlobContainers.update_1
  - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold
  name: clearLegalHold(string, string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает юридические хранения тегов. Удаление этого же или несуществующий тега приведет к идемпотентной операции. ClearLegalHold очищает только теги, указанный в запросе.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: tags
      type:
      - string[]
      description: >
        Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_2
  name: clearLegalHold(string, string, string, string[], Object, ServiceCallback<LegalHold>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает юридические хранения тегов. Удаление этого же или несуществующий тега приведет к идемпотентной операции. ClearLegalHold очищает только теги, указанный в запросе.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_1
  name: clearLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает юридические хранения тегов. Удаление этого же или несуществующий тега приведет к идемпотентной операции. ClearLegalHold очищает только теги, указанный в запросе.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  name: clearLegalHoldWithHttpOperationResponse(string, string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Очищает юридические хранения тегов. Удаление этого же или несуществующий тега приведет к идемпотентной операции. ClearLegalHold очищает только теги, указанный в запросе.
  syntax:
    content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: tags
      type:
      - string[]
      description: >
        Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create
  name: create(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, как описано в тексте запроса. Ресурс контейнера содержит метаданные и свойства для этого контейнера. Он не включает список больших двоичных объектов, содержащихся в контейнере.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_2
  name: create(string, string, string, Object, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, как описано в тексте запроса. Ресурс контейнера содержит метаданные и свойства для этого контейнера. Он не включает список больших двоичных объектов, содержащихся в контейнере.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_1
  name: create(string, string, string, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, как описано в тексте запроса. Ресурс контейнера содержит метаданные и свойства для этого контейнера. Он не включает список больших двоичных объектов, содержащихся в контейнере.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  name: createOrUpdateImmutabilityPolicy(string, string, string, number, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет политику неизменяемости разблокирован. ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  name: createOrUpdateImmutabilityPolicy(string, string, string, number, Object, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет политику неизменяемости разблокирован. ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  name: createOrUpdateImmutabilityPolicy(string, string, string, number, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет политику неизменяемости разблокирован. ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  name: createOrUpdateImmutabilityPolicyWithHttpOperationResponse(string, string, string, number, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет политику неизменяемости разблокирован. ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает новый контейнер в указанной учетной записи, как описано в тексте запроса. Ресурс контейнера содержит метаданные и свойства для этого контейнера. Он не включает список больших двоичных объектов, содержащихся в контейнере.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  name: deleteImmutabilityPolicy(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Прерывает политику неизменяемости разблокирован. Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0. ETag в If-Match является обязательным для этой операции. Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  name: deleteImmutabilityPolicy(string, string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Прерывает политику неизменяемости разблокирован. Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0. ETag в If-Match является обязательным для этой операции. Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  name: deleteImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Прерывает политику неизменяемости разблокирован. Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0. ETag в If-Match является обязательным для этой операции. Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  name: deleteImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Прерывает политику неизменяемости разблокирован. Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0. ETag в If-Match является обязательным для этой операции. Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.
  syntax:
    content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod
  name: deleteMethod(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет заданный контейнер под его учетной записью.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_2
  name: deleteMethod(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет заданный контейнер под его учетной записью.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_1
  name: deleteMethod(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет заданный контейнер под его учетной записью.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет заданный контейнер под его учетной записью.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  name: extendImmutabilityPolicy(string, string, string, string, number, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости. В политике Locked допустимо только действие будет это действие. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  name: extendImmutabilityPolicy(string, string, string, string, number, Object, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости. В политике Locked допустимо только действие будет это действие. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  name: extendImmutabilityPolicy(string, string, string, string, number, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости. В политике Locked допустимо только действие будет это действие. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  name: extendImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, number, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости. В политике Locked допустимо только действие будет это действие. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get
  name: get(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства указанного контейнера.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_2
  name: get(string, string, string, Object, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства указанного контейнера.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_1
  name: get(string, string, string, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства указанного контейнера.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
  name: getImmutabilityPolicy(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  name: getImmutabilityPolicy(string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  name: getImmutabilityPolicy(string, string, string, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  name: getImmutabilityPolicyWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.
  syntax:
    content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Получает свойства указанного контейнера.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list
  name: list(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных. Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_2
  name: list(string, string, Object, ServiceCallback<ListContainerItems>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных. Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_1
  name: list(string, string, ServiceCallback<ListContainerItems>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных. Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных. Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.
  syntax:
    content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  name: lockImmutabilityPolicy(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает состояние заблокирована политика неизменяемости. В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  name: lockImmutabilityPolicy(string, string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает состояние заблокирована политика неизменяемости. В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  name: lockImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает состояние заблокирована политика неизменяемости. В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  name: lockImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Задает состояние заблокирована политика неизменяемости. В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy. ETag в If-Match является обязательным для этой операции.
  syntax:
    content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: ifMatch
      type:
      - string
      description: >
        Версия состояния (ETag) сущности для обновления политики неизменяемости. Значение «*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует. Если не указано, эта операция всегда будет применяться.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold
  name: setLegalHold(string, string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Наборы юридические хранения тегов. Задание те же результаты тега в идемпотентной операции. SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: tags
      type:
      - string[]
      description: >
        Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_2
  name: setLegalHold(string, string, string, string[], Object, ServiceCallback<LegalHold>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Наборы юридические хранения тегов. Задание те же результаты тега в идемпотентной операции. SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_1
  name: setLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Наборы юридические хранения тегов. Задание те же результаты тега в идемпотентной операции. SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  name: setLegalHoldWithHttpOperationResponse(string, string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Наборы юридические хранения тегов. Задание те же результаты тега в идемпотентной операции. SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.
  syntax:
    content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: tags
      type:
      - string[]
      description: >
        Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update
  name: update(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет свойства контейнера, как указано в тексте запроса. Свойства, не упоминается в запросе, будут без изменений. Если указанный контейнер не существует, происходит сбой обновления.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_2
  name: update(string, string, string, Object, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет свойства контейнера, как указано в тексте запроса. Свойства, не упоминается в запросе, будут без изменений. Если указанный контейнер не существует, происходит сбой обновления.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_1
  name: update(string, string, string, ServiceCallback<BlobContainer>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет свойства контейнера, как указано в тексте запроса. Свойства, не упоминается в запросе, будут без изменений. Если указанный контейнер не существует, происходит сбой обновления.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Обновляет свойства контейнера, как указано в тексте запроса. Свойства, не упоминается в запросе, будут без изменений. Если указанный контейнер не существует, происходит сбой обновления.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Имя группы ресурсов в подписке пользователя. Имя без учета регистра.
    - id: accountName
      type:
      - string
      description: >
        Имя учетной записи хранения в указанной группе ресурсов. Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.
    - id: containerName
      type:
      - string
      description: >
        Имя контейнера больших двоичных объектов в указанной учетной записи хранения. Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.

        Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
references:
- uid: Promise<azure-arm-storage.LegalHold>
  name: LegalHold>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.LegalHold>
  name: LegalHold>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  name: LegalHold>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.BlobContainer>
  name: BlobContainer>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.BlobContainer>
  name: BlobContainer>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-storage.ImmutabilityPolicy>
  name: ImmutabilityPolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
  name: ImmutabilityPolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  name: ImmutabilityPolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  name: BlobContainer>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.ListContainerItems>
  name: ListContainerItems>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListContainerItems>
  name: ListContainerItems>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  name: ListContainerItems>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>>'
    fullName: '>>'
