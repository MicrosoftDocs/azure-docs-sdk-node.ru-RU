### YamlMime:UniversalReference
items:
  - uid: azure-arm-storage.BlobContainers
    name: BlobContainers
    fullName: BlobContainers
    children:
      - azure-arm-storage.BlobContainers.clearLegalHold
      - azure-arm-storage.BlobContainers.clearLegalHold_2
      - azure-arm-storage.BlobContainers.clearLegalHold_1
      - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.create
      - azure-arm-storage.BlobContainers.create_2
      - azure-arm-storage.BlobContainers.create_1
      - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
      - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
      - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
      - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
      - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
      - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
      - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.deleteMethod
      - azure-arm-storage.BlobContainers.deleteMethod_2
      - azure-arm-storage.BlobContainers.deleteMethod_1
      - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
      - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
      - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
      - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.get
      - azure-arm-storage.BlobContainers.get_2
      - azure-arm-storage.BlobContainers.get_1
      - azure-arm-storage.BlobContainers.getImmutabilityPolicy
      - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
      - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
      - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.lease
      - azure-arm-storage.BlobContainers.lease_2
      - azure-arm-storage.BlobContainers.lease_1
      - azure-arm-storage.BlobContainers.leaseWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.list
      - azure-arm-storage.BlobContainers.list_2
      - azure-arm-storage.BlobContainers.list_1
      - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
      - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
      - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
      - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.setLegalHold
      - azure-arm-storage.BlobContainers.setLegalHold_2
      - azure-arm-storage.BlobContainers.setLegalHold_1
      - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
      - azure-arm-storage.BlobContainers.update
      - azure-arm-storage.BlobContainers.update_2
      - azure-arm-storage.BlobContainers.update_1
      - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.clearLegalHold
    name: 'clearLegalHold(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-101">Очищает юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-101">Clears legal hold tags.</span></span> <span data-ttu-id="70c51-102">Удаление этого же или несуществующий тега приведет к идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-102">Clearing the same or non-existent tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-103">ClearLegalHold очищает только теги, указанный в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-103">ClearLegalHold clears out only the specified tags in the request.</span></span>'
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-104">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-104">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-105">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-105">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-106">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-106">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-107">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-107">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-108">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-108">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-109">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-109">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-110">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-110">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: tags
          type:
            - 'string[]'
          description: |
            <span data-ttu-id="70c51-111">Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.</span><span class="sxs-lookup"><span data-stu-id="70c51-111">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.clearLegalHold_2
    name: 'clearLegalHold(string, string, string, string[], Object, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-112">Очищает юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-112">Clears legal hold tags.</span></span> <span data-ttu-id="70c51-113">Удаление этого же или несуществующий тега приведет к идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-113">Clearing the same or non-existent tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-114">ClearLegalHold очищает только теги, указанный в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-114">ClearLegalHold clears out only the specified tags in the request.</span></span>'
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: tags
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LegalHold>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.clearLegalHold_1
    name: 'clearLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-115">Очищает юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-115">Clears legal hold tags.</span></span> <span data-ttu-id="70c51-116">Удаление этого же или несуществующий тега приведет к идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-116">Clearing the same or non-existent tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-117">ClearLegalHold очищает только теги, указанный в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-117">ClearLegalHold clears out only the specified tags in the request.</span></span>'
    syntax:
      content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: tags
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LegalHold>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
    name: 'clearLegalHoldWithHttpOperationResponse(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-118">Очищает юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-118">Clears legal hold tags.</span></span> <span data-ttu-id="70c51-119">Удаление этого же или несуществующий тега приведет к идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-119">Clearing the same or non-existent tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-120">ClearLegalHold очищает только теги, указанный в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-120">ClearLegalHold clears out only the specified tags in the request.</span></span>'
    syntax:
      content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-121">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-121">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-122">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-122">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-123">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-123">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-124">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-124">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-125">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-125">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-126">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-126">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-127">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-127">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: tags
          type:
            - 'string[]'
          description: |
            <span data-ttu-id="70c51-128">Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.</span><span class="sxs-lookup"><span data-stu-id="70c51-128">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.create
    name: 'create(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-129">Создает новый контейнер в указанной учетной записи, как описано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-129">Creates a new container under the specified account as described by request body.</span></span> <span data-ttu-id="70c51-130">Ресурс контейнера содержит метаданные и свойства для этого контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-130">The container resource includes metadata and properties for that container.</span></span> <span data-ttu-id="70c51-131">Он не включает список больших двоичных объектов, содержащихся в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-131">It does not include a list of the blobs contained by the container.</span></span>'
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-132">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-132">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-133">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-133">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-134">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-134">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-135">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-135">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-136">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-136">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-137">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-137">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-138">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-138">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.create_2
    name: 'create(string, string, string, Object, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-139">Создает новый контейнер в указанной учетной записи, как описано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-139">Creates a new container under the specified account as described by request body.</span></span> <span data-ttu-id="70c51-140">Ресурс контейнера содержит метаданные и свойства для этого контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-140">The container resource includes metadata and properties for that container.</span></span> <span data-ttu-id="70c51-141">Он не включает список больших двоичных объектов, содержащихся в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-141">It does not include a list of the blobs contained by the container.</span></span>'
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.create_1
    name: 'create(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-142">Создает новый контейнер в указанной учетной записи, как описано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-142">Creates a new container under the specified account as described by request body.</span></span> <span data-ttu-id="70c51-143">Ресурс контейнера содержит метаданные и свойства для этого контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-143">The container resource includes metadata and properties for that container.</span></span> <span data-ttu-id="70c51-144">Он не включает список больших двоичных объектов, содержащихся в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-144">It does not include a list of the blobs contained by the container.</span></span>'
    syntax:
      content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-145">Создает или обновляет политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-145">Creates or updates an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-146">ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-146">ETag in If-Match is honored if given but not required for this operation.</span></span>'
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-147">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-147">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-148">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-148">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-149">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-149">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-150">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-150">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-151">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-151">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-152">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-152">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-153">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-153">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: |
            <span data-ttu-id="70c51-154">Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.</span><span class="sxs-lookup"><span data-stu-id="70c51-154">The immutability period for the blobs in the container since the policy creation, in days.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, Object, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-155">Создает или обновляет политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-155">Creates or updates an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-156">ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-156">ETag in If-Match is honored if given but not required for this operation.</span></span>'
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
    name: 'createOrUpdateImmutabilityPolicy(string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-157">Создает или обновляет политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-157">Creates or updates an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-158">ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-158">ETag in If-Match is honored if given but not required for this operation.</span></span>'
    syntax:
      content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
    name: 'createOrUpdateImmutabilityPolicyWithHttpOperationResponse(string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-159">Создает или обновляет политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-159">Creates or updates an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-160">ETag в If-Match учитывается, если предоставлен, но не требуется для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-160">ETag in If-Match is honored if given but not required for this operation.</span></span>'
    syntax:
      content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-161">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-161">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-162">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-162">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-163">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-163">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-164">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-164">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-165">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-165">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-166">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-166">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-167">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-167">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: |
            <span data-ttu-id="70c51-168">Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.</span><span class="sxs-lookup"><span data-stu-id="70c51-168">The immutability period for the blobs in the container since the policy creation, in days.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-169">Создает новый контейнер в указанной учетной записи, как описано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-169">Creates a new container under the specified account as described by request body.</span></span> <span data-ttu-id="70c51-170">Ресурс контейнера содержит метаданные и свойства для этого контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-170">The container resource includes metadata and properties for that container.</span></span> <span data-ttu-id="70c51-171">Он не включает список больших двоичных объектов, содержащихся в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-171">It does not include a list of the blobs contained by the container.</span></span>'
    syntax:
      content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-172">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-172">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-173">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-173">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-174">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-174">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-175">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-175">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-176">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-176">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-177">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-177">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-178">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-178">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
    name: 'deleteImmutabilityPolicy(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-179">Прерывает политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-179">Aborts an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-180">Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0.</span><span class="sxs-lookup"><span data-stu-id="70c51-180">The response of delete has immutabilityPeriodSinceCreationInDays set to 0.</span></span> <span data-ttu-id="70c51-181">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-181">ETag in If-Match is required for this operation.</span></span> <span data-ttu-id="70c51-182">Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-182">Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.</span></span>'
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-183">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-183">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-184">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-184">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-185">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-185">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-186">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-186">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-187">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-187">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-188">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-188">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-189">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-189">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-190">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-190">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-191">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-191">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-192">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-192">If omitted, this operation will always be applied.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
    name: 'deleteImmutabilityPolicy(string, string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-193">Прерывает политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-193">Aborts an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-194">Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0.</span><span class="sxs-lookup"><span data-stu-id="70c51-194">The response of delete has immutabilityPeriodSinceCreationInDays set to 0.</span></span> <span data-ttu-id="70c51-195">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-195">ETag in If-Match is required for this operation.</span></span> <span data-ttu-id="70c51-196">Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-196">Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.</span></span>'
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
    name: 'deleteImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-197">Прерывает политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-197">Aborts an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-198">Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0.</span><span class="sxs-lookup"><span data-stu-id="70c51-198">The response of delete has immutabilityPeriodSinceCreationInDays set to 0.</span></span> <span data-ttu-id="70c51-199">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-199">ETag in If-Match is required for this operation.</span></span> <span data-ttu-id="70c51-200">Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-200">Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.</span></span>'
    syntax:
      content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
    name: 'deleteImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-201">Прерывает политику неизменяемости разблокирован.</span><span class="sxs-lookup"><span data-stu-id="70c51-201">Aborts an unlocked immutability policy.</span></span> <span data-ttu-id="70c51-202">Ответ delete имеет immutabilityPeriodSinceCreationInDays, равным 0.</span><span class="sxs-lookup"><span data-stu-id="70c51-202">The response of delete has immutabilityPeriodSinceCreationInDays set to 0.</span></span> <span data-ttu-id="70c51-203">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-203">ETag in If-Match is required for this operation.</span></span> <span data-ttu-id="70c51-204">Удаление политики заблокированные неизменность не допускается, единственным способом является удаление контейнера после удаления всех больших двоичных объектов в контейнере.</span><span class="sxs-lookup"><span data-stu-id="70c51-204">Deleting a locked immutability policy is not allowed, only way is to delete the container after deleting all blobs inside the container.</span></span>'
    syntax:
      content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-205">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-205">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-206">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-206">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-207">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-207">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-208">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-208">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-209">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-209">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-210">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-210">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-211">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-211">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-212">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-212">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-213">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-213">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-214">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-214">If omitted, this operation will always be applied.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-215">Удаляет заданный контейнер под его учетной записью.</span><span class="sxs-lookup"><span data-stu-id="70c51-215">Deletes specified container under its account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-216">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-216">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-217">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-217">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-218">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-218">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-219">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-219">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-220">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-220">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-221">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-221">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-222">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-222">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-223">Удаляет заданный контейнер под его учетной записью.</span><span class="sxs-lookup"><span data-stu-id="70c51-223">Deletes specified container under its account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-224">Удаляет заданный контейнер под его учетной записью.</span><span class="sxs-lookup"><span data-stu-id="70c51-224">Deletes specified container under its account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-225">Удаляет заданный контейнер под его учетной записью.</span><span class="sxs-lookup"><span data-stu-id="70c51-225">Deletes specified container under its account.</span></span>
    syntax:
      content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-226">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-226">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-227">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-227">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-228">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-228">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-229">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-229">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-230">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-230">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-231">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-231">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-232">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-232">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
    name: 'extendImmutabilityPolicy(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-233">Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-233">Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy.</span></span> <span data-ttu-id="70c51-234">В политике Locked допустимо только действие будет это действие.</span><span class="sxs-lookup"><span data-stu-id="70c51-234">The only action allowed on a Locked policy will be this action.</span></span> <span data-ttu-id="70c51-235">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-235">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-236">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-236">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-237">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-237">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-238">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-238">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-239">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-239">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-240">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-240">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-241">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-241">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-242">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-242">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-243">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-243">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-244">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-244">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-245">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-245">If omitted, this operation will always be applied.</span></span>
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: |
            <span data-ttu-id="70c51-246">Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.</span><span class="sxs-lookup"><span data-stu-id="70c51-246">The immutability period for the blobs in the container since the policy creation, in days.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
    name: 'extendImmutabilityPolicy(string, string, string, string, number, Object, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-247">Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-247">Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy.</span></span> <span data-ttu-id="70c51-248">В политике Locked допустимо только действие будет это действие.</span><span class="sxs-lookup"><span data-stu-id="70c51-248">The only action allowed on a Locked policy will be this action.</span></span> <span data-ttu-id="70c51-249">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-249">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
    name: 'extendImmutabilityPolicy(string, string, string, string, number, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-250">Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-250">Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy.</span></span> <span data-ttu-id="70c51-251">В политике Locked допустимо только действие будет это действие.</span><span class="sxs-lookup"><span data-stu-id="70c51-251">The only action allowed on a Locked policy will be this action.</span></span> <span data-ttu-id="70c51-252">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-252">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
    name: 'extendImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, number, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-253">Расширяет immutabilityPeriodSinceCreationInDays заблокированные политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-253">Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy.</span></span> <span data-ttu-id="70c51-254">В политике Locked допустимо только действие будет это действие.</span><span class="sxs-lookup"><span data-stu-id="70c51-254">The only action allowed on a Locked policy will be this action.</span></span> <span data-ttu-id="70c51-255">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-255">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-256">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-256">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-257">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-257">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-258">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-258">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-259">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-259">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-260">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-260">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-261">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-261">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-262">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-262">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-263">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-263">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-264">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-264">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-265">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-265">If omitted, this operation will always be applied.</span></span>
        - id: immutabilityPeriodSinceCreationInDays
          type:
            - number
          description: |
            <span data-ttu-id="70c51-266">Неизменность период для больших двоичных объектов в контейнере с момента создания политики, в днях.</span><span class="sxs-lookup"><span data-stu-id="70c51-266">The immutability period for the blobs in the container since the policy creation, in days.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-267">Получает свойства указанного контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-267">Gets properties of a specified container.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-268">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-268">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-269">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-269">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-270">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-270">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-271">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-271">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-272">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-272">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-273">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-273">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-274">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-274">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.get_2
    name: 'get(string, string, string, Object, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-275">Получает свойства указанного контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-275">Gets properties of a specified container.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.get_1
    name: 'get(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-276">Получает свойства указанного контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-276">Gets properties of a specified container.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
    name: 'getImmutabilityPolicy(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-277">Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.</span><span class="sxs-lookup"><span data-stu-id="70c51-277">Gets the existing immutability policy along with the corresponding ETag in response headers and body.</span></span>
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-278">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-278">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-279">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-279">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-280">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-280">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-281">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-281">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-282">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-282">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-283">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-283">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-284">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-284">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
    name: 'getImmutabilityPolicy(string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-285">Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.</span><span class="sxs-lookup"><span data-stu-id="70c51-285">Gets the existing immutability policy along with the corresponding ETag in response headers and body.</span></span>
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
    name: 'getImmutabilityPolicy(string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-286">Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.</span><span class="sxs-lookup"><span data-stu-id="70c51-286">Gets the existing immutability policy along with the corresponding ETag in response headers and body.</span></span>
    syntax:
      content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
    name: 'getImmutabilityPolicyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-287">Получает существующую политику неизменяемости вместе с соответствующей ETag в ответ заголовки и текст.</span><span class="sxs-lookup"><span data-stu-id="70c51-287">Gets the existing immutability policy along with the corresponding ETag in response headers and body.</span></span>
    syntax:
      content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-288">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-288">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-289">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-289">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-290">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-290">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-291">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-291">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-292">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-292">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-293">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-293">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-294">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-294">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-295">Получает свойства указанного контейнера.</span><span class="sxs-lookup"><span data-stu-id="70c51-295">Gets properties of a specified container.</span></span>
    syntax:
      content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-296">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-296">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-297">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-297">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-298">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-298">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-299">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-299">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-300">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-300">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-301">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-301">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-302">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-302">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lease
    name: 'lease(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-303">Операция Lease Container устанавливает и управляет этой блокировкой блокировку контейнера для операций удаления.</span><span class="sxs-lookup"><span data-stu-id="70c51-303">The Lease Container operation establishes and manages a lock on a container for delete operations.</span></span> <span data-ttu-id="70c51-304">Длительность блокировки может составлять 15–60 секунд либо быть бесконечной.</span><span class="sxs-lookup"><span data-stu-id="70c51-304">The lock duration can be 15 to 60 seconds, or can be infinite.</span></span>'
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-305">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-305">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-306">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-306">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-307">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-307">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-308">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-308">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-309">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-309">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-310">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-310">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-311">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-311">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.LeaseContainerResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lease_2
    name: 'lease(string, string, string, Object, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-312">Операция Lease Container устанавливает и управляет этой блокировкой блокировку контейнера для операций удаления.</span><span class="sxs-lookup"><span data-stu-id="70c51-312">The Lease Container operation establishes and manages a lock on a container for delete operations.</span></span> <span data-ttu-id="70c51-313">Длительность блокировки может составлять 15–60 секунд либо быть бесконечной.</span><span class="sxs-lookup"><span data-stu-id="70c51-313">The lock duration can be 15 to 60 seconds, or can be infinite.</span></span>'
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LeaseContainerResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LeaseContainerResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lease_1
    name: 'lease(string, string, string, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-314">Операция Lease Container устанавливает и управляет этой блокировкой блокировку контейнера для операций удаления.</span><span class="sxs-lookup"><span data-stu-id="70c51-314">The Lease Container operation establishes and manages a lock on a container for delete operations.</span></span> <span data-ttu-id="70c51-315">Длительность блокировки может составлять 15–60 секунд либо быть бесконечной.</span><span class="sxs-lookup"><span data-stu-id="70c51-315">The lock duration can be 15 to 60 seconds, or can be infinite.</span></span>'
    syntax:
      content: 'function lease(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<LeaseContainerResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LeaseContainerResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LeaseContainerResponse>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.leaseWithHttpOperationResponse
    name: 'leaseWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-316">Операция Lease Container устанавливает и управляет этой блокировкой блокировку контейнера для операций удаления.</span><span class="sxs-lookup"><span data-stu-id="70c51-316">The Lease Container operation establishes and manages a lock on a container for delete operations.</span></span> <span data-ttu-id="70c51-317">Длительность блокировки может составлять 15–60 секунд либо быть бесконечной.</span><span class="sxs-lookup"><span data-stu-id="70c51-317">The lock duration can be 15 to 60 seconds, or can be infinite.</span></span>'
    syntax:
      content: 'function leaseWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-318">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-318">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-319">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-319">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-320">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-320">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-321">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-321">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-322">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-322">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-323">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-323">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-324">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-324">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.LeaseContainerResponse>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.list
    name: 'list(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-325">Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных.</span><span class="sxs-lookup"><span data-stu-id="70c51-325">Lists all containers and does not support a prefix like data plane.</span></span> <span data-ttu-id="70c51-326">Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.</span><span class="sxs-lookup"><span data-stu-id="70c51-326">Also SRP today does not return continuation token.</span></span>'
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-327">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-327">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-328">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-328">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-329">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-329">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-330">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-330">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ListContainerItems>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.list_2
    name: 'list(string, string, Object, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-331">Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных.</span><span class="sxs-lookup"><span data-stu-id="70c51-331">Lists all containers and does not support a prefix like data plane.</span></span> <span data-ttu-id="70c51-332">Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.</span><span class="sxs-lookup"><span data-stu-id="70c51-332">Also SRP today does not return continuation token.</span></span>'
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListContainerItems>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListContainerItems>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.list_1
    name: 'list(string, string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-333">Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных.</span><span class="sxs-lookup"><span data-stu-id="70c51-333">Lists all containers and does not support a prefix like data plane.</span></span> <span data-ttu-id="70c51-334">Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.</span><span class="sxs-lookup"><span data-stu-id="70c51-334">Also SRP today does not return continuation token.</span></span>'
    syntax:
      content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ListContainerItems>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ListContainerItems>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-335">Перечисляет все контейнеры и не поддерживает префикс, например плоскости данных.</span><span class="sxs-lookup"><span data-stu-id="70c51-335">Lists all containers and does not support a prefix like data plane.</span></span> <span data-ttu-id="70c51-336">Также политик ограниченного использования Программ уже сегодня не возвращает токен продолжения.</span><span class="sxs-lookup"><span data-stu-id="70c51-336">Also SRP today does not return continuation token.</span></span>'
    syntax:
      content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-337">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-337">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-338">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-338">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-339">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-339">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-340">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-340">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
    name: 'lockImmutabilityPolicy(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-341">Задает состояние заблокирована политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-341">Sets the ImmutabilityPolicy to Locked state.</span></span> <span data-ttu-id="70c51-342">В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy.</span><span class="sxs-lookup"><span data-stu-id="70c51-342">The only action allowed on a Locked policy is ExtendImmutabilityPolicy action.</span></span> <span data-ttu-id="70c51-343">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-343">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-344">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-344">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-345">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-345">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-346">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-346">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-347">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-347">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-348">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-348">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-349">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-349">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-350">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-350">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-351">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-351">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-352">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-352">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-353">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-353">If omitted, this operation will always be applied.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
    name: 'lockImmutabilityPolicy(string, string, string, string, Object, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-354">Задает состояние заблокирована политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-354">Sets the ImmutabilityPolicy to Locked state.</span></span> <span data-ttu-id="70c51-355">В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy.</span><span class="sxs-lookup"><span data-stu-id="70c51-355">The only action allowed on a Locked policy is ExtendImmutabilityPolicy action.</span></span> <span data-ttu-id="70c51-356">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-356">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
    name: 'lockImmutabilityPolicy(string, string, string, string, ServiceCallback<ImmutabilityPolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-357">Задает состояние заблокирована политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-357">Sets the ImmutabilityPolicy to Locked state.</span></span> <span data-ttu-id="70c51-358">В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy.</span><span class="sxs-lookup"><span data-stu-id="70c51-358">The only action allowed on a Locked policy is ExtendImmutabilityPolicy action.</span></span> <span data-ttu-id="70c51-359">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-359">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: ifMatch
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.ImmutabilityPolicy>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
    name: 'lockImmutabilityPolicyWithHttpOperationResponse(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="70c51-360">Задает состояние заблокирована политика неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-360">Sets the ImmutabilityPolicy to Locked state.</span></span> <span data-ttu-id="70c51-361">В политике Locked допустимо только действие — действие ExtendImmutabilityPolicy.</span><span class="sxs-lookup"><span data-stu-id="70c51-361">The only action allowed on a Locked policy is ExtendImmutabilityPolicy action.</span></span> <span data-ttu-id="70c51-362">ETag в If-Match является обязательным для этой операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-362">ETag in If-Match is required for this operation.</span></span>
    syntax:
      content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-363">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-363">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-364">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-364">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-365">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-365">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-366">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-366">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-367">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-367">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-368">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-368">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-369">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-369">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: ifMatch
          type:
            - string
          description: |
            <span data-ttu-id="70c51-370">Версия состояния (ETag) сущности для обновления политики неизменяемости.</span><span class="sxs-lookup"><span data-stu-id="70c51-370">The entity state (ETag) version of the immutability policy to update.</span></span> <span data-ttu-id="70c51-371">Значение «\*» можно использовать для применения операции только в том случае, если политика неизменяемости уже существует.</span><span class="sxs-lookup"><span data-stu-id="70c51-371">A value of "\*" can be used to apply the operation only if the immutability policy already exists.</span></span> <span data-ttu-id="70c51-372">Если не указано, эта операция всегда будет применяться.</span><span class="sxs-lookup"><span data-stu-id="70c51-372">If omitted, this operation will always be applied.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.setLegalHold
    name: 'setLegalHold(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-373">Наборы юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-373">Sets legal hold tags.</span></span> <span data-ttu-id="70c51-374">Задание те же результаты тега в идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-374">Setting the same tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-375">SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-375">SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.</span></span>'
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-376">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-376">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-377">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-377">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-378">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-378">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-379">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-379">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-380">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-380">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-381">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-381">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-382">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-382">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: tags
          type:
            - 'string[]'
          description: |
            <span data-ttu-id="70c51-383">Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.</span><span class="sxs-lookup"><span data-stu-id="70c51-383">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.setLegalHold_2
    name: 'setLegalHold(string, string, string, string[], Object, ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-384">Наборы юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-384">Sets legal hold tags.</span></span> <span data-ttu-id="70c51-385">Задание те же результаты тега в идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-385">Setting the same tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-386">SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-386">SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.</span></span>'
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: tags
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LegalHold>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.setLegalHold_1
    name: 'setLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-387">Наборы юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-387">Sets legal hold tags.</span></span> <span data-ttu-id="70c51-388">Задание те же результаты тега в идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-388">Setting the same tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-389">SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-389">SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.</span></span>'
    syntax:
      content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: tags
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.LegalHold>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.LegalHold>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
    name: 'setLegalHoldWithHttpOperationResponse(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-390">Наборы юридические хранения тегов.</span><span class="sxs-lookup"><span data-stu-id="70c51-390">Sets legal hold tags.</span></span> <span data-ttu-id="70c51-391">Задание те же результаты тега в идемпотентной операции.</span><span class="sxs-lookup"><span data-stu-id="70c51-391">Setting the same tag results in an idempotent operation.</span></span> <span data-ttu-id="70c51-392">SetLegalHold шаблону append и снимите флажок не out существующие теги, которые не указаны в запросе.</span><span class="sxs-lookup"><span data-stu-id="70c51-392">SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.</span></span>'
    syntax:
      content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-393">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-393">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-394">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-394">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-395">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-395">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-396">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-396">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-397">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-397">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-398">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-398">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-399">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-399">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: tags
          type:
            - 'string[]'
          description: |
            <span data-ttu-id="70c51-400">Каждый тег должен быть буквенно-цифровые символы 3 до 23 и нормализуется в нижний регистр в SRP.</span><span class="sxs-lookup"><span data-stu-id="70c51-400">Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.update
    name: 'update(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-401">Обновляет свойства контейнера, как указано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-401">Updates container properties as specified in request body.</span></span> <span data-ttu-id="70c51-402">Свойства, не упоминается в запросе, будут без изменений.</span><span class="sxs-lookup"><span data-stu-id="70c51-402">Properties not mentioned in the request will be unchanged.</span></span> <span data-ttu-id="70c51-403">Если указанный контейнер не существует, происходит сбой обновления.</span><span class="sxs-lookup"><span data-stu-id="70c51-403">Update fails if the specified container doesn''t already exist.</span></span>'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-404">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-404">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-405">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-405">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-406">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-406">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-407">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-407">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-408">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-408">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-409">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-409">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-410">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-410">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.update_2
    name: 'update(string, string, string, Object, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-411">Обновляет свойства контейнера, как указано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-411">Updates container properties as specified in request body.</span></span> <span data-ttu-id="70c51-412">Свойства, не упоминается в запросе, будут без изменений.</span><span class="sxs-lookup"><span data-stu-id="70c51-412">Properties not mentioned in the request will be unchanged.</span></span> <span data-ttu-id="70c51-413">Если указанный контейнер не существует, происходит сбой обновления.</span><span class="sxs-lookup"><span data-stu-id="70c51-413">Update fails if the specified container doesn''t already exist.</span></span>'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.update_1
    name: 'update(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-414">Обновляет свойства контейнера, как указано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-414">Updates container properties as specified in request body.</span></span> <span data-ttu-id="70c51-415">Свойства, не упоминается в запросе, будут без изменений.</span><span class="sxs-lookup"><span data-stu-id="70c51-415">Properties not mentioned in the request will be unchanged.</span></span> <span data-ttu-id="70c51-416">Если указанный контейнер не существует, происходит сбой обновления.</span><span class="sxs-lookup"><span data-stu-id="70c51-416">Update fails if the specified container doesn''t already exist.</span></span>'
    syntax:
      content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
        - id: containerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-storage.BlobContainer>
          description: ''
      return:
        type:
          - Promise<azure-arm-storage.BlobContainer>
    package: azure-arm-storage
  - uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="70c51-417">Обновляет свойства контейнера, как указано в тексте запроса.</span><span class="sxs-lookup"><span data-stu-id="70c51-417">Updates container properties as specified in request body.</span></span> <span data-ttu-id="70c51-418">Свойства, не упоминается в запросе, будут без изменений.</span><span class="sxs-lookup"><span data-stu-id="70c51-418">Properties not mentioned in the request will be unchanged.</span></span> <span data-ttu-id="70c51-419">Если указанный контейнер не существует, происходит сбой обновления.</span><span class="sxs-lookup"><span data-stu-id="70c51-419">Update fails if the specified container doesn''t already exist.</span></span>'
    syntax:
      content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-420">Имя группы ресурсов в подписке пользователя.</span><span class="sxs-lookup"><span data-stu-id="70c51-420">The name of the resource group within the user's subscription.</span></span> <span data-ttu-id="70c51-421">Имя без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-421">The name is case insensitive.</span></span>
        - id: accountName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-422">Имя учетной записи хранения в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="70c51-422">The name of the storage account within the specified resource group.</span></span> <span data-ttu-id="70c51-423">Имя учетной записи хранения должно содержать от 3 до 24 символов и состоять только из цифр и букв нижнего регистра.</span><span class="sxs-lookup"><span data-stu-id="70c51-423">Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.</span></span>
        - id: containerName
          type:
            - string
          description: |
            <span data-ttu-id="70c51-424">Имя контейнера больших двоичных объектов в указанной учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="70c51-424">The name of the blob container within the specified storage account.</span></span> <span data-ttu-id="70c51-425">Имена контейнеров больших двоичных объектов должен быть от 3 до 63 символов и состоять из цифр, строчные буквы и дефисы (-) только.</span><span class="sxs-lookup"><span data-stu-id="70c51-425">Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.</span></span>
            <span data-ttu-id="70c51-426">Каждого символа дефиса (-) непосредственно перед и после него должны буква или цифра.</span><span class="sxs-lookup"><span data-stu-id="70c51-426">Every dash (-) character must be immediately preceded and followed by a letter or number.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
    package: azure-arm-storage
references:
  - uid: Promise<azure-arm-storage.LegalHold>
    name: LegalHold>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LegalHold
        fullName: LegalHold
        uid: azure-arm-storage.LegalHold
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.LegalHold>
    name: LegalHold>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LegalHold
        fullName: LegalHold
        uid: azure-arm-storage.LegalHold
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
    name: LegalHold>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: LegalHold
        fullName: LegalHold
        uid: azure-arm-storage.LegalHold
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.BlobContainer>
    name: BlobContainer>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobContainer
        fullName: BlobContainer
        uid: azure-arm-storage.BlobContainer
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.BlobContainer>
    name: BlobContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BlobContainer
        fullName: BlobContainer
        uid: azure-arm-storage.BlobContainer
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-arm-storage.ImmutabilityPolicy>
    name: ImmutabilityPolicy>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: azure-arm-storage.ImmutabilityPolicy
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
    name: ImmutabilityPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: azure-arm-storage.ImmutabilityPolicy
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
    name: ImmutabilityPolicy>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: azure-arm-storage.ImmutabilityPolicy
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
    name: BlobContainer>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BlobContainer
        fullName: BlobContainer
        uid: azure-arm-storage.BlobContainer
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.LeaseContainerResponse>
    name: LeaseContainerResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: azure-arm-storage.LeaseContainerResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.LeaseContainerResponse>
    name: LeaseContainerResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: azure-arm-storage.LeaseContainerResponse
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.LeaseContainerResponse>>
    name: LeaseContainerResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: azure-arm-storage.LeaseContainerResponse
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-storage.ListContainerItems>
    name: ListContainerItems>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: azure-arm-storage.ListContainerItems
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-storage.ListContainerItems>
    name: ListContainerItems>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: azure-arm-storage.ListContainerItems
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
    name: ListContainerItems>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: azure-arm-storage.ListContainerItems
      - name: '>>'
        fullName: '>>'