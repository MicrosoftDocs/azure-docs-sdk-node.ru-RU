### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40075224"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-101">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-101">Used for serial appends to the specified file.</span></span> <span data-ttu-id="52db7-102">Примечание: Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-102">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="52db7-103">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-104">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-105">Путь к Data Lake Store (начиная с «/») файла, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="52db7-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-106">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-106">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-107">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-107">Used for serial appends to the specified file.</span></span> <span data-ttu-id="52db7-108">Примечание: Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-108">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="52db7-109">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-109">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-110">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-110">Used for serial appends to the specified file.</span></span> <span data-ttu-id="52db7-111">Примечание: Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-111">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="52db7-112">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-112">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-113">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-113">Used for serial appends to the specified file.</span></span> <span data-ttu-id="52db7-114">Примечание: Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-114">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="52db7-115">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-115">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-116">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-116">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-117">Путь к Data Lake Store (начиная с «/») файла, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="52db7-117">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-118">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-118">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-119">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="52db7-119">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-120">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-120">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-121">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется проверить доступ.</span><span class="sxs-lookup"><span data-stu-id="52db7-121">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="52db7-122">Файл системы операции чтения, запись и выполнение в виде строки, соответствующие шаблону регулярного выражения "[rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="52db7-122">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-123">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="52db7-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-124">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="52db7-124">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-125">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="52db7-125">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-126">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-126">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-127">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется проверить доступ.</span><span class="sxs-lookup"><span data-stu-id="52db7-127">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="52db7-128">Файл системы операции чтения, запись и выполнение в виде строки, соответствующие шаблону регулярного выражения "[rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="52db7-128">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-129">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-129">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-130">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-130">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-131">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-131">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-132">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="52db7-132">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="52db7-133">Список с разделителями запятыми пути Data Lake Store (начиная с «/») для объединения, в том порядке, в котором должен быть сцеплен файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-133">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-134">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-134">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-135">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-135">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-136">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-136">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-137">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="52db7-137">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="52db7-138">Список с разделителями запятыми пути Data Lake Store (начиная с «/») для объединения, в том порядке, в котором должен быть сцеплен файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-138">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="52db7-139">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="52db7-139">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="52db7-140">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-140">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="52db7-141">Примечание: Целевой объект не может содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="52db7-141">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="52db7-142">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-142">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="52db7-143">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="52db7-143">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-144">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-144">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-145">Путь к Data Lake Store (начиная с «/») файла, к которому добавляются с помощью параллельных append.</span><span class="sxs-lookup"><span data-stu-id="52db7-145">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-146">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-146">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="52db7-147">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="52db7-147">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="52db7-148">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-148">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="52db7-149">Примечание: Целевой объект не может содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="52db7-149">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="52db7-150">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-150">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="52db7-151">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="52db7-151">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="52db7-152">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="52db7-152">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="52db7-153">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-153">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="52db7-154">Примечание: Целевой объект не может содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="52db7-154">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="52db7-155">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-155">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="52db7-156">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="52db7-156">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="52db7-157">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="52db7-157">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="52db7-158">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-158">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="52db7-159">Примечание: Целевой объект не может содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="52db7-159">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="52db7-160">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-160">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="52db7-161">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="52db7-161">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-162">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-162">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-163">Путь к Data Lake Store (начиная с «/») файла, к которому добавляются с помощью параллельных append.</span><span class="sxs-lookup"><span data-stu-id="52db7-163">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-164">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="52db7-164">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-165">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="52db7-165">Creates a file with optionally specified content.</span></span> <span data-ttu-id="52db7-166">Примечание: Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-166">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-167">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="52db7-167">Creates a file with optionally specified content.</span></span> <span data-ttu-id="52db7-168">Примечание: Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-168">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-169">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-169">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-170">Путь к Data Lake Store (начиная с «/») для создания файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-170">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-171">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="52db7-171">Creates a file with optionally specified content.</span></span> <span data-ttu-id="52db7-172">Примечание: Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-172">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="52db7-173">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="52db7-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="52db7-174">Примечание: Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="52db7-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-175">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-176">Путь к Data Lake Store (начиная с «/») для создания файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-177">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="52db7-177">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-178">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-178">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-179">Путь к Data Lake Store (начиная с «/») файла или каталога для удаления.</span><span class="sxs-lookup"><span data-stu-id="52db7-179">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-180">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="52db7-180">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-181">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="52db7-181">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-182">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="52db7-182">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-183">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-184">Путь к Data Lake Store (начиная с «/») файла или каталога для удаления.</span><span class="sxs-lookup"><span data-stu-id="52db7-184">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-185">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-185">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-186">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-186">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-187">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-187">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-188">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-188">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-189">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-189">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-190">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-190">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-191">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-192">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-192">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-193">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-193">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-194">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-195">Путь к Data Lake Store (начиная с «/») файла, для которого необходимо получить сводные данные.</span><span class="sxs-lookup"><span data-stu-id="52db7-195">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-196">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-196">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-197">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-197">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-198">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-198">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-199">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-200">Путь к Data Lake Store (начиная с «/») файла, для которого необходимо получить сводные данные.</span><span class="sxs-lookup"><span data-stu-id="52db7-200">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-201">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-201">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-202">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-203">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить состояние.</span><span class="sxs-lookup"><span data-stu-id="52db7-203">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-204">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-204">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-205">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-205">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-206">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="52db7-206">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-207">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-208">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить состояние.</span><span class="sxs-lookup"><span data-stu-id="52db7-208">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-209">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="52db7-209">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-210">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="52db7-210">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-211">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="52db7-211">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-212">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-212">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-213">Путь к Data Lake Store (начиная с «/») каталога в список.</span><span class="sxs-lookup"><span data-stu-id="52db7-213">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-214">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="52db7-214">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-215">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-216">Путь к Data Lake Store (начиная с «/») каталога в список.</span><span class="sxs-lookup"><span data-stu-id="52db7-216">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-217">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-217">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-218">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-219">Путь к Data Lake Store (начиная с «/») для создания каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-219">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-220">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-220">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-221">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-221">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-222">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-222">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-223">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-224">Путь к Data Lake Store (начиная с «/») для создания каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-224">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-225">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-225">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-226">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-227">Путь к Data Lake Store (начиная с «/») файла или каталога с помощью изменения списка управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-227">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-228">Спецификация ACL, включенных в операции изменения списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="52db7-228">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-229">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-229">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-230">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-230">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-231">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-231">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-232">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-232">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-233">Путь к Data Lake Store (начиная с «/») файла или каталога с помощью изменения списка управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-233">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-234">Спецификация ACL, включенных в операции изменения списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="52db7-234">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-235">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-235">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="52db7-236">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="52db7-236">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="52db7-237">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="52db7-237">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-238">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-238">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-239">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="52db7-239">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-240">Список путей к Data Lake Store (начиная с «/») исходных файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-240">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="52db7-241">Должен быть список с разделителями запятыми путь в формате: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="52db7-241">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-242">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-242">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="52db7-243">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="52db7-243">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="52db7-244">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="52db7-244">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-245">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-245">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="52db7-246">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="52db7-246">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="52db7-247">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="52db7-247">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-248">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="52db7-248">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="52db7-249">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="52db7-249">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="52db7-250">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="52db7-250">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-251">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-251">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-252">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="52db7-252">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="52db7-253">Список путей к Data Lake Store (начиная с «/») исходных файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-253">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="52db7-254">Должен быть список с разделителями запятыми путь в формате: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="52db7-254">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-255">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-255">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-256">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-256">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-257">Путь к Data Lake Store (начиная с «/») для открытия файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-257">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-258">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-258">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-259">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-259">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-260">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-260">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-261">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-261">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-262">Путь к Data Lake Store (начиная с «/») для открытия файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-262">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-263">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-263">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-264">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-264">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-265">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-265">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-266">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-266">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-267">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="52db7-267">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-268">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-268">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-269">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-270">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="52db7-270">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-271">Спецификации ACL, включенные в операциях удаления списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других"</span><span class="sxs-lookup"><span data-stu-id="52db7-271">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-272">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-272">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-273">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-273">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-274">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-274">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-275">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-275">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-276">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="52db7-276">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-277">Спецификации ACL, включенные в операциях удаления списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других"</span><span class="sxs-lookup"><span data-stu-id="52db7-277">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-278">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-278">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-279">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-279">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-280">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="52db7-280">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-281">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="52db7-281">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-282">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-282">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-283">Путь к Data Lake Store (начиная с «/») со значением по умолчанию удаляемый ACL каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-283">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-284">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="52db7-284">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-285">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="52db7-285">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-286">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="52db7-286">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-287">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-288">Путь к Data Lake Store (начиная с «/») со значением по умолчанию удаляемый ACL каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-288">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-289">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-289">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-290">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-291">Путь к Data Lake Store (начиная с «/») файла или каталога для перемещения или переименования.</span><span class="sxs-lookup"><span data-stu-id="52db7-291">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="52db7-292">Путь перемещения или переименования файла или папки для</span><span class="sxs-lookup"><span data-stu-id="52db7-292">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-293">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-293">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-294">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-294">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-295">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="52db7-295">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-296">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-296">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-297">Путь к Data Lake Store (начиная с «/») файла или каталога для перемещения или переименования.</span><span class="sxs-lookup"><span data-stu-id="52db7-297">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="52db7-298">Путь перемещения или переименования файла или папки для</span><span class="sxs-lookup"><span data-stu-id="52db7-298">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-299">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-299">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-300">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-300">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-301">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-301">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-302">Спецификации ACL, включенных в операции по созданию списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="52db7-302">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-303">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-303">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-304">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-304">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-305">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-305">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-306">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-306">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-307">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="52db7-307">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="52db7-308">Спецификации ACL, включенных в операции по созданию списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="52db7-308">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-309">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="52db7-309">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="52db7-310">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-310">This operation can only be executed against files.</span></span> <span data-ttu-id="52db7-311">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="52db7-311">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-312">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-312">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-313">Путь к Data Lake Store (начиная с «/») файла, на котором или снятии время окончания срока действия.</span><span class="sxs-lookup"><span data-stu-id="52db7-313">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="52db7-314">Указывает тип истечения срока действия для файла: 1.</span><span class="sxs-lookup"><span data-stu-id="52db7-314">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="52db7-315">NeverExpire: ExpireTime учитывается.</span><span class="sxs-lookup"><span data-stu-id="52db7-315">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="52db7-316">2.</span><span class="sxs-lookup"><span data-stu-id="52db7-316">2.</span></span> <span data-ttu-id="52db7-317">RelativeToNow: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно при обновлении срока действия файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-317">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="52db7-318">3.</span><span class="sxs-lookup"><span data-stu-id="52db7-318">3.</span></span> <span data-ttu-id="52db7-319">RelativeToCreationDate: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно создания файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-319">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="52db7-320">4.</span><span class="sxs-lookup"><span data-stu-id="52db7-320">4.</span></span> <span data-ttu-id="52db7-321">Абсолютное: ExpireTime должно быть целым числом, в миллисекундах, как метку времени Unix по отношению к 1/1/1970 г. 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="52db7-321">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="52db7-322">Возможные значения: «NeverExpire», «RelativeToNow», «RelativeToCreationDate», «Absolute»</span><span class="sxs-lookup"><span data-stu-id="52db7-322">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-323">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="52db7-323">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="52db7-324">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-324">This operation can only be executed against files.</span></span> <span data-ttu-id="52db7-325">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="52db7-325">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-326">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="52db7-326">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="52db7-327">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-327">This operation can only be executed against files.</span></span> <span data-ttu-id="52db7-328">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="52db7-328">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-329">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="52db7-329">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="52db7-330">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="52db7-330">This operation can only be executed against files.</span></span> <span data-ttu-id="52db7-331">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="52db7-331">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-332">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-332">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-333">Путь к Data Lake Store (начиная с «/») файла, на котором или снятии время окончания срока действия.</span><span class="sxs-lookup"><span data-stu-id="52db7-333">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="52db7-334">Указывает тип истечения срока действия для файла: 1.</span><span class="sxs-lookup"><span data-stu-id="52db7-334">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="52db7-335">NeverExpire: ExpireTime учитывается.</span><span class="sxs-lookup"><span data-stu-id="52db7-335">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="52db7-336">2.</span><span class="sxs-lookup"><span data-stu-id="52db7-336">2.</span></span> <span data-ttu-id="52db7-337">RelativeToNow: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно при обновлении срока действия файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-337">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="52db7-338">3.</span><span class="sxs-lookup"><span data-stu-id="52db7-338">3.</span></span> <span data-ttu-id="52db7-339">RelativeToCreationDate: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно создания файла.</span><span class="sxs-lookup"><span data-stu-id="52db7-339">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="52db7-340">4.</span><span class="sxs-lookup"><span data-stu-id="52db7-340">4.</span></span> <span data-ttu-id="52db7-341">Абсолютное: ExpireTime должно быть целым числом, в миллисекундах, как метку времени Unix по отношению к 1/1/1970 г. 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="52db7-341">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="52db7-342">Возможные значения: «NeverExpire», «RelativeToNow», «RelativeToCreationDate», «Absolute»</span><span class="sxs-lookup"><span data-stu-id="52db7-342">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-343">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-343">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-344">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-344">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-345">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать владельца.</span><span class="sxs-lookup"><span data-stu-id="52db7-345">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-346">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-346">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-347">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-347">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-348">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="52db7-348">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-349">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-349">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-350">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать владельца.</span><span class="sxs-lookup"><span data-stu-id="52db7-350">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-351">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-351">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-352">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-353">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать разрешения.</span><span class="sxs-lookup"><span data-stu-id="52db7-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-354">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-354">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-355">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-355">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="52db7-356">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="52db7-356">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="52db7-357">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="52db7-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="52db7-358">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать разрешения.</span><span class="sxs-lookup"><span data-stu-id="52db7-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
