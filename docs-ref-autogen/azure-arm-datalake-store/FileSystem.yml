### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044989"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-101">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-101">Used for serial appends to the specified file.</span></span><span data-ttu-id="85ee1-102"> Примечание. Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-102"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="85ee1-103">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-104">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-105">Путь к Data Lake Store (начиная с «/») файла, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="85ee1-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-106">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="85ee1-107">Максимальный размер содержимого — 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="85ee1-108">Размер которых превышает 4 МБ, необходимо добавить содержимое блоками по 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-109">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-109">Used for serial appends to the specified file.</span></span><span data-ttu-id="85ee1-110"> Примечание. Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-110"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="85ee1-111">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-111">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-112">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-112">Used for serial appends to the specified file.</span></span><span data-ttu-id="85ee1-113"> Примечание. Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-113"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="85ee1-114">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-114">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-115">Используется для серийных в указанный файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-115">Used for serial appends to the specified file.</span></span><span data-ttu-id="85ee1-116"> Примечание. Целевой объект не должен содержать данные, добавленные ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-116"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="85ee1-117">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-117">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-118">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-119">Путь к Data Lake Store (начиная с «/») файла, который требуется добавить.</span><span class="sxs-lookup"><span data-stu-id="85ee1-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-120">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="85ee1-121">Максимальный размер содержимого — 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="85ee1-122">Размер которых превышает 4 МБ, необходимо добавить содержимое блоками по 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-123">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="85ee1-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-124">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-125">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется проверить доступ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-126">Файл системы операции чтения, запись и выполнение в виде строки, соответствующие шаблону регулярного выражения "[rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="85ee1-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-127">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="85ee1-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-128">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="85ee1-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-129">Проверяет, доступно ли указанным доступом по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="85ee1-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-130">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-131">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется проверить доступ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-132">Файл системы операции чтения, запись и выполнение в виде строки, соответствующие шаблону регулярного выражения "[rwx-]{3}"</span><span class="sxs-lookup"><span data-stu-id="85ee1-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-133">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-134">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-135">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="85ee1-136">Список с разделителями запятыми пути Data Lake Store (начиная с «/») для объединения, в том порядке, в котором должен быть сцеплен файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-137">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-138">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-139">Объединяет список исходных файлов в конечный файл, удаление всех файлов исходного кода при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-140">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-141">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="85ee1-142">Список с разделителями запятыми пути Data Lake Store (начиная с «/») для объединения, в том порядке, в котором должен быть сцеплен файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="85ee1-143">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="85ee1-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="85ee1-144">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="85ee1-145">Примечание. Целевой объект не должен содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="85ee1-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="85ee1-146">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="85ee1-147">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="85ee1-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-148">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-149">Путь к Data Lake Store (начиная с «/») файла, к которому добавляются с помощью параллельных append.</span><span class="sxs-lookup"><span data-stu-id="85ee1-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-150">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="85ee1-151">Максимальный размер содержимого — 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="85ee1-152">Размер которых превышает 4 МБ, необходимо добавить содержимое блоками по 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="85ee1-153">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="85ee1-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="85ee1-154">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="85ee1-155">Примечание. Целевой объект не должен содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="85ee1-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="85ee1-156">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="85ee1-157">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="85ee1-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="85ee1-158">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="85ee1-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="85ee1-159">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="85ee1-160">Примечание. Целевой объект не должен содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="85ee1-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="85ee1-161">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="85ee1-162">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="85ee1-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="85ee1-163">При необходимости добавляет в указанный файл, сначала создавая файл, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="85ee1-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="85ee1-164">Этот метод поддерживает несколько одновременных добавляет в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="85ee1-165">Примечание. Целевой объект не должен содержать данные, добавленные с Create или обычном Append (последовательный).</span><span class="sxs-lookup"><span data-stu-id="85ee1-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="85ee1-166">ConcurrentAppend и Append не может использоваться взаимозаменяемо; После целевой файл был изменен с помощью любой из этих параметров "Добавить", параметр append не может использоваться для целевого файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="85ee1-167">ConcurrentAppend не гарантирует порядок и может привести к целевой в целевом файле дублирующимися данными.</span><span class="sxs-lookup"><span data-stu-id="85ee1-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-168">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-169">Путь к Data Lake Store (начиная с «/») файла, к которому добавляются с помощью параллельных append.</span><span class="sxs-lookup"><span data-stu-id="85ee1-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-170">Содержимое файла для включения при добавлении в файл.</span><span class="sxs-lookup"><span data-stu-id="85ee1-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="85ee1-171">Максимальный размер содержимого — 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="85ee1-172">Размер которых превышает 4 МБ, необходимо добавить содержимое блоками по 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="85ee1-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-173">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="85ee1-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="85ee1-174">Примечание. Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-175">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-176">Путь к Data Lake Store (начиная с «/») для создания файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-177">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="85ee1-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="85ee1-178">Примечание. Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-179">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="85ee1-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="85ee1-180">Примечание. Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="85ee1-181">Создает файл при необходимости указанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="85ee1-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="85ee1-182">Примечание. Если указано содержимое, полученный файл нельзя изменить с помощью ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="85ee1-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-183">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-184">Путь к Data Lake Store (начиная с «/») для создания файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-185">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="85ee1-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-186">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-187">Путь к Data Lake Store (начиная с «/») файла или каталога для удаления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-188">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="85ee1-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-189">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="85ee1-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-190">Удаляет запрошенный файл или каталог, при необходимости рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="85ee1-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-191">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-192">Путь к Data Lake Store (начиная с «/») файла или каталога для удаления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-193">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-194">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-195">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-196">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-197">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-198">Получает записи списка управления доступом (ACL) для заданного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-199">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-200">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-201">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-202">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-203">Путь к Data Lake Store (начиная с «/») файла, для которого необходимо получить сводные данные.</span><span class="sxs-lookup"><span data-stu-id="85ee1-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-204">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-205">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-206">Получает файл содержимого сводки объект, указанный по пути к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-207">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-208">Путь к Data Lake Store (начиная с «/») файла, для которого необходимо получить сводные данные.</span><span class="sxs-lookup"><span data-stu-id="85ee1-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-209">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-210">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-211">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить состояние.</span><span class="sxs-lookup"><span data-stu-id="85ee1-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-212">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-213">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-214">Получите объект состояния файла, заданный путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="85ee1-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-215">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-216">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого необходимо получить состояние.</span><span class="sxs-lookup"><span data-stu-id="85ee1-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-217">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="85ee1-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-218">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-219">Путь к Data Lake Store (начиная с «/») каталога в список.</span><span class="sxs-lookup"><span data-stu-id="85ee1-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-220">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="85ee1-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-221">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="85ee1-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-222">Получить список объектов состояния файла, указанные путем к файлу с параметрами необязательно разбиение на страницы</span><span class="sxs-lookup"><span data-stu-id="85ee1-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-223">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-224">Путь к Data Lake Store (начиная с «/») каталога в список.</span><span class="sxs-lookup"><span data-stu-id="85ee1-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-225">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-226">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-227">Путь к Data Lake Store (начиная с «/») для создания каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-228">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-229">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-230">Создает каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-231">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-232">Путь к Data Lake Store (начиная с «/») для создания каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-233">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-234">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-235">Путь к Data Lake Store (начиная с «/») файла или каталога с помощью изменения списка управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-236">Спецификация ACL, включенных в операции изменения списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="85ee1-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-237">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-238">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-239">Изменяет существующие записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-240">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-241">Путь к Data Lake Store (начиная с «/») файла или каталога с помощью изменения списка управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-242">Спецификация ACL, включенных в операции изменения списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="85ee1-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-243">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="85ee1-244">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="85ee1-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="85ee1-245">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="85ee1-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-246">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-247">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-248">Список путей к Data Lake Store (начиная с «/») исходных файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="85ee1-249">Должен быть список с разделителями запятыми путь в формате: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="85ee1-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-250">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="85ee1-251">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="85ee1-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="85ee1-252">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="85ee1-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-253">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="85ee1-254">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="85ee1-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="85ee1-255">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="85ee1-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-256">Объединяет список исходных файлов в конечный файл, удаление всех исходных файлов при успешном выполнении.</span><span class="sxs-lookup"><span data-stu-id="85ee1-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="85ee1-257">Этот метод принимает дополнительные пути к исходным файлам, чем метод Concat.</span><span class="sxs-lookup"><span data-stu-id="85ee1-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="85ee1-258">Этот метод и параметры, которые он принимает могут меняться для удобства использования в последующих версиях.</span><span class="sxs-lookup"><span data-stu-id="85ee1-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-259">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-260">Путь к Data Lake Store (начиная с «/») конечного файла, возникающий из сцепления.</span><span class="sxs-lookup"><span data-stu-id="85ee1-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="85ee1-261">Список путей к Data Lake Store (начиная с «/») исходных файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="85ee1-262">Должен быть список с разделителями запятыми путь в формате: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="85ee1-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-263">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-264">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-265">Путь к Data Lake Store (начиная с «/») для открытия файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-266">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-267">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-268">Открывает и считывает из указанного файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-269">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-270">Путь к Data Lake Store (начиная с «/») для открытия файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-271">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-272">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-273">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="85ee1-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-274">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-275">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-276">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-277">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-278">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="85ee1-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-279">Спецификации ACL, включенные в операциях удаления списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других"</span><span class="sxs-lookup"><span data-stu-id="85ee1-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-280">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-281">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-282">Удаляет существующий записи списка управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-283">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-284">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="85ee1-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-285">Спецификации ACL, включенные в операциях удаления списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других"</span><span class="sxs-lookup"><span data-stu-id="85ee1-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-286">Удаляет существующий список управления доступом (ACL) указанного файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-287">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-288">Путь к Data Lake Store (начиная с «/») файла или каталога с удаляемый ACL.</span><span class="sxs-lookup"><span data-stu-id="85ee1-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-289">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="85ee1-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-290">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-291">Путь к Data Lake Store (начиная с «/») со значением по умолчанию удаляемый ACL каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-292">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="85ee1-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-293">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="85ee1-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-294">Удаляет существующие по умолчанию элемента управления списка управления Доступом в указанном каталоге.</span><span class="sxs-lookup"><span data-stu-id="85ee1-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-295">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-296">Путь к Data Lake Store (начиная с «/») со значением по умолчанию удаляемый ACL каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-297">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-298">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-299">Путь к Data Lake Store (начиная с «/») файла или каталога для перемещения или переименования.</span><span class="sxs-lookup"><span data-stu-id="85ee1-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-300">Путь перемещения или переименования файла или папки для</span><span class="sxs-lookup"><span data-stu-id="85ee1-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-301">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-302">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-303">Переименуйте файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="85ee1-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-304">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-305">Путь к Data Lake Store (начиная с «/») файла или каталога для перемещения или переименования.</span><span class="sxs-lookup"><span data-stu-id="85ee1-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-306">Путь перемещения или переименования файла или папки для</span><span class="sxs-lookup"><span data-stu-id="85ee1-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-307">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-308">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-309">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-310">Спецификации ACL, включенных в операции по созданию списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="85ee1-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-311">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-312">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-313">Задает список управления доступом (ACL) для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-314">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-315">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать список управления Доступом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-316">Спецификации ACL, включенных в операции по созданию списка управления Доступом в формате "[по умолчанию:] пользователя | группы | других:: r |-w |-x |-"</span><span class="sxs-lookup"><span data-stu-id="85ee1-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-317">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="85ee1-318">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-318">This operation can only be executed against files.</span></span> <span data-ttu-id="85ee1-319">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="85ee1-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-320">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-321">Путь к Data Lake Store (начиная с «/») файла, на котором или снятии время окончания срока действия.</span><span class="sxs-lookup"><span data-stu-id="85ee1-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-322">Указывает тип истечения срока действия для файла: 1.</span><span class="sxs-lookup"><span data-stu-id="85ee1-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="85ee1-323">NeverExpire: ExpireTime учитывается.</span><span class="sxs-lookup"><span data-stu-id="85ee1-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="85ee1-324">2.</span><span class="sxs-lookup"><span data-stu-id="85ee1-324">2.</span></span> <span data-ttu-id="85ee1-325">RelativeToNow: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно при обновлении срока действия файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="85ee1-326">3.</span><span class="sxs-lookup"><span data-stu-id="85ee1-326">3.</span></span> <span data-ttu-id="85ee1-327">RelativeToCreationDate: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно создания файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="85ee1-328">4.</span><span class="sxs-lookup"><span data-stu-id="85ee1-328">4.</span></span> <span data-ttu-id="85ee1-329">Абсолютный: ExpireTime должно быть целым числом, в миллисекундах, как метку времени Unix по отношению к 1/1/1970 г. 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="85ee1-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="85ee1-330">Ниже перечислены возможные значения. «NeverExpire», «RelativeToNow», «RelativeToCreationDate», «Absolute»</span><span class="sxs-lookup"><span data-stu-id="85ee1-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-331">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="85ee1-332">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-332">This operation can only be executed against files.</span></span> <span data-ttu-id="85ee1-333">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="85ee1-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-334">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="85ee1-335">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-335">This operation can only be executed against files.</span></span> <span data-ttu-id="85ee1-336">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="85ee1-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-337">Задает или удаляет время окончания срока действия с указанным файлом.</span><span class="sxs-lookup"><span data-stu-id="85ee1-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="85ee1-338">Эта операция может быть выполнена только для файлов.</span><span class="sxs-lookup"><span data-stu-id="85ee1-338">This operation can only be executed against files.</span></span> <span data-ttu-id="85ee1-339">Папки не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="85ee1-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-340">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-341">Путь к Data Lake Store (начиная с «/») файла, на котором или снятии время окончания срока действия.</span><span class="sxs-lookup"><span data-stu-id="85ee1-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-342">Указывает тип истечения срока действия для файла: 1.</span><span class="sxs-lookup"><span data-stu-id="85ee1-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="85ee1-343">NeverExpire: ExpireTime учитывается.</span><span class="sxs-lookup"><span data-stu-id="85ee1-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="85ee1-344">2.</span><span class="sxs-lookup"><span data-stu-id="85ee1-344">2.</span></span> <span data-ttu-id="85ee1-345">RelativeToNow: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно при обновлении срока действия файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="85ee1-346">3.</span><span class="sxs-lookup"><span data-stu-id="85ee1-346">3.</span></span> <span data-ttu-id="85ee1-347">RelativeToCreationDate: ExpireTime должно быть целым числом, в миллисекундах, который представляет дату окончания срока действия относительно создания файла.</span><span class="sxs-lookup"><span data-stu-id="85ee1-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="85ee1-348">4.</span><span class="sxs-lookup"><span data-stu-id="85ee1-348">4.</span></span> <span data-ttu-id="85ee1-349">Абсолютный: ExpireTime должно быть целым числом, в миллисекундах, как метку времени Unix по отношению к 1/1/1970 г. 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="85ee1-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="85ee1-350">Ниже перечислены возможные значения. «NeverExpire», «RelativeToNow», «RelativeToCreationDate», «Absolute»</span><span class="sxs-lookup"><span data-stu-id="85ee1-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-351">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-352">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-353">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать владельца.</span><span class="sxs-lookup"><span data-stu-id="85ee1-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-354">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-355">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-356">Задает владельца файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="85ee1-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-357">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-358">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать владельца.</span><span class="sxs-lookup"><span data-stu-id="85ee1-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-359">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-360">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-361">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать разрешения.</span><span class="sxs-lookup"><span data-stu-id="85ee1-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-362">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-363">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85ee1-364">Задает разрешения для файла или папки.</span><span class="sxs-lookup"><span data-stu-id="85ee1-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-365">Учетная запись Azure Data Lake Store для выполнения операций файловой системы.</span><span class="sxs-lookup"><span data-stu-id="85ee1-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="85ee1-366">Путь к Data Lake Store (начиная с «/») файла или каталога, для которого требуется задать разрешения.</span><span class="sxs-lookup"><span data-stu-id="85ee1-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
