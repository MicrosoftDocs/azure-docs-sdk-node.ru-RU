### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026130"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-101">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="615e1-102">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="615e1-103">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="615e1-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="615e1-104">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="615e1-104">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-105">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-105">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-106">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-106">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="615e1-107">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-107">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="615e1-108">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="615e1-108">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="615e1-109">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="615e1-109">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-110">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-110">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="615e1-111">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="615e1-112">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="615e1-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="615e1-113">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="615e1-113">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-114">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-114">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-115">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-115">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-116">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-116">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-117">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-118">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-118">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-119">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-119">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="615e1-120">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-120">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-121">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-122">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-122">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-123">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-124">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-124">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-125">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-126">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-126">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-127">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-128">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-128">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-129">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-129">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-130">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-130">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-131">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-131">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-132">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-132">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-133">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-133">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-134">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-134">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-135">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-135">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-136">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-136">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-137">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-137">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-138">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-138">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-139">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-139">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="615e1-140">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-140">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-141">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-141">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-142">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-142">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-143">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-144">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-144">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-145">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-146">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-146">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-147">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-148">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-148">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-149">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-149">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-150">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-150">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-151">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-151">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-152">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-152">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-153">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-153">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-154">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-154">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-155">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-155">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-156">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-156">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-157">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-157">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-158">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-158">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-159">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-159">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="615e1-160">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-160">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-161">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-161">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-162">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="615e1-162">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="615e1-163">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="615e1-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="615e1-164">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-164">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="615e1-165">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="615e1-166">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-166">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="615e1-167">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="615e1-168">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-168">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-169">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-169">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-170">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-170">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-171">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-171">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-172">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-173">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-174">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-174">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-175">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-175">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-176">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-176">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="615e1-177">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-177">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="615e1-178">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="615e1-178">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="615e1-179">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="615e1-179">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-180">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-180">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="615e1-181">Учетные данные для подписки, которые однозначно идентифицируют подписку клиента.</span><span class="sxs-lookup"><span data-stu-id="615e1-181">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: endpoint
      type:
      - string
      description: >
        <span data-ttu-id="615e1-182">Конечные точки, поддерживаемые Cognitive Services</span><span class="sxs-lookup"><span data-stu-id="615e1-182">Supported Cognitive Services endpoints</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-183">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-183">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-184">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-184">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-185">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-185">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-186">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-186">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-187">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-187">All descriptions are in English.</span></span> <span data-ttu-id="615e1-188">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-188">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-189">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-189">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-190">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-190">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-191">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-191">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-192">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-192">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-193">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-193">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-194">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-194">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-195">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-195">All descriptions are in English.</span></span> <span data-ttu-id="615e1-196">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-196">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-197">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-197">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-198">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-198">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-199">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-199">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-200">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-200">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-201">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-201">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-202">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-202">All descriptions are in English.</span></span> <span data-ttu-id="615e1-203">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-203">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-204">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-204">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-205">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-205">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-206">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-206">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-207">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-207">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-208">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-208">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-209">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-209">All descriptions are in English.</span></span> <span data-ttu-id="615e1-210">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-210">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-211">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-211">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-212">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-212">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-213">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-213">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-214">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-214">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-215">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-215">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-216">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-216">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-217">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-217">All descriptions are in English.</span></span> <span data-ttu-id="615e1-218">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-218">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-219">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-219">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-220">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-220">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-221">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-221">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-222">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-222">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-223">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-223">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-224">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-224">All descriptions are in English.</span></span> <span data-ttu-id="615e1-225">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-225">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-226">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-226">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-227">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-227">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-228">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-228">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-229">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-229">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-230">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-230">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-231">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-231">All descriptions are in English.</span></span> <span data-ttu-id="615e1-232">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-232">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-233">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-233">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-234">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-234">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-235">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="615e1-235">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="615e1-236">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="615e1-236">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="615e1-237">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-237">More than one description can be generated for each image.</span></span>  <span data-ttu-id="615e1-238">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="615e1-238">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="615e1-239">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-239">All descriptions are in English.</span></span> <span data-ttu-id="615e1-240">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-240">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-241">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-241">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-242">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-242">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-243">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-243">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-244">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-244">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-245">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-245">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-246">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-246">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-247">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-247">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="615e1-248">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-248">Width of the thumbnail.</span></span> <span data-ttu-id="615e1-249">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="615e1-249">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="615e1-250">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-250">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="615e1-251">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-251">Height of the thumbnail.</span></span> <span data-ttu-id="615e1-252">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="615e1-252">It must be between 1 and</span></span>

        1024. <span data-ttu-id="615e1-253">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-253">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-254">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-254">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-255">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-255">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-256">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-256">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-257">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-257">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-258">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-258">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-259">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-259">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-260">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-260">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-261">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-261">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-262">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-262">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-263">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-263">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-264">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-264">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-265">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-265">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-266">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-266">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-267">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-267">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-268">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-268">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-269">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-269">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="615e1-270">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-270">Width of the thumbnail.</span></span> <span data-ttu-id="615e1-271">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="615e1-271">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="615e1-272">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-272">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="615e1-273">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-273">Height of the thumbnail.</span></span> <span data-ttu-id="615e1-274">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="615e1-274">It must be between 1 and</span></span>

        1024. <span data-ttu-id="615e1-275">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-275">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-276">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-276">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-277">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-277">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-278">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-278">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-279">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-279">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-280">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-280">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-281">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-281">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-282">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-282">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-283">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-283">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-284">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-284">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-285">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-285">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-286">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-286">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-287">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-287">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-288">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-288">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-289">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-289">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-290">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-290">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-291">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-291">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="615e1-292">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-292">Width of the thumbnail.</span></span> <span data-ttu-id="615e1-293">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="615e1-293">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="615e1-294">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-294">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="615e1-295">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-295">Height of the thumbnail.</span></span> <span data-ttu-id="615e1-296">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="615e1-296">It must be between 1 and</span></span>

        1024. <span data-ttu-id="615e1-297">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-297">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-298">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-298">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-299">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="615e1-299">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="615e1-300">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="615e1-300">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="615e1-301">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-301">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="615e1-302">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-302">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="615e1-303">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-303">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="615e1-304">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-304">Width of the thumbnail.</span></span> <span data-ttu-id="615e1-305">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="615e1-305">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="615e1-306">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-306">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="615e1-307">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="615e1-307">Height of the thumbnail.</span></span> <span data-ttu-id="615e1-308">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="615e1-308">It must be between 1 and</span></span>

        1024. <span data-ttu-id="615e1-309">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="615e1-309">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-310">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-310">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-311">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="615e1-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="615e1-312">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="615e1-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="615e1-313">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="615e1-313">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-314">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="615e1-314">This interface is used for getting text operation result.</span></span> <span data-ttu-id="615e1-315">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="615e1-315">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-316">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="615e1-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="615e1-317">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="615e1-317">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-318">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="615e1-318">This interface is used for getting text operation result.</span></span> <span data-ttu-id="615e1-319">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="615e1-319">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="615e1-320">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="615e1-320">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="615e1-321">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="615e1-321">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="615e1-322">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-322">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="615e1-323">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-323">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-324">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-324">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="615e1-325">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="615e1-325">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="615e1-326">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-326">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="615e1-327">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-327">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-328">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-328">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="615e1-329">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="615e1-329">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="615e1-330">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-330">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="615e1-331">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-331">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-332">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-332">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="615e1-333">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="615e1-333">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="615e1-334">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="615e1-334">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="615e1-335">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="615e1-335">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="615e1-336">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="615e1-336">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-337">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-337">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-338">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-338">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-339">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-339">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-340">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-340">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="615e1-341">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="615e1-341">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="615e1-342">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="615e1-342">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-343">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-343">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-344">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-344">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-345">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-345">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-346">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-346">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-347">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-347">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-348">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-348">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-349">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-349">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-350">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-350">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-351">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-351">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-352">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-352">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-353">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-353">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-354">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-355">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="615e1-356">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="615e1-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="615e1-357">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="615e1-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-358">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-358">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-359">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-359">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-360">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-360">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-361">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-361">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-362">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-362">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-363">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-363">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-364">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-364">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-365">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-365">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-366">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-366">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-367">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-367">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-368">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-368">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-369">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-369">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-370">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-370">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="615e1-371">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="615e1-371">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="615e1-372">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="615e1-372">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-373">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-373">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="615e1-374">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="615e1-374">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="615e1-375">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-375">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="615e1-376">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="615e1-376">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="615e1-377">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="615e1-377">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="615e1-378">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="615e1-378">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="615e1-379">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="615e1-379">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-380">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-380">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-381">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-381">Recognize Text operation.</span></span> <span data-ttu-id="615e1-382">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-382">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-383">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-383">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-384">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-384">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="615e1-385">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-385">Type of text to recognize.</span></span> <span data-ttu-id="615e1-386">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="615e1-386">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-387">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-387">Recognize Text operation.</span></span> <span data-ttu-id="615e1-388">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-388">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-389">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-389">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-390">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-390">Recognize Text operation.</span></span> <span data-ttu-id="615e1-391">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-391">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-392">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-392">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-393">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-393">Recognize Text operation.</span></span> <span data-ttu-id="615e1-394">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-394">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-395">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-395">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-396">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-396">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="615e1-397">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-397">Type of text to recognize.</span></span> <span data-ttu-id="615e1-398">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="615e1-398">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-399">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-399">Recognize Text operation.</span></span> <span data-ttu-id="615e1-400">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-400">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-401">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-401">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-402">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-402">Recognize Text operation.</span></span> <span data-ttu-id="615e1-403">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-403">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-404">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-404">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-405">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-405">Recognize Text operation.</span></span> <span data-ttu-id="615e1-406">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-406">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-407">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-407">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-408">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-408">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="615e1-409">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-409">Type of text to recognize.</span></span> <span data-ttu-id="615e1-410">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="615e1-410">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-411">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="615e1-411">Recognize Text operation.</span></span> <span data-ttu-id="615e1-412">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="615e1-412">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="615e1-413">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="615e1-413">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-414">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-414">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="615e1-415">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="615e1-415">Type of text to recognize.</span></span> <span data-ttu-id="615e1-416">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="615e1-416">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-417">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-417">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-418">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-418">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-419">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-419">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-420">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-420">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-421">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-421">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-422">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-422">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-423">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-423">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-424">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-424">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-425">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-425">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-426">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-426">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-427">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-427">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-428">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-428">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-429">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-429">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-430">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-430">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-431">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-431">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-432">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-432">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-433">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-433">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-434">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-434">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-435">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-435">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-436">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-436">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-437">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-437">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-438">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-438">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-439">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-439">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-440">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-440">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-441">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-441">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-442">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-442">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-443">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-443">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-444">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-444">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-445">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-445">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-446">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-446">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-447">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-447">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-448">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-448">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-449">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-449">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-450">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-450">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-451">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-451">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-452">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-452">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-453">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-453">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="615e1-454">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="615e1-454">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="615e1-455">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="615e1-455">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="615e1-456">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="615e1-456">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="615e1-457">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="615e1-457">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="615e1-458">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="615e1-458">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="615e1-459">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="615e1-459">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="615e1-460">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="615e1-460">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
