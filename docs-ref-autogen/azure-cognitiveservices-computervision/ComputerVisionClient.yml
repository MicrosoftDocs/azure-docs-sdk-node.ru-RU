### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
      - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
      - azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
      - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="18eca-101">Добавляет пользовательскую информацию заголовка агента пользователя</span><span class="sxs-lookup"><span data-stu-id="18eca-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="18eca-102">сведения для добавления заголовка агента пользователя, как строка.</span><span class="sxs-lookup"><span data-stu-id="18eca-102">information to be added to user agent header, as string.</span></span>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
    name: 'analyzeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-103">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-103">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-104">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-104">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-105">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-105">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-106">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-106">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-107">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-107">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-108">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-108">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-109">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-109">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
    name: 'analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-110">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-110">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-111">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-112">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-113">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-113">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-114">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-114">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-115">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-115">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-116">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-116">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-117">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-118">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-118">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-119">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-119">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-120">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-120">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-121">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-121">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
    name: 'analyzeImageByDomain(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-122">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-122">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-123">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-124">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-124">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-125">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-126">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-126">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-127">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="18eca-128">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-128">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-129">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-129">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
    name: 'analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-130">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-130">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-131">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-131">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-132">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-132">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-133">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-133">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-134">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-134">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-135">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-135">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-136">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-136">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-137">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-137">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-138">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-138">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-139">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-139">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-140">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-140">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-141">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-141">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-142">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-142">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-143">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-144">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-144">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-145">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-146">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-146">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-147">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="18eca-148">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-148">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-149">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-149">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
    name: 'analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-150">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-150">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-151">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-151">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-152">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-152">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-153">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-153">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-154">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-154">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-155">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-155">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
    name: 'analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-156">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-156">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-157">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-157">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-158">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-158">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-159">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-159">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-160">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-160">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-161">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-161">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DomainModelResults>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
    name: 'analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-162">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-162">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-163">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-164">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-164">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-165">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-166">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-166">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-167">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="18eca-168">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-168">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-169">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-169">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
    name: 'analyzeImageByDomainWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-170">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="18eca-170">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="18eca-171">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="18eca-171">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>
      <span data-ttu-id="18eca-172">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="18eca-172">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="18eca-173">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-173">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-174">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-174">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="18eca-175">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-175">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
      parameters:
        - id: model
          type:
            - string
          description: |
            <span data-ttu-id="18eca-176">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-176">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-177">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-177">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
    name: 'analyzeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-178">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-178">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-179">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-179">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-180">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-180">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-181">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-181">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-182">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-182">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-183">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-183">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-184">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-184">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
    name: 'analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-185">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-185">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-186">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-186">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-187">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-187">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-188">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-188">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-189">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-189">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-190">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-190">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
    name: 'analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-191">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-191">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-192">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-192">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-193">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-193">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-194">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-194">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-195">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-195">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-196">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-196">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
    name: 'analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-197">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-197">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-198">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-198">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-199">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-199">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-200">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-200">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-201">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-201">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-202">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-202">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-203">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-203">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
    name: 'analyzeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-204">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-204">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="18eca-205">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-205">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="18eca-206">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="18eca-206">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="18eca-207">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="18eca-207">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="18eca-208">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-208">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-209">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-209">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-210">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-210">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile
    name: 'batchReadFile(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-211">Используйте этот интерфейс, чтобы получить результат операции чтения, используя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-211">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-212">При использовании интерфейса чтение файла, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-212">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-213">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции «Результат операции чтения», чтобы открыть OCR результаты.</span><span class="sxs-lookup"><span data-stu-id="18eca-213">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-214">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-214">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-215">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-215">Type of text to recognize.</span></span> <span data-ttu-id="18eca-216">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-216">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2
    name: 'batchReadFile(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-217">Используйте этот интерфейс, чтобы получить результат операции чтения, используя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-217">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-218">При использовании интерфейса чтение файла, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-218">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-219">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции «Результат операции чтения», чтобы открыть OCR результаты.</span><span class="sxs-lookup"><span data-stu-id="18eca-219">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1
    name: 'batchReadFile(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-220">Используйте этот интерфейс, чтобы получить результат операции чтения, используя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-220">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-221">При использовании интерфейса чтение файла, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-221">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-222">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции «Результат операции чтения», чтобы открыть OCR результаты.</span><span class="sxs-lookup"><span data-stu-id="18eca-222">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream
    name: 'batchReadFileInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-223">Используйте этот интерфейс, чтобы получить результат операции чтения документа, применяя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-223">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-224">При использовании интерфейса чтение документа, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-224">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-225">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для вашего «чтение результата операции получения» для доступа к OCR результатам.</span><span class="sxs-lookup"><span data-stu-id="18eca-225">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-226">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-226">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-227">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-227">Type of text to recognize.</span></span> <span data-ttu-id="18eca-228">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-228">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2
    name: 'batchReadFileInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-229">Используйте этот интерфейс, чтобы получить результат операции чтения документа, применяя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-229">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-230">При использовании интерфейса чтение документа, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-230">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-231">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для вашего «чтение результата операции получения» для доступа к OCR результатам.</span><span class="sxs-lookup"><span data-stu-id="18eca-231">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1
    name: 'batchReadFileInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-232">Используйте этот интерфейс, чтобы получить результат операции чтения документа, применяя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-232">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-233">При использовании интерфейса чтение документа, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-233">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-234">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для вашего «чтение результата операции получения» для доступа к OCR результатам.</span><span class="sxs-lookup"><span data-stu-id="18eca-234">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStreamWithHttpOperationResponse
    name: 'batchReadFileInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-235">Используйте этот интерфейс, чтобы получить результат операции чтения документа, применяя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-235">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-236">При использовании интерфейса чтение документа, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-236">When you use the Read Document interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-237">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для вашего «чтение результата операции получения» для доступа к OCR результатам.</span><span class="sxs-lookup"><span data-stu-id="18eca-237">The "Operation-Location" field contains the URL that you must use for your "Get Read Result operation" to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-238">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-238">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-239">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-239">Type of text to recognize.</span></span> <span data-ttu-id="18eca-240">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-240">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.batchReadFileWithHttpOperationResponse
    name: 'batchReadFileWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-241">Используйте этот интерфейс, чтобы получить результат операции чтения, используя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-241">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="18eca-242">При использовании интерфейса чтение файла, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-242">When you use the Read File interface, the response contains a field called "Operation-Location".</span></span> <span data-ttu-id="18eca-243">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции «Результат операции чтения», чтобы открыть OCR результаты.</span><span class="sxs-lookup"><span data-stu-id="18eca-243">The "Operation-Location" field contains the URL that you must use for your "Read Operation Result" operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-244">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-244">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-245">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-245">Type of text to recognize.</span></span> <span data-ttu-id="18eca-246">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-246">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
    name: 'ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            <span data-ttu-id="18eca-247">Учетные данные для подписки, которые однозначно идентифицируют подписку клиента.</span><span class="sxs-lookup"><span data-stu-id="18eca-247">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: endpoint
          type:
            - string
          description: |
            <span data-ttu-id="18eca-248">Поддерживаемые конечные точки Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="18eca-248">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - ServiceClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
    name: 'describeImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-249">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-249">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-250">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-250">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-251">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-251">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-252">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-252">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-253">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-253">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-254">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-254">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-255">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-255">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-256">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-256">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-257">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-257">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
    name: 'describeImage(string, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-258">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-258">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-259">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-259">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-260">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-260">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-261">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-261">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-262">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-262">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-263">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-263">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-264">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-264">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-265">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-265">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-266">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-266">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-267">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-267">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-268">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-268">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-269">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-269">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-270">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-270">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-271">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-271">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-272">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-272">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-273">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-273">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
    name: 'describeImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-274">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-274">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-275">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-275">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-276">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-276">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-277">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-277">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-278">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-278">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-279">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-279">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-280">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-280">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-281">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-281">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-282">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-282">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
    name: 'describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-283">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-283">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-284">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-284">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-285">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-285">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-286">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-286">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-287">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-287">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-288">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-288">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-289">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-289">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-290">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-290">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
    name: 'describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-291">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-291">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-292">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-292">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-293">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-293">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-294">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-294">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-295">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-295">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-296">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-296">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-297">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-297">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-298">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-298">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ImageDescription>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
    name: 'describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-299">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-299">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-300">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-300">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-301">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-301">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-302">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-302">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-303">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-303">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-304">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-304">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-305">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-305">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-306">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-306">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-307">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-307">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
    name: 'describeImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-308">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="18eca-308">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="18eca-309">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="18eca-309">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="18eca-310">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-310">More than one description can be generated for each image.</span></span> <span data-ttu-id="18eca-311">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="18eca-311">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="18eca-312">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-312">All descriptions are in English.</span></span>
      <span data-ttu-id="18eca-313">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-313">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-314">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-314">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-315">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-315">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-316">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-316">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects
    name: 'detectObjects(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-317">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-317">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-318">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-318">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-319">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-319">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-320">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-320">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-321">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-321">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_2
    name: 'detectObjects(string, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-322">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-322">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-323">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-323">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-324">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-324">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-325">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-325">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjects_1
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-326">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-326">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-327">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-327">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-328">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-328">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-329">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-329">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream
    name: 'detectObjectsInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-330">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-330">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-331">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-331">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-332">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-332">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-333">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-333">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-334">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-334">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2
    name: 'detectObjectsInStream(stream.Readable, Object, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-335">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-335">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-336">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-336">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-337">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-337">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-338">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-338">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1
    name: 'detectObjectsInStream(stream.Readable, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-339">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-339">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-340">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-340">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-341">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-341">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-342">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-342">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: stream.Readable, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.DetectResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStreamWithHttpOperationResponse
    name: 'detectObjectsInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-343">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-343">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-344">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-344">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-345">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-345">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-346">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-346">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-347">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-347">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.detectObjectsWithHttpOperationResponse
    name: 'detectObjectsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-348">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="18eca-348">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="18eca-349">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-349">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-350">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-350">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-351">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-351">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-352">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-352">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
    name: 'generateThumbnail(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-353">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-353">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-354">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-354">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-355">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-355">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-356">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-356">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-357">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-357">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-358">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-358">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-359">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-359">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="18eca-360">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-360">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-361">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-361">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-362">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-362">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="18eca-363">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-363">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-364">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-364">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-365">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-365">Recommended minimum of 50.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-366">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-366">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
    name: 'generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-367">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-367">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-368">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-368">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-369">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-369">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-370">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-370">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-371">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-371">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-372">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-372">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-373">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-373">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
    name: 'generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-374">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-374">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-375">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-375">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-376">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-376">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-377">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-377">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-378">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-378">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-379">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-379">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-380">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-380">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-381">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-381">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-382">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-382">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-383">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-383">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-384">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-384">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-385">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-385">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-386">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-386">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-387">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-387">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="18eca-388">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-388">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-389">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-389">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-390">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-390">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="18eca-391">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-391">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-392">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-392">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-393">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-393">Recommended minimum of 50.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-394">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-394">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
    name: 'generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-395">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-395">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-396">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-396">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-397">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-397">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-398">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-398">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-399">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-399">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-400">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-400">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-401">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-401">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
    name: 'generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-402">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-402">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-403">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-403">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-404">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-404">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-405">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-405">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-406">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-406">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-407">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-407">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-408">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-408">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
      parameters:
        - id: width
          type:
            - number
          description: ''
        - id: height
          type:
            - number
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<stream.Readable>
          description: ''
      return:
        type:
          - Promise<stream.Readable>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
    name: 'generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-409">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-409">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-410">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-410">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-411">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-411">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-412">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-412">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-413">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-413">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-414">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-414">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-415">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-415">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="18eca-416">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-416">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-417">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-417">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-418">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-418">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="18eca-419">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-419">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-420">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-420">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-421">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-421">Recommended minimum of 50.</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-422">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-422">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
    name: 'generateThumbnailWithHttpOperationResponse(number, number, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-423">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="18eca-423">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="18eca-424">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="18eca-424">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>
      <span data-ttu-id="18eca-425">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-425">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="18eca-426">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-426">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="18eca-427">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-427">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-428">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-428">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-429">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-429">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
      parameters:
        - id: width
          type:
            - number
          description: |
            <span data-ttu-id="18eca-430">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-430">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-431">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-431">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-432">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-432">Recommended minimum of 50.</span></span>
        - id: height
          type:
            - number
          description: |
            <span data-ttu-id="18eca-433">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="18eca-433">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="18eca-434">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="18eca-434">It must be between 1 and 1024.</span></span> <span data-ttu-id="18eca-435">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="18eca-435">Recommended minimum of 50.</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-436">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-436">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<stream.Readable>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest
    name: 'getAreaOfInterest(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-437">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-437">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-438">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-438">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-439">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-439">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-440">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-440">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-441">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-441">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-442">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-442">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2
    name: 'getAreaOfInterest(string, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-443">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-443">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-444">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-444">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-445">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-445">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-446">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-446">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-447">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-447">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-448">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-448">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-449">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-449">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-450">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-450">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-451">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-451">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-452">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-452">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream
    name: 'getAreaOfInterestInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-453">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-453">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-454">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-454">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-455">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-455">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-456">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-456">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-457">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-457">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-458">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-458">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2
    name: 'getAreaOfInterestInStream(stream.Readable, Object, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-459">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-459">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-460">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-460">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-461">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-461">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-462">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-462">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-463">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-463">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, options: Object, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1
    name: 'getAreaOfInterestInStream(stream.Readable, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-464">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-464">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-465">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-465">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-466">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-466">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-467">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-467">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-468">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-468">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: stream.Readable, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStreamWithHttpOperationResponse
    name: 'getAreaOfInterestInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-469">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-469">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-470">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-470">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-471">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-471">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-472">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-472">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-473">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-473">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-474">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-474">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestWithHttpOperationResponse
    name: 'getAreaOfInterestWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-475">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-475">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="18eca-476">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-476">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-477">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-477">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="18eca-478">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-478">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="18eca-479">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-479">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-480">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-480">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-481">Пытается найти package.json для заданного azure nodejs пакета.</span><span class="sxs-lookup"><span data-stu-id="18eca-481">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="18eca-482">Если найден, возвращает имя и версию пакета, считывая package.json. Если package.json не найден, возвращает значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="18eca-482">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="18eca-483">Передайте каталог клиента управления azure.</span><span class="sxs-lookup"><span data-stu-id="18eca-483">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult
    name: 'getReadOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-484">Этот интерфейс используется для получения результатов OCR операции чтения.</span><span class="sxs-lookup"><span data-stu-id="18eca-484">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="18eca-485">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс пакетного чтения файла.</span><span class="sxs-lookup"><span data-stu-id="18eca-485">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>'
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="18eca-486">Идентификатор операции чтения, возвращается в ответе интерфейса «Пакетный файл чтения».</span><span class="sxs-lookup"><span data-stu-id="18eca-486">Id of read operation returned in the response of the "Batch Read File" interface.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2
    name: 'getReadOperationResult(string, Object, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-487">Этот интерфейс используется для получения результатов OCR операции чтения.</span><span class="sxs-lookup"><span data-stu-id="18eca-487">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="18eca-488">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс пакетного чтения файла.</span><span class="sxs-lookup"><span data-stu-id="18eca-488">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>'
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: Object, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-489">Этот интерфейс используется для получения результатов OCR операции чтения.</span><span class="sxs-lookup"><span data-stu-id="18eca-489">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="18eca-490">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс пакетного чтения файла.</span><span class="sxs-lookup"><span data-stu-id="18eca-490">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>'
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getReadOperationResultWithHttpOperationResponse
    name: 'getReadOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-491">Этот интерфейс используется для получения результатов OCR операции чтения.</span><span class="sxs-lookup"><span data-stu-id="18eca-491">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="18eca-492">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс пакетного чтения файла.</span><span class="sxs-lookup"><span data-stu-id="18eca-492">The URL to this interface should be retrieved from "Operation-Location" field returned from Batch Read File interface.</span></span>'
    syntax:
      content: 'function getReadOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="18eca-493">Идентификатор операции чтения, возвращается в ответе интерфейса «Пакетный файл чтения».</span><span class="sxs-lookup"><span data-stu-id="18eca-493">Id of read operation returned in the response of the "Batch Read File" interface.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
    name: 'getTextOperationResult(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-494">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="18eca-494">This interface is used for getting text operation result.</span></span> <span data-ttu-id="18eca-495">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="18eca-495">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Recognize Text interface.</span></span>'
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="18eca-496">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="18eca-496">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
    name: 'getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-497">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="18eca-497">This interface is used for getting text operation result.</span></span> <span data-ttu-id="18eca-498">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="18eca-498">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Recognize Text interface.</span></span>'
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-499">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="18eca-499">This interface is used for getting text operation result.</span></span> <span data-ttu-id="18eca-500">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="18eca-500">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Recognize Text interface.</span></span>'
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TextOperationResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
    name: 'getTextOperationResultWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-501">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="18eca-501">This interface is used for getting text operation result.</span></span> <span data-ttu-id="18eca-502">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="18eca-502">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Recognize Text interface.</span></span>'
    syntax:
      content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
      parameters:
        - id: operationId
          type:
            - string
          description: |
            <span data-ttu-id="18eca-503">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="18eca-503">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
    name: listModels(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-504">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="18eca-504">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="18eca-505">В настоящее время API-Интерфейс поддерживает следующие модели доменного: распознавания знаменитостей, распознавания черт лица.</span><span class="sxs-lookup"><span data-stu-id="18eca-505">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="18eca-506">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-506">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-507">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-507">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
    name: 'listModels(Object, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-508">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="18eca-508">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="18eca-509">В настоящее время API-Интерфейс поддерживает следующие модели доменного: распознавания знаменитостей, распознавания черт лица.</span><span class="sxs-lookup"><span data-stu-id="18eca-509">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="18eca-510">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-510">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-511">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-511">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-512">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="18eca-512">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="18eca-513">В настоящее время API-Интерфейс поддерживает следующие модели доменного: распознавания знаменитостей, распознавания черт лица.</span><span class="sxs-lookup"><span data-stu-id="18eca-513">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="18eca-514">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-514">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-515">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-515">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.ListModelsResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
    name: listModelsWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-516">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="18eca-516">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="18eca-517">В настоящее время API-Интерфейс поддерживает следующие модели доменного: распознавания знаменитостей, распознавания черт лица.</span><span class="sxs-lookup"><span data-stu-id="18eca-517">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="18eca-518">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-518">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-519">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-519">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModelsWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
    name: 'recognizePrintedText(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-520">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-520">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-521">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-521">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-522">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-522">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-523">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-523">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="18eca-524">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="18eca-524">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="18eca-525">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="18eca-525">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-526">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-526">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
    name: 'recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-527">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-527">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-528">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-528">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-529">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-529">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-530">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-530">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-531">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-531">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-532">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-532">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-533">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-533">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-534">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-534">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-535">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-535">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-536">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-536">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-537">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-537">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-538">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-538">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="18eca-539">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="18eca-539">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="18eca-540">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="18eca-540">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-541">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-541">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-542">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-542">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-543">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-543">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-544">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-544">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-545">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-545">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
    name: 'recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-546">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-546">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-547">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-547">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-548">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-548">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-549">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-549">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: ''
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.OcrResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
    name: 'recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-550">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-550">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-551">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-551">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-552">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-552">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-553">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-553">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="18eca-554">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="18eca-554">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="18eca-555">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="18eca-555">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-556">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-556">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
    name: 'recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-557">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="18eca-557">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="18eca-558">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-558">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="18eca-559">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="18eca-559">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="18eca-560">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="18eca-560">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: |
            <span data-ttu-id="18eca-561">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="18eca-561">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="18eca-562">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="18eca-562">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-563">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-563">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
    name: 'recognizeText(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-564">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-564">Recognize Text operation.</span></span> <span data-ttu-id="18eca-565">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-565">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-566">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-566">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-567">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-567">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-568">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-568">Type of text to recognize.</span></span> <span data-ttu-id="18eca-569">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-569">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
    name: 'recognizeText(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-570">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-570">Recognize Text operation.</span></span> <span data-ttu-id="18eca-571">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-571">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-572">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-572">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
    name: 'recognizeText(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-573">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-573">Recognize Text operation.</span></span> <span data-ttu-id="18eca-574">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-574">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-575">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-575">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
    name: 'recognizeTextInStream(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-576">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-576">Recognize Text operation.</span></span> <span data-ttu-id="18eca-577">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-577">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-578">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-578">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-579">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-579">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-580">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-580">Type of text to recognize.</span></span> <span data-ttu-id="18eca-581">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-581">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
    name: 'recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-582">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-582">Recognize Text operation.</span></span> <span data-ttu-id="18eca-583">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-583">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-584">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-584">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
    name: 'recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-585">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-585">Recognize Text operation.</span></span> <span data-ttu-id="18eca-586">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-586">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-587">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-587">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: mode
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
    name: 'recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-588">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-588">Recognize Text operation.</span></span> <span data-ttu-id="18eca-589">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-589">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-590">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-590">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-591">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-591">An image stream.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-592">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-592">Type of text to recognize.</span></span> <span data-ttu-id="18eca-593">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-593">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
    name: 'recognizeTextWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="18eca-594">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="18eca-594">Recognize Text operation.</span></span> <span data-ttu-id="18eca-595">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="18eca-595">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="18eca-596">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="18eca-596">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-597">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-597">Publicly reachable URL of an image.</span></span>
        - id: mode
          type:
            - string
          description: |
            <span data-ttu-id="18eca-598">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="18eca-598">Type of text to recognize.</span></span> <span data-ttu-id="18eca-599">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="18eca-599">Possible values include: 'Handwritten', 'Printed'</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
    name: 'tagImage(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-600">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-600">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-601">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-601">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-602">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-602">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-603">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-603">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-604">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-604">All tags are in English.</span></span>
      <span data-ttu-id="18eca-605">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-605">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-606">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-606">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-607">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-607">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-608">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-608">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
    name: 'tagImage(string, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-609">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-609">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-610">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-610">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-611">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-611">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-612">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-612">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-613">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-613">All tags are in English.</span></span>
      <span data-ttu-id="18eca-614">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-614">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-615">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-615">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-616">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-616">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-617">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-617">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-618">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-618">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-619">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-619">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-620">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-620">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-621">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-621">All tags are in English.</span></span>
      <span data-ttu-id="18eca-622">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-622">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-623">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-623">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-624">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-624">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
    name: 'tagImageInStream(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-625">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-625">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-626">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-626">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-627">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-627">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-628">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-628">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-629">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-629">All tags are in English.</span></span>
      <span data-ttu-id="18eca-630">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-630">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-631">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-631">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-632">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-632">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-633">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-633">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
    name: 'tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-634">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-634">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-635">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-635">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-636">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-636">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-637">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-637">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-638">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-638">All tags are in English.</span></span>
      <span data-ttu-id="18eca-639">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-639">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-640">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-640">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-641">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-641">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
    name: 'tagImageInStream(stream.Readable, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-642">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-642">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-643">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-643">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-644">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-644">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-645">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-645">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-646">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-646">All tags are in English.</span></span>
      <span data-ttu-id="18eca-647">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-647">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-648">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-648">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-649">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-649">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-computervision.TagResult>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
    name: 'tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-650">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-650">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-651">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-651">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-652">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-652">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-653">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-653">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-654">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-654">All tags are in English.</span></span>
      <span data-ttu-id="18eca-655">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-655">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-656">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-656">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-657">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-657">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
      parameters:
        - id: image
          type:
            - stream.Readable
          description: |
            <span data-ttu-id="18eca-658">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-658">An image stream.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
  - uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
    name: 'tagImageWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="18eca-659">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="18eca-659">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="18eca-660">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="18eca-660">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="18eca-661">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="18eca-661">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="18eca-662">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="18eca-662">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="18eca-663">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="18eca-663">All tags are in English.</span></span>
      <span data-ttu-id="18eca-664">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-664">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="18eca-665">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="18eca-665">A successful response will be returned in JSON.</span></span> <span data-ttu-id="18eca-666">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="18eca-666">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
      parameters:
        - id: url
          type:
            - string
          description: |
            <span data-ttu-id="18eca-667">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="18eca-667">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    package: azure-cognitiveservices-computervision
references:
  - uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
    name: DomainModelResults>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: azure-cognitiveservices-computervision.DomainModelResults
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
    name: ImageAnalysis>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: azure-cognitiveservices-computervision.ImageAnalysis
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
    name: ImageDescription>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageDescription
        fullName: ImageDescription
        uid: azure-cognitiveservices-computervision.ImageDescription
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DetectResult>>
    name: DetectResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DetectResult
        fullName: DetectResult
        uid: azure-cognitiveservices-computervision.DetectResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.AreaOfInterestResult>>
    name: AreaOfInterestResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: azure-cognitiveservices-computervision.AreaOfInterestResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ReadOperationResult>>
    name: ReadOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: azure-cognitiveservices-computervision.ReadOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
    name: TextOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: azure-cognitiveservices-computervision.TextOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
    name: ListModelsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: azure-cognitiveservices-computervision.ListModelsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
    name: OcrResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: OcrResult
        fullName: OcrResult
        uid: azure-cognitiveservices-computervision.OcrResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
    name: TagResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TagResult
        fullName: TagResult
        uid: azure-cognitiveservices-computervision.TagResult
      - name: '>>'
        fullName: '>>'