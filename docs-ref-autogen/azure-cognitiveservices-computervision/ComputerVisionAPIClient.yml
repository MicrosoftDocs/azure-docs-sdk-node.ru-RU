### YamlMime:UniversalReference
ms.openlocfilehash: 496552af79989c144ce96db561de8b0882be0c21
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40075252"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient
  name: ComputerVisionAPIClient
  fullName: ComputerVisionAPIClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-101">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3d348-102">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3d348-103">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="3d348-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3d348-104">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="3d348-104">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-105">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-105">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3d348-106">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-106">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3d348-107">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="3d348-107">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3d348-108">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="3d348-108">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-109">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-109">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3d348-110">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-110">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3d348-111">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="3d348-111">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3d348-112">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="3d348-112">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-113">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-113">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-114">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-114">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-115">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-115">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-116">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-116">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-117">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-117">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-118">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-118">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3d348-119">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="3d348-119">The domain-specific content to recognize.</span></span> <span data-ttu-id="3d348-120">Возможные значения: «Знаменитостей», «Ориентиры»</span><span class="sxs-lookup"><span data-stu-id="3d348-120">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-121">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-121">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-122">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-122">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-123">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-123">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-124">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-124">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-125">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-125">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-126">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-126">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-127">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-127">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-128">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-128">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-129">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-129">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-130">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-130">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-131">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-131">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-132">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-132">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-133">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-133">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-134">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-134">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-135">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-135">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-136">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-136">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-137">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-137">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-138">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-138">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3d348-139">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="3d348-139">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-140">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-140">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-141">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-141">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-142">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-142">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-143">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-143">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-144">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-144">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-145">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-145">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-146">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-146">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-147">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-147">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-148">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-148">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-149">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-149">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-150">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-150">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-151">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-151">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-152">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-152">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-153">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-153">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-154">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-154">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-155">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-155">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-156">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-156">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-157">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-157">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-158">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-158">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3d348-159">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="3d348-159">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-160">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-160">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-161">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="3d348-161">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3d348-162">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="3d348-162">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3d348-163">В настоящее время API предоставляет только одной модели доменного: знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-163">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3d348-164">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-164">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3d348-165">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-165">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3d348-166">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-166">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3d348-167">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="3d348-167">The domain-specific content to recognize.</span></span> <span data-ttu-id="3d348-168">Возможные значения: «Знаменитостей», «Ориентиры»</span><span class="sxs-lookup"><span data-stu-id="3d348-168">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-169">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-169">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-170">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-170">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-171">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-171">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-172">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-173">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-174">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-174">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-175">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-175">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3d348-176">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-176">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3d348-177">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="3d348-177">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3d348-178">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="3d348-178">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  name: azureRegion
  fullName: azureRegion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'azureRegion: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  name: ComputerVisionAPIClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionAPIClient(credentials: ServiceClientCredentials, azureRegion: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="3d348-179">Учетные данные для подписки, которые однозначно идентифицируют подписку клиента.</span><span class="sxs-lookup"><span data-stu-id="3d348-179">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: azureRegion
      type:
      - string
      description: >
        <span data-ttu-id="3d348-180">Поддерживаемые регионы Azure для конечных точек Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="3d348-180">Supported Azure regions for Cognitive Services endpoints.</span></span> <span data-ttu-id="3d348-181">Возможные значения: «westus», «Западная Европа», «southeastasia», «eastus2», «westcentralus», «westus2», «eastus», «southcentralus», «northeurope», «eastasia», «australiaeast», «brazilsouth»</span><span class="sxs-lookup"><span data-stu-id="3d348-181">Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-182">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-182">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-183">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-183">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-184">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-184">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-185">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-185">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-186">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-186">All descriptions are in English.</span></span> <span data-ttu-id="3d348-187">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-187">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-188">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-188">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-189">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-189">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-190">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-190">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-191">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-191">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-192">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-192">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-193">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-193">All descriptions are in English.</span></span> <span data-ttu-id="3d348-194">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-194">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-195">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-195">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-196">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-196">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-197">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-197">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-198">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-198">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-199">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-199">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-200">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-200">All descriptions are in English.</span></span> <span data-ttu-id="3d348-201">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-201">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-202">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-202">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-203">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-203">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-204">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-204">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-205">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-205">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-206">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-206">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-207">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-207">All descriptions are in English.</span></span> <span data-ttu-id="3d348-208">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-208">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-209">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-209">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-210">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-210">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-211">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-211">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-212">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-212">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-213">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-213">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-214">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-214">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-215">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-215">All descriptions are in English.</span></span> <span data-ttu-id="3d348-216">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-216">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-217">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-217">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-218">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-218">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-219">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-219">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-220">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-220">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-221">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-221">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-222">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-222">All descriptions are in English.</span></span> <span data-ttu-id="3d348-223">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-223">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-224">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-224">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-225">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-225">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-226">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-226">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-227">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-227">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-228">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-228">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-229">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-229">All descriptions are in English.</span></span> <span data-ttu-id="3d348-230">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-230">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-231">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-231">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-232">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-232">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-233">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="3d348-233">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3d348-234">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="3d348-234">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3d348-235">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-235">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3d348-236">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="3d348-236">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3d348-237">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-237">All descriptions are in English.</span></span> <span data-ttu-id="3d348-238">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения. Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-238">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-239">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-239">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-240">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-240">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-241">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-241">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-242">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-242">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-243">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-243">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-244">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-244">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-245">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-245">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-246">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-246">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-247">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-247">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-248">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-248">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-249">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-249">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-250">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-250">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-251">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-251">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-252">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-252">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-253">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-253">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-254">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-254">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3d348-255">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-255">Width of the thumbnail.</span></span> <span data-ttu-id="3d348-256">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="3d348-256">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3d348-257">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-257">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3d348-258">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-258">Height of the thumbnail.</span></span> <span data-ttu-id="3d348-259">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="3d348-259">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3d348-260">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-260">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-261">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-261">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-262">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-262">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-263">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-263">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-264">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-264">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-265">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-265">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3d348-266">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-266">Width of the thumbnail.</span></span> <span data-ttu-id="3d348-267">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="3d348-267">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3d348-268">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-268">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3d348-269">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-269">Height of the thumbnail.</span></span> <span data-ttu-id="3d348-270">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="3d348-270">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3d348-271">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-271">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-272">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-272">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-273">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-273">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-274">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-274">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-275">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-275">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-276">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-276">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-277">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-277">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-278">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-278">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-279">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-279">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-280">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-280">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-281">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-281">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-282">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-282">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-283">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-283">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-284">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-284">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-285">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-285">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-286">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-286">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-287">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-287">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3d348-288">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-288">Width of the thumbnail.</span></span> <span data-ttu-id="3d348-289">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="3d348-289">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3d348-290">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-290">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3d348-291">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-291">Height of the thumbnail.</span></span> <span data-ttu-id="3d348-292">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="3d348-292">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3d348-293">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-293">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-294">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-294">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-295">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="3d348-295">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3d348-296">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="3d348-296">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3d348-297">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-297">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3d348-298">Успешный ответ содержит двоичные эскиз.</span><span class="sxs-lookup"><span data-stu-id="3d348-298">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3d348-299">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-299">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3d348-300">Ширина эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-300">Width of the thumbnail.</span></span> <span data-ttu-id="3d348-301">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="3d348-301">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3d348-302">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-302">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3d348-303">Высота эскиза.</span><span class="sxs-lookup"><span data-stu-id="3d348-303">Height of the thumbnail.</span></span> <span data-ttu-id="3d348-304">Он должен быть между 1 и</span><span class="sxs-lookup"><span data-stu-id="3d348-304">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3d348-305">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="3d348-305">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-306">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-306">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3d348-307">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="3d348-307">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="3d348-308">Идентификатор операции текста, возвращенного в ответе «Распознавания рукописных текста»</span><span class="sxs-lookup"><span data-stu-id="3d348-308">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-309">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-309">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3d348-310">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="3d348-310">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: function, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-311">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3d348-312">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="3d348-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-313">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-313">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3d348-314">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="3d348-314">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="3d348-315">Идентификатор операции текста, возвращенного в ответе «Распознавания рукописных текста»</span><span class="sxs-lookup"><span data-stu-id="3d348-315">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3d348-316">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="3d348-316">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3d348-317">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-317">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3d348-318">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-318">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-319">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-319">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3d348-320">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="3d348-320">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3d348-321">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-321">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3d348-322">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-322">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-323">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-323">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: function, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3d348-324">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="3d348-324">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3d348-325">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-325">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3d348-326">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-326">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-327">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-327">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3d348-328">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="3d348-328">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3d348-329">В настоящее время API поддерживает только одну модель домена: распознавания знаменитостей.</span><span class="sxs-lookup"><span data-stu-id="3d348-329">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3d348-330">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="3d348-330">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3d348-331">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="3d348-331">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-332">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-332">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-333">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-333">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-334">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-334">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-335">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-335">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-336">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-336">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-337">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-337">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-338">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-338">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-339">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-339">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3d348-340">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="3d348-340">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3d348-341">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="3d348-341">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-342">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-342">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-343">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-343">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-344">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-344">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-345">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-345">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-346">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-346">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-347">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-347">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-348">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-348">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-349">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-349">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3d348-350">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="3d348-350">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3d348-351">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="3d348-351">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-352">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-352">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-353">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-353">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-354">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-354">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-355">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-355">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-356">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-356">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-357">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-357">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-358">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-358">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-359">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-359">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-360">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-360">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-361">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-361">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-362">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-362">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-363">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-363">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-364">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-364">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3d348-365">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="3d348-365">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3d348-366">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="3d348-366">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-367">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-367">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3d348-368">Оптическое распознавание символов (OCR) находит печатного текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="3d348-368">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3d348-369">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="3d348-369">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3d348-370">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="3d348-370">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3d348-371">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="3d348-371">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3d348-372">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="3d348-372">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3d348-373">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="3d348-373">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-374">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-374">Recognize Text operation.</span></span> <span data-ttu-id="3d348-375">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-375">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-376">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-376">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-377">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-377">Recognize Text operation.</span></span> <span data-ttu-id="3d348-378">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-378">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-379">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-379">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-380">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-380">Recognize Text operation.</span></span> <span data-ttu-id="3d348-381">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-381">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-382">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-382">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-383">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-383">Recognize Text operation.</span></span> <span data-ttu-id="3d348-384">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-384">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-385">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-385">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-386">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-386">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-387">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-387">Recognize Text operation.</span></span> <span data-ttu-id="3d348-388">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-388">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-389">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-389">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-390">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-390">Recognize Text operation.</span></span> <span data-ttu-id="3d348-391">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-391">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-392">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-392">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-393">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-393">Recognize Text operation.</span></span> <span data-ttu-id="3d348-394">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-394">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-395">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-395">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-396">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-396">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-397">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="3d348-397">Recognize Text operation.</span></span> <span data-ttu-id="3d348-398">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="3d348-398">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="3d348-399">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для получения результата операции рукописных текст операции.</span><span class="sxs-lookup"><span data-stu-id="3d348-399">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-400">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-400">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-401">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-401">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-402">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-402">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-403">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-403">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-404">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-404">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-405">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-405">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-406">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-406">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-407">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-407">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-408">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-408">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-409">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-409">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-410">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-410">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-411">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-411">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-412">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-412">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-413">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-413">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-414">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-414">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-415">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-415">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-416">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-416">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-417">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-417">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-418">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-418">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-419">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-419">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-420">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-420">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-421">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-421">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-422">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-422">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-423">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-423">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-424">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-424">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-425">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-425">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-426">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-426">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-427">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-427">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-428">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-428">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-429">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-429">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-430">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-430">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-431">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-431">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-432">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-432">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-433">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-433">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-434">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-434">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-435">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-435">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3d348-436">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="3d348-436">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3d348-437">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="3d348-437">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3d348-438">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="3d348-438">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3d348-439">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="3d348-439">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3d348-440">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="3d348-440">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="3d348-441">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="3d348-441">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
