### YamlMime:UniversalReference
ms.openlocfilehash: c2b93dacc7cedb9cb424f2fd53eb419a9b4b1a63
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/20/2018
ms.locfileid: "53710509"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close_1
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment_1
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod_2
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_3
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent_1
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch_1
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions_1
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="85d7a-101">Центр Интернета вещей устройства клиент, используемый для подключения устройства к центру Интернета вещей Azure.</span><span class="sxs-lookup"><span data-stu-id="85d7a-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="85d7a-102">Пользователи пакета SDK должны вызвать один из методов фабрики, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) или [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) для создания клиента устройства центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close_1
  name: close()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="85d7a-103">Закрывает транспортное соединение и уничтожает ресурсов клиента.</span><span class="sxs-lookup"><span data-stu-id="85d7a-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="85d7a-104">*Примечание. После вызова этого метода ModuleClient объект нельзя использовать повторно.*</span><span class="sxs-lookup"><span data-stu-id="85d7a-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<Disconnected>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close(Callback<Disconnected>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="85d7a-105">Закрывает транспортное соединение и уничтожает ресурсов клиента.</span><span class="sxs-lookup"><span data-stu-id="85d7a-105">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="85d7a-106">*Примечание. После вызова этого метода ModuleClient объект нельзя использовать повторно.*</span><span class="sxs-lookup"><span data-stu-id="85d7a-106">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback: Callback<Disconnected>)'
    parameters:
    - id: closeCallback
      type:
      - Callback<Disconnected>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider(AuthenticationProvider, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-107">Создает клиент модуль центра Интернета вещей на основе либо метод проверки подлинности, используя тип данного транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-107">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="85d7a-108">Объект, используемый для получения параметров проверки подлинности для центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-108">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="85d7a-109">Транспортный протокол, используемый для подключения к центру Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-109">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-110">Создает клиент устройства центра Интернета вещей из строки соединения, используя тип данного транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-110">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="85d7a-111">Строку подключения, которая инкапсулирует «подключение» разрешения для центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-111">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="85d7a-112">Конструктор транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-112">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment_1
  name: fromEnvironment(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="85d7a-113">Создает клиент модуль центра Интернета вещей, используя сведения о конфигурации из среды.</span><span class="sxs-lookup"><span data-stu-id="85d7a-113">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="85d7a-114">При вызове переменной среды `EdgeHubConnectionString` или `IotHubConnectionString` существует, то это значение используется, и идентичен вызову `fromConnectionString` передачи, в.</span><span class="sxs-lookup"><span data-stu-id="85d7a-114">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="85d7a-115">Если эти переменные среды не существует должны быть определены следующие переменные:</span><span class="sxs-lookup"><span data-stu-id="85d7a-115">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="85d7a-116">IOTEDGE_WORKLOADURI URI для рабочей нагрузки iotedged API</span><span class="sxs-lookup"><span data-stu-id="85d7a-116">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="85d7a-117">Идентификатор устройства IOTEDGE_DEVICEID</span><span class="sxs-lookup"><span data-stu-id="85d7a-117">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="85d7a-118">Идентификатор модуля IOTEDGE_MODULEID</span><span class="sxs-lookup"><span data-stu-id="85d7a-118">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="85d7a-119">Идентификатор модуля IOTEDGE_MODULEGENERATIONID поколения</span><span class="sxs-lookup"><span data-stu-id="85d7a-119">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="85d7a-120">Имя узла центра Интернета вещей IOTEDGE_IOTHUBHOSTNAME</span><span class="sxs-lookup"><span data-stu-id="85d7a-120">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="85d7a-121">Схема проверки подлинности IOTEDGE_AUTHSCHEME для использования; должен быть «sasToken»</span><span class="sxs-lookup"><span data-stu-id="85d7a-121">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iot-device.ModuleClient>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment(any, Callback<ModuleClient>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="85d7a-122">Создает клиент модуль центра Интернета вещей, используя сведения о конфигурации из среды.</span><span class="sxs-lookup"><span data-stu-id="85d7a-122">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="85d7a-123">При вызове переменной среды `EdgeHubConnectionString` или `IotHubConnectionString` существует, то это значение используется, и идентичен вызову `fromConnectionString` передачи, в.</span><span class="sxs-lookup"><span data-stu-id="85d7a-123">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="85d7a-124">Если эти переменные среды не существует должны быть определены следующие переменные:</span><span class="sxs-lookup"><span data-stu-id="85d7a-124">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="85d7a-125">IOTEDGE_WORKLOADURI URI для рабочей нагрузки iotedged API</span><span class="sxs-lookup"><span data-stu-id="85d7a-125">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="85d7a-126">Идентификатор устройства IOTEDGE_DEVICEID</span><span class="sxs-lookup"><span data-stu-id="85d7a-126">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="85d7a-127">Идентификатор модуля IOTEDGE_MODULEID</span><span class="sxs-lookup"><span data-stu-id="85d7a-127">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="85d7a-128">Идентификатор модуля IOTEDGE_MODULEGENERATIONID поколения</span><span class="sxs-lookup"><span data-stu-id="85d7a-128">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="85d7a-129">Имя узла центра Интернета вещей IOTEDGE_IOTHUBHOSTNAME</span><span class="sxs-lookup"><span data-stu-id="85d7a-129">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="85d7a-130">Схема проверки подлинности IOTEDGE_AUTHSCHEME для использования; должен быть «sasToken»</span><span class="sxs-lookup"><span data-stu-id="85d7a-130">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: Callback<ModuleClient>)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="85d7a-131">Транспортный протокол, используемый для подключения к центру Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-131">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - Callback<azure-iot-device.ModuleClient>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-132">Создает клиент модуль центра Интернета вещей на основе заданного подписанный URL-адрес, используя тип данного транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-132">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="85d7a-133">Подпись общего доступа инкапсулирует «подключение» разрешения для центра Интернета вещей.</span><span class="sxs-lookup"><span data-stu-id="85d7a-133">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_2
  name: invokeMethod(string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-134">Вызывает метод на подчиненного устройства или в другом модуле на одном устройстве Edge.</span><span class="sxs-lookup"><span data-stu-id="85d7a-134">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="85d7a-135">Обратите внимание на то, что эта функция работает только при запуске модуля как часть пограничного устройства.</span><span class="sxs-lookup"><span data-stu-id="85d7a-135">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod(string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-136">Вызывает метод на подчиненного устройства или в другом модуле на одном устройстве Edge.</span><span class="sxs-lookup"><span data-stu-id="85d7a-136">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="85d7a-137">Обратите внимание на то, что эта функция работает только при запуске модуля как часть пограничного устройства.</span><span class="sxs-lookup"><span data-stu-id="85d7a-137">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="85d7a-138">Идентификатор целевого устройства</span><span class="sxs-lookup"><span data-stu-id="85d7a-138">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="85d7a-139">Параметры вызова прямого метода</span><span class="sxs-lookup"><span data-stu-id="85d7a-139">parameters of the direct method call</span></span>
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_3
  name: invokeMethod(string, string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-140">Вызывает метод на подчиненного устройства или в другом модуле на одном устройстве Edge.</span><span class="sxs-lookup"><span data-stu-id="85d7a-140">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="85d7a-141">Обратите внимание на то, что эта функция работает только при запуске модуля как часть пограничного устройства.</span><span class="sxs-lookup"><span data-stu-id="85d7a-141">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod(string, string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-142">Вызывает метод на подчиненного устройства или в другом модуле на одном устройстве Edge.</span><span class="sxs-lookup"><span data-stu-id="85d7a-142">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="85d7a-143">Обратите внимание на то, что эта функция работает только при запуске модуля как часть пограничного устройства.</span><span class="sxs-lookup"><span data-stu-id="85d7a-143">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod(string, DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-144">Регистрирует обратный вызов для метода с именем `methodName`.</span><span class="sxs-lookup"><span data-stu-id="85d7a-144">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="85d7a-145">Имя метода, которая будет обрабатываться функцией обратного вызова</span><span class="sxs-lookup"><span data-stu-id="85d7a-145">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
      description: >
        <span data-ttu-id="85d7a-146">Функция, которая должна вызываться при каждом вызове запроса метода для метода `methodName` получении.</span><span class="sxs-lookup"><span data-stu-id="85d7a-146">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent_1
  name: sendOutputEvent(string, Message)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-147">Отправляет событие в выходные данные заданного модуля</span><span class="sxs-lookup"><span data-stu-id="85d7a-147">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message)'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: message
      type:
      - Message
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent(string, Message, Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-148">Отправляет событие в выходные данные заданного модуля</span><span class="sxs-lookup"><span data-stu-id="85d7a-148">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="85d7a-149">Имя выходных данных для отправки события</span><span class="sxs-lookup"><span data-stu-id="85d7a-149">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="85d7a-150">Сообщение для отправки заданных выходных данных</span><span class="sxs-lookup"><span data-stu-id="85d7a-150">Message to send to the given output</span></span>
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch_1
  name: sendOutputEventBatch(string, Message[])
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-151">Отправляет массив событий в указанный модуль выходные данные</span><span class="sxs-lookup"><span data-stu-id="85d7a-151">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: messages
      type:
      - Message[]
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-152">Отправляет массив событий в указанный модуль выходные данные</span><span class="sxs-lookup"><span data-stu-id="85d7a-152">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="85d7a-153">Имя выходных данных для отправки события</span><span class="sxs-lookup"><span data-stu-id="85d7a-153">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions_1
  name: setOptions(DeviceClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-154">Передает параметры `ModuleClient` объект, который может использоваться для настройки транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-154">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: ''
    return:
      type:
      - Promise<TransportConfigured>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions(DeviceClientOptions, Callback<TransportConfigured>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="85d7a-155">Передает параметры `ModuleClient` объект, который может использоваться для настройки транспорта.</span><span class="sxs-lookup"><span data-stu-id="85d7a-155">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="85d7a-156">Объект <xref:DeviceClientOptions>.</span><span class="sxs-lookup"><span data-stu-id="85d7a-156">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - Callback<TransportConfigured>
      description: ''
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  name: MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: Callback<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
  name: DeviceMethodResponse>
  spec.typeScript:
  - name: DoubleValueCallback<
    fullName: DoubleValueCallback<
  - name: DeviceMethodRequest
    fullName: DeviceMethodRequest
    uid: azure-iot-device.DeviceMethodRequest
  - name: ', '
    fullName: ', '
  - name: DeviceMethodResponse
    fullName: DeviceMethodResponse
    uid: azure-iot-device.DeviceMethodResponse
  - name: '>'
    fullName: '>'
- uid: azure-iot-device.DeviceClientOptions
  name: DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
- uid: Callback<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
