### YamlMime:UniversalReference
ms.openlocfilehash: 89dec673192bb26c36b1937be1bca2be0458226c
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52038183"
items:
- uid: azure-cognitiveservices-face.PersonGroupOperations
  name: PersonGroupOperations
  fullName: PersonGroupOperations
  children:
  - azure-cognitiveservices-face.PersonGroupOperations.create
  - azure-cognitiveservices-face.PersonGroupOperations.create_2
  - azure-cognitiveservices-face.PersonGroupOperations.create_1
  - azure-cognitiveservices-face.PersonGroupOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.deleteMethod
  - azure-cognitiveservices-face.PersonGroupOperations.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupOperations.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.get
  - azure-cognitiveservices-face.PersonGroupOperations.get_2
  - azure-cognitiveservices-face.PersonGroupOperations.get_1
  - azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus
  - azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2
  - azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1
  - azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.list
  - azure-cognitiveservices-face.PersonGroupOperations.list_2
  - azure-cognitiveservices-face.PersonGroupOperations.list_1
  - azure-cognitiveservices-face.PersonGroupOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.train
  - azure-cognitiveservices-face.PersonGroupOperations.train_2
  - azure-cognitiveservices-face.PersonGroupOperations.train_1
  - azure-cognitiveservices-face.PersonGroupOperations.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupOperations.update
  - azure-cognitiveservices-face.PersonGroupOperations.update_2
  - azure-cognitiveservices-face.PersonGroupOperations.update_1
  - azure-cognitiveservices-face.PersonGroupOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-101">Создайте группу пользователя с указанным personGroupId, именем и предоставляемое пользователем userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-101">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-102">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-102">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-103">Создайте группу пользователя с указанным personGroupId, именем и предоставляемое пользователем userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-103">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-104">Создайте группу пользователя с указанным personGroupId, именем и предоставляемое пользователем userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-104">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-105">Создайте группу пользователя с указанным personGroupId, именем и предоставляемое пользователем userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-105">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-106">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-106">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-107">Удаление существующей группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="e68b9-107">Delete an existing person group.</span></span> <span data-ttu-id="e68b9-108">Сохраненных лиц функции всех людей в группе «person», будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="e68b9-108">Persisted face features of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-109">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-109">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-110">Удаление существующей группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="e68b9-110">Delete an existing person group.</span></span> <span data-ttu-id="e68b9-111">Сохраненных лиц функции всех людей в группе «person», будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="e68b9-111">Persisted face features of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-112">Удаление существующей группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="e68b9-112">Delete an existing person group.</span></span> <span data-ttu-id="e68b9-113">Сохраненных лиц функции всех людей в группе «person», будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="e68b9-113">Persisted face features of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-114">Удаление существующей группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="e68b9-114">Delete an existing person group.</span></span> <span data-ttu-id="e68b9-115">Сохраненных лиц функции всех людей в группе «person», будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="e68b9-115">Persisted face features of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-116">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-116">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-117">Получите сведения о группы пользователя, включая его имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-117">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-118">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-118">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.get_2
  name: get(string, Object, ServiceCallback<PersonGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-119">Получите сведения о группы пользователя, включая его имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-119">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options: Object, callback: ServiceCallback<PersonGroup>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroup>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.get_1
  name: get(string, ServiceCallback<PersonGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-120">Получите сведения о группы пользователя, включая его имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-120">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroup>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroup>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus
  name: getTrainingStatus(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-121">Получить состояние обучения лица группу ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="e68b9-121">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-122">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-122">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2
  name: getTrainingStatus(string, Object, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-123">Получить состояние обучения лица группу ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="e68b9-123">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options: Object, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1
  name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-124">Получить состояние обучения лица группу ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="e68b9-124">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-125">Получить состояние обучения лица группу ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="e68b9-125">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-126">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-126">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-127">Получите сведения о группы пользователя, включая его имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-127">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-128">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-128">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroup>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-129">Список групп и их данные.</span><span class="sxs-lookup"><span data-stu-id="e68b9-129">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.list_2
  name: list(Object, ServiceCallback<PersonGroup[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-130">Список групп и их данные.</span><span class="sxs-lookup"><span data-stu-id="e68b9-130">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<PersonGroup[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroup[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.list_1
  name: list(ServiceCallback<PersonGroup[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-131">Список групп и их данные.</span><span class="sxs-lookup"><span data-stu-id="e68b9-131">List person groups and their information.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroup[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroup[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-132">Список групп и их данные.</span><span class="sxs-lookup"><span data-stu-id="e68b9-132">List person groups and their information.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroup[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.train
  name: train(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-133">Очередь помещается задача лица группу обучения, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="e68b9-133">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-134">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-134">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.train_2
  name: train(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-135">Очередь помещается задача лица группу обучения, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="e68b9-135">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.train_1
  name: train(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-136">Очередь помещается задача лица группу обучения, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="e68b9-136">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-137">Очередь помещается задача лица группу обучения, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="e68b9-137">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-138">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-138">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-139">Обновите существующую группу пользователя отображаемое имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-139">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="e68b9-140">Свойства, которые не отображается в тексте запроса не обновляются.</span><span class="sxs-lookup"><span data-stu-id="e68b9-140">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-141">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-141">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-142">Обновите существующую группу пользователя отображаемое имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-142">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="e68b9-143">Свойства, которые не отображается в тексте запроса не обновляются.</span><span class="sxs-lookup"><span data-stu-id="e68b9-143">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-144">Обновите существующую группу пользователя отображаемое имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-144">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="e68b9-145">Свойства, которые не отображается в тексте запроса не обновляются.</span><span class="sxs-lookup"><span data-stu-id="e68b9-145">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e68b9-146">Обновите существующую группу пользователя отображаемое имя и userData.</span><span class="sxs-lookup"><span data-stu-id="e68b9-146">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="e68b9-147">Свойства, которые не отображается в тексте запроса не обновляются.</span><span class="sxs-lookup"><span data-stu-id="e68b9-147">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e68b9-148">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="e68b9-148">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersonGroup>
  name: PersonGroup>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroup>
  name: PersonGroup>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  name: TrainingStatus>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroup>>
  name: PersonGroup>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonGroup[]>
  name: PersonGroup[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroup[]>
  name: PersonGroup[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroup[]>>
  name: PersonGroup[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroup
    fullName: PersonGroup
    uid: azure-cognitiveservices-face.PersonGroup
  - name: '[]>>'
    fullName: '[]>>'
