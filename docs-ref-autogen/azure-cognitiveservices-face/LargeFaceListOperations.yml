### YamlMime:UniversalReference
ms.openlocfilehash: 145293f6ed7479b70bb9d3084353eda83a7bad33
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52038115"
items:
- uid: azure-cognitiveservices-face.LargeFaceListOperations
  name: LargeFaceListOperations
  fullName: LargeFaceListOperations
  children:
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.create
  - azure-cognitiveservices-face.LargeFaceListOperations.create_2
  - azure-cognitiveservices-face.LargeFaceListOperations.create_1
  - azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.get
  - azure-cognitiveservices-face.LargeFaceListOperations.get_2
  - azure-cognitiveservices-face.LargeFaceListOperations.get_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.list
  - azure-cognitiveservices-face.LargeFaceListOperations.list_2
  - azure-cognitiveservices-face.LargeFaceListOperations.list_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.train
  - azure-cognitiveservices-face.LargeFaceListOperations.train_2
  - azure-cognitiveservices-face.LargeFaceListOperations.train_1
  - azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.update
  - azure-cognitiveservices-face.LargeFaceListOperations.update_2
  - azure-cognitiveservices-face.LargeFaceListOperations.update_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-101">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-101">Add a face to a large face list.</span></span> <span data-ttu-id="30045-102">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-103">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-104">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-104">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="30045-105">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="30045-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-106">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-106">Add a face to a large face list.</span></span> <span data-ttu-id="30045-107">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-108">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-109">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-109">Add a face to a large face list.</span></span> <span data-ttu-id="30045-110">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-111">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-112">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-112">Add a face to a large face list.</span></span> <span data-ttu-id="30045-113">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-114">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-115">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-115">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="30045-116">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="30045-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-117">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-117">Add a face to a large face list.</span></span> <span data-ttu-id="30045-118">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-119">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-120">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-120">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="30045-121">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="30045-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-122">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-122">Add a face to a large face list.</span></span> <span data-ttu-id="30045-123">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-124">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-125">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-125">Add a face to a large face list.</span></span> <span data-ttu-id="30045-126">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-127">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-128">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-128">Add a face to a large face list.</span></span> <span data-ttu-id="30045-129">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="30045-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="30045-130">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="30045-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-131">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-131">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="30045-132">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="30045-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-133">Создание списка пустой большой лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-133">Create an empty large face list.</span></span> <span data-ttu-id="30045-134">До 64 лиц больших списков могут существовать в одной подписке.</span><span class="sxs-lookup"><span data-stu-id="30045-134">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-135">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-135">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-136">Создание списка пустой большой лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-136">Create an empty large face list.</span></span> <span data-ttu-id="30045-137">До 64 лиц больших списков могут существовать в одной подписке.</span><span class="sxs-lookup"><span data-stu-id="30045-137">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-138">Создание списка пустой большой лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-138">Create an empty large face list.</span></span> <span data-ttu-id="30045-139">До 64 лиц больших списков могут существовать в одной подписке.</span><span class="sxs-lookup"><span data-stu-id="30045-139">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-140">Создание списка пустой большой лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-140">Create an empty large face list.</span></span> <span data-ttu-id="30045-141">До 64 лиц больших списков могут существовать в одной подписке.</span><span class="sxs-lookup"><span data-stu-id="30045-141">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-142">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-142">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-143">Удаление существующего лиц из списка больших лиц (при наличии persisitedFaceId и largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-143">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="30045-144">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-145">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-145">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-146">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-147">Удаление существующего лиц из списка больших лиц (при наличии persisitedFaceId и largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-147">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="30045-148">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-149">Удаление существующего лиц из списка больших лиц (при наличии persisitedFaceId и largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-149">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="30045-150">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-151">Удаление существующего лиц из списка больших лиц (при наличии persisitedFaceId и largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-151">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="30045-152">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-153">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-153">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-154">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-155">Удаление существующего списка больших лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="30045-155">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="30045-156">Сохраненных лиц изображений в списке больших лиц, будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="30045-156">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-157">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-157">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-158">Удаление существующего списка больших лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="30045-158">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="30045-159">Сохраненных лиц изображений в списке больших лиц, будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="30045-159">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-160">Удаление существующего списка больших лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="30045-160">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="30045-161">Сохраненных лиц изображений в списке больших лиц, будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="30045-161">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-162">Удаление существующего списка больших лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="30045-162">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="30045-163">Сохраненных лиц изображений в списке больших лиц, будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="30045-163">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-164">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-164">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-165">Получить список больших лиц сведения.</span><span class="sxs-lookup"><span data-stu-id="30045-165">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-166">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-166">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_2
  name: get(string, Object, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-167">Получить список больших лиц сведения.</span><span class="sxs-lookup"><span data-stu-id="30045-167">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options: Object, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_1
  name: get(string, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-168">Получить список больших лиц сведения.</span><span class="sxs-lookup"><span data-stu-id="30045-168">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace
  name: getFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-169">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-169">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-170">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-170">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-171">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-171">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  name: getFace(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-172">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-172">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  name: getFace(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-173">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-173">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-174">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="30045-174">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-175">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-175">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-176">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-176">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  name: getTrainingStatus(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-177">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="30045-177">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-178">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-178">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  name: getTrainingStatus(string, Object, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-179">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="30045-179">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options: Object, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-180">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="30045-180">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-181">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="30045-181">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-182">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-182">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-183">Получить список больших лиц сведения.</span><span class="sxs-lookup"><span data-stu-id="30045-183">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-184">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-184">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-185">Получение информации обо всех существующих списков больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-185">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="30045-186">Возвращаются только largeFaceListId, имя и userData.</span><span class="sxs-lookup"><span data-stu-id="30045-186">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_2
  name: list(Object, ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-187">Получение информации обо всех существующих списков больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-187">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="30045-188">Возвращаются только largeFaceListId, имя и userData.</span><span class="sxs-lookup"><span data-stu-id="30045-188">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_1
  name: list(ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-189">Получение информации обо всех существующих списков больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-189">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="30045-190">Возвращаются только largeFaceListId, имя и userData.</span><span class="sxs-lookup"><span data-stu-id="30045-190">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  name: listFaces(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-191">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="30045-191">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-192">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-192">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  name: listFaces(string, Object, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-193">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="30045-193">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options: Object, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  name: listFaces(string, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-194">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="30045-194">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  name: listFacesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-195">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="30045-195">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFacesWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-196">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-196">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-197">Получение информации обо всех существующих списков больших лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-197">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="30045-198">Возвращаются только largeFaceListId, имя и userData.</span><span class="sxs-lookup"><span data-stu-id="30045-198">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train
  name: train(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-199">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="30045-199">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-200">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-200">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_2
  name: train(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-201">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="30045-201">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_1
  name: train(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-202">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="30045-202">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-203">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="30045-203">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-204">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-204">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-205">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="30045-205">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-206">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-206">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-207">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="30045-207">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-208">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="30045-208">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  name: updateFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-209">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-209">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-210">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-210">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-211">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-211">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  name: updateFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-212">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-212">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  name: updateFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-213">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-213">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-214">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-214">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-215">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-215">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="30045-216">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="30045-216">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="30045-217">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="30045-217">Update information of a large face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="30045-218">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="30045-218">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  name: TrainingStatus>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  name: LargeFaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  name: PersistedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  name: LargeFaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>>'
    fullName: '[]>>'
