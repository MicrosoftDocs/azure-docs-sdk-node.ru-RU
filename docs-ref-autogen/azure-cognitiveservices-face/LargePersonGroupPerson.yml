### YamlMime:UniversalReference
ms.openlocfilehash: 20629fabdfd6f519f4262eda48dc707512731099
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026953"
items:
- uid: azure-cognitiveservices-face.LargePersonGroupPerson
  name: LargePersonGroupPerson
  fullName: LargePersonGroupPerson
  children:
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.create
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.get
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.list
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.update
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-101">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-102">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-103">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-103">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-104">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="222e6-105">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="222e6-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-106">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-107">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-108">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-109">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-110">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-111">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-112">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-112">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-113">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="222e6-114">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="222e6-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-115">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-116">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-117">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-117">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-118">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="222e6-119">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="222e6-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-120">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-121">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-122">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-123">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-124">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="222e6-125">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="222e6-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-126">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-126">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-127">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="222e6-128">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="222e6-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-129">Создание нового пользователя в группе указанного больших лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-129">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-130">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-130">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-131">Создание нового пользователя в группе указанного больших лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-131">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-132">Создание нового пользователя в группе указанного больших лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-132">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-133">Создание нового пользователя в группе указанного больших лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-133">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-134">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-134">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-135">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-135">Delete a face from a person.</span></span> <span data-ttu-id="222e6-136">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="222e6-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-137">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-137">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-138">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-139">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-140">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-140">Delete a face from a person.</span></span> <span data-ttu-id="222e6-141">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="222e6-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-142">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-142">Delete a face from a person.</span></span> <span data-ttu-id="222e6-143">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="222e6-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-144">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="222e6-144">Delete a face from a person.</span></span> <span data-ttu-id="222e6-145">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="222e6-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-146">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-146">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-147">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-148">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-149">Удалите его из группы больших person.</span><span class="sxs-lookup"><span data-stu-id="222e6-149">Delete an existing person from a large person group.</span></span> <span data-ttu-id="222e6-150">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-151">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-151">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-152">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-153">Удалите его из группы больших person.</span><span class="sxs-lookup"><span data-stu-id="222e6-153">Delete an existing person from a large person group.</span></span> <span data-ttu-id="222e6-154">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-155">Удалите его из группы больших person.</span><span class="sxs-lookup"><span data-stu-id="222e6-155">Delete an existing person from a large person group.</span></span> <span data-ttu-id="222e6-156">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-157">Удалите его из группы больших person.</span><span class="sxs-lookup"><span data-stu-id="222e6-157">Delete an existing person from a large person group.</span></span> <span data-ttu-id="222e6-158">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-159">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-159">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-160">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-161">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="222e6-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-162">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-162">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-163">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-164">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="222e6-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-165">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="222e6-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-166">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).</span><span class="sxs-lookup"><span data-stu-id="222e6-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-167">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-167">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-168">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-169">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-170">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).</span><span class="sxs-lookup"><span data-stu-id="222e6-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-171">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).</span><span class="sxs-lookup"><span data-stu-id="222e6-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-172">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).</span><span class="sxs-lookup"><span data-stu-id="222e6-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-173">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-173">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-174">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-175">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-176">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="222e6-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-177">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-177">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-178">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-179">Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="222e6-179">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-180">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-180">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-181">Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="222e6-181">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-182">Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="222e6-182">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-183">Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="222e6-183">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-184">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-184">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-185">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-186">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-186">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-187">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-188">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-189">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-190">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="222e6-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-191">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-191">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-192">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-193">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-194">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="222e6-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-195">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="222e6-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-196">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="222e6-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-197">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-197">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-198">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-199">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="222e6-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="222e6-200">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="222e6-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-201">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="222e6-201">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="222e6-202">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="222e6-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
