### YamlMime:UniversalReference
ms.openlocfilehash: ccaa3e66be923473a3a5d8c2598df706b11f57ff
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41696953"
items:
- uid: azure-cognitiveservices-face.Person
  name: Person
  fullName: Person
  children:
  - azure-cognitiveservices-face.Person.addPersonFace
  - azure-cognitiveservices-face.Person.addPersonFace_1
  - azure-cognitiveservices-face.Person.addPersonFace_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream
  - azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  - azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.create
  - azure-cognitiveservices-face.Person.create_1
  - azure-cognitiveservices-face.Person.create_2
  - azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteFace_1
  - azure-cognitiveservices-face.Person.deleteFace_2
  - azure-cognitiveservices-face.Person.deleteFace
  - azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.deleteMethod
  - azure-cognitiveservices-face.Person.deleteMethod_1
  - azure-cognitiveservices-face.Person.deleteMethod_2
  - azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.get
  - azure-cognitiveservices-face.Person.get_1
  - azure-cognitiveservices-face.Person.get_2
  - azure-cognitiveservices-face.Person.getFace
  - azure-cognitiveservices-face.Person.getFace_2
  - azure-cognitiveservices-face.Person.getFace_1
  - azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.list
  - azure-cognitiveservices-face.Person.list_1
  - azure-cognitiveservices-face.Person.list_2
  - azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.update
  - azure-cognitiveservices-face.Person.update_1
  - azure-cognitiveservices-face.Person.update_2
  - azure-cognitiveservices-face.Person.updateFace
  - azure-cognitiveservices-face.Person.updateFace_1
  - azure-cognitiveservices-face.Person.updateFace_2
  - azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-101">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-102">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-103">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-103">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-104">Целевого пользователя, добавленного к поверхности.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-104">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_1
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-105">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-105">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-106">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-106">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFace_2
  name: addPersonFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-107">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-107">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-108">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-108">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFace(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_1
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-109">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-109">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-110">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-110">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-111">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-111">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-112">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-112">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-113">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-113">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-114">Целевого пользователя, добавленного к поверхности.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-114">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="ed5e2-115">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-115">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStream_2
  name: addPersonFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-116">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-117">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-117">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceFromStreamWithHttpOperationResponse
  name: addPersonFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-118">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-118">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-119">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-119">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-120">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-120">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-121">Целевого пользователя, добавленного к поверхности.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-121">Target person that the face is added to.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="ed5e2-122">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-122">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.addPersonFaceWithHttpOperationResponse
  name: addPersonFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-123">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-123">Add a representative face to a person for identification.</span></span> <span data-ttu-id="ed5e2-124">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-124">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addPersonFaceWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-125">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-125">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-126">Целевого пользователя, добавленного к поверхности.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-126">Target person that the face is added to.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-127">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-127">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-128">Указание группе person целевых объектов для создания пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-128">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-129">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-130">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-130">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<CreatePersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.CreatePersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-131">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-132">Указание группе person целевых объектов для создания пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-132">Specifying the target person group to create the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-133">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-133">Delete a face from a person.</span></span> <span data-ttu-id="ed5e2-134">Относительное изображение для материализованных лица также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-134">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-135">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-135">Delete a face from a person.</span></span> <span data-ttu-id="ed5e2-136">Относительное изображение для материализованных лица также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-136">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-137">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-137">Delete a face from a person.</span></span> <span data-ttu-id="ed5e2-138">Относительное изображение для материализованных лица также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-138">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-139">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-139">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-140">Указание пользователя, что целевой объект сохранены лиц принадлежат.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-140">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-141">Сохраненных лиц для удаления.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-141">The persisted face to remove.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-142">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-142">Delete a face from a person.</span></span> <span data-ttu-id="ed5e2-143">Относительное изображение для материализованных лица также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-143">Relative image for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-144">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-144">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-145">Указание пользователя, что целевой объект сохранены лиц принадлежат.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-145">Specifying the person that the target persisted face belong to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-146">Сохраненных лиц для удаления.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-146">The persisted face to remove.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-147">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-147">Delete an existing person from a person group.</span></span> <span data-ttu-id="ed5e2-148">Сохраненных лиц образы лица будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-148">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-149">Указание лица группу, содержащую пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-149">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-150">PersonId целевой объект для удаления.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-150">The target personId to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-151">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="ed5e2-152">Сохраненных лиц образы лица будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-152">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-153">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="ed5e2-154">Сохраненных лиц образы лица будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-154">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-155">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="ed5e2-156">Сохраненных лиц образы лица будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-156">Persisted face images of the person will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-157">Указание лица группу, содержащую пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-157">Specifying the person group containing the person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-158">PersonId целевой объект для удаления.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-158">The target personId to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-159">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-159">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-160">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-160">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-161">Указание целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-161">Specifying the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-162">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-162">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-163">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-163">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<PersonResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-164">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-164">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-165">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-165">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-166">Указание целевого пользователя, которому принадлежит начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-166">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-167">PersistedFaceId целевого объекта сохраняется лиц пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-167">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_2
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-168">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-168">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFace_1
  name: getFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-169">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-169">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersonFaceResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-170">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-171">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-171">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-172">Указание целевого пользователя, которому принадлежит начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-172">Specifying the target person that the face belongs to.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-173">PersistedFaceId целевого объекта сохраняется лиц пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-173">The persistedFaceId of the target persisted face of the person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-174">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-174">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-175">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-175">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-176">Указание целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-176">Specifying the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-177">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-177">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-178">personGroupId целевой группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-178">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-179">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-180">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-180">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<PersonResult[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-181">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="ed5e2-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-182">personGroupId целевой группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-182">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-183">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-183">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-184">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-184">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-185">personId целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-185">personId of the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-186">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-186">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-187">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-187">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-188">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-188">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-189">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-189">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-190">personId целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-190">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-191">persistedFaceId целевой лиц, которая сохраняется и не истекает.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-191">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_1
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-192">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-192">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFace_2
  name: updateFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-193">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-193">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-194">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-195">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-195">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-196">personId целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-196">personId of the target person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-197">persistedFaceId целевой лиц, которая сохраняется и не истекает.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-197">persistedFaceId of target face, which is persisted and will not expire.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Person.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ed5e2-198">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-198">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-199">Указание лица группу, содержащую целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-199">Specifying the person group containing the target person.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="ed5e2-200">personId целевого пользователя.</span><span class="sxs-lookup"><span data-stu-id="ed5e2-200">personId of the target person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.CreatePersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.CreatePersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: CreatePersonResult
    fullName: CreatePersonResult
    uid: azure-cognitiveservices-face.CreatePersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonFaceResult
    fullName: PersonFaceResult
    uid: azure-cognitiveservices-face.PersonFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonResult
    fullName: PersonResult
    uid: azure-cognitiveservices-face.PersonResult
  - name: '[]>>'
    fullName: '[]>>'
