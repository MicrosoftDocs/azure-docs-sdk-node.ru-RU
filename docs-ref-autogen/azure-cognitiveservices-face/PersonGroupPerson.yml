### YamlMime:UniversalReference
ms.openlocfilehash: b668012a360630506b3de5e9274fb380c44683f9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/13/2018
ms.locfileid: "52170009"
items:
- uid: azure-cognitiveservices-face.PersonGroupPerson
  name: PersonGroupPerson
  fullName: PersonGroupPerson
  children:
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.create
  - azure-cognitiveservices-face.PersonGroupPerson.create_2
  - azure-cognitiveservices-face.PersonGroupPerson.create_1
  - azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.get
  - azure-cognitiveservices-face.PersonGroupPerson.get_2
  - azure-cognitiveservices-face.PersonGroupPerson.get_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFace
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.list
  - azure-cognitiveservices-face.PersonGroupPerson.list_2
  - azure-cognitiveservices-face.PersonGroupPerson.list_1
  - azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.update
  - azure-cognitiveservices-face.PersonGroupPerson.update_2
  - azure-cognitiveservices-face.PersonGroupPerson.update_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-101">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-102">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-103">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-103">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-104">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="69212-105">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="69212-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-106">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-107">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-108">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-109">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-110">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-111">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-112">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-112">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-113">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="69212-114">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="69212-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-115">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-116">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-117">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-117">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-118">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="69212-119">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="69212-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-120">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-121">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-122">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-123">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-124">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="69212-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="69212-125">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="69212-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-126">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-126">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-127">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="69212-128">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="69212-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-129">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="69212-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-130">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-130">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-131">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="69212-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-132">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="69212-132">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-133">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="69212-133">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-134">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-134">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-135">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="69212-135">Delete a face from a person.</span></span> <span data-ttu-id="69212-136">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="69212-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-137">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-137">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-138">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-139">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-140">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="69212-140">Delete a face from a person.</span></span> <span data-ttu-id="69212-141">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="69212-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-142">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="69212-142">Delete a face from a person.</span></span> <span data-ttu-id="69212-143">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="69212-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-144">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="69212-144">Delete a face from a person.</span></span> <span data-ttu-id="69212-145">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="69212-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-146">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-146">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-147">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-148">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-149">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-149">Delete an existing person from a person group.</span></span> <span data-ttu-id="69212-150">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-151">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-151">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-152">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-153">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="69212-154">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-155">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="69212-156">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-157">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-157">Delete an existing person from a person group.</span></span> <span data-ttu-id="69212-158">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-159">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-159">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-160">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-161">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="69212-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-162">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-162">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-163">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-164">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="69212-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-165">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="69212-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-166">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="69212-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-167">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-167">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-168">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-169">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-170">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="69212-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-171">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="69212-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-172">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="69212-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-173">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-173">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-174">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-175">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-176">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="69212-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-177">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-177">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-178">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-179">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="69212-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-180">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-180">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-181">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="69212-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-182">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="69212-182">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-183">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="69212-183">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-184">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-184">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-185">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="69212-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-186">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-186">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-187">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-188">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="69212-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-189">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="69212-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-190">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="69212-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-191">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-191">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-192">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-193">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-194">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="69212-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-195">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="69212-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-196">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="69212-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-197">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-197">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-198">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="69212-199">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="69212-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="69212-200">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="69212-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="69212-201">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="69212-201">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="69212-202">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="69212-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
