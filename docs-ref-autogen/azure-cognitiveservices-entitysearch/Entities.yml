### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-entitysearch.Entities
    name: Entities
    fullName: Entities
    children:
      - azure-cognitiveservices-entitysearch.Entities.contractualRules
      - azure-cognitiveservices-entitysearch.Entities.id
      - azure-cognitiveservices-entitysearch.Entities.queryContext
      - azure-cognitiveservices-entitysearch.Entities.queryScenario
      - azure-cognitiveservices-entitysearch.Entities.value
      - azure-cognitiveservices-entitysearch.Entities.webSearchUrl
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="58650-101">Определяет ответ сущности.</span><span class="sxs-lookup"><span data-stu-id="58650-101">Defines an entity answer.</span></span>
    extends:
      name: azure-cognitiveservices-entitysearch.SearchResultsAnswer
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.contractualRules
    name: contractualRules
    fullName: contractualRules
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="58650-102">Список правил, которые вы должны соблюдать при отображении элемента.</span><span class="sxs-lookup"><span data-stu-id="58650-102">A list of rules that you must adhere to if you display the item.</span></span>'
    optional: true
    syntax:
      content: 'contractualRules?: ContractualRulesContractualRule[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="58650-103">Идентификатор строки.</span><span class="sxs-lookup"><span data-stu-id="58650-103">A String identifier.</span></span>
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.queryContext
    name: queryContext
    fullName: queryContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'queryContext?: QueryContext'
      return:
        type:
          - azure-cognitiveservices-entitysearch.QueryContext
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.queryScenario
    name: queryScenario
    fullName: queryScenario
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="58650-104">В сценарии запроса поддерживается.</span><span class="sxs-lookup"><span data-stu-id="58650-104">The supported query scenario.</span></span> <span data-ttu-id="58650-105">Это поле будет присвоено DominantEntity или DisambiguationItem.</span><span class="sxs-lookup"><span data-stu-id="58650-105">This field is set to DominantEntity or DisambiguationItem.</span></span> <span data-ttu-id="58650-106">Поле присваивается DominantEntity в том случае, если Bing определяет, что только одной сущности удовлетворяет запрос.</span><span class="sxs-lookup"><span data-stu-id="58650-106">The field is set to DominantEntity if Bing determines that only a single entity satisfies the request.</span></span> <span data-ttu-id="58650-107">Например книги, фильмов, пользователя или притяжения.</span><span class="sxs-lookup"><span data-stu-id="58650-107">For example, a book, movie, person, or attraction.</span></span> <span data-ttu-id="58650-108">Если несколько сущностей удалось удовлетворить запрос, поле будет присвоено DisambiguationItem.</span><span class="sxs-lookup"><span data-stu-id="58650-108">If multiple entities could satisfy the request, the field is set to DisambiguationItem.</span></span> <span data-ttu-id="58650-109">Например если запрос использует универсальный заголовок франчайзинговые фильма, тип сущности скорее всего будет DisambiguationItem.</span><span class="sxs-lookup"><span data-stu-id="58650-109">For example, if the request uses the generic title of a movie franchise, the entity''s type would likely be DisambiguationItem.</span></span> <span data-ttu-id="58650-110">Но если в запросе задано определенного названия из обеспечила, тип сущности скорее всего будет DominantEntity.</span><span class="sxs-lookup"><span data-stu-id="58650-110">But, if the request specifies a specific title from the franchise, the entity''s type would likely be DominantEntity.</span></span> <span data-ttu-id="58650-111">Ниже перечислены возможные значения. «DominantEntity», «DominantEntityWithDisambiguation», «Устранение неоднозначности», «Список», «ListWithPivot»</span><span class="sxs-lookup"><span data-stu-id="58650-111">Possible values include: ''DominantEntity'', ''DominantEntityWithDisambiguation'', ''Disambiguation'', ''List'', ''ListWithPivot''</span></span>'
    optional: true
    syntax:
      content: 'queryScenario?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="58650-112">Список сущностей.</span><span class="sxs-lookup"><span data-stu-id="58650-112">A list of entities.</span></span>
    syntax:
      content: 'value: Thing[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.Thing[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.webSearchUrl
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="58650-113">Результат поиска Bing URL-адрес для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="58650-113">The URL To Bing's search result for this item.</span></span>
    optional: true
    syntax:
      content: 'webSearchUrl?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
references:
  - uid: azure-cognitiveservices-entitysearch.SearchResultsAnswer
    name: SearchResultsAnswer
    spec.typeScript:
      - name: SearchResultsAnswer
        fullName: SearchResultsAnswer
        uid: azure-cognitiveservices-entitysearch.SearchResultsAnswer
  - uid: 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    name: 'ContractualRulesContractualRule[]'
    spec.typeScript:
      - name: ContractualRulesContractualRule
        fullName: ContractualRulesContractualRule
        uid: azure-cognitiveservices-entitysearch.ContractualRulesContractualRule
      - name: '[]'
        fullName: '[]'
  - uid: azure-cognitiveservices-entitysearch.QueryContext
    name: QueryContext
    spec.typeScript:
      - name: QueryContext
        fullName: QueryContext
        uid: azure-cognitiveservices-entitysearch.QueryContext
  - uid: 'azure-cognitiveservices-entitysearch.Thing[]'
    name: 'Thing[]'
    spec.typeScript:
      - name: Thing
        fullName: Thing
        uid: azure-cognitiveservices-entitysearch.Thing
      - name: '[]'
        fullName: '[]'