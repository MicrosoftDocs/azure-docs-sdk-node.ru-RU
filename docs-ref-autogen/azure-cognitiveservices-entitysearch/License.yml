### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-entitysearch.License
    name: License
    fullName: License
    children:
      - azure-cognitiveservices-entitysearch.License.bingId
      - azure-cognitiveservices-entitysearch.License.contractualRules
      - azure-cognitiveservices-entitysearch.License.description
      - azure-cognitiveservices-entitysearch.License.entityPresentationInfo
      - azure-cognitiveservices-entitysearch.License.id
      - azure-cognitiveservices-entitysearch.License.image
      - azure-cognitiveservices-entitysearch.License.name
      - azure-cognitiveservices-entitysearch.License.provider
      - azure-cognitiveservices-entitysearch.License.text
      - azure-cognitiveservices-entitysearch.License.thumbnailUrl
      - azure-cognitiveservices-entitysearch.License.url
      - azure-cognitiveservices-entitysearch.License.webSearchUrl
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="004cf-101">Определяет лицензию, в рамках которой можно использовать текст или фотографию.</span><span class="sxs-lookup"><span data-stu-id="004cf-101">Defines the license under which the text or photo may be used.</span></span>'
    extends:
      name: azure-cognitiveservices-entitysearch.CreativeWork
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.bingId
    name: bingId
    fullName: bingId
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="004cf-102">Идентификатор, однозначно определяющее этот элемент.</span><span class="sxs-lookup"><span data-stu-id="004cf-102">An ID that uniquely identifies this item.</span></span>'
    optional: true
    syntax:
      content: 'bingId?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.contractualRules
    name: contractualRules
    fullName: contractualRules
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="004cf-103">Список правил, которые вы должны соблюдать при отображении элемента.</span><span class="sxs-lookup"><span data-stu-id="004cf-103">A list of rules that you must adhere to if you display the item.</span></span>'
    optional: true
    syntax:
      content: 'contractualRules?: ContractualRulesContractualRule[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="004cf-104">Краткое описание элемента.</span><span class="sxs-lookup"><span data-stu-id="004cf-104">A short description of the item.</span></span>
    optional: true
    syntax:
      content: 'description?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.entityPresentationInfo
    name: entityPresentationInfo
    fullName: entityPresentationInfo
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="004cf-105">Дополнительные сведения о сущности, например указание, которое используется для определения типа сущности.</span><span class="sxs-lookup"><span data-stu-id="004cf-105">Additional information about the entity such as hints that you can use to determine the entity''s type.</span></span> <span data-ttu-id="004cf-106">Чтобы определить тип сущности, используйте поля entityScenario и entityTypeHint.</span><span class="sxs-lookup"><span data-stu-id="004cf-106">To determine the entity''s type, use the entityScenario and entityTypeHint fields.</span></span>'
    optional: true
    syntax:
      content: 'entityPresentationInfo?: EntitiesEntityPresentationInfo'
      return:
        type:
          - azure-cognitiveservices-entitysearch.EntitiesEntityPresentationInfo
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="004cf-107">Идентификатор строки.</span><span class="sxs-lookup"><span data-stu-id="004cf-107">A String identifier.</span></span>
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.image
    name: image
    fullName: image
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'image?: ImageObject'
      return:
        type:
          - azure-cognitiveservices-entitysearch.ImageObject
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="004cf-108">Имя субъекта, представленный этим объектом.</span><span class="sxs-lookup"><span data-stu-id="004cf-108">The name of the thing represented by this object.</span></span>'
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.provider
    name: provider
    fullName: provider
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="004cf-109">Источником творческой работы.</span><span class="sxs-lookup"><span data-stu-id="004cf-109">The source of the creative work.</span></span>
    optional: true
    syntax:
      content: 'provider?: Thing[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.Thing[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'text?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.thumbnailUrl
    name: thumbnailUrl
    fullName: thumbnailUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="004cf-110">URL-адрес эскиза элемента.</span><span class="sxs-lookup"><span data-stu-id="004cf-110">The URL to a thumbnail of the item.</span></span>
    optional: true
    syntax:
      content: 'thumbnailUrl?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="004cf-111">URL-адрес, чтобы получить дополнительные сведения о том, что, представленный этим объектом.</span><span class="sxs-lookup"><span data-stu-id="004cf-111">The URL to get more information about the thing represented by this object.</span></span>'
    optional: true
    syntax:
      content: 'url?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.License.webSearchUrl
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="004cf-112">Результат поиска Bing URL-адрес для этого элемента.</span><span class="sxs-lookup"><span data-stu-id="004cf-112">The URL To Bing's search result for this item.</span></span>
    optional: true
    syntax:
      content: 'webSearchUrl?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
references:
  - uid: azure-cognitiveservices-entitysearch.CreativeWork
    name: CreativeWork
    spec.typeScript:
      - name: CreativeWork
        fullName: CreativeWork
        uid: azure-cognitiveservices-entitysearch.CreativeWork
  - uid: 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    name: 'ContractualRulesContractualRule[]'
    spec.typeScript:
      - name: ContractualRulesContractualRule
        fullName: ContractualRulesContractualRule
        uid: azure-cognitiveservices-entitysearch.ContractualRulesContractualRule
      - name: '[]'
        fullName: '[]'
  - uid: azure-cognitiveservices-entitysearch.EntitiesEntityPresentationInfo
    name: EntitiesEntityPresentationInfo
    spec.typeScript:
      - name: EntitiesEntityPresentationInfo
        fullName: EntitiesEntityPresentationInfo
        uid: azure-cognitiveservices-entitysearch.EntitiesEntityPresentationInfo
  - uid: azure-cognitiveservices-entitysearch.ImageObject
    name: ImageObject
    spec.typeScript:
      - name: ImageObject
        fullName: ImageObject
        uid: azure-cognitiveservices-entitysearch.ImageObject
  - uid: 'azure-cognitiveservices-entitysearch.Thing[]'
    name: 'Thing[]'
    spec.typeScript:
      - name: Thing
        fullName: Thing
        uid: azure-cognitiveservices-entitysearch.Thing
      - name: '[]'
        fullName: '[]'