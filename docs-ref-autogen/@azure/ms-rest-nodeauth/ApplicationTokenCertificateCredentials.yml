### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials'
    name: ApplicationTokenCertificateCredentials
    fullName: ApplicationTokenCertificateCredentials
    children:
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.constructor'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.authContext'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.certificate'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.clientId'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.create'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.domain'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.environment'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.getToken'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.signRequest'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.thumbprint'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.tokenAudience'
      - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.tokenCache'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/ms-rest-nodeauth.ApplicationTokenCredentialsBase'
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.constructor'
    name: 'ApplicationTokenCertificateCredentials(string, string, string, string, TokenAudience, Environment, TokenCache)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      Создает новый объект ApplicationTokenCredentials.
      См. в разделе [Active Directory краткое руководство по .net](https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/) подробные инструкции по созданию приложения Azure Active Directory.
    syntax:
      content: 'new ApplicationTokenCertificateCredentials(clientId: string, domain: string, certificate: string, thumbprint: string, tokenAudience?: TokenAudience, environment?: Environment, tokenCache?: TokenCache)'
      parameters:
        - id: clientId
          type:
            - string
          description: Идентификатор клиента приложения active directory.
        - id: domain
          type:
            - string
          description: 'Идентификатор домена или клиента, с этим приложением.'
        - id: certificate
          type:
            - string
          description: Закрытый ключ сертификат в кодировке PEM.
        - id: thumbprint
          type:
            - string
          description: Отпечаток сертификата в кодировке hex.
        - id: tokenAudience
          type:
            - '@azure/ms-rest-nodeauth.TokenAudience'
          description: ''
          optional: true
        - id: environment
          type:
            - Environment
          description: ''
          optional: true
        - id: tokenCache
          type:
            - TokenCache
          description: ''
          optional: true
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.authContext'
    name: authContext
    fullName: authContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'authContext: AuthenticationContext'
      return:
        type:
          - AuthenticationContext
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.certificate'
    name: certificate
    fullName: certificate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'certificate: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.clientId'
    name: clientId
    fullName: clientId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'clientId: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.create'
    name: 'create(string, string, string, AzureTokenCredentialsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает новый экземпляр класса ApplicationTokenCertificateCredentials.
    syntax:
      content: 'static function create(clientId: string, certificateStringOrFilePath: string, domain: string, options: AzureTokenCredentialsOptions)'
      parameters:
        - id: clientId
          type:
            - string
          description: |-
            Идентификатор клиента active directory приложения также известный как имя участника-службы (имя субъекта-службы).
            См. в разделе [Active Directory краткое руководство по .net](https://azure.microsoft.com/en-us/documentation/articles/active-directory-devquickstarts-dotnet/) пример.
        - id: certificateStringOrFilePath
          type:
            - string
          description: |-
            Сертификат и закрытый ключ в кодировке PEM или абсолютный путь к файлу в PEM-файла, содержащего эти данные. Пример:
            - CertificateString: «\n---BEGIN PRIVATE KEY---<xxxxx>\n---END ЗАКРЫТЫЙ ключ---\n---BEGIN CERTIFICATE---\n<yyyyy>\n---END CERTIFICATE---\n»
            - CertificateFilePath: **Абсолютный** путь к файлу PEM-файлу.
        - id: domain
          type:
            - string
          description: 'Идентификатор домена или клиента, с этим приложением.'
        - id: options
          type:
            - '@azure/ms-rest-nodeauth.AzureTokenCredentialsOptions'
          description: |
            AzureTokenCredentialsOptions - объект, представляющий необязательные параметры.
      return:
        type:
          - '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials'
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.domain'
    name: domain
    fullName: domain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domain: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.environment'
    name: environment
    fullName: environment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'environment: Environment'
      return:
        type:
          - Environment
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.getToken'
    name: getToken()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Пытается получить маркер из кэша, изначально. Если это unsuccessfull затем предпринимается попытка получить маркер из ADAL.'
    syntax:
      content: function getToken()
      parameters: []
      return:
        type:
          - Promise<TokenResponse>
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.signRequest'
    name: signRequest(WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Подписывает запрос с заголовком проверки подлинности.
    syntax:
      content: 'function signRequest(webResource: WebResource)'
      parameters:
        - id: webResource
          type:
            - WebResource
          description: ''
      return:
        type:
          - Promise<WebResource>
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.thumbprint'
    name: thumbprint
    fullName: thumbprint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'thumbprint: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.tokenAudience'
    name: tokenAudience
    fullName: tokenAudience
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tokenAudience?: string | undefined'
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-nodeauth'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials.tokenCache'
    name: tokenCache
    fullName: tokenCache
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tokenCache: TokenCache'
      return:
        type:
          - TokenCache
    package: '@azure/ms-rest-nodeauth'
references:
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCredentialsBase'
    name: ApplicationTokenCredentialsBase
    spec.typeScript:
      - name: ApplicationTokenCredentialsBase
        fullName: ApplicationTokenCredentialsBase
        uid: '@azure/ms-rest-nodeauth.ApplicationTokenCredentialsBase'
  - uid: '@azure/ms-rest-nodeauth.TokenAudience'
    name: TokenAudience
    spec.typeScript:
      - name: TokenAudience
        fullName: TokenAudience
        uid: '@azure/ms-rest-nodeauth.TokenAudience'
  - uid: '@azure/ms-rest-nodeauth.AzureTokenCredentialsOptions'
    name: AzureTokenCredentialsOptions
    spec.typeScript:
      - name: AzureTokenCredentialsOptions
        fullName: AzureTokenCredentialsOptions
        uid: '@azure/ms-rest-nodeauth.AzureTokenCredentialsOptions'
  - uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials'
    name: ApplicationTokenCertificateCredentials
    spec.typeScript:
      - name: ApplicationTokenCertificateCredentials
        fullName: ApplicationTokenCertificateCredentials
        uid: '@azure/ms-rest-nodeauth.ApplicationTokenCertificateCredentials'