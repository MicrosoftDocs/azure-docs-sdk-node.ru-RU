### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-commerce.RateCard'
    name: RateCard
    fullName: RateCard
    children:
      - '@azure/arm-commerce.RateCard.get'
      - '@azure/arm-commerce.RateCard.get_2'
      - '@azure/arm-commerce.RateCard.get_1'
      - '@azure/arm-commerce.RateCard.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий RateCard.'
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Позволяет указать запрос для метаданных ресурсов и единиц измерения и связанные цены, в рамках одной подписки, идентификатора предложения, валюты, языкового стандарта и региона. Метаданных, связанных с метриками выставления счетов, включая, но не ограничиваясь имена служб, типы, ресурсы, единиц измерения и регионах, не может быть изменена в любое время и без предварительного уведомления. Если вы планируете использовать эти данные выставления счетов в автоматическом режиме, используйте оплату GUID для уникальной идентификации каждого оплачиваемых элемента. Если оплату GUID запланирована для изменения из-за новой модели выставления счетов, вы получите уведомление до изменения.'
    syntax:
      content: 'function get(filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: filter
          type:
            - string
          description: 'Фильтр, применяемый для операции. Он поддерживает только «eq» и «и» логические операторы в данный момент. Все 4 параметры запроса «OfferDurableId», «Валюта», «Locale», «Region» должны быть частью $filter.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, options: RequestOptionsBase, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: 'Фильтр, применяемый для операции. Он поддерживает только «eq» и «и» логические операторы в данный момент. Все 4 параметры запроса «OfferDurableId», «Валюта», «Locale», «Region» должны быть частью $filter.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_1'
    name: 'get(string, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: 'Фильтр, применяемый для операции. Он поддерживает только «eq» и «и» логические операторы в данный момент. Все 4 параметры запроса «OfferDurableId», «Валюта», «Locale», «Region» должны быть частью $filter.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.constructor'
    name: RateCard(UsageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте RateCard.
    syntax:
      content: 'new RateCard(client: UsageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-commerce.UsageManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-commerce'
references:
  - uid: '@azure/arm-commerce.UsageManagementClientContext'
    name: UsageManagementClientContext
    spec.typeScript:
      - name: UsageManagementClientContext
        fullName: UsageManagementClientContext
        uid: '@azure/arm-commerce.UsageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
    name: ResourceRateCardInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceRateCardInfo
        fullName: ResourceRateCardInfo
        uid: '@azure/arm-commerce.ResourceRateCardInfo'
      - name: '>'
        fullName: '>'