### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-subscriptions.Subscriptions'
    name: Subscriptions
    fullName: Subscriptions
    children:
      - '@azure/arm-subscriptions.Subscriptions.get'
      - '@azure/arm-subscriptions.Subscriptions.get_2'
      - '@azure/arm-subscriptions.Subscriptions.get_1'
      - '@azure/arm-subscriptions.Subscriptions.list'
      - '@azure/arm-subscriptions.Subscriptions.list_2'
      - '@azure/arm-subscriptions.Subscriptions.list_1'
      - '@azure/arm-subscriptions.Subscriptions.listLocations'
      - '@azure/arm-subscriptions.Subscriptions.listLocations_2'
      - '@azure/arm-subscriptions.Subscriptions.listLocations_1'
      - '@azure/arm-subscriptions.Subscriptions.listNext'
      - '@azure/arm-subscriptions.Subscriptions.listNext_2'
      - '@azure/arm-subscriptions.Subscriptions.listNext_1'
      - '@azure/arm-subscriptions.Subscriptions.constructor'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="d106d-101">Класс, представляющий подписок.</span><span class="sxs-lookup"><span data-stu-id="d106d-101">Class representing a Subscriptions.</span></span>'
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d106d-102">Получает сведения об указанной подписке.</span><span class="sxs-lookup"><span data-stu-id="d106d-102">Gets details about a specified subscription.</span></span>
    syntax:
      content: 'function get(subscriptionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-103">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-103">The ID of the target subscription.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsGetResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Subscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(subscriptionId: string, options: RequestOptionsBase, callback: ServiceCallback<Subscription>)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-104">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-104">The ID of the target subscription.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d106d-105">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d106d-105">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.Subscription>
          description: |
            <span data-ttu-id="d106d-106">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-106">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsGetResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.get_1'
    name: 'get(string, ServiceCallback<Subscription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(subscriptionId: string, callback: ServiceCallback<Subscription>)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-107">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-107">The ID of the target subscription.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.Subscription>
          description: |
            <span data-ttu-id="d106d-108">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-108">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsGetResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d106d-109">Получает все подписки для клиента.</span><span class="sxs-lookup"><span data-stu-id="d106d-109">Gets all subscriptions for a tenant.</span></span>
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<SubscriptionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<SubscriptionListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d106d-110">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d106d-110">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            <span data-ttu-id="d106d-111">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-111">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.list_1'
    name: list(ServiceCallback<SubscriptionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<SubscriptionListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            <span data-ttu-id="d106d-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-112">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations'
    name: 'listLocations(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d106d-113">Эта операция предоставляет все расположения, доступные для поставщиков ресурсов; Тем не менее каждый поставщик ресурсов может поддерживать подмножество этого списка.</span><span class="sxs-lookup"><span data-stu-id="d106d-113">This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list.</span></span>'
    syntax:
      content: 'function listLocations(subscriptionId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-114">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-114">The ID of the target subscription.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListLocationsResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations_2'
    name: 'listLocations(string, RequestOptionsBase, ServiceCallback<LocationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLocations(subscriptionId: string, options: RequestOptionsBase, callback: ServiceCallback<LocationListResult>)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-115">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-115">The ID of the target subscription.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d106d-116">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d106d-116">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.LocationListResult>
          description: |
            <span data-ttu-id="d106d-117">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-117">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListLocationsResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listLocations_1'
    name: 'listLocations(string, ServiceCallback<LocationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLocations(subscriptionId: string, callback: ServiceCallback<LocationListResult>)'
      parameters:
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d106d-118">Идентификатор целевой подписки.</span><span class="sxs-lookup"><span data-stu-id="d106d-118">The ID of the target subscription.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.LocationListResult>
          description: |
            <span data-ttu-id="d106d-119">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-119">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListLocationsResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d106d-120">Получает все подписки для клиента.</span><span class="sxs-lookup"><span data-stu-id="d106d-120">Gets all subscriptions for a tenant.</span></span>
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="d106d-121">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="d106d-121">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubscriptionsListNextResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<SubscriptionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<SubscriptionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="d106d-122">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="d106d-122">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d106d-123">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d106d-123">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            <span data-ttu-id="d106d-124">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-124">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListNextResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.listNext_1'
    name: 'listNext(string, ServiceCallback<SubscriptionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<SubscriptionListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="d106d-125">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="d106d-125">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
          description: |
            <span data-ttu-id="d106d-126">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d106d-126">The callback</span></span>
      return:
        type:
          - Promise<Models.SubscriptionsListNextResponse>
    package: '@azure/arm-subscriptions'
  - uid: '@azure/arm-subscriptions.Subscriptions.constructor'
    name: Subscriptions(SubscriptionClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d106d-127">Создание подписок.</span><span class="sxs-lookup"><span data-stu-id="d106d-127">Create a Subscriptions.</span></span>
    syntax:
      content: 'new Subscriptions(client: SubscriptionClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-subscriptions.SubscriptionClientContext'
          description: |
            <span data-ttu-id="d106d-128">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="d106d-128">Reference to the service client.</span></span>
    package: '@azure/arm-subscriptions'
references:
  - uid: '@azure/arm-subscriptions.SubscriptionClientContext'
    name: SubscriptionClientContext
    spec.typeScript:
      - name: SubscriptionClientContext
        fullName: SubscriptionClientContext
        uid: '@azure/arm-subscriptions.SubscriptionClientContext'
  - uid: ServiceCallback<@azure/arm-subscriptions.Subscription>
    name: Subscription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Subscription
        fullName: Subscription
        uid: '@azure/arm-subscriptions.Subscription'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-subscriptions.SubscriptionListResult>
    name: SubscriptionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SubscriptionListResult
        fullName: SubscriptionListResult
        uid: '@azure/arm-subscriptions.SubscriptionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-subscriptions.LocationListResult>
    name: LocationListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LocationListResult
        fullName: LocationListResult
        uid: '@azure/arm-subscriptions.LocationListResult'
      - name: '>'
        fullName: '>'