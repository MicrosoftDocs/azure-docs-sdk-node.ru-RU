### YamlMime:UniversalReference
ms.openlocfilehash: 642108c1d1a8e102ee59b49f3f011b6bc38e7945
ms.sourcegitcommit: 0e294f7c4dcdfae9df18ff3e82b6563680ef2519
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 01/25/2019
ms.locfileid: "55062429"
items:
- uid: '@azure/cognitiveservices-qnamaker.Operations'
  name: Operations
  fullName: Operations
  children:
  - '@azure/cognitiveservices-qnamaker.Operations.getDetails'
  - '@azure/cognitiveservices-qnamaker.Operations.getDetails_2'
  - '@azure/cognitiveservices-qnamaker.Operations.getDetails_1'
  - '@azure/cognitiveservices-qnamaker.Operations.constructor'
  langs:
  - typeScript
  type: class
  summary: Класс, представляющий операций.
  package: '@azure/cognitiveservices-qnamaker'
- uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails'
  name: getDetails(string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDetails(operationId: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: operationId
      type:
      - string
      description: Идентификатор операции.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.OperationsGetDetailsResponse>
  package: '@azure/cognitiveservices-qnamaker'
- uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails_2'
  name: getDetails(string, RequestOptionsBase, ServiceCallback<Operation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDetails(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<Operation>)'
    parameters:
    - id: operationId
      type:
      - string
      description: Идентификатор операции.
    - id: options
      type:
      - RequestOptionsBase
      description: Возможно использование необязательных параметров
    - id: callback
      type:
      - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.OperationsGetDetailsResponse>
  package: '@azure/cognitiveservices-qnamaker'
- uid: '@azure/cognitiveservices-qnamaker.Operations.getDetails_1'
  name: getDetails(string, ServiceCallback<Operation>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getDetails(operationId: string, callback: ServiceCallback<Operation>)'
    parameters:
    - id: operationId
      type:
      - string
      description: Идентификатор операции.
    - id: callback
      type:
      - ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.OperationsGetDetailsResponse>
  package: '@azure/cognitiveservices-qnamaker'
- uid: '@azure/cognitiveservices-qnamaker.Operations.constructor'
  name: Operations(QnAMakerClientContext)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Операции создания.
  syntax:
    content: 'new Operations(client: QnAMakerClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
      description: >
        Ссылка на клиента службы.
  package: '@azure/cognitiveservices-qnamaker'
references:
- uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
  name: QnAMakerClientContext
  spec.typeScript:
  - name: QnAMakerClientContext
    fullName: QnAMakerClientContext
    uid: '@azure/cognitiveservices-qnamaker.QnAMakerClientContext'
- uid: ServiceCallback<@azure/cognitiveservices-qnamaker.Operation>
  name: Operation>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Operation
    fullName: Operation
    uid: '@azure/cognitiveservices-qnamaker.Operation'
  - name: '>'
    fullName: '>'
