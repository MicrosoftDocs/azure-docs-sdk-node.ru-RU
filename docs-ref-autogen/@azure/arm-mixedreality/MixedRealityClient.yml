### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-mixedreality.MixedRealityClient'
    name: MixedRealityClient
    fullName: MixedRealityClient
    children:
      - '@azure/arm-mixedreality.MixedRealityClient.acceptLanguage'
      - '@azure/arm-mixedreality.MixedRealityClient.apiVersion'
      - '@azure/arm-mixedreality.MixedRealityClient.beginLongRunningRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_2'
      - '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_1'
      - '@azure/arm-mixedreality.MixedRealityClient.credentials'
      - '@azure/arm-mixedreality.MixedRealityClient.longRunningOperationRetryTimeout'
      - '@azure/arm-mixedreality.MixedRealityClient.constructor'
      - '@azure/arm-mixedreality.MixedRealityClient.operations'
      - '@azure/arm-mixedreality.MixedRealityClient.restoreLROPoller'
      - '@azure/arm-mixedreality.MixedRealityClient.sendLongRunningRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendLRORequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendOperationRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.sendRequest'
      - '@azure/arm-mixedreality.MixedRealityClient.spatialAnchorsAccounts'
      - '@azure/arm-mixedreality.MixedRealityClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-mixedreality.MixedRealityClientContext'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ada5e-101">Отправить первоначальный запрос LRO (длительные операции) и получить обратно HttpLongRunningOperationResponse, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.</span><span class="sxs-lookup"><span data-stu-id="ada5e-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="ada5e-102">Объект запроса</span><span class="sxs-lookup"><span data-stu-id="ada5e-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ada5e-103">Проверка доступности имени глобальной уникальности</span><span class="sxs-lookup"><span data-stu-id="ada5e-103">Check Name Availability for global uniqueness</span></span>
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: location
          type:
            - string
          description: '<span data-ttu-id="ada5e-104">Расположение, в котором будет проверяться уникальность.</span><span class="sxs-lookup"><span data-stu-id="ada5e-104">The location in which uniqueness will be verified.</span></span>'
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="ada5e-105">Проверьте запрос доступности имени.</span><span class="sxs-lookup"><span data-stu-id="ada5e-105">Check Name Availability Request.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_2'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, RequestOptionsBase, ServiceCallback<CheckNameAvailabilityResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, options: RequestOptionsBase, callback: ServiceCallback<CheckNameAvailabilityResponse>)'
      parameters:
        - id: location
          type:
            - string
          description: '<span data-ttu-id="ada5e-106">Расположение, в котором будет проверяться уникальность.</span><span class="sxs-lookup"><span data-stu-id="ada5e-106">The location in which uniqueness will be verified.</span></span>'
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="ada5e-107">Проверьте запрос доступности имени.</span><span class="sxs-lookup"><span data-stu-id="ada5e-107">Check Name Availability Request.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="ada5e-108">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="ada5e-108">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
          description: |
            <span data-ttu-id="ada5e-109">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="ada5e-109">The callback</span></span>
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.checkNameAvailabilityLocal_1'
    name: 'checkNameAvailabilityLocal(string, CheckNameAvailabilityRequest, ServiceCallback<CheckNameAvailabilityResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailabilityLocal(location: string, checkNameAvailability: CheckNameAvailabilityRequest, callback: ServiceCallback<CheckNameAvailabilityResponse>)'
      parameters:
        - id: location
          type:
            - string
          description: '<span data-ttu-id="ada5e-110">Расположение, в котором будет проверяться уникальность.</span><span class="sxs-lookup"><span data-stu-id="ada5e-110">The location in which uniqueness will be verified.</span></span>'
        - id: checkNameAvailability
          type:
            - '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
          description: <span data-ttu-id="ada5e-111">Проверьте запрос доступности имени.</span><span class="sxs-lookup"><span data-stu-id="ada5e-111">Check Name Availability Request.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
          description: |
            <span data-ttu-id="ada5e-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="ada5e-112">The callback</span></span>
      return:
        type:
          - Promise<Models.CheckNameAvailabilityLocalResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ada5e-113">Время ожидания в секундах для длительных операций повтора.</span><span class="sxs-lookup"><span data-stu-id="ada5e-113">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="ada5e-114">Значение по умолчанию — 30.</span><span class="sxs-lookup"><span data-stu-id="ada5e-114">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.constructor'
    name: 'MixedRealityClient(ServiceClientCredentials, string, Models.MixedRealityClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="ada5e-115">Инициализирует новый экземпляр класса MixedRealityClient.</span><span class="sxs-lookup"><span data-stu-id="ada5e-115">Initializes a new instance of the MixedRealityClient class.</span></span>
    syntax:
      content: 'new MixedRealityClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.MixedRealityClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: '<span data-ttu-id="ada5e-116">Учетные данные, необходимые для клиента для подключения к Azure.</span><span class="sxs-lookup"><span data-stu-id="ada5e-116">Credentials needed for the client to connect to Azure.</span></span>'
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="ada5e-117">Идентификатор подписки Azure.</span><span class="sxs-lookup"><span data-stu-id="ada5e-117">Azure subscription ID.</span></span>
        - id: options
          type:
            - Models.MixedRealityClientOptions
          description: ''
          optional: true
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-mixedreality.Operations'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ada5e-118">Восстановите LROPoller из предоставленного LROPollState.</span><span class="sxs-lookup"><span data-stu-id="ada5e-118">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="ada5e-119">Этот метод может использоваться для повторного создания LROPoller на другом процессе или компьютере.</span><span class="sxs-lookup"><span data-stu-id="ada5e-119">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ada5e-120">Предоставляет механизм для выполнения запроса, которая будет опрашивать и предоставляют результат.</span><span class="sxs-lookup"><span data-stu-id="ada5e-120">Provides a mechanism to make a request that will poll and provide the final result.</span></span>'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="ada5e-121">Объект запроса</span><span class="sxs-lookup"><span data-stu-id="ada5e-121">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ada5e-122">Отправить первоначальный запрос LRO (длительные операции) и получить обратно LROPoller, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.</span><span class="sxs-lookup"><span data-stu-id="ada5e-122">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="ada5e-123">Аргументы операции.</span><span class="sxs-lookup"><span data-stu-id="ada5e-123">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="ada5e-124">Спецификация для операции.</span><span class="sxs-lookup"><span data-stu-id="ada5e-124">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="ada5e-125">Дополнительные параметры для отправляться при создании запроса.</span><span class="sxs-lookup"><span data-stu-id="ada5e-125">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="ada5e-126">Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.</span><span class="sxs-lookup"><span data-stu-id="ada5e-126">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="ada5e-127">Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.</span><span class="sxs-lookup"><span data-stu-id="ada5e-127">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="ada5e-128">OperationSpec, используемые для заполнения httpRequest.</span><span class="sxs-lookup"><span data-stu-id="ada5e-128">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="ada5e-129">Обратный вызов, вызываемый после получения ответа.</span><span class="sxs-lookup"><span data-stu-id="ada5e-129">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ada5e-130">Отправьте предоставленный httpRequest.</span><span class="sxs-lookup"><span data-stu-id="ada5e-130">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.spatialAnchorsAccounts'
    name: spatialAnchorsAccounts
    fullName: spatialAnchorsAccounts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'spatialAnchorsAccounts: SpatialAnchorsAccounts'
      return:
        type:
          - '@azure/arm-mixedreality.SpatialAnchorsAccounts'
    package: '@azure/arm-mixedreality'
  - uid: '@azure/arm-mixedreality.MixedRealityClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-mixedreality'
references:
  - uid: '@azure/arm-mixedreality.MixedRealityClientContext'
    name: MixedRealityClientContext
    spec.typeScript:
      - name: MixedRealityClientContext
        fullName: MixedRealityClientContext
        uid: '@azure/arm-mixedreality.MixedRealityClientContext'
  - uid: '@azure/arm-mixedreality.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-mixedreality.Operations'
  - uid: '@azure/arm-mixedreality.SpatialAnchorsAccounts'
    name: SpatialAnchorsAccounts
    spec.typeScript:
      - name: SpatialAnchorsAccounts
        fullName: SpatialAnchorsAccounts
        uid: '@azure/arm-mixedreality.SpatialAnchorsAccounts'
  - uid: '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
    name: CheckNameAvailabilityRequest
    spec.typeScript:
      - name: CheckNameAvailabilityRequest
        fullName: CheckNameAvailabilityRequest
        uid: '@azure/arm-mixedreality.CheckNameAvailabilityRequest'
  - uid: ServiceCallback<@azure/arm-mixedreality.CheckNameAvailabilityResponse>
    name: CheckNameAvailabilityResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResponse
        fullName: CheckNameAvailabilityResponse
        uid: '@azure/arm-mixedreality.CheckNameAvailabilityResponse'
      - name: '>'
        fullName: '>'