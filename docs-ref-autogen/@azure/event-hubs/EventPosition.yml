### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    fullName: EventPosition
    children:
      - '@azure/event-hubs.EventPosition.customFilter'
      - '@azure/event-hubs.EventPosition.endOfStream'
      - '@azure/event-hubs.EventPosition.enqueuedTime'
      - '@azure/event-hubs.EventPosition.constructor'
      - '@azure/event-hubs.EventPosition.fromEnd'
      - '@azure/event-hubs.EventPosition.fromEnqueuedTime'
      - '@azure/event-hubs.EventPosition.fromOffset'
      - '@azure/event-hubs.EventPosition.fromSequenceNumber'
      - '@azure/event-hubs.EventPosition.fromStart'
      - '@azure/event-hubs.EventPosition.getExpression'
      - '@azure/event-hubs.EventPosition.isInclusive'
      - '@azure/event-hubs.EventPosition.offset'
      - '@azure/event-hubs.EventPosition.sequenceNumber'
      - '@azure/event-hubs.EventPosition.startOfStream'
      - '@azure/event-hubs.EventPosition.withCustomFilter'
    langs:
      - typeScript
    type: class
    summary: |-
      Представляет параметры можно задать во время создания приемника концентратора событий.
      Определяет позицию @link~ EventData в секции концентратора событий.
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.customFilter'
    name: customFilter
    fullName: customFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Строка} [customFilter] Выражение фильтра, необходимо установить на стороне получателя.'
    optional: true
    syntax:
      content: 'customFilter?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.endOfStream'
    name: endOfStream
    fullName: endOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: 'смещение от какие события будут получены endOfStream {строка}: `"@latest"`.'
    syntax:
      content: 'static endOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.enqueuedTime'
    name: enqueuedTime
    fullName: enqueuedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Дата | номер} [enqueuedTime] Время события в позиции поставлено в очередь. Он может быть неопределенным, если позиция только что создали из порядкового номера или смещения.'
    optional: true
    syntax:
      content: 'enqueuedTime?: Date | number'
      return:
        type:
          - Date | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.constructor'
    name: EventPosition(EventPositionOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventPosition(options?: EventPositionOptions)'
      parameters:
        - id: options
          type:
            - EventPositionOptions
          description: ''
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnd'
    name: fromEnd()
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает позицию окончания потока. Предоставить этой позиции в создании получателя к получению из следующего события доступны в разделе после создания получателя.
    syntax:
      content: static function fromEnd()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnqueuedTime'
    name: fromEnqueuedTime(Date | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает позицию во время заданного поставлено в очередь.
    syntax:
      content: 'static function fromEnqueuedTime(enqueuedTime: Date | number)'
      parameters:
        - id: enqueuedTime
          type:
            - Date | number
          description: Время постановки в очередь. Это значение представляет фактическое время постановки сообщения.
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromOffset'
    name: 'fromOffset(string, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает позицию с указанным смещением.
    syntax:
      content: 'static function fromOffset(offset: string, isInclusive?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - string
          description: |-
            Смещение данных относительно потока разделов концентратора событий.
            Смещение — это маркер или идентификатор события в потоке Центров событий.
            Этот идентификатор уникален внутри раздела потока Центров событий.
        - id: isInclusive
          type:
            - undefined | false | true
          description: 'Значение true, если указанное событие включено. в противном случае возвращается следующее событие. По умолчанию: false.'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromSequenceNumber'
    name: 'fromSequenceNumber(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает заданный порядковый номер позиции.
    syntax:
      content: 'static function fromSequenceNumber(sequenceNumber: number, isInclusive?: undefined | false | true)'
      parameters:
        - id: sequenceNumber
          type:
            - number
          description: Логический порядковый номер события в потоке секции концентратора событий.
        - id: isInclusive
          type:
            - undefined | false | true
          description: 'Значение true, если указанное событие включено. в противном случае возвращается следующее событие. По умолчанию: false.'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromStart'
    name: fromStart()
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает позицию начала потока. Предоставить этой позиции в создании получателя к получению из первого события доступны в разделе.
    syntax:
      content: static function fromStart()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.getExpression'
    name: getExpression()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает выражение (предложение фильтра), необходимо задать в источнике.'
    syntax:
      content: function getExpression()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.isInclusive'
    name: isInclusive
    fullName: isInclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Логическое} isInclusive указывает, было ли текущее событие с указанным смещением, включено или нет. Он применяется только если задается смещение. Значение по умолчанию: false.'
    syntax:
      content: 'isInclusive: boolean'
      return:
        type:
          - boolean
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Строка} [offset] Смещение события в позиции. Он может быть неопределенным, если позиция только что создали из порядковый номер или время в очереди.'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '{number} [sequenceNumber] Порядковый номер события в позиции. Он может быть неопределенным, если позиция только что создали из представляет время в очереди или смещение.'
    optional: true
    syntax:
      content: 'sequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.startOfStream'
    name: startOfStream
    fullName: startOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: 'смещение от какие события будут получены startOfStream {строка}: `"-1"`.'
    syntax:
      content: 'static startOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.withCustomFilter'
    name: withCustomFilter(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создает позиции, основанной на заданный пользовательский фильтр.'
    syntax:
      content: 'static function withCustomFilter(customFilter: string)'
      parameters:
        - id: customFilter
          type:
            - string
          description: |
            Пользовательские критерий фильтра, требующее применения на стороне получателя. Это следует использовать только в том случае, когда один из других методов `fromOffset()`, `fromSequenceNumber()`, `fromEnqueuedTime()` не подходит для вашего сценария.
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'