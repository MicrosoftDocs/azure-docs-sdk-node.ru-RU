### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    fullName: EventPosition
    children:
      - '@azure/event-hubs.EventPosition.customFilter'
      - '@azure/event-hubs.EventPosition.endOfStream'
      - '@azure/event-hubs.EventPosition.enqueuedTime'
      - '@azure/event-hubs.EventPosition.constructor'
      - '@azure/event-hubs.EventPosition.fromEnd'
      - '@azure/event-hubs.EventPosition.fromEnqueuedTime'
      - '@azure/event-hubs.EventPosition.fromOffset'
      - '@azure/event-hubs.EventPosition.fromSequenceNumber'
      - '@azure/event-hubs.EventPosition.fromStart'
      - '@azure/event-hubs.EventPosition.getExpression'
      - '@azure/event-hubs.EventPosition.isInclusive'
      - '@azure/event-hubs.EventPosition.offset'
      - '@azure/event-hubs.EventPosition.sequenceNumber'
      - '@azure/event-hubs.EventPosition.startOfStream'
      - '@azure/event-hubs.EventPosition.withCustomFilter'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="e1d10-101">Представляет параметры можно задать во время создания приемника концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-101">Represents options can be set during the creation of a event hub receiver.</span></span>
      <span data-ttu-id="e1d10-102">Определяет позицию @link~ EventData в секции концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-102">Defines a position of an @link~EventData in the event hub partition.</span></span>
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.customFilter'
    name: customFilter
    fullName: customFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-103">{Строка} [customFilter] Выражение фильтра, необходимо установить на стороне получателя.</span><span class="sxs-lookup"><span data-stu-id="e1d10-103">{string} [customFilter] The custom filter expression that needs to be set on the receiver.</span></span>'
    optional: true
    syntax:
      content: 'customFilter?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.endOfStream'
    name: endOfStream
    fullName: endOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-104">смещение от какие события будут получены endOfStream {строка}: `"@latest"`.</span><span class="sxs-lookup"><span data-stu-id="e1d10-104">{string} endOfStream The offset from which events would be received: `"@latest"`.</span></span>'
    syntax:
      content: 'static endOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.enqueuedTime'
    name: enqueuedTime
    fullName: enqueuedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-105">{Дата | номер} [enqueuedTime] Время события в позиции поставлено в очередь.</span><span class="sxs-lookup"><span data-stu-id="e1d10-105">{Date|number} [enqueuedTime] The enqueued time of the event at the position.</span></span> <span data-ttu-id="e1d10-106">Он может быть неопределенным, если позиция только что создали из порядкового номера или смещения.</span><span class="sxs-lookup"><span data-stu-id="e1d10-106">It can be undefined if the position is just created from a sequence number or an offset.</span></span>'
    optional: true
    syntax:
      content: 'enqueuedTime?: Date | number'
      return:
        type:
          - Date | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.constructor'
    name: EventPosition(EventPositionOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new EventPosition(options?: EventPositionOptions)'
      parameters:
        - id: options
          type:
            - EventPositionOptions
          description: ''
          optional: true
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnd'
    name: fromEnd()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e1d10-107">Возвращает позицию окончания потока.</span><span class="sxs-lookup"><span data-stu-id="e1d10-107">Returns the position for the end of a stream.</span></span> <span data-ttu-id="e1d10-108">Предоставить этой позиции в создании получателя к получению из следующего события доступны в разделе после создания получателя.</span><span class="sxs-lookup"><span data-stu-id="e1d10-108">Provide this position in receiver creation to start receiving from the next available event in the partition after the receiver is created.</span></span>
    syntax:
      content: static function fromEnd()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromEnqueuedTime'
    name: fromEnqueuedTime(Date | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e1d10-109">Создает позицию во время заданного поставлено в очередь.</span><span class="sxs-lookup"><span data-stu-id="e1d10-109">Creates a position at the given enqueued time.</span></span>
    syntax:
      content: 'static function fromEnqueuedTime(enqueuedTime: Date | number)'
      parameters:
        - id: enqueuedTime
          type:
            - Date | number
          description: <span data-ttu-id="e1d10-110">Время постановки в очередь.</span><span class="sxs-lookup"><span data-stu-id="e1d10-110">The enqueue time.</span></span> <span data-ttu-id="e1d10-111">Это значение представляет фактическое время постановки сообщения.</span><span class="sxs-lookup"><span data-stu-id="e1d10-111">This value represents the actual time of enqueuing the message.</span></span>
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromOffset'
    name: 'fromOffset(string, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e1d10-112">Создает позицию с указанным смещением.</span><span class="sxs-lookup"><span data-stu-id="e1d10-112">Creates a position at the given offset.</span></span>
    syntax:
      content: 'static function fromOffset(offset: string, isInclusive?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - string
          description: |-
            <span data-ttu-id="e1d10-113">Смещение данных относительно потока разделов концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-113">The offset of the data relative to the Event Hub partition stream.</span></span>
            <span data-ttu-id="e1d10-114">Смещение — это маркер или идентификатор события в потоке Центров событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-114">The offset is a marker or identifier for an event within the Event Hubs stream.</span></span>
            <span data-ttu-id="e1d10-115">Этот идентификатор уникален внутри раздела потока Центров событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-115">The identifier is unique within a partition of the Event Hubs stream.</span></span>
        - id: isInclusive
          type:
            - undefined | false | true
          description: '<span data-ttu-id="e1d10-116">Значение true, если указанное событие включено. в противном случае возвращается следующее событие.</span><span class="sxs-lookup"><span data-stu-id="e1d10-116">If true, the specified event is included; otherwise the next event is returned.</span></span> <span data-ttu-id="e1d10-117">По умолчанию: false.</span><span class="sxs-lookup"><span data-stu-id="e1d10-117">Default: false.</span></span>'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromSequenceNumber'
    name: 'fromSequenceNumber(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e1d10-118">Создает заданный порядковый номер позиции.</span><span class="sxs-lookup"><span data-stu-id="e1d10-118">Creates a position at the given sequence number.</span></span>
    syntax:
      content: 'static function fromSequenceNumber(sequenceNumber: number, isInclusive?: undefined | false | true)'
      parameters:
        - id: sequenceNumber
          type:
            - number
          description: <span data-ttu-id="e1d10-119">Логический порядковый номер события в потоке секции концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="e1d10-119">The logical sequence number of the event within the partition stream of the Event Hub.</span></span>
        - id: isInclusive
          type:
            - undefined | false | true
          description: '<span data-ttu-id="e1d10-120">Значение true, если указанное событие включено. в противном случае возвращается следующее событие.</span><span class="sxs-lookup"><span data-stu-id="e1d10-120">If true, the specified event is included; otherwise the next event is returned.</span></span> <span data-ttu-id="e1d10-121">По умолчанию: false.</span><span class="sxs-lookup"><span data-stu-id="e1d10-121">Default false.</span></span>'
          optional: true
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.fromStart'
    name: fromStart()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e1d10-122">Возвращает позицию начала потока.</span><span class="sxs-lookup"><span data-stu-id="e1d10-122">Returns the position for the start of a stream.</span></span> <span data-ttu-id="e1d10-123">Предоставить этой позиции в создании получателя к получению из первого события доступны в разделе.</span><span class="sxs-lookup"><span data-stu-id="e1d10-123">Provide this position in receiver creation to start receiving from the first available event in the partition.</span></span>
    syntax:
      content: static function fromStart()
      parameters: []
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.getExpression'
    name: getExpression()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e1d10-124">Возвращает выражение (предложение фильтра), необходимо задать в источнике.</span><span class="sxs-lookup"><span data-stu-id="e1d10-124">Gets the expression (filter clause) that needs to be set on the source.</span></span>'
    syntax:
      content: function getExpression()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.isInclusive'
    name: isInclusive
    fullName: isInclusive
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-125">{Логическое} isInclusive указывает, было ли текущее событие с указанным смещением, включено или нет.</span><span class="sxs-lookup"><span data-stu-id="e1d10-125">{boolean} isInclusive Indicates if the current event at the specified offset is included or not.</span></span> <span data-ttu-id="e1d10-126">Он применяется только если задается смещение.</span><span class="sxs-lookup"><span data-stu-id="e1d10-126">It is only applicable if offset is set.</span></span> <span data-ttu-id="e1d10-127">Значение по умолчанию: false.</span><span class="sxs-lookup"><span data-stu-id="e1d10-127">Default value: false.</span></span>'
    syntax:
      content: 'isInclusive: boolean'
      return:
        type:
          - boolean
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-128">{Строка} [offset] Смещение события в позиции.</span><span class="sxs-lookup"><span data-stu-id="e1d10-128">{string} [offset] The offset of the event at the position.</span></span> <span data-ttu-id="e1d10-129">Он может быть неопределенным, если позиция только что создали из порядковый номер или время в очереди.</span><span class="sxs-lookup"><span data-stu-id="e1d10-129">It can be undefined if the position is just created from a sequence number or an enqueued time.</span></span>'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-130">{number} [sequenceNumber] Порядковый номер события в позиции.</span><span class="sxs-lookup"><span data-stu-id="e1d10-130">{number} [sequenceNumber] The sequence number of the event at the position.</span></span> <span data-ttu-id="e1d10-131">Он может быть неопределенным, если позиция только что создали из представляет время в очереди или смещение.</span><span class="sxs-lookup"><span data-stu-id="e1d10-131">It can be undefined if the position is just created from an enqueued time or an offset.</span></span>'
    optional: true
    syntax:
      content: 'sequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.startOfStream'
    name: startOfStream
    fullName: startOfStream
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="e1d10-132">смещение от какие события будут получены startOfStream {строка}: `"-1"`.</span><span class="sxs-lookup"><span data-stu-id="e1d10-132">{string} startOfStream The offset from which events would be received: `"-1"`.</span></span>'
    syntax:
      content: 'static startOfStream: string'
      return:
        type:
          - string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventPosition.withCustomFilter'
    name: withCustomFilter(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="e1d10-133">Создает позиции, основанной на заданный пользовательский фильтр.</span><span class="sxs-lookup"><span data-stu-id="e1d10-133">Creates a position based on the given custom filter.</span></span>'
    syntax:
      content: 'static function withCustomFilter(customFilter: string)'
      parameters:
        - id: customFilter
          type:
            - string
          description: |
            <span data-ttu-id="e1d10-134">Пользовательские критерий фильтра, требующее применения на стороне получателя.</span><span class="sxs-lookup"><span data-stu-id="e1d10-134">The cutom filter expression that needs to be applied on the receiver.</span></span> <span data-ttu-id="e1d10-135">Это следует использовать только в том случае, когда один из других методов `fromOffset()`, `fromSequenceNumber()`, `fromEnqueuedTime()` не подходит для вашего сценария.</span><span class="sxs-lookup"><span data-stu-id="e1d10-135">This should be used only when one of the other methods `fromOffset()`, `fromSequenceNumber()`, `fromEnqueuedTime()` is not applicable for your scenario.</span></span>
      return:
        type:
          - '@azure/event-hubs.EventPosition'
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventPosition'
    name: EventPosition
    spec.typeScript:
      - name: EventPosition
        fullName: EventPosition
        uid: '@azure/event-hubs.EventPosition'