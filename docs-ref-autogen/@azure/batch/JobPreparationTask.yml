### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.JobPreparationTask'
    name: JobPreparationTask
    fullName: JobPreparationTask
    children:
      - '@azure/batch.JobPreparationTask.commandLine'
      - '@azure/batch.JobPreparationTask.constraints'
      - '@azure/batch.JobPreparationTask.containerSettings'
      - '@azure/batch.JobPreparationTask.environmentSettings'
      - '@azure/batch.JobPreparationTask.id'
      - '@azure/batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess'
      - '@azure/batch.JobPreparationTask.resourceFiles'
      - '@azure/batch.JobPreparationTask.userIdentity'
      - '@azure/batch.JobPreparationTask.waitForSuccess'
    langs:
      - typeScript
    type: interface
    summary: |-
      Задание подготовки можно использовать для подготовки вычислительных узлов для выполнения задач для задания. Действия, обычно осуществляются в подготовки задания, включают в себя: Загрузка общие файлы ресурсов, используемый всеми задачами в задании. Эту задачу можно загрузить эти общие файлы ресурсов, к общей папке на вычислительном узле. (AZ_BATCH_NODE_ROOT_DIR\shared), или запуск локальной службы на вычислительном узле, чтобы все задачи из этого задания может взаимодействовать с ним. Если подготовки задания задач завершается ошибкой (то есть истощает подсчета его повторных попыток перед завершением работы с кодом завершения 0), пакет не запустится в задачи этого задания на вычислительном узле. Узел остается не может использоваться для выполнения задач этого задания до его повторном создании образа. Узел остается активным и может использоваться для других заданий.
      Задача подготовки задания выполняется несколько раз на одном вычислительном узле. Таким образом следует писать задачу подготовки задания для обработки повторного выполнения. Если вычислительный узел перезагружается, задачу подготовки задания запускается снова на узле перед планированием других задач задания, если rerunOnNodeRebootAfterSuccess имеет значение true, или если задача подготовки задания не была завершена ранее. При повторном создании образа вычислительного узла, задачи подготовки задания выполняется еще раз, перед планированием любой задачи задания. Пакет повторит задачи, когда операция восстановления запускается на вычислительном узле. Примеры операций восстановления причинами (но не ограничиваются) при перезагрузке неработоспособное вычислительном узле или вычислительного узла не отображается из-за сбоя узла. Повторно из-за восстановления операций независимы и не учитываются для maxTaskRetryCount.
      Даже если maxTaskRetryCount равно 0, может возникнуть внутренних повторных попыток из-за операции восстановления.
      По этой причине все задачи должны быть идемпотентными. Это означает, что задачи должны допускать прервана и перезапущена без возникновения любые повреждения или повторяющиеся данные. Лучшие практики для долго выполняющихся задач является использование определенные виды создания контрольных точек.
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Командная строка задачи подготовки задания. В командной строке не выполняются в оболочке и таким образом, не может воспользоваться преимуществами функции оболочки, например расширение переменных среды. Если вы хотите воспользоваться преимуществами таких функций, необходимо вызвать оболочку в командной строке, например с помощью «cmd /c MyCommand» в Windows или «/ bin/sh - c MyCommand» в Linux. Если командной строке ссылается на пути к файлам, она должна использовать относительный путь (по отношению к рабочему каталогу задачи), или пакетное указанной переменной среды (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.constraints'
    name: constraints
    fullName: constraints
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Ограничения, применяемые к задачу подготовки задания.'
    optional: true
    syntax:
      content: 'constraints?: TaskConstraints'
      return:
        type:
          - '@azure/batch.TaskConstraints'
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Параметры для контейнера, под которой выполняется задача подготовки задания. Если этот параметр указан, все каталоги рекурсивно ниже AZ_BATCH_NODE_ROOT_DIR (корень каталогов пакетной службы Azure на узле) сопоставляются в контейнере, все переменные среды задач сопоставляются в контейнере и Командная строка задачи выполняется в контейнере.'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: Список параметров переменных среды для задач подготовки задания.
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Строка, однозначно определяющее эту задачу в рамках задания. Идентификатор может содержать любое сочетание буквенно-цифровые символы, включая дефисы и знаки подчеркивания и не может содержать более 64 символов. Если это свойство не задано, пакетная служба назначает значение по умолчанию «jobpreparation». Другие задачи в задании может иметь один и тот же идентификатор задачи подготовки задания. Если вы пытаетесь передать задачу с одинаковым идентификатором, пакетная служба отклоняет запрос с кодом ошибки TaskIdSameAsJobPreparationTask; При вызове REST API напрямую, код состояния HTTP: 409 (конфликт).'
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.rerunOnNodeRebootAfterSuccess'
    name: rerunOnNodeRebootAfterSuccess
    fullName: rerunOnNodeRebootAfterSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Ли пакетная служба следует повторно выполнять задачу подготовки задания, после перезагрузки на вычислительном узле.
      Задача подготовки задания всегда будет запускаться повторно при повторном создании образа вычислительного узла, или если не была завершена задача подготовки задания (например из-за перезагрузки во время выполнения задачи). Таким образом следует всегда писать задачу подготовки задания должны быть идемпотентными и ведут себя неправильно, если выполнить несколько раз. По умолчанию используется значение true.
    optional: true
    syntax:
      content: 'rerunOnNodeRebootAfterSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Список файлов, которые пакетная служба скачает вычислительный узел перед запуском командной строки. Файлы, перечисленные в этом элементе, находятся в рабочем каталоге задачи.
      Максимальный размер для список файлов ресурсов установлен.  При превышении максимального размера, запрос завершится ошибкой, и код ошибки ответа будет RequestEntityTooLarge. В этом случае коллекция ResourceFiles необходимо уменьшить размер. Это можно сделать с помощью ZIP-файлы, пакеты приложений или контейнеров Docker.
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Удостоверение пользователя, под которой выполняется задача подготовки задания. Если не указано, задача выполняется как обычных пользователей, уникальные для задач на узлах Windows или пользователь без прав администратора уникальный пул на узлах Linux.'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
    package: '@azure/batch'
  - uid: '@azure/batch.JobPreparationTask.waitForSuccess'
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Ли пакетная служба следует подождать задачу подготовки задания, для успешного завершения перед планированием других задач задания на вычислительном узле. Задача подготовки задания успешно завершена, если он выходит с кодом завершения 0. Если значение true и задачу подготовки задания происходит сбой на вычислительном узле, пакетная служба повторяет задачу подготовки задания до его максимальное число повторных попыток (как указано в элементе ограничений). Если задача по-прежнему не завершено после всех попыток, то пакетная служба не будем планировать задачи задания на вычислительном узле. Вычислительный узел останется активной и право запускать задачами других заданий. Если значение равно false, пакетная служба не будет ожидать завершения задачи подготовки задания. В этом случае другие задачи задания может начать выполнение на вычислительном узле, пока задачу подготовки задания по-прежнему работает; и даже в случае сбоя задачи подготовки задания, новые задачи будет планироваться на узле. По умолчанию используется значение true.'
    optional: true
    syntax:
      content: 'waitForSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskConstraints'
    name: TaskConstraints
    spec.typeScript:
      - name: TaskConstraints
        fullName: TaskConstraints
        uid: '@azure/batch.TaskConstraints'
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'