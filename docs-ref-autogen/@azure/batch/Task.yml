### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.Task'
    name: Task
    fullName: Task
    children:
      - '@azure/batch.Task.add'
      - '@azure/batch.Task.add_1'
      - '@azure/batch.Task.add_2'
      - '@azure/batch.Task.addCollection'
      - '@azure/batch.Task.addCollection_1'
      - '@azure/batch.Task.addCollection_2'
      - '@azure/batch.Task.deleteMethod'
      - '@azure/batch.Task.deleteMethod_1'
      - '@azure/batch.Task.deleteMethod_2'
      - '@azure/batch.Task.get'
      - '@azure/batch.Task.get_1'
      - '@azure/batch.Task.get_2'
      - '@azure/batch.Task.list'
      - '@azure/batch.Task.list_1'
      - '@azure/batch.Task.list_2'
      - '@azure/batch.Task.listNext'
      - '@azure/batch.Task.listNext_1'
      - '@azure/batch.Task.listNext_2'
      - '@azure/batch.Task.listSubtasks'
      - '@azure/batch.Task.listSubtasks_1'
      - '@azure/batch.Task.listSubtasks_2'
      - '@azure/batch.Task.reactivate'
      - '@azure/batch.Task.reactivate_1'
      - '@azure/batch.Task.reactivate_2'
      - '@azure/batch.Task.constructor'
      - '@azure/batch.Task.terminate'
      - '@azure/batch.Task.terminate_1'
      - '@azure/batch.Task.terminate_2'
      - '@azure/batch.Task.update'
      - '@azure/batch.Task.update_1'
      - '@azure/batch.Task.update_2'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="a7346-101">Класс, представляющий задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-101">Class representing a Task.</span></span>'
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add'
    name: 'add(string, TaskAddParameter, Models.TaskAddOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-102">Максимальное время существования задачи от сложения до завершения составляет 180 дней.</span><span class="sxs-lookup"><span data-stu-id="a7346-102">The maximum lifetime of a task from addition to completion is 180 days.</span></span> <span data-ttu-id="a7346-103">Если задача не была завершена в течение 180 дней после добавления, оно будет завершено, пакетная служба и влево в то состояние, существовавшее в этот момент.</span><span class="sxs-lookup"><span data-stu-id="a7346-103">If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</span></span>'
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, options?: Models.TaskAddOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-104">Идентификатор задания, к которому будет добавляться задача.</span><span class="sxs-lookup"><span data-stu-id="a7346-104">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="a7346-105">Задача для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-105">The task to be added.</span></span>
        - id: options
          type:
            - Models.TaskAddOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add_1'
    name: 'add(string, TaskAddParameter, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-106">Идентификатор задания, к которому будет добавляться задача.</span><span class="sxs-lookup"><span data-stu-id="a7346-106">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="a7346-107">Задача для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-107">The task to be added.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-108">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-108">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.add_2'
    name: 'add(string, TaskAddParameter, TaskAddOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function add(jobId: string, task: TaskAddParameter, options: TaskAddOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-109">Идентификатор задания, к которому будет добавляться задача.</span><span class="sxs-lookup"><span data-stu-id="a7346-109">The ID of the job to which the task is to be added.</span></span>'
        - id: task
          type:
            - '@azure/batch.TaskAddParameter'
          description: <span data-ttu-id="a7346-110">Задача для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-110">The task to be added.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskAddOptionalParams'
          description: <span data-ttu-id="a7346-111">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-112">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection'
    name: 'addCollection(string, TaskAddParameter[], Models.TaskAddCollectionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-113">Обратите внимание, что каждая задача должна иметь уникальный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="a7346-113">Note that each task must have a unique ID.</span></span> <span data-ttu-id="a7346-114">Пакетная служба не могут возвращать результаты для каждой задачи в том же порядке, в котором задачи были отправлены в данном запросе.</span><span class="sxs-lookup"><span data-stu-id="a7346-114">The Batch service may not return the results for each task in the same order the tasks were submitted in this request.</span></span> <span data-ttu-id="a7346-115">Если время ожидания сервера истекло или соединение закрыто во время запроса, запрос может быть составной, частично или полностью будет обработано, или вообще не.</span><span class="sxs-lookup"><span data-stu-id="a7346-115">If the server times out or the connection is closed during the request, the request may have been partially or fully processed, or not at all.</span></span> <span data-ttu-id="a7346-116">В таких случаях пользователь должен повторно выдать запрос.</span><span class="sxs-lookup"><span data-stu-id="a7346-116">In such cases, the user should re-issue the request.</span></span> <span data-ttu-id="a7346-117">Обратите внимание, что пользователь должен правильно обрабатывать сбои при повторной выдаче запроса.</span><span class="sxs-lookup"><span data-stu-id="a7346-117">Note that it is up to the user to correctly handle failures when re-issuing a request.</span></span> <span data-ttu-id="a7346-118">Например следует использовать те же идентификаторы задач во время повторной попытки, таким образом, если предыдущая операция завершилась успешно, повторная попытка будет не создала неожиданных дополнительных задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-118">For example, you should use the same task IDs during a retry so that if the prior operation succeeded, the retry will not create extra tasks unexpectedly.</span></span> <span data-ttu-id="a7346-119">Если ответ содержит все задачи, которые не удалось добавить, клиент может повторно отправить запрос.</span><span class="sxs-lookup"><span data-stu-id="a7346-119">If the response contains any tasks which failed to add, a client can retry the request.</span></span> <span data-ttu-id="a7346-120">Повторная попытка это наиболее эффективный повторной отправки только задачи, которые не удалось добавить и пропустите задачи, которые были успешно добавлены при первой попытке.</span><span class="sxs-lookup"><span data-stu-id="a7346-120">In a retry, it is most efficient to resubmit only tasks that failed to add, and to omit tasks that were successfully added on the first attempt.</span></span> <span data-ttu-id="a7346-121">Максимальное время существования задачи от сложения до завершения составляет 180 дней.</span><span class="sxs-lookup"><span data-stu-id="a7346-121">The maximum lifetime of a task from addition to completion is 180 days.</span></span> <span data-ttu-id="a7346-122">Если задача не была завершена в течение 180 дней после добавления, оно будет завершено, пакетная служба и влево в то состояние, существовавшее в этот момент.</span><span class="sxs-lookup"><span data-stu-id="a7346-122">If a task has not completed within 180 days of being added it will be terminated by the Batch service and left in whatever state it was in at that time.</span></span>'
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], options?: Models.TaskAddCollectionOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-123">Идентификатор задания, к которому будет добавляться в коллекцию задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-123">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="a7346-124">Коллекция задач для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-124">The collection of tasks to add.</span></span> <span data-ttu-id="a7346-125">Максимальное число задач — 100.</span><span class="sxs-lookup"><span data-stu-id="a7346-125">The maximum count of tasks is 100.</span></span> <span data-ttu-id="a7346-126">Общий размер сериализованного этой коллекции должен быть меньше 1 МБ.</span><span class="sxs-lookup"><span data-stu-id="a7346-126">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="a7346-127">Если значение больше 1 МБ (например, если каждая задача имеет 100 в файлы ресурсов или переменных среды), запрос завершится ошибкой с кодом «RequestBodyTooLarge» и следует повторить попытку с меньшим числом задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-127">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: options
          type:
            - Models.TaskAddCollectionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection_1'
    name: 'addCollection(string, TaskAddParameter[], ServiceCallback<TaskAddCollectionResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], callback: ServiceCallback<TaskAddCollectionResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-128">Идентификатор задания, к которому будет добавляться в коллекцию задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-128">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="a7346-129">Коллекция задач для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-129">The collection of tasks to add.</span></span> <span data-ttu-id="a7346-130">Максимальное число задач — 100.</span><span class="sxs-lookup"><span data-stu-id="a7346-130">The maximum count of tasks is 100.</span></span> <span data-ttu-id="a7346-131">Общий размер сериализованного этой коллекции должен быть меньше 1 МБ.</span><span class="sxs-lookup"><span data-stu-id="a7346-131">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="a7346-132">Если значение больше 1 МБ (например, если каждая задача имеет 100 в файлы ресурсов или переменных среды), запрос завершится ошибкой с кодом «RequestBodyTooLarge» и следует повторить попытку с меньшим числом задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-132">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskAddCollectionResult>
          description: |
            <span data-ttu-id="a7346-133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-133">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.addCollection_2'
    name: 'addCollection(string, TaskAddParameter[], TaskAddCollectionOptionalParams, ServiceCallback<TaskAddCollectionResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addCollection(jobId: string, value: TaskAddParameter[], options: TaskAddCollectionOptionalParams, callback: ServiceCallback<TaskAddCollectionResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-134">Идентификатор задания, к которому будет добавляться в коллекцию задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-134">The ID of the job to which the task collection is to be added.</span></span>'
        - id: value
          type:
            - '@azure/batch.TaskAddParameter[]'
          description: '<span data-ttu-id="a7346-135">Коллекция задач для добавления.</span><span class="sxs-lookup"><span data-stu-id="a7346-135">The collection of tasks to add.</span></span> <span data-ttu-id="a7346-136">Максимальное число задач — 100.</span><span class="sxs-lookup"><span data-stu-id="a7346-136">The maximum count of tasks is 100.</span></span> <span data-ttu-id="a7346-137">Общий размер сериализованного этой коллекции должен быть меньше 1 МБ.</span><span class="sxs-lookup"><span data-stu-id="a7346-137">The total serialized size of this collection must be less than 1MB.</span></span> <span data-ttu-id="a7346-138">Если значение больше 1 МБ (например, если каждая задача имеет 100 в файлы ресурсов или переменных среды), запрос завершится ошибкой с кодом «RequestBodyTooLarge» и следует повторить попытку с меньшим числом задач.</span><span class="sxs-lookup"><span data-stu-id="a7346-138">If it is greater than 1MB (for example if each task has 100''s of resource files or environment variables), the request will fail with code ''RequestBodyTooLarge'' and should be retried again with fewer tasks.</span></span>'
        - id: options
          type:
            - '@azure/batch.TaskAddCollectionOptionalParams'
          description: <span data-ttu-id="a7346-139">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-139">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.TaskAddCollectionResult>
          description: |
            <span data-ttu-id="a7346-140">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-140">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskAddCollectionResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod'
    name: 'deleteMethod(string, string, Models.TaskDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-141">При удалении задачи, все файлы в каталоге на вычислительном узле где она выполнялась, также удаляются (независимо от того, время хранения).</span><span class="sxs-lookup"><span data-stu-id="a7346-141">When a task is deleted, all of the files in its directory on the compute node where it ran are also deleted (regardless of the retention time).</span></span> <span data-ttu-id="a7346-142">Для многоэкземплярных задач, задача операция delete применяется синхронно к основной задаче; подзадачи и их файлы удаляются асинхронно в фоновом режиме.</span><span class="sxs-lookup"><span data-stu-id="a7346-142">For multi-instance tasks, the delete task operation applies synchronously to the primary task; subtasks and their files are then deleted asynchronously in the background.</span></span>'
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, options?: Models.TaskDeleteMethodOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-143">Идентификатор задания, из которой нужно удалить задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-143">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-144">Идентификатор задачи, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="a7346-144">The ID of the task to delete.</span></span>'
        - id: options
          type:
            - Models.TaskDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-145">Идентификатор задания, из которой нужно удалить задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-145">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-146">Идентификатор задачи, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="a7346-146">The ID of the task to delete.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-147">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-147">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.deleteMethod_2'
    name: 'deleteMethod(string, string, TaskDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(jobId: string, taskId: string, options: TaskDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-148">Идентификатор задания, из которой нужно удалить задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-148">The ID of the job from which to delete the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-149">Идентификатор задачи, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="a7346-149">The ID of the task to delete.</span></span>'
        - id: options
          type:
            - '@azure/batch.TaskDeleteMethodOptionalParams'
          description: <span data-ttu-id="a7346-150">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-150">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-151">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-151">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskDeleteResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get'
    name: 'get(string, string, Models.TaskGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-152">Для задач с несколькими экземплярами, сведения, такие как affinityId, executionInfo и nodeInfo относятся к основной задаче.</span><span class="sxs-lookup"><span data-stu-id="a7346-152">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="a7346-153">Используйте список подзадач API для получения сведений о подзадачах.</span><span class="sxs-lookup"><span data-stu-id="a7346-153">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function get(jobId: string, taskId: string, options?: Models.TaskGetOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-154">Идентификатор задания, который содержит задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-154">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-155">Идентификатор задачи, который требуется получить сведения.</span><span class="sxs-lookup"><span data-stu-id="a7346-155">The ID of the task to get information about.</span></span>'
        - id: options
          type:
            - Models.TaskGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get_1'
    name: 'get(string, string, ServiceCallback<CloudTask>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, taskId: string, callback: ServiceCallback<CloudTask>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-156">Идентификатор задания, который содержит задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-156">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-157">Идентификатор задачи, который требуется получить сведения.</span><span class="sxs-lookup"><span data-stu-id="a7346-157">The ID of the task to get information about.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTask>
          description: |
            <span data-ttu-id="a7346-158">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-158">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.get_2'
    name: 'get(string, string, TaskGetOptionalParams, ServiceCallback<CloudTask>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(jobId: string, taskId: string, options: TaskGetOptionalParams, callback: ServiceCallback<CloudTask>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-159">Идентификатор задания, который содержит задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-159">The ID of the job that contains the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-160">Идентификатор задачи, который требуется получить сведения.</span><span class="sxs-lookup"><span data-stu-id="a7346-160">The ID of the task to get information about.</span></span>'
        - id: options
          type:
            - '@azure/batch.TaskGetOptionalParams'
          description: <span data-ttu-id="a7346-161">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-161">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTask>
          description: |
            <span data-ttu-id="a7346-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-162">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskGetResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list'
    name: 'list(string, Models.TaskListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-163">Для задач с несколькими экземплярами, сведения, такие как affinityId, executionInfo и nodeInfo относятся к основной задаче.</span><span class="sxs-lookup"><span data-stu-id="a7346-163">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="a7346-164">Используйте список подзадач API для получения сведений о подзадачах.</span><span class="sxs-lookup"><span data-stu-id="a7346-164">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function list(jobId: string, options?: Models.TaskListOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-165">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-165">The ID of the job.</span></span>
        - id: options
          type:
            - Models.TaskListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list_1'
    name: 'list(string, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(jobId: string, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-166">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-166">The ID of the job.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="a7346-167">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-167">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.list_2'
    name: 'list(string, TaskListOptionalParams, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(jobId: string, options: TaskListOptionalParams, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-168">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-168">The ID of the job.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListOptionalParams'
          description: <span data-ttu-id="a7346-169">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-169">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="a7346-170">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-170">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext'
    name: 'listNext(string, Models.TaskListNextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-171">Для задач с несколькими экземплярами, сведения, такие как affinityId, executionInfo и nodeInfo относятся к основной задаче.</span><span class="sxs-lookup"><span data-stu-id="a7346-171">For multi-instance tasks, information such as affinityId, executionInfo and nodeInfo refer to the primary task.</span></span> <span data-ttu-id="a7346-172">Используйте список подзадач API для получения сведений о подзадачах.</span><span class="sxs-lookup"><span data-stu-id="a7346-172">Use the list subtasks API to retrieve information about subtasks.</span></span>'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Models.TaskListNextOptionalParams)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="a7346-173">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="a7346-173">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - Models.TaskListNextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext_1'
    name: 'listNext(string, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="a7346-174">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="a7346-174">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="a7346-175">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-175">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listNext_2'
    name: 'listNext(string, TaskListNextOptionalParams, ServiceCallback<CloudTaskListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: TaskListNextOptionalParams, callback: ServiceCallback<CloudTaskListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="a7346-176">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="a7346-176">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListNextOptionalParams'
          description: <span data-ttu-id="a7346-177">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListResult>
          description: |
            <span data-ttu-id="a7346-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-178">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks'
    name: 'listSubtasks(string, string, Models.TaskListSubtasksOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-179">Если задача не задачи с несколькими экземплярами, то возвращается пустая коллекция.</span><span class="sxs-lookup"><span data-stu-id="a7346-179">If the task is not a multi-instance task then this returns an empty collection.</span></span>'
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, options?: Models.TaskListSubtasksOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-180">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-180">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-181">Идентификатор задачи.</span><span class="sxs-lookup"><span data-stu-id="a7346-181">The ID of the task.</span></span>
        - id: options
          type:
            - Models.TaskListSubtasksOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks_1'
    name: 'listSubtasks(string, string, ServiceCallback<CloudTaskListSubtasksResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, callback: ServiceCallback<CloudTaskListSubtasksResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-182">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-182">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-183">Идентификатор задачи.</span><span class="sxs-lookup"><span data-stu-id="a7346-183">The ID of the task.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
          description: |
            <span data-ttu-id="a7346-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-184">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.listSubtasks_2'
    name: 'listSubtasks(string, string, TaskListSubtasksOptionalParams, ServiceCallback<CloudTaskListSubtasksResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSubtasks(jobId: string, taskId: string, options: TaskListSubtasksOptionalParams, callback: ServiceCallback<CloudTaskListSubtasksResult>)'
      parameters:
        - id: jobId
          type:
            - string
          description: <span data-ttu-id="a7346-185">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-185">The ID of the job.</span></span>
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-186">Идентификатор задачи.</span><span class="sxs-lookup"><span data-stu-id="a7346-186">The ID of the task.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskListSubtasksOptionalParams'
          description: <span data-ttu-id="a7346-187">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-187">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
          description: |
            <span data-ttu-id="a7346-188">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-188">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskListSubtasksResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate'
    name: 'reactivate(string, string, Models.TaskReactivateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-189">Повторная активация делает задача может быть выполнена повторная попытка установки до его максимальное число повторных попыток.</span><span class="sxs-lookup"><span data-stu-id="a7346-189">Reactivation makes a task eligible to be retried again up to its maximum retry count.</span></span> <span data-ttu-id="a7346-190">Состояние задания изменяется на active.</span><span class="sxs-lookup"><span data-stu-id="a7346-190">The task''s state is changed to active.</span></span> <span data-ttu-id="a7346-191">Как задача больше не находится в завершенном состоянии, все предыдущие сведения кода и сбой выхода больше недоступен после повторной активации.</span><span class="sxs-lookup"><span data-stu-id="a7346-191">As the task is no longer in the completed state, any previous exit code or failure information is no longer available after reactivation.</span></span> <span data-ttu-id="a7346-192">Каждый раз, когда задача повторно, его число повторных попыток сбрасывается до 0.</span><span class="sxs-lookup"><span data-stu-id="a7346-192">Each time a task is reactivated, its retry count is reset to 0.</span></span> <span data-ttu-id="a7346-193">Повторная активация завершится ошибкой для задач, не завершены или, ранее выполнена успешно (с кодом выхода 0).</span><span class="sxs-lookup"><span data-stu-id="a7346-193">Reactivation will fail for tasks that are not completed or that previously completed successfully (with an exit code of 0).</span></span> <span data-ttu-id="a7346-194">Кроме того он завершится ошибкой, если задание завершено (или прерывание или удаление).</span><span class="sxs-lookup"><span data-stu-id="a7346-194">Additionally, it will fail if the job has completed (or is terminating or deleting).</span></span>'
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, options?: Models.TaskReactivateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-195">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-195">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-196">Идентификатор задачи, чтобы повторно активировать.</span><span class="sxs-lookup"><span data-stu-id="a7346-196">The ID of the task to reactivate.</span></span>'
        - id: options
          type:
            - Models.TaskReactivateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate_1'
    name: 'reactivate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-197">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-197">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-198">Идентификатор задачи, чтобы повторно активировать.</span><span class="sxs-lookup"><span data-stu-id="a7346-198">The ID of the task to reactivate.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-199">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-199">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.reactivate_2'
    name: 'reactivate(string, string, TaskReactivateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reactivate(jobId: string, taskId: string, options: TaskReactivateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-200">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-200">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: '<span data-ttu-id="a7346-201">Идентификатор задачи, чтобы повторно активировать.</span><span class="sxs-lookup"><span data-stu-id="a7346-201">The ID of the task to reactivate.</span></span>'
        - id: options
          type:
            - '@azure/batch.TaskReactivateOptionalParams'
          description: <span data-ttu-id="a7346-202">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-202">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-203">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskReactivateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.constructor'
    name: Task(BatchServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="a7346-204">Создание задачи.</span><span class="sxs-lookup"><span data-stu-id="a7346-204">Create a Task.</span></span>
    syntax:
      content: 'new Task(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/batch.BatchServiceClientContext'
          description: |
            <span data-ttu-id="a7346-205">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="a7346-205">Reference to the service client.</span></span>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate'
    name: 'terminate(string, string, Models.TaskTerminateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="a7346-206">Когда задача была завершена, он переходит в завершенное состояние.</span><span class="sxs-lookup"><span data-stu-id="a7346-206">When the task has been terminated, it moves to the completed state.</span></span> <span data-ttu-id="a7346-207">Для многоэкземплярных задач завершить выполнение задачи применяется операция синхронно к основной задаче; подзадачи то завершен асинхронно в фоновом режиме.</span><span class="sxs-lookup"><span data-stu-id="a7346-207">For multi-instance tasks, the terminate task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background.</span></span>'
    syntax:
      content: 'function terminate(jobId: string, taskId: string, options?: Models.TaskTerminateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-208">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-208">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-209">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-209">The ID of the task to terminate.</span></span>
        - id: options
          type:
            - Models.TaskTerminateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate_1'
    name: 'terminate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-210">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-210">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-211">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-211">The ID of the task to terminate.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-212">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-212">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.terminate_2'
    name: 'terminate(string, string, TaskTerminateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function terminate(jobId: string, taskId: string, options: TaskTerminateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-213">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-213">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-214">Идентификатор задания.</span><span class="sxs-lookup"><span data-stu-id="a7346-214">The ID of the task to terminate.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskTerminateOptionalParams'
          description: <span data-ttu-id="a7346-215">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-215">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-216">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-216">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskTerminateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update'
    name: 'update(string, string, Models.TaskUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="a7346-217">Обновляет свойства указанной задачи.</span><span class="sxs-lookup"><span data-stu-id="a7346-217">Updates the properties of the specified task.</span></span>
    syntax:
      content: 'function update(jobId: string, taskId: string, options?: Models.TaskUpdateOptionalParams)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-218">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-218">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-219">Идентификатор задачи должен быть обновлен.</span><span class="sxs-lookup"><span data-stu-id="a7346-219">The ID of the task to update.</span></span>
        - id: options
          type:
            - Models.TaskUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, taskId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-220">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-220">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-221">Идентификатор задачи должен быть обновлен.</span><span class="sxs-lookup"><span data-stu-id="a7346-221">The ID of the task to update.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-222">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-222">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
  - uid: '@azure/batch.Task.update_2'
    name: 'update(string, string, TaskUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(jobId: string, taskId: string, options: TaskUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: jobId
          type:
            - string
          description: '<span data-ttu-id="a7346-223">Идентификатор задания, содержащего задачу.</span><span class="sxs-lookup"><span data-stu-id="a7346-223">The ID of the job containing the task.</span></span>'
        - id: taskId
          type:
            - string
          description: <span data-ttu-id="a7346-224">Идентификатор задачи должен быть обновлен.</span><span class="sxs-lookup"><span data-stu-id="a7346-224">The ID of the task to update.</span></span>
        - id: options
          type:
            - '@azure/batch.TaskUpdateOptionalParams'
          description: <span data-ttu-id="a7346-225">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="a7346-225">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="a7346-226">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="a7346-226">The callback</span></span>
      return:
        type:
          - Promise<Models.TaskUpdateResponse>
    package: '@azure/batch'
references:
  - uid: '@azure/batch.BatchServiceClientContext'
    name: BatchServiceClientContext
    spec.typeScript:
      - name: BatchServiceClientContext
        fullName: BatchServiceClientContext
        uid: '@azure/batch.BatchServiceClientContext'
  - uid: '@azure/batch.TaskAddParameter'
    name: TaskAddParameter
    spec.typeScript:
      - name: TaskAddParameter
        fullName: TaskAddParameter
        uid: '@azure/batch.TaskAddParameter'
  - uid: '@azure/batch.TaskAddOptionalParams'
    name: TaskAddOptionalParams
    spec.typeScript:
      - name: TaskAddOptionalParams
        fullName: TaskAddOptionalParams
        uid: '@azure/batch.TaskAddOptionalParams'
  - uid: '@azure/batch.TaskAddParameter[]'
    name: 'TaskAddParameter[]'
    spec.typeScript:
      - name: TaskAddParameter
        fullName: TaskAddParameter
        uid: '@azure/batch.TaskAddParameter'
      - name: '[]'
        fullName: '[]'
  - uid: ServiceCallback<@azure/batch.TaskAddCollectionResult>
    name: TaskAddCollectionResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TaskAddCollectionResult
        fullName: TaskAddCollectionResult
        uid: '@azure/batch.TaskAddCollectionResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskAddCollectionOptionalParams'
    name: TaskAddCollectionOptionalParams
    spec.typeScript:
      - name: TaskAddCollectionOptionalParams
        fullName: TaskAddCollectionOptionalParams
        uid: '@azure/batch.TaskAddCollectionOptionalParams'
  - uid: '@azure/batch.TaskDeleteMethodOptionalParams'
    name: TaskDeleteMethodOptionalParams
    spec.typeScript:
      - name: TaskDeleteMethodOptionalParams
        fullName: TaskDeleteMethodOptionalParams
        uid: '@azure/batch.TaskDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTask>
    name: CloudTask>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTask
        fullName: CloudTask
        uid: '@azure/batch.CloudTask'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskGetOptionalParams'
    name: TaskGetOptionalParams
    spec.typeScript:
      - name: TaskGetOptionalParams
        fullName: TaskGetOptionalParams
        uid: '@azure/batch.TaskGetOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTaskListResult>
    name: CloudTaskListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTaskListResult
        fullName: CloudTaskListResult
        uid: '@azure/batch.CloudTaskListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskListOptionalParams'
    name: TaskListOptionalParams
    spec.typeScript:
      - name: TaskListOptionalParams
        fullName: TaskListOptionalParams
        uid: '@azure/batch.TaskListOptionalParams'
  - uid: '@azure/batch.TaskListNextOptionalParams'
    name: TaskListNextOptionalParams
    spec.typeScript:
      - name: TaskListNextOptionalParams
        fullName: TaskListNextOptionalParams
        uid: '@azure/batch.TaskListNextOptionalParams'
  - uid: ServiceCallback<@azure/batch.CloudTaskListSubtasksResult>
    name: CloudTaskListSubtasksResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CloudTaskListSubtasksResult
        fullName: CloudTaskListSubtasksResult
        uid: '@azure/batch.CloudTaskListSubtasksResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/batch.TaskListSubtasksOptionalParams'
    name: TaskListSubtasksOptionalParams
    spec.typeScript:
      - name: TaskListSubtasksOptionalParams
        fullName: TaskListSubtasksOptionalParams
        uid: '@azure/batch.TaskListSubtasksOptionalParams'
  - uid: '@azure/batch.TaskReactivateOptionalParams'
    name: TaskReactivateOptionalParams
    spec.typeScript:
      - name: TaskReactivateOptionalParams
        fullName: TaskReactivateOptionalParams
        uid: '@azure/batch.TaskReactivateOptionalParams'
  - uid: '@azure/batch.TaskTerminateOptionalParams'
    name: TaskTerminateOptionalParams
    spec.typeScript:
      - name: TaskTerminateOptionalParams
        fullName: TaskTerminateOptionalParams
        uid: '@azure/batch.TaskTerminateOptionalParams'
  - uid: '@azure/batch.TaskUpdateOptionalParams'
    name: TaskUpdateOptionalParams
    spec.typeScript:
      - name: TaskUpdateOptionalParams
        fullName: TaskUpdateOptionalParams
        uid: '@azure/batch.TaskUpdateOptionalParams'