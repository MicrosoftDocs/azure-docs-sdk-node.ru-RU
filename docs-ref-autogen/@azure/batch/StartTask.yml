### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.StartTask'
    name: StartTask
    fullName: StartTask
    children:
      - '@azure/batch.StartTask.commandLine'
      - '@azure/batch.StartTask.containerSettings'
      - '@azure/batch.StartTask.environmentSettings'
      - '@azure/batch.StartTask.maxTaskRetryCount'
      - '@azure/batch.StartTask.resourceFiles'
      - '@azure/batch.StartTask.userIdentity'
      - '@azure/batch.StartTask.waitForSuccess'
    langs:
      - typeScript
    type: interface
    summary: 'Пакет повторит задачи, когда операция восстановления запускается на вычислительном узле. Примеры операций восстановления причинами (но не ограничиваются) при перезагрузке неработоспособное вычислительном узле или вычислительного узла не отображается из-за сбоя узла. Повторно из-за восстановления операций независимы и не учитываются для maxTaskRetryCount. Даже если maxTaskRetryCount равно 0, может возникнуть внутренних повторных попыток из-за операции восстановления. По этой причине все задачи должны быть идемпотентными. Это означает, что задачи должны допускать прервана и перезапущена без возникновения любые повреждения или повторяющиеся данные. Лучшие практики для долго выполняющихся задач является использование определенные виды создания контрольных точек. В некоторых случаях задача запуска может быть повторно выполняться несмотря на то, что узел не был перезагружен. Специальные следует соблюдать осторожность во избежание начала задачи, которые создать breakaway процесс или установка или запуск службы от рабочему каталогу задачи запуска, так как это будет блокировать пакет не сможет повторно выполнить задачи запуска.'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Командная строка задачи запуска. В командной строке не выполняются в оболочке и таким образом, не может воспользоваться преимуществами функции оболочки, например расширение переменных среды. Если вы хотите воспользоваться преимуществами таких функций, необходимо вызвать оболочку в командной строке, например с помощью «cmd /c MyCommand» в Windows или «/ bin/sh - c MyCommand» в Linux. Если командной строке ссылается на пути к файлам, она должна использовать относительный путь (по отношению к рабочему каталогу задачи), или пакетное указанной переменной среды (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).'
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Параметры для контейнера, под которой выполняется задача запуска. Если этот параметр указан, все каталоги рекурсивно ниже AZ_BATCH_NODE_ROOT_DIR (корень каталогов пакетной службы Azure на узле) сопоставляются в контейнере, все переменные среды задач сопоставляются в контейнере и Командная строка задачи выполняется в контейнере.'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: Список параметров переменных среды для задачи запуска.
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.maxTaskRetryCount'
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Максимальное количество повторных попыток для задачи. Пакетная служба пытается выполнить задачу повторно, если ее код выхода имеет ненулевое значение. Обратите внимание, что это значение определяет количество повторных попыток. Пакетная служба попытается выполнить задачу один раз, а затем будет предпринимать повторные попытки вплоть до этого предела. Например, если максимальное число повторных попыток равно 3, пакет пытается задачу до 4 раз (одна начальная попытка и 3 повторных).
      Если максимальное число повторных попыток равно 0, пакетная служба не выполняет повторную попытку запуска задачи. Если максимальное число повторных попыток равно -1, повторные попытки операций служб пакетного неограниченное.
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Список файлов, которые пакетная служба скачает вычислительный узел перед запуском командной строки.  Максимальный размер для список файлов ресурсов установлен. При превышении максимального размера, запрос завершится ошибкой, и код ошибки ответа будет RequestEntityTooLarge. В этом случае коллекция ResourceFiles необходимо уменьшить размер. Это можно сделать с помощью ZIP-файлы, пакеты приложений или контейнеров Docker. Файлы, перечисленные в этом элементе, находятся в рабочем каталоге задачи.'
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Удостоверение пользователя, под которой выполняется задача запуска. Если не указано, задача выполняется как пользователь без прав администратора уникальные задачи.'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.waitForSuccess'
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Ли пакетная служба ожидания успешного завершения задачи запуска (то есть, чтобы завершить работу с кодом завершения 0) перед планированием все задачи на вычислительном узле. Если true, а задача запуска завершается ошибкой в вычислительном узле, пакетная служба повторяет попытку запуска задачи до его максимальное число повторных попыток (maxTaskRetryCount). Если у задачи по-прежнему не завершен успешно после всех попыток, а затем на знаки пакетной службы непригодным для использования вычислительных узлов, а будет планирование задач для него.
      Это условие можно обнаружить через подробности сведения о состоянии и отказ узла. Если значение равно false, пакетная служба не будет ожидать завершения задачи запуска. В этом случае другие задачи может начать выполнение на вычислительном узле, во время запуска задачи; и даже в случае сбоя задачи запуска, новые задачи будет планироваться на узле. Его значение по умолчанию — false.
    optional: true
    syntax:
      content: 'waitForSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'