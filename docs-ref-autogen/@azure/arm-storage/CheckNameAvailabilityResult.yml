### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult'
    name: CheckNameAvailabilityResult
    fullName: CheckNameAvailabilityResult
    children:
      - '@azure/arm-storage.CheckNameAvailabilityResult.message'
      - '@azure/arm-storage.CheckNameAvailabilityResult.nameAvailable'
      - '@azure/arm-storage.CheckNameAvailabilityResult.reason'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="5594e-101">Ответ операции CheckNameAvailability.</span><span class="sxs-lookup"><span data-stu-id="5594e-101">The CheckNameAvailability operation response.</span></span>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.message'
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="5594e-102">Возвращает сообщение об ошибке, объясняющее причину значение более подробно.</span><span class="sxs-lookup"><span data-stu-id="5594e-102">Gets an error message explaining the Reason value in more detail.</span></span>
      <span data-ttu-id="5594e-103">**ПРИМЕЧАНИЕ. Это свойство не сериализуется. Он может быть заполнен только на сервере.**</span><span class="sxs-lookup"><span data-stu-id="5594e-103">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'message?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.nameAvailable'
    name: nameAvailable
    fullName: nameAvailable
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="5594e-104">Возвращает логическое значение, указывающее, доступно ли имя для использования.</span><span class="sxs-lookup"><span data-stu-id="5594e-104">Gets a boolean value that indicates whether the name is available for you to use.</span></span> <span data-ttu-id="5594e-105">Если значение равно true, то имя будет доступно.</span><span class="sxs-lookup"><span data-stu-id="5594e-105">If true, the name is available.</span></span> <span data-ttu-id="5594e-106">Если значение равно false, имя уже используется или является недопустимым и не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="5594e-106">If false, the name has already been taken or is invalid and cannot be used.</span></span>
      <span data-ttu-id="5594e-107">**ПРИМЕЧАНИЕ. Это свойство не сериализуется. Он может быть заполнен только на сервере.**</span><span class="sxs-lookup"><span data-stu-id="5594e-107">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'nameAvailable?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.CheckNameAvailabilityResult.reason'
    name: reason
    fullName: reason
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="5594e-108">Возвращает причину, что имя учетной записи хранения не может использоваться.</span><span class="sxs-lookup"><span data-stu-id="5594e-108">Gets the reason that a storage account name could not be used.</span></span> <span data-ttu-id="5594e-109">Элемент Reason возвращается только в том случае, если NameAvailable имеет значение false.</span><span class="sxs-lookup"><span data-stu-id="5594e-109">The Reason element is only returned if NameAvailable is false.</span></span> <span data-ttu-id="5594e-110">Ниже перечислены возможные значения. «AccountNameInvalid», «Уже существует» **Примечание: Это свойство не сериализуется. Он может быть заполнен только на сервере.**</span><span class="sxs-lookup"><span data-stu-id="5594e-110">Possible values include: ''AccountNameInvalid'', ''AlreadyExists'' **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'reason?: Reason'
      return:
        type:
          - '@azure/arm-storage.Reason'
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.Reason'
    name: Reason
    spec.typeScript:
      - name: Reason
        fullName: Reason
        uid: '@azure/arm-storage.Reason'