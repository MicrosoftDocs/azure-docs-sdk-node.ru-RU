### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-js.ServiceClientOptions'
    name: ServiceClientOptions
    fullName: ServiceClientOptions
    children:
      - '@azure/ms-rest-js.ServiceClientOptions.clientRequestIdHeaderName'
      - '@azure/ms-rest-js.ServiceClientOptions.deserializationContentTypes'
      - '@azure/ms-rest-js.ServiceClientOptions.generateClientRequestIdHeader'
      - '@azure/ms-rest-js.ServiceClientOptions.httpClient'
      - '@azure/ms-rest-js.ServiceClientOptions.httpPipelineLogger'
      - '@azure/ms-rest-js.ServiceClientOptions.noRetryPolicy'
      - '@azure/ms-rest-js.ServiceClientOptions.proxySettings'
      - '@azure/ms-rest-js.ServiceClientOptions.requestPolicyFactories'
      - '@azure/ms-rest-js.ServiceClientOptions.rpRegistrationRetryTimeout'
      - '@azure/ms-rest-js.ServiceClientOptions.userAgent'
      - '@azure/ms-rest-js.ServiceClientOptions.userAgentHeaderName'
      - '@azure/ms-rest-js.ServiceClientOptions.withCredentials'
    langs:
      - typeScript
    type: interface
    summary: 'Параметры, предоставляемые при создании клиента.'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.clientRequestIdHeaderName'
    name: clientRequestIdHeaderName
    fullName: clientRequestIdHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Если указано, GenerateRequestIdPolicy будут добавляться в конвейере HTTP, который добавляет заголовок для всех исходящих запросов с таким именем заголовка и случайных UUID, как идентификатор запроса.'
    optional: true
    syntax:
      content: 'clientRequestIdHeaderName?: string'
      return:
        type:
          - string
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.deserializationContentTypes'
    name: deserializationContentTypes
    fullName: deserializationContentTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Типы содержимого, которые будут связаны с JSON или XML-сериализации.'
    optional: true
    syntax:
      content: 'deserializationContentTypes?: DeserializationContentTypes'
      return:
        type:
          - '@azure/ms-rest-js.DeserializationContentTypes'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.generateClientRequestIdHeader'
    name: generateClientRequestIdHeader
    fullName: generateClientRequestIdHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: Необходимость создания клиента запросите заголовок идентификатора для каждого HTTP-запроса.
    optional: true
    syntax:
      content: 'generateClientRequestIdHeader?: boolean'
      return:
        type:
          - boolean
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.httpClient'
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: 'HttpClient, который будет использоваться для отправки запросов HTTP.'
    optional: true
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        type:
          - '@azure/ms-rest-js.HttpClient'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.httpPipelineLogger'
    name: httpPipelineLogger
    fullName: httpPipelineLogger
    children: []
    langs:
      - typeScript
    type: property
    summary: 'HttpPipelineLogger, который может использоваться для отладки RequestPolicies в рамках конвейера HTTP.'
    optional: true
    syntax:
      content: 'httpPipelineLogger?: HttpPipelineLogger'
      return:
        type:
          - '@azure/ms-rest-js.HttpPipelineLogger'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.noRetryPolicy'
    name: noRetryPolicy
    fullName: noRetryPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Если задано значение true, отключите политику повтора по умолчанию.'
    optional: true
    syntax:
      content: 'noRetryPolicy?: boolean'
      return:
        type:
          - boolean
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.proxySettings'
    name: proxySettings
    fullName: proxySettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Параметры прокси-сервера, которые будут использоваться для каждого HTTP-запроса (Node.js).'
    optional: true
    syntax:
      content: 'proxySettings?: ProxySettings'
      return:
        type:
          - '@azure/ms-rest-js.ProxySettings'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.requestPolicyFactories'
    name: requestPolicyFactories
    fullName: requestPolicyFactories
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Массив фабрик, которые вызываются для создания конвейера RequestPolicy, используемый для отправки HTTP-запроса по сети или функцию, которая принимает defaultRequestPolicyFactories и возвращает requestPolicyFactories, который будет использоваться.'
    optional: true
    syntax:
      content: 'requestPolicyFactories?: RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
      return:
        type:
          - '@azure/ms-rest-js.RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.rpRegistrationRetryTimeout'
    name: rpRegistrationRetryTimeout
    fullName: rpRegistrationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Возвращает или задает время ожидания повтора в секундах для AutomaticRPRegistration. Значение по умолчанию — 30.
    optional: true
    syntax:
      content: 'rpRegistrationRetryTimeout?: number'
      return:
        type:
          - number
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Строка, задаваемое для заголовка телеметрии при отправке запроса или функция, которая принимает строку агента пользователя по умолчанию и возвращает строку агента пользователя, который будет использоваться.'
    optional: true
    syntax:
      content: 'userAgent?: string | (defaultUserAgent: string) => string'
      return:
        type:
          - 'string | (defaultUserAgent: string) => string'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.userAgentHeaderName'
    name: userAgentHeaderName
    fullName: userAgentHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Имя заголовка, используемый для заголовка телеметрии при отправке запроса. Если этот параметр не указан, «User-Agent» будет использоваться при запуске на Node.js, и «x-ms команда name» будет использоваться при запуске в браузере.'
    optional: true
    syntax:
      content: 'userAgentHeaderName?: string | (defaultUserAgentHeaderName: string) => string'
      return:
        type:
          - 'string | (defaultUserAgentHeaderName: string) => string'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.ServiceClientOptions.withCredentials'
    name: withCredentials
    fullName: withCredentials
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Следует ли включать учетные данные в запросах CORS в браузере.
      Дополнительные сведения см. в https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials.
    optional: true
    syntax:
      content: 'withCredentials?: boolean'
      return:
        type:
          - boolean
    package: '@azure/ms-rest-js'
references:
  - uid: '@azure/ms-rest-js.DeserializationContentTypes'
    name: DeserializationContentTypes
    spec.typeScript:
      - name: DeserializationContentTypes
        fullName: DeserializationContentTypes
        uid: '@azure/ms-rest-js.DeserializationContentTypes'
  - uid: '@azure/ms-rest-js.HttpClient'
    name: HttpClient
    spec.typeScript:
      - name: HttpClient
        fullName: HttpClient
        uid: '@azure/ms-rest-js.HttpClient'
  - uid: '@azure/ms-rest-js.HttpPipelineLogger'
    name: HttpPipelineLogger
    spec.typeScript:
      - name: HttpPipelineLogger
        fullName: HttpPipelineLogger
        uid: '@azure/ms-rest-js.HttpPipelineLogger'
  - uid: '@azure/ms-rest-js.ProxySettings'
    name: ProxySettings
    spec.typeScript:
      - name: ProxySettings
        fullName: ProxySettings
        uid: '@azure/ms-rest-js.ProxySettings'
  - uid: '@azure/ms-rest-js.RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
    name: 'RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
    spec.typeScript:
      - name: RequestPolicyFactory
        fullName: RequestPolicyFactory
        uid: '@azure/ms-rest-js.RequestPolicyFactory'
      - name: '[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
        fullName: '[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'