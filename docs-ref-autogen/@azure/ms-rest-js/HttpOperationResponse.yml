### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-js.HttpOperationResponse'
    name: HttpOperationResponse
    fullName: HttpOperationResponse
    children:
      - '@azure/ms-rest-js.HttpOperationResponse.blobBody'
      - '@azure/ms-rest-js.HttpOperationResponse.bodyAsText'
      - '@azure/ms-rest-js.HttpOperationResponse.headers'
      - '@azure/ms-rest-js.HttpOperationResponse.parsedBody'
      - '@azure/ms-rest-js.HttpOperationResponse.parsedHeaders'
      - '@azure/ms-rest-js.HttpOperationResponse.readableStreamBody'
      - '@azure/ms-rest-js.HttpOperationResponse.request'
      - '@azure/ms-rest-js.HttpOperationResponse.status'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="fa01b-101">Объект-оболочку для HTTP-запроса и ответа.</span><span class="sxs-lookup"><span data-stu-id="fa01b-101">Wrapper object for http request and response.</span></span> <span data-ttu-id="fa01b-102">Десериализованный объект хранится в `parsedBody` свойство при получении текста ответа в формате JSON или XML.</span><span class="sxs-lookup"><span data-stu-id="fa01b-102">Deserialized object is stored in the `parsedBody` property when the response body is received in JSON or XML.</span></span>
    extends:
      name: '@azure/ms-rest-js.HttpResponse'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.blobBody'
    name: blobBody
    fullName: blobBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      <span data-ttu-id="fa01b-103">БРАУЗЕР только текст ответа как обозреватель больших двоичных объектов.</span><span class="sxs-lookup"><span data-stu-id="fa01b-103">BROWSER ONLY The response body as a browser Blob.</span></span>
      <span data-ttu-id="fa01b-104">Всегда не определено в node.js.</span><span class="sxs-lookup"><span data-stu-id="fa01b-104">Always undefined in node.js.</span></span>
    optional: true
    syntax:
      content: 'blobBody?: Promise<Blob>'
      return:
        type:
          - Promise<Blob>
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.bodyAsText'
    name: bodyAsText
    fullName: bodyAsText
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fa01b-105">Текст ответа как текст (формат строки)</span><span class="sxs-lookup"><span data-stu-id="fa01b-105">The response body as text (string format)</span></span>
    optional: true
    syntax:
      content: 'bodyAsText?: string | null'
      return:
        type:
          - string | null
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.headers'
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fa01b-106">Заголовки ответа HTTP.</span><span class="sxs-lookup"><span data-stu-id="fa01b-106">The HTTP response headers.</span></span>
    syntax:
      content: 'headers: HttpHeaders'
      return:
        type:
          - '@azure/ms-rest-js.HttpHeaders'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.parsedBody'
    name: parsedBody
    fullName: parsedBody
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fa01b-107">Текст ответа как обработанное значение JSON или XML</span><span class="sxs-lookup"><span data-stu-id="fa01b-107">The response body as parsed JSON or XML</span></span>
    optional: true
    syntax:
      content: 'parsedBody?: any'
      return:
        type:
          - any
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.parsedHeaders'
    name: parsedHeaders
    fullName: parsedHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fa01b-108">Проанализированный заголовки ответа HTTP.</span><span class="sxs-lookup"><span data-stu-id="fa01b-108">The parsed HTTP response headers.</span></span>
    optional: true
    syntax:
      content: 'parsedHeaders?: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.readableStreamBody'
    name: readableStreamBody
    fullName: readableStreamBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      <span data-ttu-id="fa01b-109">NODEJS только текст ответа как читаемый поток node.js.</span><span class="sxs-lookup"><span data-stu-id="fa01b-109">NODEJS ONLY The response body as a node.js Readable stream.</span></span>
      <span data-ttu-id="fa01b-110">Всегда не определен в браузере.</span><span class="sxs-lookup"><span data-stu-id="fa01b-110">Always undefined in the browser.</span></span>
    optional: true
    syntax:
      content: 'readableStreamBody?: ReadableStream'
      return:
        type:
          - ReadableStream
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.request'
    name: request
    fullName: request
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fa01b-111">Необработанные запросы</span><span class="sxs-lookup"><span data-stu-id="fa01b-111">The raw request</span></span>
    syntax:
      content: 'request: WebResource'
      return:
        type:
          - '@azure/ms-rest-js.WebResource'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.HttpOperationResponse.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fa01b-112">Состояние ответа HTTP (например, 200)</span><span class="sxs-lookup"><span data-stu-id="fa01b-112">The HTTP response status (e.g. 200)</span></span>'
    syntax:
      content: 'status: number'
      return:
        type:
          - number
    package: '@azure/ms-rest-js'
references:
  - uid: '@azure/ms-rest-js.HttpResponse'
    name: HttpResponse
    spec.typeScript:
      - name: HttpResponse
        fullName: HttpResponse
        uid: '@azure/ms-rest-js.HttpResponse'
  - uid: '@azure/ms-rest-js.HttpHeaders'
    name: HttpHeaders
    spec.typeScript:
      - name: HttpHeaders
        fullName: HttpHeaders
        uid: '@azure/ms-rest-js.HttpHeaders'
  - uid: '@azure/ms-rest-js.WebResource'
    name: WebResource
    spec.typeScript:
      - name: WebResource
        fullName: WebResource
        uid: '@azure/ms-rest-js.WebResource'