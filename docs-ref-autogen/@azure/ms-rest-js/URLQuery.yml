### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-js.URLQuery'
    name: URLQuery
    fullName: URLQuery
    children:
      - '@azure/ms-rest-js.URLQuery.any'
      - '@azure/ms-rest-js.URLQuery.get'
      - '@azure/ms-rest-js.URLQuery.parse'
      - '@azure/ms-rest-js.URLQuery.set'
      - '@azure/ms-rest-js.URLQuery.toString'
    langs:
      - typeScript
    type: class
    summary: 'Класс, который обрабатывает часть запроса URLBuilder.'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLQuery.any'
    name: any()
    children: []
    type: method
    langs:
      - typeScript
    summary: Получите ли там параметры в этом URLQuery любого запроса.
    syntax:
      content: function any()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLQuery.get'
    name: get(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получите значение параметра запроса с заданным именем. Если параметр не существует с предоставленное имя параметра, то не определено, возвращается.'
    syntax:
      content: 'function get(parameterName: string)'
      parameters:
        - id: parameterName
          type:
            - string
          description: ''
      return:
        type:
          - 'string | string[] | undefined'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLQuery.parse'
    name: parse(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Выполните синтаксический анализ URLQuery из заданного текста.
    syntax:
      content: 'static function parse(text: string)'
      parameters:
        - id: text
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/ms-rest-js.URLQuery'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLQuery.set'
    name: 'set(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Задайте параметр запроса с заданным именем и значением. Если parameterValue является неопределенным или пустым, это будет пытаться удалить существующий параметр запроса с помощью предоставленного parameterName.'
    syntax:
      content: 'function set(parameterName: string, parameterValue: any)'
      parameters:
        - id: parameterName
          type:
            - string
          description: ''
        - id: parameterValue
          type:
            - any
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLQuery.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: Получите строковое представление этого запроса. Возвращаемое значение не будет начинаться с «?».
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/ms-rest-js'
references:
  - uid: '@azure/ms-rest-js.URLQuery'
    name: URLQuery
    spec.typeScript:
      - name: URLQuery
        fullName: URLQuery
        uid: '@azure/ms-rest-js.URLQuery'