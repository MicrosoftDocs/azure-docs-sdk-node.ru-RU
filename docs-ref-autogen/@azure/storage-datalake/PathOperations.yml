### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.PathOperations'
    name: PathOperations
    fullName: PathOperations
    children:
      - '@azure/storage-datalake.PathOperations.create'
      - '@azure/storage-datalake.PathOperations.create_2'
      - '@azure/storage-datalake.PathOperations.create_1'
      - '@azure/storage-datalake.PathOperations.deleteMethod'
      - '@azure/storage-datalake.PathOperations.deleteMethod_2'
      - '@azure/storage-datalake.PathOperations.deleteMethod_1'
      - '@azure/storage-datalake.PathOperations.getProperties'
      - '@azure/storage-datalake.PathOperations.getProperties_2'
      - '@azure/storage-datalake.PathOperations.getProperties_1'
      - '@azure/storage-datalake.PathOperations.lease'
      - '@azure/storage-datalake.PathOperations.lease_2'
      - '@azure/storage-datalake.PathOperations.lease_1'
      - '@azure/storage-datalake.PathOperations.list'
      - '@azure/storage-datalake.PathOperations.list_2'
      - '@azure/storage-datalake.PathOperations.list_1'
      - '@azure/storage-datalake.PathOperations.constructor'
      - '@azure/storage-datalake.PathOperations.read'
      - '@azure/storage-datalake.PathOperations.read_2'
      - '@azure/storage-datalake.PathOperations.read_1'
      - '@azure/storage-datalake.PathOperations.update'
      - '@azure/storage-datalake.PathOperations.update_2'
      - '@azure/storage-datalake.PathOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="17e65-101">Класс, представляющий PathOperations.</span><span class="sxs-lookup"><span data-stu-id="17e65-101">Class representing a PathOperations.</span></span>'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create'
    name: 'create(string, string, Models.PathCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="17e65-102">Создать или переименовать файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="17e65-102">Create or rename a file or directory.</span></span>    <span data-ttu-id="17e65-103">По умолчанию назначения перезаписывается и если назначения уже существует и находится в аренде аренды тоже прекратится.</span><span class="sxs-lookup"><span data-stu-id="17e65-103">By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken.</span></span>  <span data-ttu-id="17e65-104">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-104">This operation supports conditional HTTP requests.</span></span>  <span data-ttu-id="17e65-105">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-105">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>
      <span data-ttu-id="17e65-106">С ошибкой, если уже существует в месте назначения, использование условного запроса If-None-Match: «\*».</span><span class="sxs-lookup"><span data-stu-id="17e65-106">To fail if the destination already exists, use a conditional request with If-None-Match: "\*".</span></span>
    syntax:
      content: 'function create(filesystem: string, path: string, options?: Models.PathCreateOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-107">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-107">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-108">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-108">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_2'
    name: 'create(string, string, PathCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, options: PathCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-109">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-109">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-110">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-110">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathCreateOptionalParams'
          description: <span data-ttu-id="17e65-111">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-112">The callback</span></span>
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.create_1'
    name: 'create(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-113">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-113">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-114">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-114">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-115">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-115">The callback</span></span>
      return:
        type:
          - Promise<Models.PathCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod'
    name: 'deleteMethod(string, string, Models.PathDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="17e65-116">Удаление файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="17e65-116">Delete the file or directory.</span></span> <span data-ttu-id="17e65-117">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-117">This operation supports conditional HTTP requests.</span></span>  <span data-ttu-id="17e65-118">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-118">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>'
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options?: Models.PathDeleteMethodOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-119">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-119">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-120">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-120">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_2'
    name: 'deleteMethod(string, string, PathDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, options: PathDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-121">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-121">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-122">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-122">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathDeleteMethodOptionalParams'
          description: <span data-ttu-id="17e65-123">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-123">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-124">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-124">The callback</span></span>
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-125">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-125">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-126">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-126">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-127">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-127">The callback</span></span>
      return:
        type:
          - Promise<Models.PathDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties'
    name: 'getProperties(string, string, Models.PathGetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="17e65-128">Получение свойств для файла или каталога и выборочно включить список управления доступом.</span><span class="sxs-lookup"><span data-stu-id="17e65-128">Get the properties for a file or directory, and optionally include the access control list.</span></span>
      <span data-ttu-id="17e65-129">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-129">This operation supports conditional HTTP requests.</span></span>  <span data-ttu-id="17e65-130">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-130">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options?: Models.PathGetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-131">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-131">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-132">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-132">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_2'
    name: 'getProperties(string, string, PathGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, options: PathGetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-133">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-133">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-134">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-134">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathGetPropertiesOptionalParams'
          description: <span data-ttu-id="17e65-135">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-135">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-136">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-136">The callback</span></span>
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.getProperties_1'
    name: 'getProperties(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-137">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-137">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-138">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-138">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-139">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-139">The callback</span></span>
      return:
        type:
          - Promise<Models.PathGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease'
    name: 'lease(Models.PathLeaseAction, string, string, Models.PathLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="17e65-140">Создание и управление ими аренды, чтобы ограничить записи и удалить доступ к пути.</span><span class="sxs-lookup"><span data-stu-id="17e65-140">Create and manage a lease to restrict write and delete access to the path.</span></span> <span data-ttu-id="17e65-141">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-141">This operation supports conditional HTTP requests.</span></span>  <span data-ttu-id="17e65-142">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-142">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>'
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options?: Models.PathLeaseOptionalParams)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            <span data-ttu-id="17e65-143">Существует пять аренды действия: «получить», «сломается», «изменить», «renew» и «release».</span><span class="sxs-lookup"><span data-stu-id="17e65-143">There are five lease actions: "acquire", "break", "change", "renew", and "release".</span></span> <span data-ttu-id="17e65-144">Используйте «получить» и укажите «x-ms предложенные lease-id» и «x-ms длительность аренды, —» чтобы получить новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-144">Use "acquire" and specify the "x-ms-proposed-lease-id" and "x-ms-lease-duration" to acquire a new lease.</span></span> <span data-ttu-id="17e65-145">Используйте для параметра «сломается» для разбиения существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-145">Use "break" to break an existing lease.</span></span> <span data-ttu-id="17e65-146">При разрыве аренды, период прерывания аренды может пройти, во время которого может выполняться только break и выпуске операции на файл.</span><span class="sxs-lookup"><span data-stu-id="17e65-146">When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file.</span></span> <span data-ttu-id="17e65-147">После успешного прекращения аренды ответ указывает интервал в секундах, пока не могут приобрести новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-147">When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired.</span></span> <span data-ttu-id="17e65-148">Использование «изменить» и укажите текущий идентификатор аренды в «x-ms-lease-id» и новый идентификатор аренды в «x-ms предложенные lease-id», чтобы изменить идентификатор активной аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-148">Use "change" and specify the current lease ID in "x-ms-lease-id" and the new lease ID in "x-ms-proposed-lease-id" to change the lease ID of an active lease.</span></span> <span data-ttu-id="17e65-149">Используйте «Обновить» и укажите «x-ms--идентификатор аренды» для обновления существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-149">Use "renew" and specify the "x-ms-lease-id" to renew an existing lease.</span></span>
            <span data-ttu-id="17e65-150">Используйте «выпуск» и укажите «x-ms--идентификатор аренды» освобождения аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-150">Use "release" and specify the "x-ms-lease-id" to release a lease.</span></span> <span data-ttu-id="17e65-151">Возможные значения: «получить», «break», «изменить», «обновить», «release»</span><span class="sxs-lookup"><span data-stu-id="17e65-151">Possible values include: 'acquire', 'break', 'change', 'renew', 'release'</span></span>
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-152">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-152">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-153">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-153">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_2'
    name: 'lease(Models.PathLeaseAction, string, string, PathLeaseOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, options: PathLeaseOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            <span data-ttu-id="17e65-154">Существует пять аренды действия: «получить», «сломается», «изменить», «renew» и «release».</span><span class="sxs-lookup"><span data-stu-id="17e65-154">There are five lease actions: "acquire", "break", "change", "renew", and "release".</span></span> <span data-ttu-id="17e65-155">Используйте «получить» и укажите «x-ms предложенные lease-id» и «x-ms длительность аренды, —» чтобы получить новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-155">Use "acquire" and specify the "x-ms-proposed-lease-id" and "x-ms-lease-duration" to acquire a new lease.</span></span> <span data-ttu-id="17e65-156">Используйте для параметра «сломается» для разбиения существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-156">Use "break" to break an existing lease.</span></span> <span data-ttu-id="17e65-157">При разрыве аренды, период прерывания аренды может пройти, во время которого может выполняться только break и выпуске операции на файл.</span><span class="sxs-lookup"><span data-stu-id="17e65-157">When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file.</span></span> <span data-ttu-id="17e65-158">После успешного прекращения аренды ответ указывает интервал в секундах, пока не могут приобрести новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-158">When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired.</span></span> <span data-ttu-id="17e65-159">Использование «изменить» и укажите текущий идентификатор аренды в «x-ms-lease-id» и новый идентификатор аренды в «x-ms предложенные lease-id», чтобы изменить идентификатор активной аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-159">Use "change" and specify the current lease ID in "x-ms-lease-id" and the new lease ID in "x-ms-proposed-lease-id" to change the lease ID of an active lease.</span></span> <span data-ttu-id="17e65-160">Используйте «Обновить» и укажите «x-ms--идентификатор аренды» для обновления существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-160">Use "renew" and specify the "x-ms-lease-id" to renew an existing lease.</span></span>
            <span data-ttu-id="17e65-161">Используйте «выпуск» и укажите «x-ms--идентификатор аренды» освобождения аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-161">Use "release" and specify the "x-ms-lease-id" to release a lease.</span></span> <span data-ttu-id="17e65-162">Возможные значения: «получить», «break», «изменить», «обновить», «release»</span><span class="sxs-lookup"><span data-stu-id="17e65-162">Possible values include: 'acquire', 'break', 'change', 'renew', 'release'</span></span>
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-163">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-163">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-164">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-164">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathLeaseOptionalParams'
          description: <span data-ttu-id="17e65-165">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-165">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-166">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-166">The callback</span></span>
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.lease_1'
    name: 'lease(Models.PathLeaseAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lease(xMsLeaseAction: Models.PathLeaseAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: xMsLeaseAction
          type:
            - Models.PathLeaseAction
          description: |-
            <span data-ttu-id="17e65-167">Существует пять аренды действия: «получить», «сломается», «изменить», «renew» и «release».</span><span class="sxs-lookup"><span data-stu-id="17e65-167">There are five lease actions: "acquire", "break", "change", "renew", and "release".</span></span> <span data-ttu-id="17e65-168">Используйте «получить» и укажите «x-ms предложенные lease-id» и «x-ms длительность аренды, —» чтобы получить новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-168">Use "acquire" and specify the "x-ms-proposed-lease-id" and "x-ms-lease-duration" to acquire a new lease.</span></span> <span data-ttu-id="17e65-169">Используйте для параметра «сломается» для разбиения существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-169">Use "break" to break an existing lease.</span></span> <span data-ttu-id="17e65-170">При разрыве аренды, период прерывания аренды может пройти, во время которого может выполняться только break и выпуске операции на файл.</span><span class="sxs-lookup"><span data-stu-id="17e65-170">When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file.</span></span> <span data-ttu-id="17e65-171">После успешного прекращения аренды ответ указывает интервал в секундах, пока не могут приобрести новую аренду.</span><span class="sxs-lookup"><span data-stu-id="17e65-171">When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired.</span></span> <span data-ttu-id="17e65-172">Использование «изменить» и укажите текущий идентификатор аренды в «x-ms-lease-id» и новый идентификатор аренды в «x-ms предложенные lease-id», чтобы изменить идентификатор активной аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-172">Use "change" and specify the current lease ID in "x-ms-lease-id" and the new lease ID in "x-ms-proposed-lease-id" to change the lease ID of an active lease.</span></span> <span data-ttu-id="17e65-173">Используйте «Обновить» и укажите «x-ms--идентификатор аренды» для обновления существующей аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-173">Use "renew" and specify the "x-ms-lease-id" to renew an existing lease.</span></span>
            <span data-ttu-id="17e65-174">Используйте «выпуск» и укажите «x-ms--идентификатор аренды» освобождения аренды.</span><span class="sxs-lookup"><span data-stu-id="17e65-174">Use "release" and specify the "x-ms-lease-id" to release a lease.</span></span> <span data-ttu-id="17e65-175">Возможные значения: «получить», «break», «изменить», «обновить», «release»</span><span class="sxs-lookup"><span data-stu-id="17e65-175">Possible values include: 'acquire', 'break', 'change', 'renew', 'release'</span></span>
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-176">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-176">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-177">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-177">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-178">The callback</span></span>
      return:
        type:
          - Promise<Models.PathLeaseResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list'
    name: 'list(boolean, string, Models.PathListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="17e65-179">Список путей к файловой системе и их свойства.</span><span class="sxs-lookup"><span data-stu-id="17e65-179">List filesystem paths and their properties.</span></span>
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options?: Models.PathListOptionalParams)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '<span data-ttu-id="17e65-180">Значение «true», перечисляются все пути; в противном случае отображаются только пути в корне файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-180">If "true", all paths are listed; otherwise, only paths at the root of the filesystem are listed.</span></span>  <span data-ttu-id="17e65-181">Если указано «каталог», список будет включать только путей, которые совместно используют один корень.</span><span class="sxs-lookup"><span data-stu-id="17e65-181">If "directory" is specified, the list will only include paths that share the same root.</span></span>'
        - id: filesystem
          type:
            - string
          description: '<span data-ttu-id="17e65-182">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-182">The filesystem identifier.</span></span>  <span data-ttu-id="17e65-183">Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).</span><span class="sxs-lookup"><span data-stu-id="17e65-183">The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.</span></span>  <span data-ttu-id="17e65-184">Последовательные дефисы не допускаются.</span><span class="sxs-lookup"><span data-stu-id="17e65-184">Consecutive dashes are not permitted.</span></span>  <span data-ttu-id="17e65-185">Все буквы должны быть строчными.</span><span class="sxs-lookup"><span data-stu-id="17e65-185">All letters must be lowercase.</span></span>  <span data-ttu-id="17e65-186">Значение должно содержать от 3 до 63 символов.</span><span class="sxs-lookup"><span data-stu-id="17e65-186">The value must have between 3 and 63 characters.</span></span>'
        - id: options
          type:
            - Models.PathListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_2'
    name: 'list(boolean, string, PathListOptionalParams, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, options: PathListOptionalParams, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '<span data-ttu-id="17e65-187">Значение «true», перечисляются все пути; в противном случае отображаются только пути в корне файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-187">If "true", all paths are listed; otherwise, only paths at the root of the filesystem are listed.</span></span>  <span data-ttu-id="17e65-188">Если указано «каталог», список будет включать только путей, которые совместно используют один корень.</span><span class="sxs-lookup"><span data-stu-id="17e65-188">If "directory" is specified, the list will only include paths that share the same root.</span></span>'
        - id: filesystem
          type:
            - string
          description: '<span data-ttu-id="17e65-189">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-189">The filesystem identifier.</span></span>  <span data-ttu-id="17e65-190">Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).</span><span class="sxs-lookup"><span data-stu-id="17e65-190">The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.</span></span>  <span data-ttu-id="17e65-191">Последовательные дефисы не допускаются.</span><span class="sxs-lookup"><span data-stu-id="17e65-191">Consecutive dashes are not permitted.</span></span>  <span data-ttu-id="17e65-192">Все буквы должны быть строчными.</span><span class="sxs-lookup"><span data-stu-id="17e65-192">All letters must be lowercase.</span></span>  <span data-ttu-id="17e65-193">Значение должно содержать от 3 до 63 символов.</span><span class="sxs-lookup"><span data-stu-id="17e65-193">The value must have between 3 and 63 characters.</span></span>'
        - id: options
          type:
            - '@azure/storage-datalake.PathListOptionalParams'
          description: <span data-ttu-id="17e65-194">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-194">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            <span data-ttu-id="17e65-195">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-195">The callback</span></span>
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.list_1'
    name: 'list(boolean, string, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(recursive: boolean, filesystem: string, callback: ServiceCallback<PathList>)'
      parameters:
        - id: recursive
          type:
            - boolean
          description: '<span data-ttu-id="17e65-196">Значение «true», перечисляются все пути; в противном случае отображаются только пути в корне файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-196">If "true", all paths are listed; otherwise, only paths at the root of the filesystem are listed.</span></span>  <span data-ttu-id="17e65-197">Если указано «каталог», список будет включать только путей, которые совместно используют один корень.</span><span class="sxs-lookup"><span data-stu-id="17e65-197">If "directory" is specified, the list will only include paths that share the same root.</span></span>'
        - id: filesystem
          type:
            - string
          description: '<span data-ttu-id="17e65-198">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-198">The filesystem identifier.</span></span>  <span data-ttu-id="17e65-199">Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).</span><span class="sxs-lookup"><span data-stu-id="17e65-199">The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.</span></span>  <span data-ttu-id="17e65-200">Последовательные дефисы не допускаются.</span><span class="sxs-lookup"><span data-stu-id="17e65-200">Consecutive dashes are not permitted.</span></span>  <span data-ttu-id="17e65-201">Все буквы должны быть строчными.</span><span class="sxs-lookup"><span data-stu-id="17e65-201">All letters must be lowercase.</span></span>  <span data-ttu-id="17e65-202">Значение должно содержать от 3 до 63 символов.</span><span class="sxs-lookup"><span data-stu-id="17e65-202">The value must have between 3 and 63 characters.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.PathList>
          description: |
            <span data-ttu-id="17e65-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-203">The callback</span></span>
      return:
        type:
          - Promise<Models.PathListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.constructor'
    name: PathOperations(DataLakeStorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="17e65-204">Создайте PathOperations.</span><span class="sxs-lookup"><span data-stu-id="17e65-204">Create a PathOperations.</span></span>
    syntax:
      content: 'new PathOperations(client: DataLakeStorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-datalake.DataLakeStorageClientContext'
          description: |
            <span data-ttu-id="17e65-205">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="17e65-205">Reference to the service client.</span></span>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read'
    name: 'read(string, string, Models.PathReadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="17e65-206">Читать содержимое файла.</span><span class="sxs-lookup"><span data-stu-id="17e65-206">Read the contents of a file.</span></span>  <span data-ttu-id="17e65-207">Для операций чтения поддерживаются запросы диапазонов.</span><span class="sxs-lookup"><span data-stu-id="17e65-207">For read operations, range requests are supported.</span></span> <span data-ttu-id="17e65-208">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-208">This operation supports conditional HTTP requests.</span></span>  <span data-ttu-id="17e65-209">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-209">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>'
    syntax:
      content: 'function read(filesystem: string, path: string, options?: Models.PathReadOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-210">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-210">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-211">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-211">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathReadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_2'
    name: 'read(string, string, PathReadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, options: PathReadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-212">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-212">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-213">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-213">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathReadOptionalParams'
          description: <span data-ttu-id="17e65-214">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-214">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-215">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-215">The callback</span></span>
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.read_1'
    name: 'read(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-216">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-216">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-217">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-217">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-218">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-218">The callback</span></span>
      return:
        type:
          - Promise<Models.PathReadResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update'
    name: 'update(Models.PathUpdateAction, string, string, Models.PathUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="17e65-219">Передает данные для добавления в файл, очищает ранее загруженные данные (запись) в файл, задает свойства для файла или каталога или задает элемент управления доступом для файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="17e65-219">Uploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory.</span></span> <span data-ttu-id="17e65-220">Данные могут добавляться только в файл.</span><span class="sxs-lookup"><span data-stu-id="17e65-220">Data can only be appended to a file.</span></span> <span data-ttu-id="17e65-221">Эта операция поддерживает условный HTTP-запросов.</span><span class="sxs-lookup"><span data-stu-id="17e65-221">This operation supports conditional HTTP requests.</span></span> <span data-ttu-id="17e65-222">Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span><span class="sxs-lookup"><span data-stu-id="17e65-222">For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).</span></span>'
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options?: Models.PathUpdateOptionalParams)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '<span data-ttu-id="17e65-223">Действие должно быть «добавить» для отправки данных для добавления в файл «Сброс» для очистки ранее загруженные данные в файл «setProperties», чтобы задать свойства файла или каталога, или «setAccessControl», чтобы задать владельца, группы, разрешения, или доступ к списку управления для файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="17e65-223">The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, or "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory.</span></span>  <span data-ttu-id="17e65-224">Обратите внимание на то, что иерархического пространства имен необходимо включить для учетной записи для использования управления доступом.</span><span class="sxs-lookup"><span data-stu-id="17e65-224">Note that Hierarchical Namespace must be enabled for the account in order to use access control.</span></span>  <span data-ttu-id="17e65-225">Также Обратите внимание, что список управления доступом (ACL) включает в себя разрешения владельца, группы, владельцев и другим пользователям, чтобы заголовки запросов x-ms разрешения и x-ms-acl являются взаимоисключающими.</span><span class="sxs-lookup"><span data-stu-id="17e65-225">Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.</span></span> <span data-ttu-id="17e65-226">Возможные значения: «добавить», «очистить», «setProperties», «setAccessControl»</span><span class="sxs-lookup"><span data-stu-id="17e65-226">Possible values include: ''append'', ''flush'', ''setProperties'', ''setAccessControl''</span></span>'
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-227">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-227">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-228">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-228">The file or directory path.</span></span>
        - id: options
          type:
            - Models.PathUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_2'
    name: 'update(Models.PathUpdateAction, string, string, PathUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, options: PathUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '<span data-ttu-id="17e65-229">Действие должно быть «добавить» для отправки данных для добавления в файл «Сброс» для очистки ранее загруженные данные в файл «setProperties», чтобы задать свойства файла или каталога, или «setAccessControl», чтобы задать владельца, группы, разрешения, или доступ к списку управления для файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="17e65-229">The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, or "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory.</span></span>  <span data-ttu-id="17e65-230">Обратите внимание на то, что иерархического пространства имен необходимо включить для учетной записи для использования управления доступом.</span><span class="sxs-lookup"><span data-stu-id="17e65-230">Note that Hierarchical Namespace must be enabled for the account in order to use access control.</span></span>  <span data-ttu-id="17e65-231">Также Обратите внимание, что список управления доступом (ACL) включает в себя разрешения владельца, группы, владельцев и другим пользователям, чтобы заголовки запросов x-ms разрешения и x-ms-acl являются взаимоисключающими.</span><span class="sxs-lookup"><span data-stu-id="17e65-231">Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.</span></span> <span data-ttu-id="17e65-232">Возможные значения: «добавить», «очистить», «setProperties», «setAccessControl»</span><span class="sxs-lookup"><span data-stu-id="17e65-232">Possible values include: ''append'', ''flush'', ''setProperties'', ''setAccessControl''</span></span>'
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-233">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-233">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-234">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-234">The file or directory path.</span></span>
        - id: options
          type:
            - '@azure/storage-datalake.PathUpdateOptionalParams'
          description: <span data-ttu-id="17e65-235">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="17e65-235">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-236">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-236">The callback</span></span>
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.PathOperations.update_1'
    name: 'update(Models.PathUpdateAction, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(action: Models.PathUpdateAction, filesystem: string, path: string, callback: ServiceCallback<void>)'
      parameters:
        - id: action
          type:
            - Models.PathUpdateAction
          description: '<span data-ttu-id="17e65-237">Действие должно быть «добавить» для отправки данных для добавления в файл «Сброс» для очистки ранее загруженные данные в файл «setProperties», чтобы задать свойства файла или каталога, или «setAccessControl», чтобы задать владельца, группы, разрешения, или доступ к списку управления для файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="17e65-237">The action must be "append" to upload data to be appended to a file, "flush" to flush previously uploaded data to a file, "setProperties" to set the properties of a file or directory, or "setAccessControl" to set the owner, group, permissions, or access control list for a file or directory.</span></span>  <span data-ttu-id="17e65-238">Обратите внимание на то, что иерархического пространства имен необходимо включить для учетной записи для использования управления доступом.</span><span class="sxs-lookup"><span data-stu-id="17e65-238">Note that Hierarchical Namespace must be enabled for the account in order to use access control.</span></span>  <span data-ttu-id="17e65-239">Также Обратите внимание, что список управления доступом (ACL) включает в себя разрешения владельца, группы, владельцев и другим пользователям, чтобы заголовки запросов x-ms разрешения и x-ms-acl являются взаимоисключающими.</span><span class="sxs-lookup"><span data-stu-id="17e65-239">Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.</span></span> <span data-ttu-id="17e65-240">Возможные значения: «добавить», «очистить», «setProperties», «setAccessControl»</span><span class="sxs-lookup"><span data-stu-id="17e65-240">Possible values include: ''append'', ''flush'', ''setProperties'', ''setAccessControl''</span></span>'
        - id: filesystem
          type:
            - string
          description: <span data-ttu-id="17e65-241">Идентификатор файловой системы.</span><span class="sxs-lookup"><span data-stu-id="17e65-241">The filesystem identifier.</span></span>
        - id: path
          type:
            - string
          description: <span data-ttu-id="17e65-242">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="17e65-242">The file or directory path.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="17e65-243">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="17e65-243">The callback</span></span>
      return:
        type:
          - Promise<Models.PathUpdateResponse>
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.DataLakeStorageClientContext'
    name: DataLakeStorageClientContext
    spec.typeScript:
      - name: DataLakeStorageClientContext
        fullName: DataLakeStorageClientContext
        uid: '@azure/storage-datalake.DataLakeStorageClientContext'
  - uid: '@azure/storage-datalake.PathCreateOptionalParams'
    name: PathCreateOptionalParams
    spec.typeScript:
      - name: PathCreateOptionalParams
        fullName: PathCreateOptionalParams
        uid: '@azure/storage-datalake.PathCreateOptionalParams'
  - uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
    name: PathDeleteMethodOptionalParams
    spec.typeScript:
      - name: PathDeleteMethodOptionalParams
        fullName: PathDeleteMethodOptionalParams
        uid: '@azure/storage-datalake.PathDeleteMethodOptionalParams'
  - uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
    name: PathGetPropertiesOptionalParams
    spec.typeScript:
      - name: PathGetPropertiesOptionalParams
        fullName: PathGetPropertiesOptionalParams
        uid: '@azure/storage-datalake.PathGetPropertiesOptionalParams'
  - uid: '@azure/storage-datalake.PathLeaseOptionalParams'
    name: PathLeaseOptionalParams
    spec.typeScript:
      - name: PathLeaseOptionalParams
        fullName: PathLeaseOptionalParams
        uid: '@azure/storage-datalake.PathLeaseOptionalParams'
  - uid: ServiceCallback<@azure/storage-datalake.PathList>
    name: PathList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PathList
        fullName: PathList
        uid: '@azure/storage-datalake.PathList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-datalake.PathListOptionalParams'
    name: PathListOptionalParams
    spec.typeScript:
      - name: PathListOptionalParams
        fullName: PathListOptionalParams
        uid: '@azure/storage-datalake.PathListOptionalParams'
  - uid: '@azure/storage-datalake.PathReadOptionalParams'
    name: PathReadOptionalParams
    spec.typeScript:
      - name: PathReadOptionalParams
        fullName: PathReadOptionalParams
        uid: '@azure/storage-datalake.PathReadOptionalParams'
  - uid: '@azure/storage-datalake.PathUpdateOptionalParams'
    name: PathUpdateOptionalParams
    spec.typeScript:
      - name: PathUpdateOptionalParams
        fullName: PathUpdateOptionalParams
        uid: '@azure/storage-datalake.PathUpdateOptionalParams'