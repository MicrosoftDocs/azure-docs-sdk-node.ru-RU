### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.FilesystemOperations'
    name: FilesystemOperations
    fullName: FilesystemOperations
    children:
      - '@azure/storage-datalake.FilesystemOperations.create_2'
      - '@azure/storage-datalake.FilesystemOperations.create'
      - '@azure/storage-datalake.FilesystemOperations.create_1'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod_2'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod_1'
      - '@azure/storage-datalake.FilesystemOperations.constructor'
      - '@azure/storage-datalake.FilesystemOperations.getProperties_2'
      - '@azure/storage-datalake.FilesystemOperations.getProperties'
      - '@azure/storage-datalake.FilesystemOperations.getProperties_1'
      - '@azure/storage-datalake.FilesystemOperations.list_2'
      - '@azure/storage-datalake.FilesystemOperations.list'
      - '@azure/storage-datalake.FilesystemOperations.list_1'
      - '@azure/storage-datalake.FilesystemOperations.setProperties_2'
      - '@azure/storage-datalake.FilesystemOperations.setProperties'
      - '@azure/storage-datalake.FilesystemOperations.setProperties_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий FilesystemOperations.'
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create_2'
    name: 'create(string, FilesystemCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, options: FilesystemCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemCreateOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create'
    name: 'create(string, Models.FilesystemCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Создайте файловую систему с корнем в указанном расположении. Если файловая система уже существует, операция завершится ошибкой.  Эта операция не поддерживает условный HTTP-запросов.'
    syntax:
      content: 'function create(filesystem: string, options?: Models.FilesystemCreateOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - Models.FilesystemCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod_2'
    name: 'deleteMethod(string, FilesystemDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, options: FilesystemDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod'
    name: 'deleteMethod(string, Models.FilesystemDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Помечает файловую систему для удаления.  При удалении файловой системы, невозможно создать файловую систему с тем же идентификатором в течение 30 секунд. Файловой системы во время удаления, чтобы создать файловую систему с таким идентификатором не будут пройдены с кодом состояния 409 (конфликт), при этом служба возвращает Дополнительные сведения об ошибке указывают, что файловая система удаляется. Все другие операции, включая операции для любых файлов или каталогов в файловой системе, завершится ошибкой с кодом состояния 404 (не найдено) файловой системы во время удаления. Эта операция поддерживает условный HTTP-запросов.  Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).'
    syntax:
      content: 'function deleteMethod(filesystem: string, options?: Models.FilesystemDeleteMethodOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - Models.FilesystemDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.constructor'
    name: FilesystemOperations(DataLakeStorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте FilesystemOperations.
    syntax:
      content: 'new FilesystemOperations(client: DataLakeStorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-datalake.DataLakeStorageClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties_2'
    name: 'getProperties(string, FilesystemGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, options: FilesystemGetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties'
    name: 'getProperties(string, Models.FilesystemGetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Все системы и файловой системы, определяемые пользователем свойства указываются в заголовках ответов.'
    syntax:
      content: 'function getProperties(filesystem: string, options?: Models.FilesystemGetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - Models.FilesystemGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties_1'
    name: 'getProperties(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list_2'
    name: 'list(FilesystemListOptionalParams, ServiceCallback<FilesystemList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FilesystemListOptionalParams, callback: ServiceCallback<FilesystemList>)'
      parameters:
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemListOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.FilesystemList>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list'
    name: list(Models.FilesystemListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Список файловых систем и их свойства в прав учетной записи.
    syntax:
      content: 'function list(options?: Models.FilesystemListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FilesystemListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list_1'
    name: list(ServiceCallback<FilesystemList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FilesystemList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.FilesystemList>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties_2'
    name: 'setProperties(string, FilesystemSetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperties(filesystem: string, options: FilesystemSetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties'
    name: 'setProperties(string, Models.FilesystemSetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Задание свойств для файловой системы.  Эта операция поддерживает условный HTTP-запросов.  Дополнительные сведения см. в разделе [указание условных заголовков для операций службы BLOB-объектов](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).'
    syntax:
      content: 'function setProperties(filesystem: string, options?: Models.FilesystemSetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: options
          type:
            - Models.FilesystemSetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties_1'
    name: 'setProperties(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperties(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'Идентификатор файловой системы.  Значение должно начинаться и заканчиваться буквой или номер и должно содержать только буквы, цифры и дефис (-).  Последовательные дефисы не допускаются.  Все буквы должны быть строчными.  Значение должно содержать от 3 до 63 символов.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.DataLakeStorageClientContext'
    name: DataLakeStorageClientContext
    spec.typeScript:
      - name: DataLakeStorageClientContext
        fullName: DataLakeStorageClientContext
        uid: '@azure/storage-datalake.DataLakeStorageClientContext'
  - uid: '@azure/storage-datalake.FilesystemCreateOptionalParams'
    name: FilesystemCreateOptionalParams
    spec.typeScript:
      - name: FilesystemCreateOptionalParams
        fullName: FilesystemCreateOptionalParams
        uid: '@azure/storage-datalake.FilesystemCreateOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
    name: FilesystemDeleteMethodOptionalParams
    spec.typeScript:
      - name: FilesystemDeleteMethodOptionalParams
        fullName: FilesystemDeleteMethodOptionalParams
        uid: '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
    name: FilesystemGetPropertiesOptionalParams
    spec.typeScript:
      - name: FilesystemGetPropertiesOptionalParams
        fullName: FilesystemGetPropertiesOptionalParams
        uid: '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
  - uid: ServiceCallback<@azure/storage-datalake.FilesystemList>
    name: FilesystemList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FilesystemList
        fullName: FilesystemList
        uid: '@azure/storage-datalake.FilesystemList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-datalake.FilesystemListOptionalParams'
    name: FilesystemListOptionalParams
    spec.typeScript:
      - name: FilesystemListOptionalParams
        fullName: FilesystemListOptionalParams
        uid: '@azure/storage-datalake.FilesystemListOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'
    name: FilesystemSetPropertiesOptionalParams
    spec.typeScript:
      - name: FilesystemSetPropertiesOptionalParams
        fullName: FilesystemSetPropertiesOptionalParams
        uid: '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'