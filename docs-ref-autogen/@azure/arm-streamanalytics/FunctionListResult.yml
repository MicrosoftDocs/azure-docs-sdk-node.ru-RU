### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-streamanalytics.FunctionListResult'
    name: FunctionListResult
    fullName: FunctionListResult
    children:
      - '@azure/arm-streamanalytics.FunctionListResult.Array'
      - '@azure/arm-streamanalytics.FunctionListResult.concat'
      - '@azure/arm-streamanalytics.FunctionListResult.concat_1'
      - '@azure/arm-streamanalytics.FunctionListResult.copyWithin'
      - '@azure/arm-streamanalytics.FunctionListResult.entries'
      - '@azure/arm-streamanalytics.FunctionListResult.every'
      - '@azure/arm-streamanalytics.FunctionListResult.fill'
      - '@azure/arm-streamanalytics.FunctionListResult.filter_1'
      - '@azure/arm-streamanalytics.FunctionListResult.filter'
      - '@azure/arm-streamanalytics.FunctionListResult.find'
      - '@azure/arm-streamanalytics.FunctionListResult.find_1'
      - '@azure/arm-streamanalytics.FunctionListResult.findIndex'
      - '@azure/arm-streamanalytics.FunctionListResult.forEach'
      - '@azure/arm-streamanalytics.FunctionListResult.indexOf'
      - '@azure/arm-streamanalytics.FunctionListResult.join'
      - '@azure/arm-streamanalytics.FunctionListResult.keys'
      - '@azure/arm-streamanalytics.FunctionListResult.lastIndexOf'
      - '@azure/arm-streamanalytics.FunctionListResult.length'
      - '@azure/arm-streamanalytics.FunctionListResult.map'
      - '@azure/arm-streamanalytics.FunctionListResult.nextLink'
      - '@azure/arm-streamanalytics.FunctionListResult.pop'
      - '@azure/arm-streamanalytics.FunctionListResult.push'
      - '@azure/arm-streamanalytics.FunctionListResult.reduce'
      - '@azure/arm-streamanalytics.FunctionListResult.reduce_1'
      - '@azure/arm-streamanalytics.FunctionListResult.reduce_2'
      - '@azure/arm-streamanalytics.FunctionListResult.reduceRight'
      - '@azure/arm-streamanalytics.FunctionListResult.reduceRight_1'
      - '@azure/arm-streamanalytics.FunctionListResult.reduceRight_2'
      - '@azure/arm-streamanalytics.FunctionListResult.reverse'
      - '@azure/arm-streamanalytics.FunctionListResult.shift'
      - '@azure/arm-streamanalytics.FunctionListResult.slice'
      - '@azure/arm-streamanalytics.FunctionListResult.some'
      - '@azure/arm-streamanalytics.FunctionListResult.sort'
      - '@azure/arm-streamanalytics.FunctionListResult.splice_1'
      - '@azure/arm-streamanalytics.FunctionListResult.splice'
      - '@azure/arm-streamanalytics.FunctionListResult.toLocaleString'
      - '@azure/arm-streamanalytics.FunctionListResult.toString'
      - '@azure/arm-streamanalytics.FunctionListResult.unshift'
      - '@azure/arm-streamanalytics.FunctionListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-streamanalytics.FunctionModel>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.concat'
    name: 'concat(ConcatArray<FunctionModel>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-101">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="9a386-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<FunctionModel>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-streamanalytics.FunctionModel>[]'
          description: |
            <span data-ttu-id="9a386-102">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="9a386-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-103">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="9a386-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="9a386-104">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="9a386-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-105">Возвращает этот объект после копирования массива определяется начало и конец тот же массив, начиная с позиции целевой</span><span class="sxs-lookup"><span data-stu-id="9a386-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="9a386-106">Если целевым объектом является отрицательным, он рассматривается как длина + целевой, где length — длина массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="9a386-107">Если start имеет отрицательное значение, он рассматривается как длина + start.</span><span class="sxs-lookup"><span data-stu-id="9a386-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="9a386-108">Если end имеет отрицательное, оно рассматривается как длина + end.</span><span class="sxs-lookup"><span data-stu-id="9a386-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-109">Если не указано, длина этого объекта используется в качестве значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="9a386-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-110">Возвращает итерируемого пары ключей, значение для каждой записи в массиве</span><span class="sxs-lookup"><span data-stu-id="9a386-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.every'
    name: 'every((value: FunctionModel, index: number, array: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-111">Определяет, удовлетворяют ли все элементы массива заданный тест.</span><span class="sxs-lookup"><span data-stu-id="9a386-111">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => boolean'
          description: '<span data-ttu-id="9a386-112">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-113">Каждый метод вызывает функцию callbackfn для каждого элемента в Массив1, пока не callbackfn возвращает значение false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-114">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-115">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.fill'
    name: 'fill(FunctionModel, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-116">Возвращает этот объект после заполнения разделе определяется первым и последним символом значение</span><span class="sxs-lookup"><span data-stu-id="9a386-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: FunctionModel, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-streamanalytics.FunctionModel'
          description: <span data-ttu-id="9a386-117">значения для заполнения массива раздел с</span><span class="sxs-lookup"><span data-stu-id="9a386-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="9a386-118">Индекс начала заполнения массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-118">index to start filling the array at.</span></span> <span data-ttu-id="9a386-119">Если start имеет отрицательное значение, он рассматривается как длина + start, где length — длина массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-120">Индекс, чтобы остановить заполнение массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-120">index to stop filling the array at.</span></span> <span data-ttu-id="9a386-121">Если end имеет отрицательное, оно рассматривается как длина + end.</span><span class="sxs-lookup"><span data-stu-id="9a386-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.filter_1'
    name: 'filter((value: FunctionModel, index: number, array: FunctionModel[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-122">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => any'
          description: '<span data-ttu-id="9a386-123">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-124">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-125">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-126">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.filter'
    name: 'filter((value: FunctionModel, index: number, array: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-127">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => boolean'
          description: '<span data-ttu-id="9a386-128">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-129">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-130">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-131">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.find'
    name: 'find((this: void, value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-132">Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.</span><span class="sxs-lookup"><span data-stu-id="9a386-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: FunctionModel, index: number, obj: FunctionModel[]) => boolean'
          description: '<span data-ttu-id="9a386-133">найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true.</span><span class="sxs-lookup"><span data-stu-id="9a386-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="9a386-134">Если такой элемент найден, поиск немедленно возвращает значение этого элемента.</span><span class="sxs-lookup"><span data-stu-id="9a386-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="9a386-135">В противном случае поиск возвращает значение undefined.</span><span class="sxs-lookup"><span data-stu-id="9a386-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-136">Если указано, оно будет использоваться как это значение для каждого вызова предиката.</span><span class="sxs-lookup"><span data-stu-id="9a386-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="9a386-137">Если оно не выполняется, не указано. вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="9a386-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.find_1'
    name: 'find((value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-138">Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.</span><span class="sxs-lookup"><span data-stu-id="9a386-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: FunctionModel, index: number, obj: FunctionModel[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.findIndex'
    name: 'findIndex((value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-139">Возвращает индекс первого элемента в массиве, где предикат имеет значение true, а в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="9a386-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: FunctionModel, index: number, obj: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: FunctionModel, index: number, obj: FunctionModel[]) => boolean'
          description: '<span data-ttu-id="9a386-140">найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true.</span><span class="sxs-lookup"><span data-stu-id="9a386-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="9a386-141">Если такой элемент найден, findIndex немедленно возвращает индекс этого элемента.</span><span class="sxs-lookup"><span data-stu-id="9a386-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="9a386-142">FindIndex в противном случае возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="9a386-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-143">Если указано, оно будет использоваться как это значение для каждого вызова предиката.</span><span class="sxs-lookup"><span data-stu-id="9a386-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="9a386-144">Если оно не выполняется, не указано. вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="9a386-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.forEach'
    name: 'forEach((value: FunctionModel, index: number, array: FunctionModel[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-145">Выполняет указанное действие для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => void'
          description: '<span data-ttu-id="9a386-146">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-147">forEach вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-147">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-148">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-149">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.indexOf'
    name: 'indexOf(FunctionModel, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-150">Возвращает индекс первого вхождения значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: FunctionModel, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-streamanalytics.FunctionModel'
          description: '<span data-ttu-id="9a386-151">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-151">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-152">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="9a386-152">The array index at which to begin the search.</span></span> <span data-ttu-id="9a386-153">Если параметр fromIndex опущен, поиск начинается с индекса 0.</span><span class="sxs-lookup"><span data-stu-id="9a386-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-154">Добавляет все элементы массива, разделенных указанной строкой-разделителем.</span><span class="sxs-lookup"><span data-stu-id="9a386-154">Adds all the elements of an array separated by the specified separator string.</span></span>'
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="9a386-155">Строка, используемая для разделения один элемент массива из следующего в результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="9a386-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="9a386-156">Если этот параметр опущен, элементы массива разделяются запятыми.</span><span class="sxs-lookup"><span data-stu-id="9a386-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-157">Возвращает итерируемого ключей в массиве</span><span class="sxs-lookup"><span data-stu-id="9a386-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.lastIndexOf'
    name: 'lastIndexOf(FunctionModel, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-158">Возвращает индекс последнего вхождения указанного значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: FunctionModel, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-streamanalytics.FunctionModel'
          description: '<span data-ttu-id="9a386-159">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-159">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-160">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="9a386-160">The array index at which to begin the search.</span></span> <span data-ttu-id="9a386-161">Если параметр fromIndex опущен, поиск начинается с последнего индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="9a386-162">Возвращает или задает длину массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="9a386-163">Это номер один, выше, чем наибольший элемент, определенный в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-163">This is a number one higher than the highest element defined in an array.</span></span>'
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.map'
    name: 'map((value: FunctionModel, index: number, array: FunctionModel[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-164">Вызывает заданную функцию обратного вызова для каждого элемента массива и возвращает массив, содержащий результаты.</span><span class="sxs-lookup"><span data-stu-id="9a386-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => U'
          description: '<span data-ttu-id="9a386-165">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-166">Метод map вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-166">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-167">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-168">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-169">Удаляет последний элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="9a386-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.push'
    name: 'push(FunctionModel[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-170">Присоединяет новые элементы к массиву и возвращает новую длину массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: FunctionModel[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-streamanalytics.FunctionModel[]'
          description: |
            <span data-ttu-id="9a386-171">Новые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduce'
    name: 'reduce((previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-172">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9a386-173">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel'
          description: '<span data-ttu-id="9a386-174">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9a386-175">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduce_1'
    name: 'reduce((previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel, FunctionModel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-176">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9a386-177">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel, initialValue: FunctionModel)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-streamanalytics.FunctionModel'
          description: ''
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-178">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9a386-179">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U'
          description: '<span data-ttu-id="9a386-180">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9a386-181">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="9a386-182">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="9a386-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="9a386-183">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduceRight'
    name: 'reduceRight((previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-184">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="9a386-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9a386-185">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel'
          description: '<span data-ttu-id="9a386-186">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9a386-187">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduceRight_1'
    name: 'reduceRight((previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel, FunctionModel)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-188">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="9a386-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9a386-189">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel, initialValue: FunctionModel)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: FunctionModel, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => FunctionModel'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-streamanalytics.FunctionModel'
          description: ''
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-190">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="9a386-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9a386-191">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="9a386-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: FunctionModel, currentIndex: number, array: FunctionModel[]) => U'
          description: '<span data-ttu-id="9a386-192">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9a386-193">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="9a386-194">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="9a386-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="9a386-195">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-196">Резервирует элементы в массиве.</span><span class="sxs-lookup"><span data-stu-id="9a386-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-197">Удаляет первый элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="9a386-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-198">Возвращает фрагмент массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="9a386-199">Начало указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-200">Конец указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.some'
    name: 'some((value: FunctionModel, index: number, array: FunctionModel[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-201">Определяет, возвращает ли заданной функции обратного вызова значение true для любого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-201">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: FunctionModel, index: number, array: FunctionModel[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: FunctionModel, index: number, array: FunctionModel[]) => boolean'
          description: '<span data-ttu-id="9a386-202">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="9a386-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9a386-203">Метод some вызывает функцию callbackfn для каждого элемента в массив1 callbackfn возвращает false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9a386-204">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9a386-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9a386-205">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="9a386-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.sort'
    name: 'sort(undefined | (a: FunctionModel, b: FunctionModel) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-206">Сортирует массив.</span><span class="sxs-lookup"><span data-stu-id="9a386-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: FunctionModel, b: FunctionModel) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: FunctionModel, b: FunctionModel) => number'
          description: |
            <span data-ttu-id="9a386-207">Имя функции, используемое для определения порядка элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="9a386-208">Если этот параметр опущен, элементы сортируются по возрастанию, ASCII символ.</span><span class="sxs-lookup"><span data-stu-id="9a386-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.splice_1'
    name: 'splice(number, number, FunctionModel[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-209">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="9a386-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: FunctionModel[])'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="9a386-210">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-210">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="9a386-211">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-streamanalytics.FunctionModel[]'
          description: |
            <span data-ttu-id="9a386-212">Элементов для вставки в массив вместо удаленных элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-213">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="9a386-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="9a386-214">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-214">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="9a386-215">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="9a386-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.FunctionModel[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9a386-216">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-216">Returns a string representation of an array.</span></span> <span data-ttu-id="9a386-217">Элементы преобразуются в строку, используя их toLocalString методов.</span><span class="sxs-lookup"><span data-stu-id="9a386-217">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-218">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.unshift'
    name: 'unshift(FunctionModel[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-219">Вставляет новые элементы в начало массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: FunctionModel[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-streamanalytics.FunctionModel[]'
          description: |
            <span data-ttu-id="9a386-220">Элементов для вставки в начале массива.</span><span class="sxs-lookup"><span data-stu-id="9a386-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.FunctionListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9a386-221">Возвращает итерируемого значений в массиве</span><span class="sxs-lookup"><span data-stu-id="9a386-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-streamanalytics.FunctionModel>
    package: '@azure/arm-streamanalytics'
references:
  - uid: Array<@azure/arm-streamanalytics.FunctionModel>
    name: FunctionModel>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-streamanalytics.FunctionModel>[]'
    name: 'FunctionModel>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-streamanalytics.FunctionModel[]'
    name: 'FunctionModel[]'
    spec.typeScript:
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-streamanalytics.FunctionModel'
    name: FunctionModel
    spec.typeScript:
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
  - uid: '@azure/arm-streamanalytics.FunctionModel | undefined'
    name: FunctionModel | undefined
    spec.typeScript:
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-streamanalytics.FunctionModel>
    name: FunctionModel>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: FunctionModel
        fullName: FunctionModel
        uid: '@azure/arm-streamanalytics.FunctionModel'
      - name: '>'
        fullName: '>'