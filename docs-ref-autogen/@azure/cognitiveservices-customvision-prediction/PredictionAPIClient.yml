### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient'
    name: PredictionAPIClient
    fullName: PredictionAPIClient
    children:
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
      - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.apiKey'
    name: apiKey
    fullName: apiKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiKey: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-101">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-101">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-102">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-102">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-103">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-103">Binary image data.</span></span> <span data-ttu-id="56f78-104">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-104">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-105">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-105">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_2'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-106">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-106">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-107">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-107">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-108">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-108">Binary image data.</span></span> <span data-ttu-id="56f78-109">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-109">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-110">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-110">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
          description: <span data-ttu-id="56f78-111">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-111">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-112">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImage_1'
    name: 'classifyImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-113">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-113">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-114">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-114">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-115">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-115">Binary image data.</span></span> <span data-ttu-id="56f78-116">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-116">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-117">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-117">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-118">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-118">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl'
    name: 'classifyImageUrl(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-119">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-119">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-120">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-120">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-121">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-121">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_2'
    name: 'classifyImageUrl(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-122">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-122">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-123">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-123">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-124">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-124">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
          description: <span data-ttu-id="56f78-125">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-125">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-126">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-126">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrl_1'
    name: 'classifyImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-127">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-127">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-128">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-128">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-129">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-129">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-130">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-130">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-131">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-131">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-132">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-132">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-133">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-133">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_2'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-134">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-134">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-135">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-135">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-136">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-136">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="56f78-137">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-138">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-138">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageUrlWithNoStore_1'
    name: 'classifyImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-139">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-139">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-140">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-140">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-141">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-141">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-142">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-142">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-143">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-143">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-144">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-144">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-145">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-145">Binary image data.</span></span> <span data-ttu-id="56f78-146">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-146">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-147">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-147">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientClassifyImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_2'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientClassifyImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientClassifyImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-148">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-148">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-149">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-149">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-150">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-150">Binary image data.</span></span> <span data-ttu-id="56f78-151">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-151">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-152">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-152">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="56f78-153">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-153">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-154">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-154">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.classifyImageWithNoStore_1'
    name: 'classifyImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function classifyImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-155">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-155">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-156">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-156">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-157">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-157">Binary image data.</span></span> <span data-ttu-id="56f78-158">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-158">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-159">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-159">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-160">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-160">The callback</span></span>
      return:
        type:
          - Promise<Models.ClassifyImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage'
    name: 'detectImage(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-161">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-161">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-162">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-162">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-163">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-163">Binary image data.</span></span> <span data-ttu-id="56f78-164">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-164">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-165">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-165">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_2'
    name: 'detectImage(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-166">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-166">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-167">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-167">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-168">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-168">Binary image data.</span></span> <span data-ttu-id="56f78-169">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-169">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-170">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-170">Supports images up to 4MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
          description: <span data-ttu-id="56f78-171">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-172">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-172">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImage_1'
    name: 'detectImage(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImage(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-173">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-173">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-174">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-174">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-175">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-175">Binary image data.</span></span> <span data-ttu-id="56f78-176">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-176">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-177">Поддерживает образы в 4 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-177">Supports images up to 4MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl'
    name: 'detectImageUrl(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-179">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-179">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-180">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-180">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-181">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-181">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_2'
    name: 'detectImageUrl(string, string, ImageUrl, PredictionAPIClientDetectImageUrlOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-182">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-182">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-183">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-183">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-184">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-184">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
          description: <span data-ttu-id="56f78-185">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-185">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-186">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-186">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrl_1'
    name: 'detectImageUrl(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrl(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-187">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-187">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-188">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-188">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-189">ImageUrl, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-189">An ImageUrl that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-190">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-190">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options?: Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-191">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-191">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-192">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-192">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-193">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-193">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_2'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, options: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-194">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-194">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-195">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-195">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-196">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-196">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
          description: <span data-ttu-id="56f78-197">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-198">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-198">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageUrlWithNoStore_1'
    name: 'detectImageUrlWithNoStore(string, string, ImageUrl, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageUrlWithNoStore(projectId: string, publishedName: string, imageUrl: ImageUrl, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-199">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-199">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-200">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-200">Specifies the name of the model to evaluate against.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-customvision-prediction.ImageUrl'
          description: '<span data-ttu-id="56f78-201">{Iris.Web.Api.Models.ImageUrl}, содержащий URL-адрес изображения для оценки.</span><span class="sxs-lookup"><span data-stu-id="56f78-201">An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-202">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-202">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageUrlWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options?: Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-203">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-203">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-204">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-204">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-205">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-205">Binary image data.</span></span> <span data-ttu-id="56f78-206">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-206">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-207">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-207">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - Models.PredictionAPIClientDetectImageWithNoStoreOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_2'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, PredictionAPIClientDetectImageWithNoStoreOptionalParams, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, options: PredictionAPIClientDetectImageWithNoStoreOptionalParams, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-208">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-208">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-209">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-209">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-210">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-210">Binary image data.</span></span> <span data-ttu-id="56f78-211">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-211">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-212">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-212">Supports images up to 0MB.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
          description: <span data-ttu-id="56f78-213">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="56f78-213">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-214">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-214">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.detectImageWithNoStore_1'
    name: 'detectImageWithNoStore(string, string, msRest.HttpRequestBody, ServiceCallback<ImagePrediction>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectImageWithNoStore(projectId: string, publishedName: string, imageData: msRest.HttpRequestBody, callback: ServiceCallback<ImagePrediction>)'
      parameters:
        - id: projectId
          type:
            - string
          description: <span data-ttu-id="56f78-215">Идентификатор проекта.</span><span class="sxs-lookup"><span data-stu-id="56f78-215">The project id.</span></span>
        - id: publishedName
          type:
            - string
          description: <span data-ttu-id="56f78-216">Указывает имя модели для оценки по.</span><span class="sxs-lookup"><span data-stu-id="56f78-216">Specifies the name of the model to evaluate against.</span></span>
        - id: imageData
          type:
            - msRest.HttpRequestBody
          description: '<span data-ttu-id="56f78-217">Двоичные данные изображения.</span><span class="sxs-lookup"><span data-stu-id="56f78-217">Binary image data.</span></span> <span data-ttu-id="56f78-218">Поддерживаемые форматы: JPEG, GIF, PNG и BMP.</span><span class="sxs-lookup"><span data-stu-id="56f78-218">Supported formats are JPEG, GIF, PNG, and BMP.</span></span> <span data-ttu-id="56f78-219">Поддерживает образы до 0 МБ.</span><span class="sxs-lookup"><span data-stu-id="56f78-219">Supports images up to 0MB.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
          description: |
            <span data-ttu-id="56f78-220">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="56f78-220">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectImageWithNoStoreResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.constructor'
    name: 'PredictionAPIClient(string, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="56f78-221">Инициализирует новый экземпляр класса PredictionAPIClient.</span><span class="sxs-lookup"><span data-stu-id="56f78-221">Initializes a new instance of the PredictionAPIClient class.</span></span>
    syntax:
      content: 'new PredictionAPIClient(apiKey: string, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: apiKey
          type:
            - string
          description: <span data-ttu-id="56f78-222">Ключ API.</span><span class="sxs-lookup"><span data-stu-id="56f78-222">API key.</span></span>
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="56f78-223">Поддерживаемые конечные точки Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="56f78-223">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="56f78-224">Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.</span><span class="sxs-lookup"><span data-stu-id="56f78-224">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="56f78-225">Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.</span><span class="sxs-lookup"><span data-stu-id="56f78-225">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="56f78-226">OperationSpec, используемые для заполнения httpRequest.</span><span class="sxs-lookup"><span data-stu-id="56f78-226">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="56f78-227">Обратный вызов, вызываемый после получения ответа.</span><span class="sxs-lookup"><span data-stu-id="56f78-227">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="56f78-228">Отправьте предоставленный httpRequest.</span><span class="sxs-lookup"><span data-stu-id="56f78-228">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-customvision-prediction'
references:
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
    name: PredictionAPIClientContext
    spec.typeScript:
      - name: PredictionAPIClientContext
        fullName: PredictionAPIClientContext
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-customvision-prediction.ImagePrediction>
    name: ImagePrediction>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImagePrediction
        fullName: ImagePrediction
        uid: '@azure/cognitiveservices-customvision-prediction.ImagePrediction'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
    name: PredictionAPIClientClassifyImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageOptionalParams
        fullName: PredictionAPIClientClassifyImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
    name: ImageUrl
    spec.typeScript:
      - name: ImageUrl
        fullName: ImageUrl
        uid: '@azure/cognitiveservices-customvision-prediction.ImageUrl'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
    name: PredictionAPIClientClassifyImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
    name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientClassifyImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientClassifyImageWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
    name: PredictionAPIClientDetectImageOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageOptionalParams
        fullName: PredictionAPIClientDetectImageOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
    name: PredictionAPIClientDetectImageUrlOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlOptionalParams
        fullName: PredictionAPIClientDetectImageUrlOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageUrlWithNoStoreOptionalParams'
  - uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'
    name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
    spec.typeScript:
      - name: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        fullName: PredictionAPIClientDetectImageWithNoStoreOptionalParams
        uid: '@azure/cognitiveservices-customvision-prediction.PredictionAPIClientDetectImageWithNoStoreOptionalParams'