### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail'
    name: NotificationRecipientEmail
    fullName: NotificationRecipientEmail
    children:
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_2'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_1'
      - '@azure/arm-apimanagement.NotificationRecipientEmail.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий NotificationRecipientEmail.'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists'
    name: 'checkEntityExists(string, string, Models.NotificationName, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Определите, если уведомление по электронной почте получателю подписка на уведомления.'
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_2'
    name: 'checkEntityExists(string, string, Models.NotificationName, string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.checkEntityExists_1'
    name: 'checkEntityExists(string, string, Models.NotificationName, string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate'
    name: 'createOrUpdate(string, string, Models.NotificationName, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Добавляет адрес электронной почты в список получателей уведомления.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_2'
    name: 'createOrUpdate(string, string, Models.NotificationName, string, RequestOptionsBase, ServiceCallback<RecipientEmailContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options: RequestOptionsBase, callback: ServiceCallback<RecipientEmailContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.createOrUpdate_1'
    name: 'createOrUpdate(string, string, Models.NotificationName, string, ServiceCallback<RecipientEmailContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, callback: ServiceCallback<RecipientEmailContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod'
    name: 'deleteMethod(string, string, Models.NotificationName, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаляет сообщения электронной почты из списка уведомлений.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_2'
    name: 'deleteMethod(string, string, Models.NotificationName, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.deleteMethod_1'
    name: 'deleteMethod(string, string, Models.NotificationName, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, email: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: email
          type:
            - string
          description: Идентификатор электронной почты.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification'
    name: 'listByNotification(string, string, Models.NotificationName, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получает список получателей уведомлений по электронной почте, которые подписаны на уведомления.'
    syntax:
      content: 'function listByNotification(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.NotificationRecipientEmailListByNotificationResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_2'
    name: 'listByNotification(string, string, Models.NotificationName, RequestOptionsBase, ServiceCallback<RecipientEmailCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByNotification(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, options: RequestOptionsBase, callback: ServiceCallback<RecipientEmailCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailListByNotificationResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.listByNotification_1'
    name: 'listByNotification(string, string, Models.NotificationName, ServiceCallback<RecipientEmailCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByNotification(resourceGroupName: string, serviceName: string, notificationName: Models.NotificationName, callback: ServiceCallback<RecipientEmailCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: notificationName
          type:
            - Models.NotificationName
          description: 'Идентификатор имени для уведомлений. Ниже перечислены возможные значения. «RequestPublisherNotificationMessage», «PurchasePublisherNotificationMessage», «NewApplicationNotificationMessage», «СК», «NewIssuePublisherNotificationMessage», «AccountClosedPublisher», " QuotaLimitApproachingPublisherNotificationMessage "'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.NotificationRecipientEmailListByNotificationResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.NotificationRecipientEmail.constructor'
    name: NotificationRecipientEmail(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте NotificationRecipientEmail.
    syntax:
      content: 'new NotificationRecipientEmail(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.RecipientEmailContract>
    name: RecipientEmailContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecipientEmailContract
        fullName: RecipientEmailContract
        uid: '@azure/arm-apimanagement.RecipientEmailContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.RecipientEmailCollection>
    name: RecipientEmailCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecipientEmailCollection
        fullName: RecipientEmailCollection
        uid: '@azure/arm-apimanagement.RecipientEmailCollection'
      - name: '>'
        fullName: '>'