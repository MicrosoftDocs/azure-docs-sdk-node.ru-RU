### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Logger'
    name: Logger
    fullName: Logger
    children:
      - '@azure/arm-apimanagement.Logger.createOrUpdate_2'
      - '@azure/arm-apimanagement.Logger.createOrUpdate'
      - '@azure/arm-apimanagement.Logger.createOrUpdate_1'
      - '@azure/arm-apimanagement.Logger.deleteMethod_2'
      - '@azure/arm-apimanagement.Logger.deleteMethod'
      - '@azure/arm-apimanagement.Logger.deleteMethod_1'
      - '@azure/arm-apimanagement.Logger.get'
      - '@azure/arm-apimanagement.Logger.get_2'
      - '@azure/arm-apimanagement.Logger.get_1'
      - '@azure/arm-apimanagement.Logger.getEntityTag'
      - '@azure/arm-apimanagement.Logger.getEntityTag_2'
      - '@azure/arm-apimanagement.Logger.getEntityTag_1'
      - '@azure/arm-apimanagement.Logger.listByService_2'
      - '@azure/arm-apimanagement.Logger.listByService'
      - '@azure/arm-apimanagement.Logger.listByService_1'
      - '@azure/arm-apimanagement.Logger.listByServiceNext'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_2'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_1'
      - '@azure/arm-apimanagement.Logger.constructor'
      - '@azure/arm-apimanagement.Logger.update'
      - '@azure/arm-apimanagement.Logger.update_2'
      - '@azure/arm-apimanagement.Logger.update_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="9d9dd-101">Класс, представляющий средство ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-101">Class representing a Logger.</span></span>'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, LoggerContract, LoggerCreateOrUpdateOptionalParams, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options: LoggerCreateOrUpdateOptionalParams, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-102">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-102">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-103">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-103">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-104">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-104">Logger identifier.</span></span> <span data-ttu-id="9d9dd-105">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-105">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="9d9dd-106">Создание параметров.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-106">Create parameters.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
          description: <span data-ttu-id="9d9dd-107">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-107">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="9d9dd-108">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-108">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate'
    name: 'createOrUpdate(string, string, string, LoggerContract, Models.LoggerCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-109">Создание или обновление средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-109">Creates or Updates a logger.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options?: Models.LoggerCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-110">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-110">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-111">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-111">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-112">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-112">Logger identifier.</span></span> <span data-ttu-id="9d9dd-113">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-113">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="9d9dd-114">Создание параметров.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-114">Create parameters.</span></span>
        - id: options
          type:
            - Models.LoggerCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, LoggerContract, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-115">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-115">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-116">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-116">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-117">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-117">Logger identifier.</span></span> <span data-ttu-id="9d9dd-118">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-118">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="9d9dd-119">Создание параметров.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-119">Create parameters.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="9d9dd-120">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-120">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, LoggerDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options: LoggerDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-121">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-121">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-122">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-122">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-123">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-123">Logger identifier.</span></span> <span data-ttu-id="9d9dd-124">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-124">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-125">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-125">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-126">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-126">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
          description: <span data-ttu-id="9d9dd-127">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-128">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod'
    name: 'deleteMethod(string, string, string, string, Models.LoggerDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-129">Удаляет указанного регистратора.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-129">Deletes the specified logger.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options?: Models.LoggerDeleteMethodOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-130">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-130">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-131">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-131">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-132">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-132">Logger identifier.</span></span> <span data-ttu-id="9d9dd-133">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-133">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-134">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-134">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-135">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-135">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - Models.LoggerDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-136">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-136">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-137">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-137">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-138">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-138">Logger identifier.</span></span> <span data-ttu-id="9d9dd-139">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-139">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-140">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-140">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-141">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-141">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-142">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-142">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9d9dd-143">Возвращает сведения о средство ведения журнала, указанного по его идентификатору.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-143">Gets the details of the logger specified by its identifier.</span></span>'
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-144">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-144">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-145">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-145">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-146">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-146">Logger identifier.</span></span> <span data-ttu-id="9d9dd-147">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-147">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-148">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-148">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-149">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-149">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-150">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-150">Logger identifier.</span></span> <span data-ttu-id="9d9dd-151">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-151">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="9d9dd-152">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-152">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="9d9dd-153">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-153">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_1'
    name: 'get(string, string, string, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-154">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-154">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-155">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-155">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-156">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-156">Logger identifier.</span></span> <span data-ttu-id="9d9dd-157">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-157">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="9d9dd-158">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-158">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9d9dd-159">Получает версия состояния сущности (Etag) средство ведения журнала, указанного по его идентификатору.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-159">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>'
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-160">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-160">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-161">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-161">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-162">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-162">Logger identifier.</span></span> <span data-ttu-id="9d9dd-163">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-163">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-164">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-164">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-165">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-165">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-166">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-166">Logger identifier.</span></span> <span data-ttu-id="9d9dd-167">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-167">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="9d9dd-168">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-168">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-169">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-169">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-170">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-170">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-171">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-171">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-172">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-172">Logger identifier.</span></span> <span data-ttu-id="9d9dd-173">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-173">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-174">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-174">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_2'
    name: 'listByService(string, string, LoggerListByServiceOptionalParams, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: LoggerListByServiceOptionalParams, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-175">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-175">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-176">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-176">The name of the API Management service.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
          description: <span data-ttu-id="9d9dd-177">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="9d9dd-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-178">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService'
    name: 'listByService(string, string, Models.LoggerListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-179">Перечисляет коллекцию средств ведения журнала в указанном экземпляре службы.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-179">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.LoggerListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-180">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-180">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-181">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-181">The name of the API Management service.</span></span>
        - id: options
          type:
            - Models.LoggerListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_1'
    name: 'listByService(string, string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-182">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-182">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-183">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-183">The name of the API Management service.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="9d9dd-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-184">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-185">Перечисляет коллекцию средств ведения журнала в указанном экземпляре службы.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-185">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="9d9dd-186">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-186">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="9d9dd-187">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-187">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="9d9dd-188">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-188">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="9d9dd-189">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-189">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="9d9dd-190">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-190">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="9d9dd-191">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-191">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.constructor'
    name: Logger(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-192">Создание средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-192">Create a Logger.</span></span>
    syntax:
      content: 'new Logger(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            <span data-ttu-id="9d9dd-193">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-193">Reference to the service client.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update'
    name: 'update(string, string, string, LoggerUpdateContract, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9d9dd-194">Обновляет существующее средство ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-194">Updates an existing logger.</span></span>
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-195">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-195">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-196">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-196">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-197">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-197">Logger identifier.</span></span> <span data-ttu-id="9d9dd-198">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-198">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="9d9dd-199">Обновите параметры.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-199">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-200">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-200">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-201">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-201">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_2'
    name: 'update(string, string, string, LoggerUpdateContract, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-202">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-202">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-203">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-203">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-204">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-204">Logger identifier.</span></span> <span data-ttu-id="9d9dd-205">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-205">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="9d9dd-206">Обновите параметры.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-206">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-207">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-207">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-208">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-208">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="9d9dd-209">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="9d9dd-209">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-210">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-210">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_1'
    name: 'update(string, string, string, LoggerUpdateContract, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="9d9dd-211">Имя группы ресурсов.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-211">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="9d9dd-212">Имя службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-212">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="9d9dd-213">Идентификатор средства ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-213">Logger identifier.</span></span> <span data-ttu-id="9d9dd-214">Должно быть уникальным в экземпляре службы управления API.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-214">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="9d9dd-215">Обновите параметры.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-215">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="9d9dd-216">ETag сущности.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-216">ETag of the Entity.</span></span> <span data-ttu-id="9d9dd-217">ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть \* для Безусловное обновление.</span><span class="sxs-lookup"><span data-stu-id="9d9dd-217">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="9d9dd-218">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="9d9dd-218">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.LoggerContract'
    name: LoggerContract
    spec.typeScript:
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
    name: LoggerCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: LoggerCreateOrUpdateOptionalParams
        fullName: LoggerCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
    name: LoggerDeleteMethodOptionalParams
    spec.typeScript:
      - name: LoggerDeleteMethodOptionalParams
        fullName: LoggerDeleteMethodOptionalParams
        uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: '@azure/arm-apimanagement.LoggerCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
    name: LoggerListByServiceOptionalParams
    spec.typeScript:
      - name: LoggerListByServiceOptionalParams
        fullName: LoggerListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerUpdateContract'
    name: LoggerUpdateContract
    spec.typeScript:
      - name: LoggerUpdateContract
        fullName: LoggerUpdateContract
        uid: '@azure/arm-apimanagement.LoggerUpdateContract'