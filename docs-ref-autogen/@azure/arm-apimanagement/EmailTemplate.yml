### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.EmailTemplate'
    name: EmailTemplate
    fullName: EmailTemplate
    children:
      - '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_2'
      - '@azure/arm-apimanagement.EmailTemplate.createOrUpdate'
      - '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_1'
      - '@azure/arm-apimanagement.EmailTemplate.deleteMethod'
      - '@azure/arm-apimanagement.EmailTemplate.deleteMethod_2'
      - '@azure/arm-apimanagement.EmailTemplate.deleteMethod_1'
      - '@azure/arm-apimanagement.EmailTemplate.constructor'
      - '@azure/arm-apimanagement.EmailTemplate.get'
      - '@azure/arm-apimanagement.EmailTemplate.get_2'
      - '@azure/arm-apimanagement.EmailTemplate.get_1'
      - '@azure/arm-apimanagement.EmailTemplate.getEntityTag'
      - '@azure/arm-apimanagement.EmailTemplate.getEntityTag_2'
      - '@azure/arm-apimanagement.EmailTemplate.getEntityTag_1'
      - '@azure/arm-apimanagement.EmailTemplate.listByService_2'
      - '@azure/arm-apimanagement.EmailTemplate.listByService'
      - '@azure/arm-apimanagement.EmailTemplate.listByService_1'
      - '@azure/arm-apimanagement.EmailTemplate.listByServiceNext'
      - '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_2'
      - '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_1'
      - '@azure/arm-apimanagement.EmailTemplate.update'
      - '@azure/arm-apimanagement.EmailTemplate.update_2'
      - '@azure/arm-apimanagement.EmailTemplate.update_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий EmailTemplate.'
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_2'
    name: 'createOrUpdate(string, string, Models.TemplateName, EmailTemplateUpdateParameters, EmailTemplateCreateOrUpdateOptionalParams, ServiceCallback<EmailTemplateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, options: EmailTemplateCreateOrUpdateOptionalParams, callback: ServiceCallback<EmailTemplateContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: По электронной почте обновления параметров шаблона.
        - id: options
          type:
            - '@azure/arm-apimanagement.EmailTemplateCreateOrUpdateOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate'
    name: 'createOrUpdate(string, string, Models.TemplateName, EmailTemplateUpdateParameters, Models.EmailTemplateCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет шаблон электронного сообщения.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, options?: Models.EmailTemplateCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: По электронной почте обновления параметров шаблона.
        - id: options
          type:
            - Models.EmailTemplateCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EmailTemplateCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.createOrUpdate_1'
    name: 'createOrUpdate(string, string, Models.TemplateName, EmailTemplateUpdateParameters, ServiceCallback<EmailTemplateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, callback: ServiceCallback<EmailTemplateContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: По электронной почте обновления параметров шаблона.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod'
    name: 'deleteMethod(string, string, Models.TemplateName, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Сбросьте шаблона сообщения электронной почты для экземпляра службы управления API, предоставляемые шаблон по умолчанию.'
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod_2'
    name: 'deleteMethod(string, string, Models.TemplateName, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.deleteMethod_1'
    name: 'deleteMethod(string, string, Models.TemplateName, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.constructor'
    name: EmailTemplate(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте EmailTemplate.
    syntax:
      content: 'new EmailTemplate(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.get'
    name: 'get(string, string, Models.TemplateName, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает сведения о шаблон сообщения электронной почты, указанного по его идентификатору.'
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EmailTemplateGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.get_2'
    name: 'get(string, string, Models.TemplateName, RequestOptionsBase, ServiceCallback<EmailTemplateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options: RequestOptionsBase, callback: ServiceCallback<EmailTemplateContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.get_1'
    name: 'get(string, string, Models.TemplateName, ServiceCallback<EmailTemplateContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, callback: ServiceCallback<EmailTemplateContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateContract>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag'
    name: 'getEntityTag(string, string, Models.TemplateName, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получает версия состояния сущности (Etag) шаблон сообщения электронной почты, указанного по его идентификатору.'
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EmailTemplateGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag_2'
    name: 'getEntityTag(string, string, Models.TemplateName, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.getEntityTag_1'
    name: 'getEntityTag(string, string, Models.TemplateName, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByService_2'
    name: 'listByService(string, string, EmailTemplateListByServiceOptionalParams, ServiceCallback<EmailTemplateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: EmailTemplateListByServiceOptionalParams, callback: ServiceCallback<EmailTemplateCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: options
          type:
            - '@azure/arm-apimanagement.EmailTemplateListByServiceOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByService'
    name: 'listByService(string, string, Models.EmailTemplateListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Перечисляет коллекцию свойств, определенных в экземпляре службы.'
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.EmailTemplateListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: options
          type:
            - Models.EmailTemplateListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByService_1'
    name: 'listByService(string, string, ServiceCallback<EmailTemplateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<EmailTemplateCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Перечисляет коллекцию свойств, определенных в экземпляре службы.'
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<EmailTemplateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<EmailTemplateCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<EmailTemplateCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<EmailTemplateCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.EmailTemplateCollection>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EmailTemplateListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.update'
    name: 'update(string, string, Models.TemplateName, EmailTemplateUpdateParameters, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет указанный шаблон электронной почты.
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: Обновите параметры.
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.update_2'
    name: 'update(string, string, Models.TemplateName, EmailTemplateUpdateParameters, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: Обновите параметры.
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.EmailTemplate.update_1'
    name: 'update(string, string, Models.TemplateName, EmailTemplateUpdateParameters, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, templateName: Models.TemplateName, parameters: EmailTemplateUpdateParameters, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: serviceName
          type:
            - string
          description: Имя службы управления API.
        - id: templateName
          type:
            - Models.TemplateName
          description: 'Идентификатор имени шаблона сообщения электронной почты. Возможные значения: «applicationApprovedNotificationMessage», «accountClosedDeveloper», «quotaLimitApproachingDeveloperNotificationMessage», «newDeveloperNotificationMessage», «emailChangeIdentityDefault», " inviteUserNotificationMessage ", «newCommentNotificationMessage», «confirmSignUpIdentityDefault», «newIssueNotificationMessage», «purchaseDeveloperNotificationMessage», «passwordResetIdentityDefault»," passwordResetByAdminNotificationMessage ", «rejectDeveloperNotificationMessage», «requestDeveloperNotificationMessage»'
        - id: parameters
          type:
            - '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
          description: Обновите параметры.
        - id: ifMatch
          type:
            - string
          description: 'ETag сущности. ETag должен соответствовать текущее состояние сущности из заголовка ответа на запрос GET, или он должен быть * для Безусловное обновление.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
    name: EmailTemplateUpdateParameters
    spec.typeScript:
      - name: EmailTemplateUpdateParameters
        fullName: EmailTemplateUpdateParameters
        uid: '@azure/arm-apimanagement.EmailTemplateUpdateParameters'
  - uid: ServiceCallback<@azure/arm-apimanagement.EmailTemplateContract>
    name: EmailTemplateContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EmailTemplateContract
        fullName: EmailTemplateContract
        uid: '@azure/arm-apimanagement.EmailTemplateContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.EmailTemplateCreateOrUpdateOptionalParams'
    name: EmailTemplateCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: EmailTemplateCreateOrUpdateOptionalParams
        fullName: EmailTemplateCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.EmailTemplateCreateOrUpdateOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.EmailTemplateCollection>
    name: EmailTemplateCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EmailTemplateCollection
        fullName: EmailTemplateCollection
        uid: '@azure/arm-apimanagement.EmailTemplateCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.EmailTemplateListByServiceOptionalParams'
    name: EmailTemplateListByServiceOptionalParams
    spec.typeScript:
      - name: EmailTemplateListByServiceOptionalParams
        fullName: EmailTemplateListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.EmailTemplateListByServiceOptionalParams'