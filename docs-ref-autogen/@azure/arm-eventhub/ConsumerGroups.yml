### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-eventhub.ConsumerGroups'
    name: ConsumerGroups
    fullName: ConsumerGroups
    children:
      - '@azure/arm-eventhub.ConsumerGroups.constructor'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_2'
      - '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_1'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod_2'
      - '@azure/arm-eventhub.ConsumerGroups.deleteMethod_1'
      - '@azure/arm-eventhub.ConsumerGroups.get'
      - '@azure/arm-eventhub.ConsumerGroups.get_2'
      - '@azure/arm-eventhub.ConsumerGroups.get_1'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub_2'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHub_1'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_2'
      - '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="bc837-101">Класс, представляющий ConsumerGroups.</span><span class="sxs-lookup"><span data-stu-id="bc837-101">Class representing a ConsumerGroups.</span></span>'
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.constructor'
    name: ConsumerGroups(EventHubManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="bc837-102">Создайте ConsumerGroups.</span><span class="sxs-lookup"><span data-stu-id="bc837-102">Create a ConsumerGroups.</span></span>
    syntax:
      content: 'new ConsumerGroups(client: EventHubManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-eventhub.EventHubManagementClientContext'
          description: |
            <span data-ttu-id="bc837-103">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="bc837-103">Reference to the service client.</span></span>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate'
    name: 'createOrUpdate(string, string, string, string, ConsumerGroup, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="bc837-104">Создает или обновляет группу потребителей концентраторов событий в качестве вложенного ресурса в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="bc837-104">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-105">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-105">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-106">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-106">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-107">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-107">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-108">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-108">The consumer group name</span></span>
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: <span data-ttu-id="bc837-109">Параметры для создания или обновления ресурса группы потребителей.</span><span class="sxs-lookup"><span data-stu-id="bc837-109">Parameters supplied to create or update a consumer group resource.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, string, ConsumerGroup, RequestOptionsBase, ServiceCallback<ConsumerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options: RequestOptionsBase, callback: ServiceCallback<ConsumerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-110">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-110">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-111">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-111">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-112">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-112">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-113">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-113">The consumer group name</span></span>
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: <span data-ttu-id="bc837-114">Параметры для создания или обновления ресурса группы потребителей.</span><span class="sxs-lookup"><span data-stu-id="bc837-114">Parameters supplied to create or update a consumer group resource.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="bc837-115">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="bc837-115">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            <span data-ttu-id="bc837-116">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-116">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, string, ConsumerGroup, ServiceCallback<ConsumerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, callback: ServiceCallback<ConsumerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-117">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-117">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-118">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-118">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-119">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-119">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-120">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-120">The consumer group name</span></span>
        - id: parameters
          type:
            - '@azure/arm-eventhub.ConsumerGroup'
          description: <span data-ttu-id="bc837-121">Параметры для создания или обновления ресурса группы потребителей.</span><span class="sxs-lookup"><span data-stu-id="bc837-121">Parameters supplied to create or update a consumer group resource.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            <span data-ttu-id="bc837-122">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-122">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="bc837-123">Удаляет группу потребителей из указанной группы ресурсов и концентратора событий.</span><span class="sxs-lookup"><span data-stu-id="bc837-123">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-124">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-124">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-125">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-125">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-126">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-126">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-127">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-127">The consumer group name</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-128">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-128">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-129">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-129">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-130">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-130">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-131">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-131">The consumer group name</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="bc837-132">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="bc837-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="bc837-133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-133">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-134">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-134">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-135">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-135">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-136">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-136">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-137">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-137">The consumer group name</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="bc837-138">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-138">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get'
    name: 'get(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="bc837-139">Получает описание для группы потребителей на указанный.</span><span class="sxs-lookup"><span data-stu-id="bc837-139">Gets a description for the specified consumer group.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-140">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-140">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-141">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-141">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-142">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-142">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-143">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-143">The consumer group name</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get_2'
    name: 'get(string, string, string, string, RequestOptionsBase, ServiceCallback<ConsumerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ConsumerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-144">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-144">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-145">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-145">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-146">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-146">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-147">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-147">The consumer group name</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="bc837-148">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="bc837-148">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            <span data-ttu-id="bc837-149">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-149">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.get_1'
    name: 'get(string, string, string, string, ServiceCallback<ConsumerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<ConsumerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-150">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-150">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-151">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-151">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-152">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-152">The Event Hub name</span></span>
        - id: consumerGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-153">Имя группы потребителей</span><span class="sxs-lookup"><span data-stu-id="bc837-153">The consumer group name</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
          description: |
            <span data-ttu-id="bc837-154">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-154">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsGetResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub_2'
    name: 'listByEventHub(string, string, string, ConsumerGroupsListByEventHubOptionalParams, ServiceCallback<ConsumerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options: ConsumerGroupsListByEventHubOptionalParams, callback: ServiceCallback<ConsumerGroupListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-155">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-155">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-156">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-156">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-157">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-157">The Event Hub name</span></span>
        - id: options
          type:
            - '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'
          description: <span data-ttu-id="bc837-158">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="bc837-158">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            <span data-ttu-id="bc837-159">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-159">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub'
    name: 'listByEventHub(string, string, string, Models.ConsumerGroupsListByEventHubOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="bc837-160">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="bc837-160">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="bc837-161">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="bc837-161">An empty feed is returned if no consumer group exists in the Namespace.</span></span>'
    syntax:
      content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options?: Models.ConsumerGroupsListByEventHubOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-162">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-162">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-163">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-163">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-164">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-164">The Event Hub name</span></span>
        - id: options
          type:
            - Models.ConsumerGroupsListByEventHubOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHub_1'
    name: 'listByEventHub(string, string, string, ServiceCallback<ConsumerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, callback: ServiceCallback<ConsumerGroupListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="bc837-165">Имя группы ресурсов в подписке azure.</span><span class="sxs-lookup"><span data-stu-id="bc837-165">Name of the resource group within the azure subscription.</span></span>
        - id: namespaceName
          type:
            - string
          description: <span data-ttu-id="bc837-166">Имя пространства имен</span><span class="sxs-lookup"><span data-stu-id="bc837-166">The Namespace name</span></span>
        - id: eventHubName
          type:
            - string
          description: <span data-ttu-id="bc837-167">Имя концентратора событий</span><span class="sxs-lookup"><span data-stu-id="bc837-167">The Event Hub name</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            <span data-ttu-id="bc837-168">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-168">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext'
    name: 'listByEventHubNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="bc837-169">Получает все группы потребителей в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="bc837-169">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="bc837-170">Пустой канал возвращается в том случае, если группа получателей не существует в пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="bc837-170">An empty feed is returned if no consumer group exists in the Namespace.</span></span>'
    syntax:
      content: 'function listByEventHubNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="bc837-171">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="bc837-171">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_2'
    name: 'listByEventHubNext(string, RequestOptionsBase, ServiceCallback<ConsumerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByEventHubNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ConsumerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="bc837-172">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="bc837-172">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="bc837-173">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="bc837-173">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            <span data-ttu-id="bc837-174">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-174">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubNextResponse>
    package: '@azure/arm-eventhub'
  - uid: '@azure/arm-eventhub.ConsumerGroups.listByEventHubNext_1'
    name: 'listByEventHubNext(string, ServiceCallback<ConsumerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByEventHubNext(nextPageLink: string, callback: ServiceCallback<ConsumerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="bc837-175">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="bc837-175">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
          description: |
            <span data-ttu-id="bc837-176">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="bc837-176">The callback</span></span>
      return:
        type:
          - Promise<Models.ConsumerGroupsListByEventHubNextResponse>
    package: '@azure/arm-eventhub'
references:
  - uid: '@azure/arm-eventhub.EventHubManagementClientContext'
    name: EventHubManagementClientContext
    spec.typeScript:
      - name: EventHubManagementClientContext
        fullName: EventHubManagementClientContext
        uid: '@azure/arm-eventhub.EventHubManagementClientContext'
  - uid: '@azure/arm-eventhub.ConsumerGroup'
    name: ConsumerGroup
    spec.typeScript:
      - name: ConsumerGroup
        fullName: ConsumerGroup
        uid: '@azure/arm-eventhub.ConsumerGroup'
  - uid: ServiceCallback<@azure/arm-eventhub.ConsumerGroup>
    name: ConsumerGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConsumerGroup
        fullName: ConsumerGroup
        uid: '@azure/arm-eventhub.ConsumerGroup'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-eventhub.ConsumerGroupListResult>
    name: ConsumerGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConsumerGroupListResult
        fullName: ConsumerGroupListResult
        uid: '@azure/arm-eventhub.ConsumerGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'
    name: ConsumerGroupsListByEventHubOptionalParams
    spec.typeScript:
      - name: ConsumerGroupsListByEventHubOptionalParams
        fullName: ConsumerGroupsListByEventHubOptionalParams
        uid: '@azure/arm-eventhub.ConsumerGroupsListByEventHubOptionalParams'