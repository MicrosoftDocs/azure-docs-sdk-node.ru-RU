### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams'
    name: CommitmentPlansListInResourceGroupOptionalParams
    fullName: CommitmentPlansListInResourceGroupOptionalParams
    children:
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.abortSignal'
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.customHeaders'
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.onDownloadProgress'
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.onUploadProgress'
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.skipToken'
      - '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Сигнал, который может использоваться для отмены запросов.'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который запускается после загрузки.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который срабатывает при ход передачи.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.skipToken'
    name: skipToken
    fullName: skipToken
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'skipToken?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-commitmentplans'
  - uid: '@azure/arm-commitmentplans.CommitmentPlansListInResourceGroupOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Число микросекунд, которое запрос может выполняться автоматически прекращается.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-commitmentplans'