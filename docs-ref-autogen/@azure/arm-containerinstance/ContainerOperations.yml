### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerinstance.ContainerOperations'
    name: ContainerOperations
    fullName: ContainerOperations
    children:
      - '@azure/arm-containerinstance.ContainerOperations.constructor'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand_2'
      - '@azure/arm-containerinstance.ContainerOperations.executeCommand_1'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs_2'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs'
      - '@azure/arm-containerinstance.ContainerOperations.listLogs_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий ContainerOperations.'
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.constructor'
    name: ContainerOperations(ContainerInstanceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте ContainerOperations.
    syntax:
      content: 'new ContainerOperations(client: ContainerInstanceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand'
    name: 'executeCommand(string, string, string, ContainerExecRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Выполняет команду для экземпляра конкретный контейнер в указанной группе ресурсов и группы контейнеров.
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: Запрос команды exec.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand_2'
    name: 'executeCommand(string, string, string, ContainerExecRequest, RequestOptionsBase, ServiceCallback<ContainerExecResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, options: RequestOptionsBase, callback: ServiceCallback<ContainerExecResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: Запрос команды exec.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.executeCommand_1'
    name: 'executeCommand(string, string, string, ContainerExecRequest, ServiceCallback<ContainerExecResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function executeCommand(resourceGroupName: string, containerGroupName: string, containerName: string, containerExecRequest: ContainerExecRequest, callback: ServiceCallback<ContainerExecResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: containerExecRequest
          type:
            - '@azure/arm-containerinstance.ContainerExecRequest'
          description: Запрос команды exec.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ContainerExecuteCommandResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs_2'
    name: 'listLogs(string, string, string, ContainerListLogsOptionalParams, ServiceCallback<Logs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options: ContainerListLogsOptionalParams, callback: ServiceCallback<Logs>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: options
          type:
            - '@azure/arm-containerinstance.ContainerListLogsOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.Logs>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs'
    name: 'listLogs(string, string, string, Models.ContainerListLogsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получение журналов для экземпляра указанного контейнера в указанной группе ресурсов и группы контейнеров.
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, options?: Models.ContainerListLogsOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: options
          type:
            - Models.ContainerListLogsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerOperations.listLogs_1'
    name: 'listLogs(string, string, string, ServiceCallback<Logs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listLogs(resourceGroupName: string, containerGroupName: string, containerName: string, callback: ServiceCallback<Logs>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: containerGroupName
          type:
            - string
          description: Имя группы контейнеров.
        - id: containerName
          type:
            - string
          description: Имя экземпляра контейнера.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.Logs>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ContainerListLogsResponse>
    package: '@azure/arm-containerinstance'
references:
  - uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
    name: ContainerInstanceManagementClientContext
    spec.typeScript:
      - name: ContainerInstanceManagementClientContext
        fullName: ContainerInstanceManagementClientContext
        uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
  - uid: '@azure/arm-containerinstance.ContainerExecRequest'
    name: ContainerExecRequest
    spec.typeScript:
      - name: ContainerExecRequest
        fullName: ContainerExecRequest
        uid: '@azure/arm-containerinstance.ContainerExecRequest'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerExecResponse>
    name: ContainerExecResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerExecResponse
        fullName: ContainerExecResponse
        uid: '@azure/arm-containerinstance.ContainerExecResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerinstance.Logs>
    name: Logs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Logs
        fullName: Logs
        uid: '@azure/arm-containerinstance.Logs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-containerinstance.ContainerListLogsOptionalParams'
    name: ContainerListLogsOptionalParams
    spec.typeScript:
      - name: ContainerListLogsOptionalParams
        fullName: ContainerListLogsOptionalParams
        uid: '@azure/arm-containerinstance.ContainerListLogsOptionalParams'