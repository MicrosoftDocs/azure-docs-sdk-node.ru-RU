### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext'
    name: LocalSearchClientContext
    fullName: LocalSearchClientContext
    children:
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.credentials'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.constructor'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendOperationRequest'
      - '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.constructor'
    name: 'LocalSearchClientContext(ServiceClientCredentials, Models.LocalSearchClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Инициализирует новый экземпляр класса LocalSearchClientContext.
    syntax:
      content: 'new LocalSearchClientContext(credentials: ServiceClientCredentials, options?: Models.LocalSearchClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 'Учетные данные для подписки, которые однозначно идентифицируют подписку клиента.'
        - id: options
          type:
            - Models.LocalSearchClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'OperationSpec, используемые для заполнения httpRequest.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Обратный вызов, вызываемый после получения ответа.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-localsearch'
  - uid: '@azure/cognitiveservices-localsearch.LocalSearchClientContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправьте предоставленный httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-localsearch'