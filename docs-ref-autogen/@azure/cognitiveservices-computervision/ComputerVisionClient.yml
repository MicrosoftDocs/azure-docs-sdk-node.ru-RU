### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient'
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
    name: 'analyzeImage(string, ComputerVisionClientAnalyzeImageOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, options: ComputerVisionClientAnalyzeImageOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-101">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-101">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
          description: <span data-ttu-id="2b2f7-102">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-102">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="2b2f7-103">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-103">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
    name: 'analyzeImage(string, Models.ComputerVisionClientAnalyzeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-104">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-104">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="2b2f7-105">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-105">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="2b2f7-106">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-106">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="2b2f7-107">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-107">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="2b2f7-108">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-108">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-109">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-109">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImage(url: string, options?: Models.ComputerVisionClientAnalyzeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-110">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-110">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-111">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-111">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="2b2f7-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-112">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
    name: 'analyzeImageByDomain(string, string, ComputerVisionClientAnalyzeImageByDomainOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: ComputerVisionClientAnalyzeImageByDomainOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-113">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-113">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-114">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-114">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
          description: <span data-ttu-id="2b2f7-115">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-115">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="2b2f7-116">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-116">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
    name: 'analyzeImageByDomain(string, string, Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-117">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-117">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="2b2f7-118">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-118">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span> <span data-ttu-id="2b2f7-119">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-119">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="2b2f7-120">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-120">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-121">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-121">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="2b2f7-122">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-122">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-123">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-123">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-124">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-124">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-125">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-125">The domain-specific content to recognize.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-126">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-126">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="2b2f7-127">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-127">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-128">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-128">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-129">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-129">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-130">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-130">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="2b2f7-131">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-131">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-132">Эта операция распознает содержимое в изображении, применяя доменную модель.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-132">This operation recognizes content within an image by applying a domain-specific model.</span></span> <span data-ttu-id="2b2f7-133">Список определенных сфер, которые поддерживаются API компьютерного зрения можно получить с помощью запроса GET/Models.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-133">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span> <span data-ttu-id="2b2f7-134">В настоящее время API-Интерфейс предоставляет следующие определенных сфер: знаменитостей, ориентиров.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-134">Currently, the API provides following domain-specific models: celebrities, landmarks.</span></span>
      <span data-ttu-id="2b2f7-135">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-135">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-136">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-136">A successful response will be returned in JSON.</span></span>
      <span data-ttu-id="2b2f7-137">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-137">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-138">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-138">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-139">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-139">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: <span data-ttu-id="2b2f7-140">Содержимое конкретного домена для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-140">The domain-specific content to recognize.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-141">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-141">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            <span data-ttu-id="2b2f7-142">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-142">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageInStreamOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageInStreamOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-143">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-143">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-144">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-144">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="2b2f7-145">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-145">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-146">Эта операция извлекает широкий набор функций языка visual на основе содержимого образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-146">This operation extracts a rich set of visual features based on the image content.</span></span>
      <span data-ttu-id="2b2f7-147">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-147">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="2b2f7-148">В вашем запросе есть необязательный параметр, чтобы можно было выбрать, какие функции для возврата.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-148">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span> <span data-ttu-id="2b2f7-149">По умолчанию изображение категории возвращаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-149">By default, image categories are returned in the response.</span></span>
      <span data-ttu-id="2b2f7-150">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-150">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-151">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-151">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-152">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-152">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-153">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-153">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            <span data-ttu-id="2b2f7-154">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-154">The callback</span></span>
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
    name: 'batchReadFile(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-155">Используйте этот интерфейс, чтобы получить результат операции чтения, используя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-155">Use this interface to get the result of a Read operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="2b2f7-156">При использовании интерфейса чтение файла, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-156">When you use the Read File interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="2b2f7-157">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции «GetReadOperationResult», чтобы открыть OCR результаты.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-157">The ''Operation-Location'' field contains the URL that you must use for your ''GetReadOperationResult'' operation to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFile(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-158">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-158">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
    name: 'batchReadFile(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-159">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-159">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-160">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-160">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-161">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-161">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
    name: 'batchReadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-162">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-162">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-163">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-163">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-164">Используйте этот интерфейс, чтобы получить результат операции чтения документа, применяя алгоритмы состояние art оптического распознавания символов (OCR), оптимизированный для документов с большим количеством текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-164">Use this interface to get the result of a Read Document operation, employing the state-of-the-art Optical Character Recognition (OCR) algorithms optimized for text-heavy documents.</span></span> <span data-ttu-id="2b2f7-165">При использовании интерфейса чтение документа, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-165">When you use the Read Document interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="2b2f7-166">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для «получения чтение результата операции», чтобы открыть результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-166">The ''Operation-Location'' field contains the URL that you must use for your ''Get Read Result operation'' to access OCR results.</span></span>'
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-167">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-167">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-168">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-168">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-169">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-169">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-170">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-170">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-171">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-171">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-172">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-172">The callback</span></span>
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
    name: 'ComputerVisionClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="2b2f7-173">Инициализирует новый экземпляр класса ComputerVisionClient.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-173">Initializes a new instance of the ComputerVisionClient class.</span></span>
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: '<span data-ttu-id="2b2f7-174">Учетные данные для подписки, которые однозначно идентифицируют подписку клиента.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-174">Subscription credentials which uniquely identify client subscription.</span></span>'
        - id: endpoint
          type:
            - string
          description: <span data-ttu-id="2b2f7-175">Поддерживаемые конечные точки Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-175">Supported Cognitive Services endpoints.</span></span>
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
    name: 'describeImage(string, ComputerVisionClientDescribeImageOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, options: ComputerVisionClientDescribeImageOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-176">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-176">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
          description: <span data-ttu-id="2b2f7-177">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="2b2f7-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-178">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
    name: 'describeImage(string, Models.ComputerVisionClientDescribeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-179">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-179">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="2b2f7-180">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-180">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="2b2f7-181">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-181">More than one description can be generated for each image.</span></span> <span data-ttu-id="2b2f7-182">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-182">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="2b2f7-183">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-183">All descriptions are in English.</span></span>
      <span data-ttu-id="2b2f7-184">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-184">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-185">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-185">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-186">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-186">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImage(url: string, options?: Models.ComputerVisionClientDescribeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-187">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-187">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-188">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-188">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="2b2f7-189">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-189">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
    name: 'describeImageInStream(msRest.HttpRequestBody, ComputerVisionClientDescribeImageInStreamOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientDescribeImageInStreamOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-190">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-190">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-191">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-191">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="2b2f7-192">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-192">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
    name: 'describeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-193">Эта операция создает описание изображения в естественный язык для чтения, с помощью полных предложений.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-193">This operation generates a description of an image in human readable language with complete sentences.</span></span> <span data-ttu-id="2b2f7-194">Описание основан на коллекцию содержимого тегов, которые также возвращаются операцией.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-194">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="2b2f7-195">Можно создать несколько описаний для каждого образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-195">More than one description can be generated for each image.</span></span> <span data-ttu-id="2b2f7-196">Описания упорядочиваются по их показатель достоверности.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-196">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="2b2f7-197">Все описания доступны на английском языке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-197">All descriptions are in English.</span></span>
      <span data-ttu-id="2b2f7-198">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-198">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-199">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-199">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-200">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-200">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-201">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-201">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
    name: 'describeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-202">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-202">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            <span data-ttu-id="2b2f7-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-203">The callback</span></span>
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
    name: 'detectObjects(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-204">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-204">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="2b2f7-205">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-205">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-206">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-206">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-207">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-207">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjects(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-208">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-208">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
    name: 'detectObjects(string, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-209">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-209">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-210">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-210">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="2b2f7-211">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-211">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-212">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-212">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="2b2f7-213">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-213">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-214">Выполняет обнаружение объект на указанное изображение.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-214">Performs object detection on the specified image.</span></span>
      <span data-ttu-id="2b2f7-215">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-215">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-216">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-216">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-217">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-217">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-218">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-218">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-219">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-219">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-220">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-220">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="2b2f7-221">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-221">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-222">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-222">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            <span data-ttu-id="2b2f7-223">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-223">The callback</span></span>
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
    name: 'generateThumbnail(number, number, string, ComputerVisionClientGenerateThumbnailOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: ComputerVisionClientGenerateThumbnailOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-224">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-224">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-225">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-225">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-226">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-226">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-227">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-227">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-228">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-228">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-229">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-229">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-230">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-230">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
          description: <span data-ttu-id="2b2f7-231">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-231">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-232">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-232">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
    name: 'generateThumbnail(number, number, string, Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-233">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-233">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="2b2f7-234">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-234">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span> <span data-ttu-id="2b2f7-235">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-235">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="2b2f7-236">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-236">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="2b2f7-237">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-237">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="2b2f7-238">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-238">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="2b2f7-239">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-239">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-240">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-240">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-241">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-241">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-242">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-242">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-243">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-243">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-244">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-244">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-245">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-245">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-246">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-246">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
    name: 'generateThumbnail(number, number, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-247">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-247">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-248">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-248">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-249">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-249">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-250">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-250">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-251">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-251">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-252">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-252">Recommended minimum of 50.</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-253">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-253">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-254">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-254">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ComputerVisionClientGenerateThumbnailInStreamOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options: ComputerVisionClientGenerateThumbnailInStreamOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-255">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-255">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-256">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-256">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-257">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-257">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-258">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-258">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-259">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-259">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-260">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-260">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-261">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-261">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-262">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-262">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-263">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-263">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-264">Эта операция создает эскиз с пользовательской ширину и высоту.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-264">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="2b2f7-265">По умолчанию служба анализирует изображения, идентифицирующую область интересов (ROI) и создает смарт-обрезки координаты, в зависимости от окупаемость Инвестиций при.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-265">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span> <span data-ttu-id="2b2f7-266">Смарт-Обрезка помогает при указании пропорции, отличающимся от изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-266">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span>
      <span data-ttu-id="2b2f7-267">В случае успешного выполнения ответ будет содержать двоичный файл эскиза изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-267">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="2b2f7-268">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-268">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="2b2f7-269">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-269">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="2b2f7-270">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-270">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-271">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-271">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-272">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-272">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-273">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-273">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-274">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-274">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-275">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-275">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-276">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-276">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-277">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-277">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: '<span data-ttu-id="2b2f7-278">Ширина эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-278">Width of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-279">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-279">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-280">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-280">Recommended minimum of 50.</span></span>'
        - id: height
          type:
            - number
          description: '<span data-ttu-id="2b2f7-281">Высота эскиза в пикселях.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-281">Height of the thumbnail, in pixels.</span></span> <span data-ttu-id="2b2f7-282">Он должен быть в диапазоне от 1 до 1024.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-282">It must be between 1 and 1024.</span></span> <span data-ttu-id="2b2f7-283">Рекомендуемое минимальное число 50.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-283">Recommended minimum of 50.</span></span>'
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-284">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-284">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-285">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-285">The callback</span></span>
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
    name: 'getAreaOfInterest(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-286">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-286">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="2b2f7-287">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-287">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-288">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-288">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="2b2f7-289">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-289">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="2b2f7-290">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-290">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-291">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-291">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
    name: 'getAreaOfInterest(string, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-292">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-292">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-293">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-293">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="2b2f7-294">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-294">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-295">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-295">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="2b2f7-296">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-296">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-297">Эта операция возвращает ограничивающий прямоугольник вокруг наиболее важные области изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-297">This operation returns a bounding box around the most important area of the image.</span></span>
      <span data-ttu-id="2b2f7-298">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-298">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-299">Если не удалось выполнить запрос, ответ содержит код ошибки и сообщение, которое поможет определить, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-299">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
      <span data-ttu-id="2b2f7-300">В случае сбоя возвращается код ошибки и сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-300">Upon failure, the error code and an error message are returned.</span></span> <span data-ttu-id="2b2f7-301">Код ошибки может быть одним из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, время ожидания или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-301">The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError.</span></span>
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-302">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-302">An image stream.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-303">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-303">An image stream.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-304">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-304">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="2b2f7-305">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-305">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-306">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-306">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            <span data-ttu-id="2b2f7-307">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-307">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
    name: 'getReadOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-308">Этот интерфейс используется для получения результатов OCR операции чтения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-308">This interface is used for getting OCR results of Read operation.</span></span> <span data-ttu-id="2b2f7-309">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс пакетного чтения файла.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-309">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Batch Read File interface.</span></span>'
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-310">Идентификатор операции чтения, возвращается в ответе интерфейса «Пакетный файл чтения».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-310">Id of read operation returned in the response of the ''Batch Read File'' interface.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
    name: 'getReadOperationResult(string, RequestOptionsBase, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-311">Идентификатор операции чтения, возвращается в ответе интерфейса «Пакетный файл чтения».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-311">Id of read operation returned in the response of the ''Batch Read File'' interface.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-312">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-312">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            <span data-ttu-id="2b2f7-313">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-313">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-314">Идентификатор операции чтения, возвращается в ответе интерфейса «Пакетный файл чтения».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-314">Id of read operation returned in the response of the ''Batch Read File'' interface.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            <span data-ttu-id="2b2f7-315">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-315">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
    name: 'getTextOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-316">Этот интерфейс используется для получения текста результат операции.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="2b2f7-317">URL-адрес на этот интерфейс должен быть извлечен из поля «Operation-Location», возвращенный интерфейс распознавания символов.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-317">The URL to this interface should be retrieved from ''Operation-Location'' field returned from Recognize Text interface.</span></span>'
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-318">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="2b2f7-318">Id of the text operation returned in the response of the ''Recognize Text''</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
    name: 'getTextOperationResult(string, RequestOptionsBase, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-319">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="2b2f7-319">Id of the text operation returned in the response of the ''Recognize Text''</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-320">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-320">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            <span data-ttu-id="2b2f7-321">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-321">The callback</span></span>
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="2b2f7-322">Идентификатор операции текста, возвращенного в ответе распознавания текста</span><span class="sxs-lookup"><span data-stu-id="2b2f7-322">Id of the text operation returned in the response of the ''Recognize Text''</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            <span data-ttu-id="2b2f7-323">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-323">The callback</span></span>
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
    name: listModels(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-324">Эта операция возвращает список определенных сфер, которые поддерживаются API компьютерного зрения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-324">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span> <span data-ttu-id="2b2f7-325">В настоящее время API-Интерфейс поддерживает следующие модели доменного: распознавания знаменитостей, распознавания черт лица.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-325">Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.</span></span>
      <span data-ttu-id="2b2f7-326">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-326">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-327">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-327">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function listModels(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
    name: 'listModels(RequestOptionsBase, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(options: RequestOptionsBase, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-328">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-328">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            <span data-ttu-id="2b2f7-329">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-329">The callback</span></span>
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            <span data-ttu-id="2b2f7-330">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-330">The callback</span></span>
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
    name: 'recognizePrintedText(boolean, string, ComputerVisionClientRecognizePrintedTextOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: ComputerVisionClientRecognizePrintedTextOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-331">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-331">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-332">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-332">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-333">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-333">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
          description: <span data-ttu-id="2b2f7-334">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-334">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="2b2f7-335">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-335">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
    name: 'recognizePrintedText(boolean, string, Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-336">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-336">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="2b2f7-337">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-337">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="2b2f7-338">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-338">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="2b2f7-339">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-339">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-340">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-340">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-341">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-341">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-342">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-342">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-343">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-343">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-344">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-344">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-345">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-345">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="2b2f7-346">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-346">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-347">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-347">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-348">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-348">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-349">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-349">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-350">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-350">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="2b2f7-351">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-351">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-352">Оптическое распознавание символов (OCR) находит текста на изображении и извлечение распознанных символов в поток символов, пригодный для машинной обработки.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-352">Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>
      <span data-ttu-id="2b2f7-353">При успешном выполнении возвращается результаты распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-353">Upon success, the OCR results will be returned.</span></span>
      <span data-ttu-id="2b2f7-354">В случае сбоя возвращается код ошибки, а также сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="2b2f7-355">Код ошибки может принимать одно из InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage или InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-356">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-357">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-358">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-358">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: <span data-ttu-id="2b2f7-359">Ли обнаруживать ориентацию текста в образе.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-359">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="2b2f7-360">С помощью detectOrientation = true OCR служба пытается обнаружить ориентации изображения и исправить его перед дальнейшей обработкой (например в случае ногами).</span><span class="sxs-lookup"><span data-stu-id="2b2f7-360">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-361">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-361">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            <span data-ttu-id="2b2f7-362">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-362">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
    name: 'recognizeText(Models.TextRecognitionMode, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-363">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-363">Recognize Text operation.</span></span> <span data-ttu-id="2b2f7-364">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-364">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="2b2f7-365">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-365">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-366">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-366">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-367">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-367">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-368">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-368">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
    name: 'recognizeText(Models.TextRecognitionMode, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-369">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-369">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-370">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-370">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-371">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-371">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-372">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-372">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-373">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-373">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
    name: 'recognizeText(Models.TextRecognitionMode, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-374">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-374">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-375">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-375">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-376">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-376">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-377">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-377">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-378">Распознает операции поиска.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-378">Recognize Text operation.</span></span> <span data-ttu-id="2b2f7-379">При использовании интерфейса распознавания текста, ответ содержит поле с именем «Operation-Location».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-379">When you use the Recognize Text interface, the response contains a field called ''Operation-Location''.</span></span> <span data-ttu-id="2b2f7-380">Поле «Operation-Location» содержит URL-адрес, который необходимо использовать для проведения операции получить результат операции распознавания текста.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-380">The ''Operation-Location'' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>'
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-381">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-381">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-382">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-382">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-383">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-383">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-384">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-384">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-385">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-385">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-386">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-386">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="2b2f7-387">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-387">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-388">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-388">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-389">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-389">An image stream.</span></span>
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: '<span data-ttu-id="2b2f7-390">Тип текста для распознавания.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-390">Type of text to recognize.</span></span> <span data-ttu-id="2b2f7-391">Ниже перечислены возможные значения. «Рукописные», «печать»</span><span class="sxs-lookup"><span data-stu-id="2b2f7-391">Possible values include: ''Handwritten'', ''Printed''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="2b2f7-392">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-392">The callback</span></span>
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2b2f7-393">Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-393">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="2b2f7-394">Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-394">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="2b2f7-395">OperationSpec, используемые для заполнения httpRequest.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-395">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="2b2f7-396">Обратный вызов, вызываемый после получения ответа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-396">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2b2f7-397">Отправьте предоставленный httpRequest.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-397">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
    name: 'tagImage(string, ComputerVisionClientTagImageOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, options: ComputerVisionClientTagImageOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-398">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-398">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
          description: <span data-ttu-id="2b2f7-399">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-399">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="2b2f7-400">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-400">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
    name: 'tagImage(string, Models.ComputerVisionClientTagImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-401">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-401">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="2b2f7-402">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-402">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="2b2f7-403">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-403">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="2b2f7-404">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-404">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="2b2f7-405">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-405">All tags are in English.</span></span>
      <span data-ttu-id="2b2f7-406">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-406">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-407">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-407">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-408">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-408">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImage(url: string, options?: Models.ComputerVisionClientTagImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-409">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-409">Publicly reachable URL of an image.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientTagImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="2b2f7-410">Публично доступную URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-410">Publicly reachable URL of an image.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="2b2f7-411">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-411">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
    name: 'tagImageInStream(msRest.HttpRequestBody, ComputerVisionClientTagImageInStreamOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientTagImageInStreamOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-412">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-412">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
          description: <span data-ttu-id="2b2f7-413">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="2b2f7-413">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="2b2f7-414">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-414">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
    name: 'tagImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientTagImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="2b2f7-415">Эта операция создает список слов, или теги, в соответствии с содержимым предоставленного образа.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-415">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="2b2f7-416">API компьютерного зрения может возвращать теги на основе объектов, живущих существ, пейзажей и действий в образы.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-416">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="2b2f7-417">В отличие от категорий теги не упорядочены в соответствии с системой иерархических классификации, но соответствуют графического содержимого.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-417">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="2b2f7-418">Теги могут содержать подсказки, чтобы избежать неоднозначности или предоставить контекст, например тег «cello» может сопровождаться подсказка «музыкальных инструментов».</span><span class="sxs-lookup"><span data-stu-id="2b2f7-418">Tags may contain hints to avoid ambiguity or provide context, for example the tag "cello" may be accompanied by the hint "musical instrument".</span></span> <span data-ttu-id="2b2f7-419">Все теги, на английском языке.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-419">All tags are in English.</span></span>
      <span data-ttu-id="2b2f7-420">Поддерживается два метода ввода — (1) загрузки изображения или (2) указав URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-420">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>
      <span data-ttu-id="2b2f7-421">Успешный ответ будет возвращаться в формате JSON.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-421">A successful response will be returned in JSON.</span></span> <span data-ttu-id="2b2f7-422">Если не удалось выполнить запрос, ответ будет содержать код ошибки и сообщение, которое поможет понять, что пошло не так.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-422">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientTagImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-423">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-423">An image stream.</span></span>
        - id: options
          type:
            - Models.ComputerVisionClientTagImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    name: 'tagImageInStream(msRest.HttpRequestBody, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="2b2f7-424">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="2b2f7-424">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            <span data-ttu-id="2b2f7-425">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="2b2f7-425">The callback</span></span>
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    name: ComputerVisionClientContext
    spec.typeScript:
      - name: ComputerVisionClientContext
        fullName: ComputerVisionClientContext
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: '@azure/cognitiveservices-computervision.ImageAnalysis'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
    name: ComputerVisionClientAnalyzeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageOptionalParams
        fullName: ComputerVisionClientAnalyzeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: '@azure/cognitiveservices-computervision.DomainModelResults'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: '@azure/cognitiveservices-computervision.ImageDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
    name: ComputerVisionClientDescribeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageOptionalParams
        fullName: ComputerVisionClientDescribeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
    name: ComputerVisionClientDescribeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageInStreamOptionalParams
        fullName: ComputerVisionClientDescribeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: '@azure/cognitiveservices-computervision.DetectResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
    name: ComputerVisionClientGenerateThumbnailOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
    name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: '@azure/cognitiveservices-computervision.AreaOfInterestResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: '@azure/cognitiveservices-computervision.ReadOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: '@azure/cognitiveservices-computervision.TextOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: '@azure/cognitiveservices-computervision.ListModelsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: '@azure/cognitiveservices-computervision.OcrResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: '@azure/cognitiveservices-computervision.TagResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
    name: ComputerVisionClientTagImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageOptionalParams
        fullName: ComputerVisionClientTagImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
    name: ComputerVisionClientTagImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageInStreamOptionalParams
        fullName: ComputerVisionClientTagImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'