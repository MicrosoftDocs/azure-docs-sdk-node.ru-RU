### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
    name: LargeFaceListAddFaceFromUrlOptionalParams
    fullName: LargeFaceListAddFaceFromUrlOptionalParams
    children:
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.detectionModel'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.timeout'
      - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: Необязательные параметры.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Сигнал, который может использоваться для отмены запросов.'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.detectionModel'
    name: detectionModel
    fullName: detectionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Имя обнаружения модели. Модель обнаружения используется для определения лиц отправленного изображения. Имя модели обнаружения можно указать при выполнении лиц - обнаружить или распознавания лиц (Large) FaceList — добавление распознавания лиц или каждой группе людей (Large) - добавить. Значение по умолчанию — «detection_01», если требуется другой модели, необходимо явно указать его. Возможные значения: «detection_01», «detection_02». Значение по умолчанию: «detection_01».'
    optional: true
    syntax:
      content: 'detectionModel?: DetectionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.DetectionModel'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который запускается после загрузки.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который срабатывает при ход передачи.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Прямоугольник лиц, чтобы указать целевой фрагмент, чтобы добавить пользователя в формате «targetFace = left, top, ширина, высота». (например, «targetFace = 10, 10, 100, 100». Если имеется более одной грани в образе, targetFace необходим для указания, что лиц для добавления. Нет targetFace означает только одной грани, обнаружено изображения.'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Число микросекунд, которое запрос может выполняться автоматически прекращается.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: Определяемые пользователем данные о лиц для любых целей. Максимальная длина — 1 КБ.
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.DetectionModel'
    name: DetectionModel
    spec.typeScript:
      - name: DetectionModel
        fullName: DetectionModel
        uid: '@azure/cognitiveservices-face.DetectionModel'