### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
    name: SnapshotListOptionalParams
    fullName: SnapshotListOptionalParams
    children:
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.applyScope'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.timeout'
      - '@azure/cognitiveservices-face.SnapshotListOptionalParams.type'
    langs:
      - typeScript
    type: interface
    summary: Необязательные параметры.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Сигнал, который может использоваться для отмены запросов.'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.applyScope'
    name: applyScope
    fullName: applyScope
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Указанный снимок пользователь применяет области фильтра поиска. ApplyScope представляет собой массив идентификаторов целевой подписки Azure для моментального снимка, определяемое пользователя, создавшего моментальный снимок, моментальный снимок — перенос.'
    optional: true
    syntax:
      content: 'applyScope?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который запускается после загрузки.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который срабатывает при ход передачи.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Число микросекунд, которое запрос может выполняться автоматически прекращается.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Тип объекта задан как фильтр поиска. Ниже перечислены возможные значения. «FaceList», «LargeFaceList», «LargePersonGroup», «Каждой группе людей»'
    optional: true
    syntax:
      content: 'type?: SnapshotObjectType'
      return:
        type:
          - '@azure/cognitiveservices-face.SnapshotObjectType'
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.SnapshotObjectType'
    name: SnapshotObjectType
    spec.typeScript:
      - name: SnapshotObjectType
        fullName: SnapshotObjectType
        uid: '@azure/cognitiveservices-face.SnapshotObjectType'