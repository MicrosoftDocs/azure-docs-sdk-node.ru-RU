### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    fullName: FaceListOperations
    children:
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.FaceListOperations.create_2'
      - '@azure/cognitiveservices-face.FaceListOperations.create'
      - '@azure/cognitiveservices-face.FaceListOperations.create_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.FaceListOperations.constructor'
      - '@azure/cognitiveservices-face.FaceListOperations.get_2'
      - '@azure/cognitiveservices-face.FaceListOperations.get'
      - '@azure/cognitiveservices-face.FaceListOperations.get_1'
      - '@azure/cognitiveservices-face.FaceListOperations.list_2'
      - '@azure/cognitiveservices-face.FaceListOperations.list'
      - '@azure/cognitiveservices-face.FaceListOperations.list_1'
      - '@azure/cognitiveservices-face.FaceListOperations.update_2'
      - '@azure/cognitiveservices-face.FaceListOperations.update'
      - '@azure/cognitiveservices-face.FaceListOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="7a076-101">Класс, представляющий FaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="7a076-101">Class representing a FaceListOperations.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options: FaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-102">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-102">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="7a076-103">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="7a076-103">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="7a076-104">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-104">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="7a076-105">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-105">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.FaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a076-106">Добавьте фрагмент в список лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-106">Add a face to a face list.</span></span> <span data-ttu-id="7a076-107">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="7a076-107">The input face is specified as an image with a targetFace rectangle.</span></span>
      <span data-ttu-id="7a076-108">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="7a076-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options?: Models.FaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-109">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-109">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="7a076-110">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="7a076-110">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-111">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-111">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="7a076-112">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="7a076-112">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="7a076-113">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-113">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options: FaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-114">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-114">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="7a076-115">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="7a076-115">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="7a076-116">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-116">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="7a076-117">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-117">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.FaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a076-118">Добавьте фрагмент в список лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-118">Add a face to a face list.</span></span> <span data-ttu-id="7a076-119">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="7a076-119">The input face is specified as an image with a targetFace rectangle.</span></span>
      <span data-ttu-id="7a076-120">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="7a076-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Models.FaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-121">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-121">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="7a076-122">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="7a076-122">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-123">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-123">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="7a076-124">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="7a076-124">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="7a076-125">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-125">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, options: FaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-126">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-126">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
          description: <span data-ttu-id="7a076-127">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-128">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    name: 'create(string, Models.FaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a076-129">Создание списка пустой лиц с пользовательской faceListId, именем, необязательно userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="7a076-129">Create an empty face list with user-specified faceListId, name, an optional userData and recognitionModel.</span></span> <span data-ttu-id="7a076-130">До 64 лиц списки разрешены в одной подписке.</span><span class="sxs-lookup"><span data-stu-id="7a076-130">Up to 64 face lists are allowed in one subscription.</span></span>
      <br /> <span data-ttu-id="7a076-131">Список лиц список лиц, до 1000 лиц и используемые [лиц - поиск похожих](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="7a076-131">Face list is a list of faces, up to 1,000 faces, and used by [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>
      <br /> <span data-ttu-id="7a076-132">После создания, пользователь должен использовать [FaceList — добавление распознавания лиц](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) для импорта фрагменты.</span><span class="sxs-lookup"><span data-stu-id="7a076-132">After creation, user should use [FaceList - Add Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) to import the faces.</span></span> <span data-ttu-id="7a076-133">Фрагменты хранятся на сервере, пока не [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) вызывается.</span><span class="sxs-lookup"><span data-stu-id="7a076-133">Faces are stored on server until [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) is called.</span></span>
      <br /> <span data-ttu-id="7a076-134">Найти подобный используется для сценария, например для поиска по принципу знаменитостей лиц, аналогичные лиц фильтрации, или как света способом сталкиваются идентификации.</span><span class="sxs-lookup"><span data-stu-id="7a076-134">Find Similar is used for scenario like finding celebrity-like faces, similar face filtering, or as a light way face identification.</span></span> <span data-ttu-id="7a076-135">Но если фактическое использование для идентификации пользователя, используйте [каждой группе людей](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) и [сталкиваются - Идентификация](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class="sxs-lookup"><span data-stu-id="7a076-135">But if the actual use is to identify person, please use [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) and [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>
      <br /> <span data-ttu-id="7a076-136">Попробуйте [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) при велико число лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-136">Please consider [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) when the face number is large.</span></span> <span data-ttu-id="7a076-137">Он может поддерживать до 1 000 000 лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-137">It can support up to 1,000,000 faces.</span></span> <span data-ttu-id="7a076-138">«recognitionModel» должно быть указано для связи с данным списком лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-138">'recognitionModel' should be specified to associate with this face list.</span></span> <span data-ttu-id="7a076-139">Значение по умолчанию для «recognitionModel» — «recognition_01», если последней модели необходимо явно указать модели, необходимые в этом параметре.</span><span class="sxs-lookup"><span data-stu-id="7a076-139">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="7a076-140">Новые лица, которые добавляются в существующий список лиц будет использовать модель распознавания, которая уже связана с коллекцией.</span><span class="sxs-lookup"><span data-stu-id="7a076-140">New faces that are added to an existing face list will use the recognition model that's already associated with the collection.</span></span> <span data-ttu-id="7a076-141">Невозможно обновить существующие функции распознавания лиц в список лиц к функциям, извлеченным в ходе другая версия модель распознавания.</span><span class="sxs-lookup"><span data-stu-id="7a076-141">Existing face features in a face list can't be updated to features extracted by another version of recognition model.</span></span>
    syntax:
      content: 'function create(faceListId: string, options?: Models.FaceListCreateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-142">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-142">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-143">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-143">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-144">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-144">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a076-145">Удаление существующего лиц из списка лиц (при наличии persistedFaceId и faceListId).</span><span class="sxs-lookup"><span data-stu-id="7a076-145">Delete an existing face from a face list (given by a persistedFaceId and a faceListId).</span></span>
      <span data-ttu-id="7a076-146">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="7a076-146">Persisted image related to the face will also be deleted.</span></span>
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-147">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-147">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="7a076-148">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="7a076-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-149">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-149">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="7a076-150">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="7a076-150">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="7a076-151">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-151">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-152">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-152">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-153">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-153">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="7a076-154">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="7a076-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-155">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-155">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a076-156">Удалите существующий список лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="7a076-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="7a076-157">Сохраненных лиц, которые также будут удалены изображений в списке лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-157">Persisted face images in the face list will also be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(faceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-158">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-158">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-159">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-159">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="7a076-160">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-160">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-161">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-161">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-162">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-162">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-163">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-163">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    name: FaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="7a076-164">Создайте FaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="7a076-164">Create a FaceListOperations.</span></span>
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="7a076-165">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="7a076-165">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, options: FaceListGetOptionalParams, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-166">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-166">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListGetOptionalParams'
          description: <span data-ttu-id="7a076-167">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-167">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            <span data-ttu-id="7a076-168">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-168">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    name: 'get(string, Models.FaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7a076-169">Получить список лиц faceListId, имя, userData, recognitionModel и лиц, в списке лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-169">Retrieve a face list’s faceListId, name, userData, recognitionModel and faces in the face list.</span></span>'
    syntax:
      content: 'function get(faceListId: string, options?: Models.FaceListGetOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-170">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-170">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    name: 'get(string, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-171">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-171">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            <span data-ttu-id="7a076-172">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-172">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FaceListListOptionalParams, callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListListOptionalParams'
          description: <span data-ttu-id="7a076-173">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-173">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            <span data-ttu-id="7a076-174">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-174">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    name: list(Models.FaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7a076-175">Список faceListId, имя, userData и recognitionModel списки лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-175">List face lists’ faceListId, name, userData and recognitionModel.</span></span> <br />
      <span data-ttu-id="7a076-176">Для получения сведений лиц внутри используйте faceList [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)</span><span class="sxs-lookup"><span data-stu-id="7a076-176">To get face information inside faceList use [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)</span></span>
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    name: 'list(ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            <span data-ttu-id="7a076-177">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-177">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, options: FaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-178">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-178">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
          description: <span data-ttu-id="7a076-179">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="7a076-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-180">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-180">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    name: 'update(string, Models.FaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="7a076-181">Обновите сведения о списке лиц.</span><span class="sxs-lookup"><span data-stu-id="7a076-181">Update information of a face list.</span></span>
    syntax:
      content: 'function update(faceListId: string, options?: Models.FaceListUpdateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-182">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-182">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="7a076-183">Идентификатор ссылки на список конкретного лица.</span><span class="sxs-lookup"><span data-stu-id="7a076-183">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="7a076-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="7a076-184">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromStreamOptionalParams
        fullName: FaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
    name: FaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromUrlOptionalParams
        fullName: FaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
    name: FaceListCreateOptionalParams
    spec.typeScript:
      - name: FaceListCreateOptionalParams
        fullName: FaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.FaceList>
    name: FaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
    name: FaceListGetOptionalParams
    spec.typeScript:
      - name: FaceListGetOptionalParams
        fullName: FaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
    name: 'FaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
    name: FaceListListOptionalParams
    spec.typeScript:
      - name: FaceListListOptionalParams
        fullName: FaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
    name: FaceListUpdateOptionalParams
    spec.typeScript:
      - name: FaceListUpdateOptionalParams
        fullName: FaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'