### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations'
    name: LargePersonGroupOperations
    fullName: LargePersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update'
      - '@azure/cognitiveservices-face.LargePersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="8702d-101">Класс, представляющий LargePersonGroupOperations.</span><span class="sxs-lookup"><span data-stu-id="8702d-101">Class representing a LargePersonGroupOperations.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_2'
    name: 'create(string, LargePersonGroupCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, options: LargePersonGroupCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-102">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-102">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
          description: <span data-ttu-id="8702d-103">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-103">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-104">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-104">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create'
    name: 'create(string, Models.LargePersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"8702d-105\">Создайте группу больших person с пользовательской largePersonGroupId, имя, необязательно userData и recognitionModel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-105\">Create a new large person group with user-specified largePersonGroupId, name, an optional userData and recognitionModel.</span></span>\n<br /> <span data-ttu-id=\"8702d-106\">Большой лица группу является контейнером данных отправленного person, включая функции распознавания лиц и до 1 000 000 пользователей.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-106\">A large person group is the container of the uploaded person data, including face recognition feature, and up to 1,000,000 people.</span></span>\n<br /> <span data-ttu-id=\"8702d-107\">После создания, используйте [LargePersonGroup пользователь - создать](/docs/services/563879b61984550e40cbbe8d/operations/599adcba3a7b9412a4d53f40) для добавления пользователя в группу и вызовите [LargePersonGroup - Обучение](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4) подготовиться к этой группе [сталкиваются - Идентификация](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-107\">After creation, use [LargePersonGroup Person - Create](/docs/services/563879b61984550e40cbbe8d/operations/599adcba3a7b9412a4d53f40) to add person into the group, and call [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4) to get this group ready for [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>\n<br /> <span data-ttu-id=\"8702d-108\">Изображение не будут сохранены.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-108\">No image will be stored.</span></span> <span data-ttu-id=\"8702d-109\">Только для пользователя извлеченные функции распознавания лиц и на сервере, пока не будут храниться userData [LargePersonGroup Person - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) или [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f) вызывается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-109\">Only the person's extracted face features and userData will be stored on server until [LargePersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) or [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f) is called.</span></span>\n<br/><span data-ttu-id=\"8702d-110\">«recognitionModel» должно быть указано для связи с этой группой больших person.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-110\">'recognitionModel' should be specified to associate with this large person group.</span></span> <span data-ttu-id=\"8702d-111\">Значение по умолчанию для «recognitionModel» — «recognition_01», если последней модели необходимо явно указать модели, необходимые в этом параметре.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-111\">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id=\"8702d-112\">Новые лица, которые добавляются в существующую группу больших person будет использовать модель распознавания, которая уже связана с коллекцией.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-112\">New faces that are added to an existing large person group will use the recognition model that's already associated with the collection.</span></span>\n<span data-ttu-id=\"8702d-113\">К функциям, извлеченным в ходе другая версия модель распознавания невозможно добавить существующие функции распознавания лиц в группе большого person.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-113\">Existing face features in a large person group can't be updated to features extracted by another version of recognition model.</span></span>\n* <span data-ttu-id=\"8702d-114\">«recognition_01»: Стандартная модель распознавания [LargePersonGroup - создание](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-114\">'recognition_01': The default recognition model for [LargePersonGroup - Create](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).</span></span> <span data-ttu-id=\"8702d-115\">Все эти группы больших person, созданных до марта 2019 связанные с этой моделью распознавания.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-115\">All those large person groups created before 2019 March are bonded with this recognition model.</span></span>\n* <span data-ttu-id=\"8702d-116\">«recognition_02»: Модель распознавания, выпущенную в марте 2019 г.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-116\">'recognition_02': Recognition model released in 2019 March.</span></span> <span data-ttu-id=\"8702d-117\">«recognition_02» рекомендуется, так как его общая точность улучшена по сравнению с «recognition_01».</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-117\">'recognition_02' is recommended since its\_overall accuracy is improved compared with 'recognition_01'.</span></span>\n<span data-ttu-id=\"8702d-118\">Квота группы больших person:</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-118\">Large person group quota:</span></span>\n* <span data-ttu-id=\"8702d-119\">Квота освободить уровня подписки: 1000 больших групп.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-119\">Free-tier subscription quota: 1,000 large person groups.</span></span>\n* <span data-ttu-id=\"8702d-120\">Квота подписки уровня S0: 1 000 000 больших групп.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8702d-120\">S0-tier subscription quota: 1,000,000 large person groups.</span></span>"
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Models.LargePersonGroupCreateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-121">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-121">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-122">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-122">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-123">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-123">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8702d-124">Удаление существующей группы больших person.</span><span class="sxs-lookup"><span data-stu-id="8702d-124">Delete an existing large person group.</span></span> <span data-ttu-id="8702d-125">Сохраненных лиц, также будут удалены функции всех людей в группе большого person.</span><span class="sxs-lookup"><span data-stu-id="8702d-125">Persisted face features of all people in the large person group will also be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-126">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-126">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-127">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-127">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="8702d-128">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-128">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-129">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-129">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-130">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-130">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-131">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-131">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_2'
    name: 'get(string, LargePersonGroupGetOptionalParams, ServiceCallback<LargePersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, options: LargePersonGroupGetOptionalParams, callback: ServiceCallback<LargePersonGroup>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-132">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-132">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
          description: <span data-ttu-id="8702d-133">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-133">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
          description: |
            <span data-ttu-id="8702d-134">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-134">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get'
    name: 'get(string, Models.LargePersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8702d-135">Получите сведения о больших person группы, включая его имя, userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="8702d-135">Retrieve the information of a large person group, including its name, userData and recognitionModel.</span></span> <span data-ttu-id="8702d-136">Этот API возвращает большой person только сведения о группе, используйте [LargePersonGroup Person - списке](/docs/services/563879b61984550e40cbbe8d/operations/599adda06ac60f11b48b5aa1) вместо этого для получения сведений о пользователей в группе большого person.</span><span class="sxs-lookup"><span data-stu-id="8702d-136">This API returns large person group information only, use [LargePersonGroup Person - List](/docs/services/563879b61984550e40cbbe8d/operations/599adda06ac60f11b48b5aa1) instead to retrieve person information under the large person group.</span></span>'
    syntax:
      content: 'function get(largePersonGroupId: string, options?: Models.LargePersonGroupGetOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-137">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-137">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<LargePersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, callback: ServiceCallback<LargePersonGroup>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-138">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-138">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
          description: |
            <span data-ttu-id="8702d-139">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-139">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="8702d-140">Получить состояние обучения больших лица группу ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="8702d-140">Retrieve the training status of a large person group (completed or ongoing).</span></span>
    syntax:
      content: 'function getTrainingStatus(largePersonGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-141">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-141">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largePersonGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-142">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-142">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="8702d-143">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-143">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="8702d-144">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-144">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largePersonGroupId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-145">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-145">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="8702d-146">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-146">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.constructor'
    name: LargePersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="8702d-147">Создайте LargePersonGroupOperations.</span><span class="sxs-lookup"><span data-stu-id="8702d-147">Create a LargePersonGroupOperations.</span></span>
    syntax:
      content: 'new LargePersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="8702d-148">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="8702d-148">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_2'
    name: 'list(LargePersonGroupListOptionalParams, ServiceCallback<LargePersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: LargePersonGroupListOptionalParams, callback: ServiceCallback<LargePersonGroup[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
          description: <span data-ttu-id="8702d-149">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-149">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
          description: |
            <span data-ttu-id="8702d-150">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-150">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list'
    name: list(Models.LargePersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="8702d-151">Список всех существующих больших групп largePersonGroupId, имя, userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="8702d-151">List all existing large person groups’ largePersonGroupId, name, userData and recognitionModel.</span></span><br />
      * <span data-ttu-id="8702d-152">Больших групп, хранятся в алфавитном порядке по largePersonGroupId.</span><span class="sxs-lookup"><span data-stu-id="8702d-152">Large person groups are stored in alphabetical order of largePersonGroupId.</span></span>
      * <span data-ttu-id="8702d-153">параметр «start» (строка, необязательный) — это largePersonGroupId предоставляемый пользователем значение, возвращаемое что записей больше идентификаторы, сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="8702d-153">"start" parameter (string, optional) is a user-provided largePersonGroupId value that returned entries have larger ids by string comparison.</span></span> <span data-ttu-id="8702d-154">«start» устанавливаются пустыми, чтобы указать после возврата из первого элемента.</span><span class="sxs-lookup"><span data-stu-id="8702d-154">"start" set to empty to indicate return from the first item.</span></span>
      * <span data-ttu-id="8702d-155">параметр «top» (int, необязательный) указывает число возвращаемых записей.</span><span class="sxs-lookup"><span data-stu-id="8702d-155">"top" parameter (int, optional) specifies the number of entries to return.</span></span> <span data-ttu-id="8702d-156">В одном вызове может быть возвращено максимум 1000 элементов.</span><span class="sxs-lookup"><span data-stu-id="8702d-156">A maximal of 1000 entries can be returned in one call.</span></span> <span data-ttu-id="8702d-157">Чтобы получить более, можно указать «start» с идентификатором последнего возвращенного элемента текущего вызова.</span><span class="sxs-lookup"><span data-stu-id="8702d-157">To fetch more, you can specify "start" with the last returned entry’s Id of the current call.</span></span>
      <br />
      <span data-ttu-id="8702d-158">Например, всего 5 больших групп: «group1»,..., «группа5».</span><span class="sxs-lookup"><span data-stu-id="8702d-158">For example, total 5 large person groups: "group1", ..., "group5".</span></span>
      <br /> <span data-ttu-id="8702d-159">"start=&top=" will return all 5 groups.</span><span class="sxs-lookup"><span data-stu-id="8702d-159">"start=&top=" will return all 5 groups.</span></span>
      <br /> <span data-ttu-id="8702d-160">"start=&top=2" will return "group1", "group2".</span><span class="sxs-lookup"><span data-stu-id="8702d-160">"start=&top=2" will return "group1", "group2".</span></span>
      <br /> <span data-ttu-id="8702d-161">«запустить = group2 & тановить = 3» возвратит «группа 3», группа «4», «группа5».</span><span class="sxs-lookup"><span data-stu-id="8702d-161">"start=group2&top=3" will return "group3", "group4", "group5".</span></span>
    syntax:
      content: 'function list(options?: Models.LargePersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.LargePersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_1'
    name: 'list(ServiceCallback<LargePersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<LargePersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
          description: |
            <span data-ttu-id="8702d-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-162">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8702d-163">Очередь помещается задача больших лица группу обучения, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="8702d-163">Queue a large person group training task, the training task may not be started immediately.</span></span>'
    syntax:
      content: 'function train(largePersonGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-164">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-164">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largePersonGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-165">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-165">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="8702d-166">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-166">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-167">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-167">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largePersonGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-168">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-168">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-169">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-169">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_2'
    name: 'update(string, LargePersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, options: LargePersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-170">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-170">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'
          description: <span data-ttu-id="8702d-171">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="8702d-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-172">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-172">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update'
    name: 'update(string, Models.LargePersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="8702d-173">Обновите существующую группу больших person отображаемое имя и userData.</span><span class="sxs-lookup"><span data-stu-id="8702d-173">Update an existing large person group''s display name and userData.</span></span> <span data-ttu-id="8702d-174">Свойства, которые не отображается в тексте запроса не обновляются.</span><span class="sxs-lookup"><span data-stu-id="8702d-174">The properties which does not appear in request body will not be updated.</span></span>'
    syntax:
      content: 'function update(largePersonGroupId: string, options?: Models.LargePersonGroupUpdateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-175">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-175">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="8702d-176">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="8702d-176">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="8702d-177">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="8702d-177">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
    name: LargePersonGroupCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupCreateOptionalParams
        fullName: LargePersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup>
    name: LargePersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargePersonGroup
        fullName: LargePersonGroup
        uid: '@azure/cognitiveservices-face.LargePersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
    name: LargePersonGroupGetOptionalParams
    spec.typeScript:
      - name: LargePersonGroupGetOptionalParams
        fullName: LargePersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.LargePersonGroup[]>'
    name: 'LargePersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargePersonGroup
        fullName: LargePersonGroup
        uid: '@azure/cognitiveservices-face.LargePersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
    name: LargePersonGroupListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupListOptionalParams
        fullName: LargePersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'
    name: LargePersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupUpdateOptionalParams
        fullName: LargePersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupUpdateOptionalParams'