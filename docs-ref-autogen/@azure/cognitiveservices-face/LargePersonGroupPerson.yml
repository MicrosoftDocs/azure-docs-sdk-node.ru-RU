### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="f5640-101">Класс, представляющий LargePersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="f5640-101">Class representing a LargePersonGroupPerson.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, LargePersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options: LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-102">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-102">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-103">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-103">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="f5640-104">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="f5640-104">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="f5640-105">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-105">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-106">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-106">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="f5640-107">Добавьте фрагмент человека в больших лица группу для подтверждения или идентификацию лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-107">Add a face to a person into a large person group for face identification or verification.</span></span> <span data-ttu-id="f5640-108">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5640-108">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="f5640-109">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-109">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="f5640-110">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="f5640-110">No image will be stored.</span></span> <span data-ttu-id="f5640-111">Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargePersonGroup PersonFace - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) или [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)вызывается.</span><span class="sxs-lookup"><span data-stu-id="f5640-111">Only the extracted face feature will be stored on server until [LargePersonGroup PersonFace - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) or [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f) is called.</span></span>
      <br /> <span data-ttu-id="f5640-112">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="f5640-112">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      * <span data-ttu-id="f5640-113">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="f5640-113">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="f5640-114">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="f5640-114">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="f5640-115">Каждая запись пользователя может содержать до 248 лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-115">Each person entry can hold up to 248 faces.</span></span>
      * <span data-ttu-id="f5640-116">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="f5640-116">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="f5640-117">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="f5640-117">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="f5640-118">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="f5640-118">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="f5640-119">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="f5640-119">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="f5640-120">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="f5640-120">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      * <span data-ttu-id="f5640-121">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="f5640-121">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      * <span data-ttu-id="f5640-122">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="f5640-122">Adding/deleting faces to/from a same person will be processed sequentially.</span></span> <span data-ttu-id="f5640-123">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="f5640-123">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
      * <span data-ttu-id="f5640-124">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="f5640-124">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="f5640-125">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-125">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="f5640-126">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="f5640-126">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="f5640-127">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="f5640-127">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="f5640-128">Модель</span><span class="sxs-lookup"><span data-stu-id="f5640-128">Model</span></span> | <span data-ttu-id="f5640-129">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="f5640-129">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="f5640-130">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="f5640-130">'detection_01':</span></span> | <span data-ttu-id="f5640-131">В модели обнаружения по умолчанию для [LargePersonGroup Person - Добавление</span><span class="sxs-lookup"><span data-stu-id="f5640-131">The default detection model for [LargePersonGroup Person - Add</span></span>
      <span data-ttu-id="f5640-132">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/599adf2a3a7b9412a4d53f42).</span><span class="sxs-lookup"><span data-stu-id="f5640-132">Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42).</span></span> <span data-ttu-id="f5640-133">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="f5640-133">Recommend for near frontal face detection.</span></span> <span data-ttu-id="f5640-134">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="f5640-134">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="f5640-135">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-135">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-136">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-136">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-137">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-137">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="f5640-138">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="f5640-138">An image stream.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-139">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-139">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-140">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-140">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="f5640-141">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="f5640-141">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-142">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-142">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, LargePersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-143">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-143">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-144">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-144">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="f5640-145">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="f5640-145">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="f5640-146">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-146">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-147">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-147">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="f5640-148">Добавьте фрагмент человека в больших лица группу для подтверждения или идентификацию лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-148">Add a face to a person into a large person group for face identification or verification.</span></span> <span data-ttu-id="f5640-149">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="f5640-149">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="f5640-150">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-150">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="f5640-151">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="f5640-151">No image will be stored.</span></span> <span data-ttu-id="f5640-152">Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargePersonGroup PersonFace - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) или [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)вызывается.</span><span class="sxs-lookup"><span data-stu-id="f5640-152">Only the extracted face feature will be stored on server until [LargePersonGroup PersonFace - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) or [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f) is called.</span></span>
      <br /> <span data-ttu-id="f5640-153">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="f5640-153">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      * <span data-ttu-id="f5640-154">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="f5640-154">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="f5640-155">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="f5640-155">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="f5640-156">Каждая запись пользователя может содержать до 248 лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-156">Each person entry can hold up to 248 faces.</span></span>
      * <span data-ttu-id="f5640-157">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="f5640-157">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="f5640-158">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="f5640-158">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="f5640-159">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="f5640-159">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="f5640-160">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="f5640-160">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="f5640-161">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="f5640-161">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      * <span data-ttu-id="f5640-162">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="f5640-162">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      * <span data-ttu-id="f5640-163">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="f5640-163">Adding/deleting faces to/from a same person will be processed sequentially.</span></span> <span data-ttu-id="f5640-164">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="f5640-164">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
      * <span data-ttu-id="f5640-165">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="f5640-165">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="f5640-166">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-166">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="f5640-167">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="f5640-167">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="f5640-168">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="f5640-168">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="f5640-169">Модель</span><span class="sxs-lookup"><span data-stu-id="f5640-169">Model</span></span> | <span data-ttu-id="f5640-170">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="f5640-170">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="f5640-171">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="f5640-171">'detection_01':</span></span> | <span data-ttu-id="f5640-172">В модели обнаружения по умолчанию для [LargePersonGroup Person - Добавление</span><span class="sxs-lookup"><span data-stu-id="f5640-172">The default detection model for [LargePersonGroup Person - Add</span></span>
      <span data-ttu-id="f5640-173">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/599adf2a3a7b9412a4d53f42).</span><span class="sxs-lookup"><span data-stu-id="f5640-173">Face](/docs/services/563879b61984550e40cbbe8d/operations/599adf2a3a7b9412a4d53f42).</span></span> <span data-ttu-id="f5640-174">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="f5640-174">Recommend for near frontal face detection.</span></span> <span data-ttu-id="f5640-175">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="f5640-175">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="f5640-176">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-176">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-177">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-177">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-178">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-178">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="f5640-179">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="f5640-179">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-180">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-180">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-181">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-181">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="f5640-182">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="f5640-182">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-183">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-183">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    name: 'create(string, LargePersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, options: LargePersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-184">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-184">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
          description: <span data-ttu-id="f5640-185">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-185">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="f5640-186">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-186">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    name: 'create(string, Models.LargePersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f5640-187">Создание нового пользователя в группе указанного больших лица.</span><span class="sxs-lookup"><span data-stu-id="f5640-187">Create a new person in a specified large person group.</span></span>
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Models.LargePersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-188">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-188">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-189">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-189">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="f5640-190">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-190">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="f5640-191">Удалите фрагмент от лица в группе большого человека, указанного largePersonGroupId, personId и persistedFaceId.</span><span class="sxs-lookup"><span data-stu-id="f5640-191">Delete a face from a person in a large person group by specified largePersonGroupId, personId and persistedFaceId.</span></span>
      <br /> <span data-ttu-id="f5640-192">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="f5640-192">Adding/deleting faces to/from a same person will be processed sequentially.</span></span>
      <span data-ttu-id="f5640-193">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="f5640-193">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-194">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-194">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-195">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-195">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-196">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-196">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-197">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-197">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-198">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-198">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-199">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="f5640-200">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-200">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-201">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-201">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-202">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-202">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-203">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-203">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-204">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-204">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-205">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-205">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f5640-206">Удалите его из группы больших person.</span><span class="sxs-lookup"><span data-stu-id="f5640-206">Delete an existing person from a large person group.</span></span> <span data-ttu-id="f5640-207">PersistedFaceId, userData, функция person имя и лиц в записи пользователя все удаляется.</span><span class="sxs-lookup"><span data-stu-id="f5640-207">The persistedFaceId, userData, person name and face feature in the person entry will all be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-208">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-208">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-209">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-209">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-210">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-210">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-211">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-211">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="f5640-212">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-212">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-213">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-213">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-214">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-214">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-215">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-215">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-216">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-216">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f5640-217">Получить имя пользователя и userData и сохраненные faceIds, представляющий компонент распознавания лиц зарегистрированного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-217">Retrieve a person''s name and userData, and the persisted faceIds representing the registered person face feature.</span></span>'
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-218">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-218">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-219">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-219">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-220">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-220">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-221">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-221">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="f5640-222">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-222">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="f5640-223">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-223">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-224">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-224">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-225">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-225">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="f5640-226">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-226">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f5640-227">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).</span><span class="sxs-lookup"><span data-stu-id="f5640-227">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>'
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-228">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-228">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-229">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-229">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-230">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-230">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-231">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-231">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-232">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-232">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-233">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-233">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="f5640-234">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-234">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-235">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-235">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-236">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-236">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-237">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-237">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-238">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-238">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="f5640-239">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-239">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    name: LargePersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="f5640-240">Создайте LargePersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="f5640-240">Create a LargePersonGroupPerson.</span></span>
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="f5640-241">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="f5640-241">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    name: 'list(string, LargePersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, options: LargePersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-242">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-242">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
          description: <span data-ttu-id="f5640-243">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-243">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="f5640-244">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-244">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    name: 'list(string, Models.LargePersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="f5640-245">Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="f5640-245">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>'
    syntax:
      content: 'function list(largePersonGroupId: string, options?: Models.LargePersonGroupPersonListOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-246">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-246">Id referencing a particular large person group.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-247">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-247">Id referencing a particular large person group.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="f5640-248">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-248">The callback</span></span>
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    name: 'update(string, string, LargePersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options: LargePersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-249">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-249">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-250">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-250">Id referencing a particular person.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
          description: <span data-ttu-id="f5640-251">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-251">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-252">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-252">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    name: 'update(string, string, Models.LargePersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f5640-253">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="f5640-253">Update name or userData of a person.</span></span>
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options?: Models.LargePersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-254">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-254">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-255">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-255">Id referencing a particular person.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-256">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-256">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-257">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-257">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-258">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-258">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: LargePersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-259">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-259">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-260">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-260">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-261">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-261">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
          description: <span data-ttu-id="f5640-262">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="f5640-262">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-263">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-263">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="f5640-264">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="f5640-264">Update a person persisted face's userData field.</span></span>
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-265">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-265">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-266">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-266">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-267">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-267">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: <span data-ttu-id="f5640-268">Идентификатор ссылки на группы определенным лицом большой.</span><span class="sxs-lookup"><span data-stu-id="f5640-268">Id referencing a particular large person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="f5640-269">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="f5640-269">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="f5640-270">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="f5640-270">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="f5640-271">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="f5640-271">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
    name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
    name: LargePersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonCreateOptionalParams
        fullName: LargePersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
    name: LargePersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonListOptionalParams
        fullName: LargePersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
    name: LargePersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateOptionalParams
        fullName: LargePersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
    name: LargePersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateFaceOptionalParams
        fullName: LargePersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'