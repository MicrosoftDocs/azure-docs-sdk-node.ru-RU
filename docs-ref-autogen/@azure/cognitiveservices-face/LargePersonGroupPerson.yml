### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    fullName: LargePersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий LargePersonGroupPerson.'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, LargePersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options: LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Поток данных изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Добавьте фрагмент человека в больших лица группу для подтверждения или идентификацию лиц. Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace. Он возвращает persistedFaceId, представляющий добавленный лиц. Изображение не будут сохранены. Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargePersonGroup PersonFace - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) или [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)вызывается.
      <br /> Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Более высоким качеством изображения лиц означает более высокую точность распознавания. Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.
      * Каждая запись пользователя может содержать до 248 лиц.
      * Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP. Допустимый размер файла — 6 МБ из 1 КБ.
      * прямоугольник «targetFace» должен содержать одной грани. Ноль или несколько лиц будет рассматриваться как ошибка. Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.
      * За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.
      * Добавление или удаление лиц с тем же человека будут обрабатываться последовательно. Добавление или удаление лиц из разных лиц обрабатываются параллельно.
      * Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.
      Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.
      * Можно указать значения различных «detectionModel». Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Модель | Рекомендуемое использование-case(s) |
      | ---------- | -------- |
      | «detection_01»: | В модели обнаружения по умолчанию для [LargePersonGroup Person - Добавление
      Face](/docs/Services/563879b61984550e40cbbe8d/Operations/599adf2a3a7b9412a4d53f42). Рекомендуем использовать для практически обнаружение лиц в анфас. Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться. | | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц. |
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Поток данных изображения.
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Поток данных изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, LargePersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: url
          type:
            - string
          description: Публично доступную URL-адрес изображения
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Добавьте фрагмент человека в больших лица группу для подтверждения или идентификацию лиц. Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace. Он возвращает persistedFaceId, представляющий добавленный лиц. Изображение не будут сохранены. Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargePersonGroup PersonFace - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ae2966ac60f11b48b5aa3), [LargePersonGroup Person - удалить](/docs/services/563879b61984550e40cbbe8d/operations/599ade5c6ac60f11b48b5aa2) или [LargePersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/599adc216ac60f11b48b5a9f)вызывается.
      <br /> Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Более высоким качеством изображения лиц означает более высокую точность распознавания. Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.
      * Каждая запись пользователя может содержать до 248 лиц.
      * Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP. Допустимый размер файла — 6 МБ из 1 КБ.
      * прямоугольник «targetFace» должен содержать одной грани. Ноль или несколько лиц будет рассматриваться как ошибка. Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.
      * За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.
      * Добавление или удаление лиц с тем же человека будут обрабатываться последовательно. Добавление или удаление лиц из разных лиц обрабатываются параллельно.
      * Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.
      Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.
      * Можно указать значения различных «detectionModel». Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Модель | Рекомендуемое использование-case(s) |
      | ---------- | -------- |
      | «detection_01»: | В модели обнаружения по умолчанию для [LargePersonGroup Person - Добавление
      Face](/docs/Services/563879b61984550e40cbbe8d/Operations/599adf2a3a7b9412a4d53f42). Рекомендуем использовать для практически обнаружение лиц в анфас. Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться. | | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц. |
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: url
          type:
            - string
          description: Публично доступную URL-адрес изображения
        - id: options
          type:
            - Models.LargePersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: url
          type:
            - string
          description: Публично доступную URL-адрес изображения
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    name: 'create(string, LargePersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, options: LargePersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    name: 'create(string, Models.LargePersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создание нового пользователя в группе указанного больших лица.
    syntax:
      content: 'function create(largePersonGroupId: string, options?: Models.LargePersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: options
          type:
            - Models.LargePersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Удалите фрагмент от лица в группе большого человека, указанного largePersonGroupId, personId и persistedFaceId.
      <br /> Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.
      Добавление или удаление лиц из разных лиц обрабатываются параллельно.
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Удалите его из группы больших person. PersistedFaceId, userData, функция person имя и лиц в записи пользователя все удаляется.'
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получить имя пользователя и userData и сохраненные faceIds, представляющий компонент распознавания лиц зарегистрированного пользователя.'
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность largePersonGroupId).'
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    name: LargePersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте LargePersonGroupPerson.
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    name: 'list(string, LargePersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, options: LargePersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    name: 'list(string, Models.LargePersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Перечислить всех лиц в группу больших person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).'
    syntax:
      content: 'function list(largePersonGroupId: string, options?: Models.LargePersonGroupPersonListOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: options
          type:
            - Models.LargePersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.LargePersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    name: 'update(string, string, LargePersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options: LargePersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    name: 'update(string, string, Models.LargePersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновить имя или userData человека.
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, options?: Models.LargePersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: LargePersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновление пользователя сохраняются поле userData лиц.
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Models.LargePersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: options
          type:
            - Models.LargePersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largePersonGroupId
          type:
            - string
          description: Идентификатор ссылки на группы определенным лицом большой.
        - id: personId
          type:
            - string
          description: Идентификатор ссылки на конкретного пользователя.
        - id: persistedFaceId
          type:
            - string
          description: Идентификатор ссылки на определенный persistedFaceId существующей поверхности.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
    name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
    name: LargePersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonCreateOptionalParams
        fullName: LargePersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
    name: LargePersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonListOptionalParams
        fullName: LargePersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
    name: LargePersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateOptionalParams
        fullName: LargePersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'
    name: LargePersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargePersonGroupPersonUpdateFaceOptionalParams
        fullName: LargePersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargePersonGroupPersonUpdateFaceOptionalParams'