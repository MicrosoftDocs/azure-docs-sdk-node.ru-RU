### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
    name: LargeFaceListOperations
    fullName: LargeFaceListOperations
    children:
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="1c3d3-101">Класс, представляющий LargeFaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-101">Class representing a LargeFaceListOperations.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, LargeFaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options: LargeFaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-102">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-102">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="1c3d3-103">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-103">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="1c3d3-104">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-104">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-105">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-105">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.LargeFaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="1c3d3-106">Добавьте фрагмент к списку указанный большой лицевой до 1 000 000 лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-106">Add a face to a specified large face list, up to 1,000,000 faces.</span></span>
      <br /> <span data-ttu-id="1c3d3-107">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-107">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1c3d3-108">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-108">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="1c3d3-109">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-109">No image will be stored.</span></span> <span data-ttu-id="1c3d3-110">Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargeFaceList лиц - удалить](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) или [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) вызывается.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-110">Only the extracted face feature will be stored on server until [LargeFaceList Face - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) or [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) is called.</span></span>
      <br /> <span data-ttu-id="1c3d3-111">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-111">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      * <span data-ttu-id="1c3d3-112">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-112">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="1c3d3-113">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-113">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="1c3d3-114">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-114">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="1c3d3-115">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-115">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="1c3d3-116">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-116">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="1c3d3-117">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-117">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="1c3d3-118">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-118">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      * <span data-ttu-id="1c3d3-119">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-119">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      * <span data-ttu-id="1c3d3-120">Добавление или удаление лиц с тем же список лиц обрабатываются последовательно и с разных лиц списки являются в параллельном режиме.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-120">Adding/deleting faces to/from a same face list are processed sequentially and to/from different face lists are in parallel.</span></span>
      * <span data-ttu-id="1c3d3-121">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-121">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="1c3d3-122">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-122">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="1c3d3-123">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="1c3d3-123">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="1c3d3-124">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="1c3d3-124">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="1c3d3-125">Модель</span><span class="sxs-lookup"><span data-stu-id="1c3d3-125">Model</span></span> | <span data-ttu-id="1c3d3-126">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="1c3d3-126">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="1c3d3-127">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="1c3d3-127">'detection_01':</span></span> | <span data-ttu-id="1c3d3-128">В модели обнаружения по умолчанию для [LargeFaceList - Добавление</span><span class="sxs-lookup"><span data-stu-id="1c3d3-128">The default detection model for [LargeFaceList - Add</span></span>
      <span data-ttu-id="1c3d3-129">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/5a158c10d2de3616c086f2d3).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-129">Face](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3).</span></span> <span data-ttu-id="1c3d3-130">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-130">Recommend for near frontal face detection.</span></span> <span data-ttu-id="1c3d3-131">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-131">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="1c3d3-132">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-132">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> <span data-ttu-id="1c3d3-133">| Квота:</span><span class="sxs-lookup"><span data-stu-id="1c3d3-133">| Quota:</span></span>
      * <span data-ttu-id="1c3d3-134">Квота освободить уровня подписки: 1000 лиц в списке больших лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-134">Free-tier subscription quota: 1,000 faces per large face list.</span></span>
      * <span data-ttu-id="1c3d3-135">Квота подписки уровня S0: 1 000 000 лиц в списке больших лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-135">S0-tier subscription quota: 1,000,000 faces per large face list.</span></span>
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options?: Models.LargeFaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-136">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-136">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="1c3d3-137">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-137">An image stream.</span></span>
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-138">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-138">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="1c3d3-139">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-139">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-140">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-140">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, LargeFaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: LargeFaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-141">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-141">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="1c3d3-142">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="1c3d3-142">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="1c3d3-143">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-143">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-144">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-144">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.LargeFaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="1c3d3-145">Добавьте фрагмент к списку указанный большой лицевой до 1 000 000 лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-145">Add a face to a specified large face list, up to 1,000,000 faces.</span></span>
      <br /> <span data-ttu-id="1c3d3-146">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-146">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="1c3d3-147">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-147">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="1c3d3-148">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-148">No image will be stored.</span></span> <span data-ttu-id="1c3d3-149">Только компонент извлеченные лиц, которые будут храниться на сервере, пока не [LargeFaceList лиц - удалить](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) или [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) вызывается.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-149">Only the extracted face feature will be stored on server until [LargeFaceList Face - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a158c8ad2de3616c086f2d4) or [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) is called.</span></span>
      <br /> <span data-ttu-id="1c3d3-150">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-150">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      * <span data-ttu-id="1c3d3-151">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-151">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="1c3d3-152">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-152">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="1c3d3-153">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-153">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="1c3d3-154">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-154">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="1c3d3-155">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-155">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="1c3d3-156">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-156">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="1c3d3-157">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-157">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      * <span data-ttu-id="1c3d3-158">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-158">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      * <span data-ttu-id="1c3d3-159">Добавление или удаление лиц с тем же список лиц обрабатываются последовательно и с разных лиц списки являются в параллельном режиме.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-159">Adding/deleting faces to/from a same face list are processed sequentially and to/from different face lists are in parallel.</span></span>
      * <span data-ttu-id="1c3d3-160">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-160">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="1c3d3-161">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-161">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="1c3d3-162">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="1c3d3-162">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="1c3d3-163">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="1c3d3-163">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="1c3d3-164">Модель</span><span class="sxs-lookup"><span data-stu-id="1c3d3-164">Model</span></span> | <span data-ttu-id="1c3d3-165">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="1c3d3-165">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="1c3d3-166">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="1c3d3-166">'detection_01':</span></span> | <span data-ttu-id="1c3d3-167">В модели обнаружения по умолчанию для [LargeFaceList - Добавление</span><span class="sxs-lookup"><span data-stu-id="1c3d3-167">The default detection model for [LargeFaceList - Add</span></span>
      <span data-ttu-id="1c3d3-168">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/5a158c10d2de3616c086f2d3).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-168">Face](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3).</span></span> <span data-ttu-id="1c3d3-169">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-169">Recommend for near frontal face detection.</span></span> <span data-ttu-id="1c3d3-170">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-170">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="1c3d3-171">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-171">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> <span data-ttu-id="1c3d3-172">| Квота:</span><span class="sxs-lookup"><span data-stu-id="1c3d3-172">| Quota:</span></span>
      * <span data-ttu-id="1c3d3-173">Квота освободить уровня подписки: 1000 лиц в списке больших лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-173">Free-tier subscription quota: 1,000 faces per large face list.</span></span>
      * <span data-ttu-id="1c3d3-174">Квота подписки уровня S0: 1 000 000 лиц в списке больших лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-174">S0-tier subscription quota: 1,000,000 faces per large face list.</span></span>
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Models.LargeFaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-175">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-175">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="1c3d3-176">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="1c3d3-176">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-177">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-177">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="1c3d3-178">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="1c3d3-178">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-179">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-179">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
    name: 'create(string, LargeFaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, options: LargeFaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-180">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-180">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
          description: <span data-ttu-id="1c3d3-181">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-181">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-182">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-182">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create'
    name: 'create(string, Models.LargeFaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"1c3d3-183\">Создание списка пустой большой лиц с пользовательской largeFaceListId, именем, необязательно userData и recognitionModel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-183\">Create an empty large face list with user-specified largeFaceListId, name, an optional userData and recognitionModel.</span></span>\n<br /> <span data-ttu-id=\"1c3d3-184\">Список большой лицевой список лиц, до 1 000 000 лиц и используемые [лиц - поиск похожих](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-184\">Large face list is a list of faces, up to 1,000,000 faces, and used by [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>\n<br /> <span data-ttu-id=\"1c3d3-185\">После создания, пользователь должен использовать [LargeFaceList лиц — добавить](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3) для импорта фрагменты и [LargeFaceList - Train](/docs/services/563879b61984550e40cbbe8d/operations/5a158422d2de3616c086f2d1) его для подготовки к [лиц - поиск похожих](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-185\">After creation, user should use [LargeFaceList Face - Add](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3) to import the faces and [LargeFaceList - Train](/docs/services/563879b61984550e40cbbe8d/operations/5a158422d2de3616c086f2d1) to make it ready for [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span> <span data-ttu-id=\"1c3d3-186\">Изображение не будут сохранены.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-186\">No image will be stored.</span></span> <span data-ttu-id=\"1c3d3-187\">Только компоненты извлеченные лиц хранятся на сервере, пока не [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) вызывается.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-187\">Only the extracted face features are stored on server until [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) is called.</span></span>\n<br /> <span data-ttu-id=\"1c3d3-188\">Найти подобный используется для сценария, например для поиска по принципу знаменитостей лиц, аналогичные лиц фильтрации, или как света способом сталкиваются идентификации.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-188\">Find Similar is used for scenario like finding celebrity-like faces, similar face filtering, or as a light way face identification.</span></span> <span data-ttu-id=\"1c3d3-189\">Но если фактическое использование для идентификации пользователя, используйте [каждой группе людей](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /\n[LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) и [сталкиваются - Идентификация](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-189\">But if the actual use is to identify person, please use [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /\n[LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) and [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>\n<br/><span data-ttu-id=\"1c3d3-190\">«recognitionModel» должно быть указано для связи с данным списком больших лиц.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-190\">'recognitionModel' should be specified to associate with this large face list.</span></span> <span data-ttu-id=\"1c3d3-191\">Значение по умолчанию для «recognitionModel» — «recognition_01», если последней модели необходимо явно указать модели, необходимые в этом параметре.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-191\">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id=\"1c3d3-192\">Новые лица, которые добавляются в существующий список большой лицевой будет использовать модель распознавания, которая уже связана с коллекцией.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-192\">New faces that are added to an existing large face list will use the recognition model that's already associated with the collection.</span></span> <span data-ttu-id=\"1c3d3-193\">Невозможно обновить существующие функции распознавания лиц в списке больших лиц к функциям, извлеченным в ходе другая версия модель распознавания.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-193\">Existing face features in a large face list can't be updated to features extracted by another version of recognition model.</span></span>\n* <span data-ttu-id=\"1c3d3-194\">«recognition_01»: Стандартная модель распознавания [LargeFaceList - создание](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc).</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-194\">'recognition_01': The default recognition model for [LargeFaceList- Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc).</span></span> <span data-ttu-id=\"1c3d3-195\">Все эти списки больших лиц, созданных до марта 2019 связанные с этой моделью распознавания.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-195\">All those large face lists created before 2019 March are bonded with this recognition model.</span></span>\n* <span data-ttu-id=\"1c3d3-196\">«recognition_02»: Модель распознавания, выпущенную в марте 2019 г.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-196\">'recognition_02': Recognition model released in 2019 March.</span></span> <span data-ttu-id=\"1c3d3-197\">«recognition_02» рекомендуется, так как его общая точность улучшена по сравнению с «recognition_01».</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-197\">'recognition_02' is recommended since its\_overall accuracy is improved compared with 'recognition_01'.</span></span>\n<span data-ttu-id=\"1c3d3-198\">Квоту списка больших лиц:</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-198\">Large face list quota:</span></span>\n* <span data-ttu-id=\"1c3d3-199\">Квота освободить уровня подписки: 64 лиц больших списков.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-199\">Free-tier subscription quota: 64 large face lists.</span></span>\n* <span data-ttu-id=\"1c3d3-200\">Квота подписки уровня S0: 1 000 000 списки больших лиц.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d3-200\">S0-tier subscription quota: 1,000,000 large face lists.</span></span>"
    syntax:
      content: 'function create(largeFaceListId: string, options?: Models.LargeFaceListCreateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-201">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-201">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-202">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-202">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-203">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="1c3d3-204">Удалите фрагмент из списка больших лиц, указанный largeFaceListId и persistedFaceId.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-204">Delete a face from a large face list by specified largeFaceListId and persistedFaceId.</span></span>
      <br /> <span data-ttu-id="1c3d3-205">Добавление или удаление лиц из одного списка большой лицевой обрабатываются последовательно и с различных больших лиц, которые параллельно работают списки.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-205">Adding/deleting faces to/from a same large face list are processed sequentially and to/from different large face lists are in parallel.</span></span>
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-206">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-206">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-207">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-207">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-208">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-208">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-209">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-209">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1c3d3-210">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-210">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-211">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-211">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-212">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-212">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-213">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-213">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-214">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-214">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1c3d3-215">Удаление указанного большого лиц списка.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-215">Delete a specified large face list.</span></span>
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-216">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-216">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-217">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-217">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1c3d3-218">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-218">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-219">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-219">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-220">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-220">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-221">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-221">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
    name: 'get(string, LargeFaceListGetOptionalParams, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, options: LargeFaceListGetOptionalParams, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-222">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-222">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
          description: <span data-ttu-id="1c3d3-223">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-223">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            <span data-ttu-id="1c3d3-224">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-224">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get'
    name: 'get(string, Models.LargeFaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1c3d3-225">Получение списка больших лиц largeFaceListId, имени, userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-225">Retrieve a large face list’s largeFaceListId, name, userData and recognitionModel.</span></span>'
    syntax:
      content: 'function get(largeFaceListId: string, options?: Models.LargeFaceListGetOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-226">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-226">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
    name: 'get(string, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-227">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-227">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            <span data-ttu-id="1c3d3-228">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-228">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
    name: 'getFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1c3d3-229">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-229">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>'
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-230">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-230">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-231">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-231">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
    name: 'getFace(string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-232">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-232">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-233">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-233">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1c3d3-234">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-234">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-235">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-235">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
    name: 'getFace(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-236">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-236">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-237">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-237">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="1c3d3-238">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-238">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1c3d3-239">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="1c3d3-239">Retrieve the training status of a large face list (completed or ongoing).</span></span>
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-240">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-240">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-241">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-241">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1c3d3-242">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-242">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="1c3d3-243">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-243">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-244">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-244">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="1c3d3-245">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-245">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
    name: LargeFaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="1c3d3-246">Создайте LargeFaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-246">Create a LargeFaceListOperations.</span></span>
    syntax:
      content: 'new LargeFaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="1c3d3-247">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-247">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
    name: 'list(LargeFaceListListOptionalParams, ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: LargeFaceListListOptionalParams, callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
          description: <span data-ttu-id="1c3d3-248">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-248">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            <span data-ttu-id="1c3d3-249">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-249">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list'
    name: list(Models.LargeFaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="1c3d3-250">Список сведений списки большой лицевой largeFaceListId "," имя "," userData "и" recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-250">List large face lists’ information of largeFaceListId, name, userData and recognitionModel.</span></span> <br
      />
      <span data-ttu-id="1c3d3-251">Для получения сведений лиц внутри используйте largeFaceList [лиц LargeFaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/5a158cf2d2de3616c086f2d5)</span><span class="sxs-lookup"><span data-stu-id="1c3d3-251">To get face information inside largeFaceList use [LargeFaceList Face - Get](/docs/services/563879b61984550e40cbbe8d/operations/5a158cf2d2de3616c086f2d5)</span></span><br />
      * <span data-ttu-id="1c3d3-252">Списки большой лицевой хранятся в алфавитном порядке по largeFaceListId.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-252">Large face lists are stored in alphabetical order of largeFaceListId.</span></span>
      * <span data-ttu-id="1c3d3-253">параметр «start» (строка, необязательный) — это largeFaceListId предоставляемый пользователем значение, возвращаемое что записей больше идентификаторы, сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-253">"start" parameter (string, optional) is a user-provided largeFaceListId value that returned entries have larger ids by string comparison.</span></span> <span data-ttu-id="1c3d3-254">«start» устанавливаются пустыми, чтобы указать после возврата из первого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-254">"start" set to empty to indicate return from the first item.</span></span>
      * <span data-ttu-id="1c3d3-255">параметр «top» (int, необязательный) указывает число возвращаемых записей.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-255">"top" parameter (int, optional) specifies the number of entries to return.</span></span> <span data-ttu-id="1c3d3-256">В одном вызове может быть возвращено максимум 1000 элементов.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-256">A maximal of 1000 entries can be returned in one call.</span></span> <span data-ttu-id="1c3d3-257">Чтобы получить более, можно указать «start» с идентификатором последнего возвращенного элемента текущего вызова.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-257">To fetch more, you can specify "start" with the last returned entry’s Id of the current call.</span></span>
      <br />
      <span data-ttu-id="1c3d3-258">Например, всего 5 больших людей списке: «list1»,..., «list5».</span><span class="sxs-lookup"><span data-stu-id="1c3d3-258">For example, total 5 large person lists: "list1", ..., "list5".</span></span>
      <br /> <span data-ttu-id="1c3d3-259">"start=&top=" will return all 5 lists.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-259">"start=&top=" will return all 5 lists.</span></span>
      <br /> <span data-ttu-id="1c3d3-260">"start=&top=2" will return "list1", "list2".</span><span class="sxs-lookup"><span data-stu-id="1c3d3-260">"start=&top=2" will return "list1", "list2".</span></span>
      <br /> <span data-ttu-id="1c3d3-261">"start=list2&top=3" will return "list3", "list4", "list5".</span><span class="sxs-lookup"><span data-stu-id="1c3d3-261">"start=list2&top=3" will return "list3", "list4", "list5".</span></span>
    syntax:
      content: 'function list(options?: Models.LargeFaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.LargeFaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
    name: 'list(ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            <span data-ttu-id="1c3d3-262">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-262">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
    name: 'listFaces(string, LargeFaceListListFacesOptionalParams, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, options: LargeFaceListListFacesOptionalParams, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-263">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-263">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
          description: <span data-ttu-id="1c3d3-264">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-264">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            <span data-ttu-id="1c3d3-265">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-265">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
    name: 'listFaces(string, Models.LargeFaceListListFacesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1c3d3-266">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="1c3d3-266">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>'
    syntax:
      content: 'function listFaces(largeFaceListId: string, options?: Models.LargeFaceListListFacesOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-267">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-267">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListListFacesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
    name: 'listFaces(string, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-268">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-268">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            <span data-ttu-id="1c3d3-269">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-269">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="1c3d3-270">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-270">Queue a large face list training task, the training task may not be started immediately.</span></span>'
    syntax:
      content: 'function train(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-271">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-271">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-272">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-272">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="1c3d3-273">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-273">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-274">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-274">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-275">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-275">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-276">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-276">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
    name: 'update(string, LargeFaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, options: LargeFaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-277">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-277">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
          description: <span data-ttu-id="1c3d3-278">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-278">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-279">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-279">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update'
    name: 'update(string, Models.LargeFaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1c3d3-280">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-280">Update information of a large face list.</span></span>
    syntax:
      content: 'function update(largeFaceListId: string, options?: Models.LargeFaceListUpdateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-281">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-281">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-282">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-282">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-283">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-283">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
    name: 'updateFace(string, string, LargeFaceListUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: LargeFaceListUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-284">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-284">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-285">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-285">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
          description: <span data-ttu-id="1c3d3-286">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="1c3d3-286">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-287">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-287">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
    name: 'updateFace(string, string, Models.LargeFaceListUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1c3d3-288">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-288">Update a persisted face's userData field.</span></span>
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Models.LargeFaceListUpdateFaceOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-289">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-289">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-290">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-290">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - Models.LargeFaceListUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    name: 'updateFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="1c3d3-291">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-291">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="1c3d3-292">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="1c3d3-292">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="1c3d3-293">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="1c3d3-293">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
    name: LargeFaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromStreamOptionalParams
        fullName: LargeFaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
    name: LargeFaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromUrlOptionalParams
        fullName: LargeFaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
    name: LargeFaceListCreateOptionalParams
    spec.typeScript:
      - name: LargeFaceListCreateOptionalParams
        fullName: LargeFaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
    name: LargeFaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
    name: LargeFaceListGetOptionalParams
    spec.typeScript:
      - name: LargeFaceListGetOptionalParams
        fullName: LargeFaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
    name: 'LargeFaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
    name: LargeFaceListListOptionalParams
    spec.typeScript:
      - name: LargeFaceListListOptionalParams
        fullName: LargeFaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
    name: 'PersistedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
    name: LargeFaceListListFacesOptionalParams
    spec.typeScript:
      - name: LargeFaceListListFacesOptionalParams
        fullName: LargeFaceListListFacesOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
    name: LargeFaceListUpdateOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateOptionalParams
        fullName: LargeFaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
    name: LargeFaceListUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateFaceOptionalParams
        fullName: LargeFaceListUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'