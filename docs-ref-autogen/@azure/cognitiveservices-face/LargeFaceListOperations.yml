### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
    name: LargeFaceListOperations
    fullName: LargeFaceListOperations
    children:
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
      - '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="035bb-101">Класс, представляющий LargeFaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="035bb-101">Class representing a LargeFaceListOperations.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, LargeFaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options: LargeFaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-102">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-102">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="035bb-103">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="035bb-103">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="035bb-104">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-104">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-105">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-105">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.LargeFaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-106">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-106">Add a face to a large face list.</span></span> <span data-ttu-id="035bb-107">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="035bb-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="035bb-108">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="035bb-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>'
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, options?: Models.LargeFaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-109">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-109">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="035bb-110">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="035bb-110">An image stream.</span></span>
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(largeFaceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-111">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-111">Id referencing a particular large face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="035bb-112">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="035bb-112">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-113">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-113">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, LargeFaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: LargeFaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-114">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-114">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="035bb-115">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="035bb-115">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="035bb-116">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-116">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-117">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-117">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.LargeFaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-118">Добавьте фрагмент списка больших лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-118">Add a face to a large face list.</span></span> <span data-ttu-id="035bb-119">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="035bb-119">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="035bb-120">Возвращает persistedFaceId, представляющий добавленный лиц и persistedFaceId не истекает.</span><span class="sxs-lookup"><span data-stu-id="035bb-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>'
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Models.LargeFaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-121">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-121">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="035bb-122">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="035bb-122">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.LargeFaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-123">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-123">Id referencing a particular large face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="035bb-124">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="035bb-124">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-125">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-125">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
    name: 'create(string, LargeFaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, options: LargeFaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-126">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-126">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
          description: <span data-ttu-id="035bb-127">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-128">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create'
    name: 'create(string, Models.LargeFaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="035bb-129">Создание списка пустой большой лиц с пользовательской largeFaceListId, именем, необязательно userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="035bb-129">Create an empty large face list with user-specified largeFaceListId, name, an optional userData and recognitionModel.</span></span>
      <br /> <span data-ttu-id="035bb-130">Список большой лицевой список лиц, до 1 000 000 лиц и используемые [лиц - поиск похожих](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="035bb-130">Large face list is a list of faces, up to 1,000,000 faces, and used by [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>
      <br /> <span data-ttu-id="035bb-131">После создания, пользователь должен использовать [LargeFaceList лиц — добавить](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3) для импорта фрагменты и [LargeFaceList - Train](/docs/services/563879b61984550e40cbbe8d/operations/5a158422d2de3616c086f2d1) его для подготовки к [лиц - FindSimilar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="035bb-131">After creation, user should use [LargeFaceList Face - Add](/docs/services/563879b61984550e40cbbe8d/operations/5a158c10d2de3616c086f2d3) to import the faces and [LargeFaceList - Train](/docs/services/563879b61984550e40cbbe8d/operations/5a158422d2de3616c086f2d1) to make it ready for [Face - FindSimilar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span> <span data-ttu-id="035bb-132">Фрагменты хранятся на сервере, пока не [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) вызывается.</span><span class="sxs-lookup"><span data-stu-id="035bb-132">Faces are stored on server until [LargeFaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/5a1580d5d2de3616c086f2cd) is called.</span></span>
      <br /> <span data-ttu-id="035bb-133">Найти подобный используется для сценария, например для поиска по принципу знаменитостей лиц, аналогичные лиц фильтрации, или как света способом сталкиваются идентификации.</span><span class="sxs-lookup"><span data-stu-id="035bb-133">Find Similar is used for scenario like finding celebrity-like faces, similar face filtering, or as a light way face identification.</span></span> <span data-ttu-id="035bb-134">Но если фактическое использование для идентификации пользователя, используйте [каждой группе людей](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) и [сталкиваются - Идентификация](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class="sxs-lookup"><span data-stu-id="035bb-134">But if the actual use is to identify person, please use [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) and [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>
      <br />
      * <span data-ttu-id="035bb-135">Квота освободить уровня подписки: 64 лиц больших списков.</span><span class="sxs-lookup"><span data-stu-id="035bb-135">Free-tier subscription quota: 64 large face lists.</span></span>
      * <span data-ttu-id="035bb-136">Квота подписки уровня S0: 1 000 000 списки больших лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-136">S0-tier subscription quota: 1,000,000 large face lists.</span></span>
      <br />
      <span data-ttu-id="035bb-137">«recognitionModel» должно быть указано для связи с данным списком больших лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-137">'recognitionModel' should be specified to associate with this large face list.</span></span> <span data-ttu-id="035bb-138">Значение по умолчанию для «recognitionModel» — «recognition_01», если последней модели необходимо явно указать модели, необходимые в этом параметре.</span><span class="sxs-lookup"><span data-stu-id="035bb-138">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="035bb-139">Новые лица, которые добавляются в существующий список большой лицевой будет использовать модель распознавания, которая уже связана с коллекцией.</span><span class="sxs-lookup"><span data-stu-id="035bb-139">New faces that are added to an existing large face list will use the recognition model that's already associated with the collection.</span></span> <span data-ttu-id="035bb-140">Невозможно обновить существующие функции распознавания лиц в списке больших лиц к функциям, извлеченным в ходе другая версия модель распознавания.</span><span class="sxs-lookup"><span data-stu-id="035bb-140">Existing face features in a large face list can't be updated to features extracted by another version of recognition model.</span></span>
    syntax:
      content: 'function create(largeFaceListId: string, options?: Models.LargeFaceListCreateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-141">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-141">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-142">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-142">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-143">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-143">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-144">Удаление существующего лиц из списка больших лиц (при наличии persistedFaceId и largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="035bb-144">Delete an existing face from a large face list (given by a persistedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="035bb-145">Также будут удалены постоянный образ, относящиеся к поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-145">Persisted image related to the face will also be deleted.</span></span>'
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-146">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-146">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-147">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-147">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-148">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-148">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-149">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-149">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="035bb-150">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-150">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-151">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-151">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-152">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-152">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-153">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-153">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-154">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-154">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-155">Удаление существующего списка больших лиц в соответствии с faceListId.</span><span class="sxs-lookup"><span data-stu-id="035bb-155">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="035bb-156">Сохраненных лиц изображений в списке больших лиц, будут также удалены.</span><span class="sxs-lookup"><span data-stu-id="035bb-156">Persisted face images in the large face list will also be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-157">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-157">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-158">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-158">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="035bb-159">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-159">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-160">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-160">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-161">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-161">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-162">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
    name: 'get(string, LargeFaceListGetOptionalParams, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, options: LargeFaceListGetOptionalParams, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-163">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-163">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
          description: <span data-ttu-id="035bb-164">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-164">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            <span data-ttu-id="035bb-165">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-165">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get'
    name: 'get(string, Models.LargeFaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-166">Получение списка больших лиц largeFaceListId, имени, userData и recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="035bb-166">Retrieve a large face list’s largeFaceListId, name, userData and recognitionModel.</span></span>'
    syntax:
      content: 'function get(largeFaceListId: string, options?: Models.LargeFaceListGetOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-167">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-167">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
    name: 'get(string, ServiceCallback<LargeFaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-168">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-168">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
          description: |
            <span data-ttu-id="035bb-169">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-169">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
    name: 'getFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-170">Получить сведения о сохраненных лиц, (как указано в persistedFaceId и его принадлежность largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="035bb-170">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>'
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-171">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-171">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-172">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-172">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
    name: 'getFace(string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-173">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-173">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-174">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-174">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="035bb-175">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-175">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-176">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-176">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
    name: 'getFace(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-177">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-177">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-178">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-178">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="035bb-179">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-179">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="035bb-180">Получить состояние обучение списка больших лиц ("завершенные" или "постоянная").</span><span class="sxs-lookup"><span data-stu-id="035bb-180">Retrieve the training status of a large face list (completed or ongoing).</span></span>
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-181">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-181">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-182">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-182">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="035bb-183">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-183">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="035bb-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-184">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-185">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-185">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            <span data-ttu-id="035bb-186">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-186">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
    name: LargeFaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="035bb-187">Создайте LargeFaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="035bb-187">Create a LargeFaceListOperations.</span></span>
    syntax:
      content: 'new LargeFaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="035bb-188">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="035bb-188">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
    name: 'list(LargeFaceListListOptionalParams, ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: LargeFaceListListOptionalParams, callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
          description: <span data-ttu-id="035bb-189">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-189">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            <span data-ttu-id="035bb-190">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-190">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list'
    name: list(Models.LargeFaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="035bb-191">Список сведений списки большой лицевой largeFaceListId "," имя "," userData "и" recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="035bb-191">List large face lists’ information of largeFaceListId, name, userData and recognitionModel.</span></span> <br
      />
      <span data-ttu-id="035bb-192">Для получения сведений лиц внутри используйте largeFaceList [лиц LargeFaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/5a158cf2d2de3616c086f2d5)</span><span class="sxs-lookup"><span data-stu-id="035bb-192">To get face information inside largeFaceList use [LargeFaceList Face - Get](/docs/services/563879b61984550e40cbbe8d/operations/5a158cf2d2de3616c086f2d5)</span></span><br />
      * <span data-ttu-id="035bb-193">Списки большой лицевой хранятся в алфавитном порядке по largeFaceListId.</span><span class="sxs-lookup"><span data-stu-id="035bb-193">Large face lists are stored in alphabetical order of largeFaceListId.</span></span>
      * <span data-ttu-id="035bb-194">параметр «start» (строка, необязательный) — это largeFaceListId предоставляемый пользователем значение, возвращаемое что записей больше идентификаторы, сравнения строк.</span><span class="sxs-lookup"><span data-stu-id="035bb-194">"start" parameter (string, optional) is a user-provided largeFaceListId value that returned entries have larger ids by string comparison.</span></span> <span data-ttu-id="035bb-195">«start» устанавливаются пустыми, чтобы указать после возврата из первого элемента.</span><span class="sxs-lookup"><span data-stu-id="035bb-195">"start" set to empty to indicate return from the first item.</span></span>
      * <span data-ttu-id="035bb-196">параметр «top» (int, необязательный) указывает число возвращаемых записей.</span><span class="sxs-lookup"><span data-stu-id="035bb-196">"top" parameter (int, optional) specifies the number of entries to return.</span></span> <span data-ttu-id="035bb-197">В одном вызове может быть возвращено максимум 1000 элементов.</span><span class="sxs-lookup"><span data-stu-id="035bb-197">A maximal of 1000 entries can be returned in one call.</span></span> <span data-ttu-id="035bb-198">Чтобы получить более, можно указать «start» с идентификатором последнего возвращенного элемента текущего вызова.</span><span class="sxs-lookup"><span data-stu-id="035bb-198">To fetch more, you can specify "start" with the last returned entry’s Id of the current call.</span></span>
      <br />
      <span data-ttu-id="035bb-199">Например, всего 5 больших людей списке: «list1»,..., «list5».</span><span class="sxs-lookup"><span data-stu-id="035bb-199">For example, total 5 large person lists: "list1", ..., "list5".</span></span>
      <br /> <span data-ttu-id="035bb-200">"start=&top=" will return all 5 lists.</span><span class="sxs-lookup"><span data-stu-id="035bb-200">"start=&top=" will return all 5 lists.</span></span>
      <br /> <span data-ttu-id="035bb-201">"start=&top=2" will return "list1", "list2".</span><span class="sxs-lookup"><span data-stu-id="035bb-201">"start=&top=2" will return "list1", "list2".</span></span>
      <br /> <span data-ttu-id="035bb-202">"start=list2&top=3" will return "list3", "list4", "list5".</span><span class="sxs-lookup"><span data-stu-id="035bb-202">"start=list2&top=3" will return "list3", "list4", "list5".</span></span>
    syntax:
      content: 'function list(options?: Models.LargeFaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.LargeFaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
    name: 'list(ServiceCallback<LargeFaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
          description: |
            <span data-ttu-id="035bb-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-203">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
    name: 'listFaces(string, LargeFaceListListFacesOptionalParams, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, options: LargeFaceListListFacesOptionalParams, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-204">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-204">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
          description: <span data-ttu-id="035bb-205">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-205">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            <span data-ttu-id="035bb-206">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-206">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
    name: 'listFaces(string, Models.LargeFaceListListFacesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-207">Список всех лиц в списке больших лиц и получить сведения о лиц (включая userData и persistedFaceIds зарегистрированных лиц поверхности).</span><span class="sxs-lookup"><span data-stu-id="035bb-207">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>'
    syntax:
      content: 'function listFaces(largeFaceListId: string, options?: Models.LargeFaceListListFacesOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-208">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-208">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListListFacesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
    name: 'listFaces(string, ServiceCallback<PersistedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-209">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-209">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
          description: |
            <span data-ttu-id="035bb-210">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-210">The callback</span></span>
      return:
        type:
          - Promise<Models.LargeFaceListListFacesResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="035bb-211">Задачей обучения списка больших лиц в очередь, немедленный запуск задачи обучения.</span><span class="sxs-lookup"><span data-stu-id="035bb-211">Queue a large face list training task, the training task may not be started immediately.</span></span>'
    syntax:
      content: 'function train(largeFaceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-212">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-212">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-213">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-213">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="035bb-214">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-214">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-215">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-215">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-216">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-216">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-217">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-217">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
    name: 'update(string, LargeFaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, options: LargeFaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-218">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-218">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
          description: <span data-ttu-id="035bb-219">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-219">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-220">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-220">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update'
    name: 'update(string, Models.LargeFaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="035bb-221">Обновите сведения о больших лиц списка.</span><span class="sxs-lookup"><span data-stu-id="035bb-221">Update information of a large face list.</span></span>
    syntax:
      content: 'function update(largeFaceListId: string, options?: Models.LargeFaceListUpdateOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-222">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-222">Id referencing a particular large face list.</span></span>
        - id: options
          type:
            - Models.LargeFaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-223">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-223">Id referencing a particular large face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-224">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-224">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
    name: 'updateFace(string, string, LargeFaceListUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: LargeFaceListUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-225">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-225">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-226">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-226">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
          description: <span data-ttu-id="035bb-227">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="035bb-227">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-228">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-228">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
    name: 'updateFace(string, string, Models.LargeFaceListUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="035bb-229">Обновите поле userData сохраненных лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-229">Update a persisted face's userData field.</span></span>
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Models.LargeFaceListUpdateFaceOptionalParams)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-230">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-230">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-231">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-231">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - Models.LargeFaceListUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    name: 'updateFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type:
            - string
          description: <span data-ttu-id="035bb-232">Идентификатор ссылки на список определенного большого лиц.</span><span class="sxs-lookup"><span data-stu-id="035bb-232">Id referencing a particular large face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="035bb-233">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="035bb-233">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="035bb-234">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="035bb-234">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
    name: LargeFaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromStreamOptionalParams
        fullName: LargeFaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
    name: LargeFaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: LargeFaceListAddFaceFromUrlOptionalParams
        fullName: LargeFaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
    name: LargeFaceListCreateOptionalParams
    spec.typeScript:
      - name: LargeFaceListCreateOptionalParams
        fullName: LargeFaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.LargeFaceList>
    name: LargeFaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
    name: LargeFaceListGetOptionalParams
    spec.typeScript:
      - name: LargeFaceListGetOptionalParams
        fullName: LargeFaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.LargeFaceList[]>'
    name: 'LargeFaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LargeFaceList
        fullName: LargeFaceList
        uid: '@azure/cognitiveservices-face.LargeFaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
    name: LargeFaceListListOptionalParams
    spec.typeScript:
      - name: LargeFaceListListOptionalParams
        fullName: LargeFaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersistedFace[]>'
    name: 'PersistedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
    name: LargeFaceListListFacesOptionalParams
    spec.typeScript:
      - name: LargeFaceListListFacesOptionalParams
        fullName: LargeFaceListListFacesOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListListFacesOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
    name: LargeFaceListUpdateOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateOptionalParams
        fullName: LargeFaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'
    name: LargeFaceListUpdateFaceOptionalParams
    spec.typeScript:
      - name: LargeFaceListUpdateFaceOptionalParams
        fullName: LargeFaceListUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.LargeFaceListUpdateFaceOptionalParams'