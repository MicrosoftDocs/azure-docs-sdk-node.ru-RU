### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="711b7-101">Класс, представляющий PersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="711b7-101">Class representing a PersonGroupPerson.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-102">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="711b7-102">Add a representative face to a person for identification.</span></span> <span data-ttu-id="711b7-103">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="711b7-103">The input face is specified as an image with a targetFace rectangle.</span></span>
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-104">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-104">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-105">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-105">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="711b7-106">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="711b7-106">An image stream.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, PersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options: PersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-107">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-107">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-108">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-108">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="711b7-109">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="711b7-109">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="711b7-110">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-110">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-111">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-111">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-112">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-112">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-113">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-113">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="711b7-114">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="711b7-114">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-115">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-115">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-116">Добавьте репрезентативной лиц для идентификации человека.</span><span class="sxs-lookup"><span data-stu-id="711b7-116">Add a representative face to a person for identification.</span></span> <span data-ttu-id="711b7-117">Входной лиц указываются в виде изображения с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="711b7-117">The input face is specified as an image with a targetFace rectangle.</span></span>
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-118">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-118">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-119">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-119">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="711b7-120">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="711b7-120">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, PersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: PersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-121">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-121">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-122">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-122">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="711b7-123">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="711b7-123">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="711b7-124">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-124">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-125">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-125">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-126">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-126">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-127">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-127">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="711b7-128">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="711b7-128">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-129">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-129">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-130">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="711b7-130">Create a new person in a specified person group.</span></span>
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-131">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-131">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: 'create(string, PersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-132">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-132">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
          description: <span data-ttu-id="711b7-133">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-133">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="711b7-134">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-134">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-135">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-135">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="711b7-136">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-136">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-137">Удалите фрагмент от лица.</span><span class="sxs-lookup"><span data-stu-id="711b7-137">Delete a face from a person.</span></span> <span data-ttu-id="711b7-138">Относительный функцию для сохраненных лиц также будут удалены.</span><span class="sxs-lookup"><span data-stu-id="711b7-138">Relative feature for the persisted face will also be deleted.</span></span>
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-139">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-139">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-140">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-140">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-141">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-141">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-142">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-142">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-143">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-143">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-144">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-144">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="711b7-145">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-145">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-146">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-146">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-147">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-147">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-148">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-148">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-149">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-149">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-150">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-150">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="711b7-151">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-151">Delete an existing person from a person group.</span></span> <span data-ttu-id="711b7-152">Все сохраненные данные пользователя, и будут удалены функции распознавания лиц в записи пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-152">All stored person data, and face features in the person entry will be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-153">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-153">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-154">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-154">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-155">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-155">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-156">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-156">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="711b7-157">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-158">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-158">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-159">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-159">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-160">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-160">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-161">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-161">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="711b7-162">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="711b7-162">Retrieve a person''s information, including registered persisted faces, name and userData.</span></span>'
    syntax:
      content: 'function get(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-163">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-163">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-164">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-164">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-165">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-165">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-166">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-166">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="711b7-167">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-167">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="711b7-168">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-168">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-169">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-169">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-170">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-170">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="711b7-171">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-171">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="711b7-172">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="711b7-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>'
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-173">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-173">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-174">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-174">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-175">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-176">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-176">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-177">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-177">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-178">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-178">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="711b7-179">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-180">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-180">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-181">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-181">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-182">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-182">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-183">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-183">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="711b7-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-184">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="711b7-185">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="711b7-185">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>'
    syntax:
      content: 'function list(personGroupId: string, options?: Models.PersonGroupPersonListOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-186">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-186">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: 'list(string, PersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, options: PersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-187">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-187">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: <span data-ttu-id="711b7-188">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-188">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="711b7-189">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-189">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-190">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-190">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="711b7-191">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-191">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-192">Создайте PersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="711b7-192">Create a PersonGroupPerson.</span></span>
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="711b7-193">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="711b7-193">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-194">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="711b7-194">Update name or userData of a person.</span></span>
    syntax:
      content: 'function update(personGroupId: string, personId: string, options?: Models.PersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-195">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-195">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-196">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-196">Id referencing a particular person.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: 'update(string, string, PersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, options: PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-197">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-197">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-198">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-198">Id referencing a particular person.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
          description: <span data-ttu-id="711b7-199">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-199">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-200">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-200">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-201">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-201">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-202">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-202">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-203">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-203">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.PersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="711b7-204">Обновление пользователя сохраняются поле userData лиц.</span><span class="sxs-lookup"><span data-stu-id="711b7-204">Update a person persisted face's userData field.</span></span>
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Models.PersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-205">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-205">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-206">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-206">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-207">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-207">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: PersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-208">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-208">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-209">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-209">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-210">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-210">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
          description: <span data-ttu-id="711b7-211">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="711b7-211">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-212">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-212">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="711b7-213">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="711b7-213">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="711b7-214">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="711b7-214">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="711b7-215">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="711b7-215">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="711b7-216">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="711b7-216">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'