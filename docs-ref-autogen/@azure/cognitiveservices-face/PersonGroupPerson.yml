### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="996b4-101">Класс, представляющий PersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="996b4-101">Class representing a PersonGroupPerson.</span></span>'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="996b4-102">Добавьте фрагмент человека в лица группу для подтверждения или идентификацию лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-102">Add a face to a person into a person group for face identification or verification.</span></span> <span data-ttu-id="996b4-103">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="996b4-103">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="996b4-104">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-104">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="996b4-105">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="996b4-105">No image will be stored.</span></span>
      <span data-ttu-id="996b4-106">Только функцию извлеченные лиц, которые будут храниться на сервере, пока не [PersonFace каждой группе людей - удалить](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [удалить пользователя в каждой группе людей -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) или [каждой группе людей - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) вызывается.</span><span class="sxs-lookup"><span data-stu-id="996b4-106">Only the extracted face feature will be stored on server until [PersonGroup PersonFace - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [PersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) or [PersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) is called.</span></span>
      <br /> <span data-ttu-id="996b4-107">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="996b4-107">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      *   <span data-ttu-id="996b4-108">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="996b4-108">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="996b4-109">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="996b4-109">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      *   <span data-ttu-id="996b4-110">Каждая запись пользователя может содержать до 248 лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-110">Each person entry can hold up to 248 faces.</span></span>
      *   <span data-ttu-id="996b4-111">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="996b4-111">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="996b4-112">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="996b4-112">The allowed image file size is from 1KB to 6MB.</span></span>
      *   <span data-ttu-id="996b4-113">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="996b4-113">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="996b4-114">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="996b4-114">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="996b4-115">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="996b4-115">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      *   <span data-ttu-id="996b4-116">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="996b4-116">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      *   <span data-ttu-id="996b4-117">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="996b4-117">Adding/deleting faces to/from a same person will be processed sequentially.</span></span> <span data-ttu-id="996b4-118">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="996b4-118">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
      * <span data-ttu-id="996b4-119">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="996b4-119">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="996b4-120">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-120">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="996b4-121">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="996b4-121">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="996b4-122">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="996b4-122">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="996b4-123">Модель</span><span class="sxs-lookup"><span data-stu-id="996b4-123">Model</span></span> | <span data-ttu-id="996b4-124">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="996b4-124">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="996b4-125">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="996b4-125">'detection_01':</span></span> | <span data-ttu-id="996b4-126">В модели обнаружения по умолчанию для [Person каждой группе людей - Добавление</span><span class="sxs-lookup"><span data-stu-id="996b4-126">The default detection model for [PersonGroup Person - Add</span></span>
      <span data-ttu-id="996b4-127">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/563879b61984550f3039523b).</span><span class="sxs-lookup"><span data-stu-id="996b4-127">Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b).</span></span> <span data-ttu-id="996b4-128">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="996b4-128">Recommend for near frontal face detection.</span></span> <span data-ttu-id="996b4-129">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="996b4-129">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="996b4-130">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-130">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-131">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-131">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-132">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-132">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="996b4-133">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="996b4-133">An image stream.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, PersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options: PersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-134">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-134">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-135">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-135">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="996b4-136">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="996b4-136">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="996b4-137">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-138">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-138">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-139">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-139">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-140">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-140">Id referencing a particular person.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="996b4-141">Поток данных изображения.</span><span class="sxs-lookup"><span data-stu-id="996b4-141">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-142">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-142">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="996b4-143">Добавьте фрагмент человека в лица группу для подтверждения или идентификацию лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-143">Add a face to a person into a person group for face identification or verification.</span></span> <span data-ttu-id="996b4-144">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="996b4-144">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="996b4-145">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-145">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="996b4-146">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="996b4-146">No image will be stored.</span></span>
      <span data-ttu-id="996b4-147">Только функцию извлеченные лиц, которые будут храниться на сервере, пока не [PersonFace каждой группе людей - удалить](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [удалить пользователя в каждой группе людей -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) или [каждой группе людей - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) вызывается.</span><span class="sxs-lookup"><span data-stu-id="996b4-147">Only the extracted face feature will be stored on server until [PersonGroup PersonFace - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [PersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) or [PersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) is called.</span></span>
      <br /> <span data-ttu-id="996b4-148">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="996b4-148">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      *   <span data-ttu-id="996b4-149">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="996b4-149">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="996b4-150">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="996b4-150">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      *   <span data-ttu-id="996b4-151">Каждая запись пользователя может содержать до 248 лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-151">Each person entry can hold up to 248 faces.</span></span>
      *   <span data-ttu-id="996b4-152">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="996b4-152">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="996b4-153">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="996b4-153">The allowed image file size is from 1KB to 6MB.</span></span>
      *   <span data-ttu-id="996b4-154">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="996b4-154">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="996b4-155">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="996b4-155">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="996b4-156">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="996b4-156">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      *   <span data-ttu-id="996b4-157">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="996b4-157">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      *   <span data-ttu-id="996b4-158">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="996b4-158">Adding/deleting faces to/from a same person will be processed sequentially.</span></span> <span data-ttu-id="996b4-159">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="996b4-159">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
      * <span data-ttu-id="996b4-160">Размер минимальное обнаруживаемых лиц — 36 x 36 пикселей изображения не больше 1920 x 1080 пикселей.</span><span class="sxs-lookup"><span data-stu-id="996b4-160">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="996b4-161">Изображения с размерами, выше, чем 1920 x 1080 пикселей понадобится пропорционально большего размера минимальное лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-161">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="996b4-162">Можно указать значения различных «detectionModel».</span><span class="sxs-lookup"><span data-stu-id="996b4-162">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="996b4-163">Использовать и сравнения моделей обнаружения см. в статье [способы указания модели обнаружения](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="996b4-163">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="996b4-164">Модель</span><span class="sxs-lookup"><span data-stu-id="996b4-164">Model</span></span> | <span data-ttu-id="996b4-165">Рекомендуемое использование-case(s)</span><span class="sxs-lookup"><span data-stu-id="996b4-165">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="996b4-166">«detection_01»:</span><span class="sxs-lookup"><span data-stu-id="996b4-166">'detection_01':</span></span> | <span data-ttu-id="996b4-167">В модели обнаружения по умолчанию для [Person каждой группе людей - Добавление</span><span class="sxs-lookup"><span data-stu-id="996b4-167">The default detection model for [PersonGroup Person - Add</span></span>
      <span data-ttu-id="996b4-168">Face](/docs/Services/563879b61984550e40cbbe8d/Operations/563879b61984550f3039523b).</span><span class="sxs-lookup"><span data-stu-id="996b4-168">Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b).</span></span> <span data-ttu-id="996b4-169">Рекомендуем использовать для практически обнаружение лиц в анфас.</span><span class="sxs-lookup"><span data-stu-id="996b4-169">Recommend for near frontal face detection.</span></span> <span data-ttu-id="996b4-170">Для сценариев с чрезвычайно большого угол (головы) лица, перекрыто лиц или неправильное изображение ориентации лиц в таких случаях могут не обнаруживаться.</span><span class="sxs-lookup"><span data-stu-id="996b4-170">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="996b4-171">| | «detection_02»: | Модель обнаружения, выпущенная в 2019 может с повышенную точность, особенно для небольших, сторона и становится нечетким лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-171">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-172">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-172">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-173">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-173">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="996b4-174">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="996b4-174">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, PersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: PersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-175">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-175">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-176">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-176">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="996b4-177">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="996b4-177">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="996b4-178">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-178">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-179">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-179">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-180">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-180">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-181">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-181">Id referencing a particular person.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="996b4-182">Публично доступную URL-адрес изображения</span><span class="sxs-lookup"><span data-stu-id="996b4-182">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-183">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-183">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="996b4-184">Создание нового пользователя в группе указанному пользователю.</span><span class="sxs-lookup"><span data-stu-id="996b4-184">Create a new person in a specified person group.</span></span>
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-185">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-185">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: 'create(string, PersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-186">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-186">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
          description: <span data-ttu-id="996b4-187">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-187">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="996b4-188">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-188">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-189">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-189">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="996b4-190">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-190">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="996b4-191">Удалите фрагмент от лица в группы пользователя, указанного personGroupId, personId и persistedFaceId.</span><span class="sxs-lookup"><span data-stu-id="996b4-191">Delete a face from a person in a person group by specified personGroupId, personId and persistedFaceId.</span></span>
      <br /> <span data-ttu-id="996b4-192">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="996b4-192">Adding/deleting faces to/from a same person will be processed sequentially.</span></span>
      <span data-ttu-id="996b4-193">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="996b4-193">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-194">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-194">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-195">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-195">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-196">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-196">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-197">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-197">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-198">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-198">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-199">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="996b4-200">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-200">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-201">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-201">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-202">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-202">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-203">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-203">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-204">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-204">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-205">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-205">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="996b4-206">Удалите его из группы пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-206">Delete an existing person from a person group.</span></span> <span data-ttu-id="996b4-207">PersistedFaceId, userData, функция person имя и лиц в записи пользователя все удаляется.</span><span class="sxs-lookup"><span data-stu-id="996b4-207">The persistedFaceId, userData, person name and face feature in the person entry will all be deleted.</span></span>'
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-208">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-208">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-209">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-209">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-210">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-210">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-211">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-211">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="996b4-212">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-212">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-213">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-213">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-214">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-214">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-215">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-215">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-216">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-216">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="996b4-217">Получить сведения об пользователя, включая зарегистрированные изображений в виде "," имя "и" userData.</span><span class="sxs-lookup"><span data-stu-id="996b4-217">Retrieve a person''s information, including registered persisted faces, name and userData.</span></span>'
    syntax:
      content: 'function get(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-218">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-218">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-219">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-219">Id referencing a particular person.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-220">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-220">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-221">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-221">Id referencing a particular person.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="996b4-222">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-222">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="996b4-223">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-223">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-224">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-224">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-225">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-225">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            <span data-ttu-id="996b4-226">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-226">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="996b4-227">Получить сведения о сохраненных лиц, (как указано в persistedFaceId, personId и его принадлежность personGroupId).</span><span class="sxs-lookup"><span data-stu-id="996b4-227">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>'
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-228">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-228">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-229">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-229">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-230">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-230">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-231">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-231">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-232">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-232">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-233">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-233">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="996b4-234">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-234">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-235">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-235">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-236">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-236">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-237">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-237">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-238">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-238">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="996b4-239">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-239">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="996b4-240">Перечислить всех лиц в группу person и получить сведения о менеджере по (включая personId "," имя "," userData "и" persistedFaceIds лиц зарегистрированного пользователя).</span><span class="sxs-lookup"><span data-stu-id="996b4-240">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>'
    syntax:
      content: 'function list(personGroupId: string, options?: Models.PersonGroupPersonListOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-241">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-241">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: 'list(string, PersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, options: PersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-242">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-242">Id referencing a particular person group.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: <span data-ttu-id="996b4-243">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-243">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="996b4-244">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-244">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-245">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-245">Id referencing a particular person group.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            <span data-ttu-id="996b4-246">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-246">The callback</span></span>
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="996b4-247">Создайте PersonGroupPerson.</span><span class="sxs-lookup"><span data-stu-id="996b4-247">Create a PersonGroupPerson.</span></span>
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="996b4-248">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="996b4-248">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="996b4-249">Обновить имя или userData человека.</span><span class="sxs-lookup"><span data-stu-id="996b4-249">Update name or userData of a person.</span></span>
    syntax:
      content: 'function update(personGroupId: string, personId: string, options?: Models.PersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-250">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-250">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-251">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-251">Id referencing a particular person.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: 'update(string, string, PersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, options: PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-252">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-252">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-253">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-253">Id referencing a particular person.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
          description: <span data-ttu-id="996b4-254">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-254">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-255">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-255">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-256">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-256">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-257">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-257">Id referencing a particular person.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-258">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-258">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.PersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="996b4-259">Добавьте фрагмент человека в лица группу для подтверждения или идентификацию лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-259">Add a face to a person into a person group for face identification or verification.</span></span> <span data-ttu-id="996b4-260">Для работы с изображением содержит несколько лиц, входной лиц можно указать в качестве образа с прямоугольником targetFace.</span><span class="sxs-lookup"><span data-stu-id="996b4-260">To deal with an image contains multiple faces, input face can be specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="996b4-261">Он возвращает persistedFaceId, представляющий добавленный лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-261">It returns a persistedFaceId representing the added face.</span></span> <span data-ttu-id="996b4-262">Изображение не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="996b4-262">No image will be stored.</span></span>
      <span data-ttu-id="996b4-263">Только функцию извлеченные лиц, которые будут храниться на сервере, пока не [PersonFace каждой группе людей - удалить](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [удалить пользователя в каждой группе людей -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) или [каждой группе людей - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) вызывается.</span><span class="sxs-lookup"><span data-stu-id="996b4-263">Only the extracted face feature will be stored on server until [PersonGroup PersonFace - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [PersonGroup Person - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) or [PersonGroup - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) is called.</span></span>
      <br /> <span data-ttu-id="996b4-264">Примечание persistedFaceId отличается от созданных faceId [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="996b4-264">Note persistedFaceId is different from faceId generated by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span>
      * <span data-ttu-id="996b4-265">Более высоким качеством изображения лиц означает более высокую точность распознавания.</span><span class="sxs-lookup"><span data-stu-id="996b4-265">Higher face image quality means better recognition precision.</span></span> <span data-ttu-id="996b4-266">Попробуйте высокого качества лиц: в анфас, clear и лиц размер составляет 200 x 200 пикселей (100 пикселей между глаза) или больше.</span><span class="sxs-lookup"><span data-stu-id="996b4-266">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="996b4-267">Каждая запись пользователя может содержать до 248 лиц.</span><span class="sxs-lookup"><span data-stu-id="996b4-267">Each person entry can hold up to 248 faces.</span></span>
      * <span data-ttu-id="996b4-268">Поддерживаются JPEG, PNG, GIF (первый кадр) и формат BMP.</span><span class="sxs-lookup"><span data-stu-id="996b4-268">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="996b4-269">Допустимый размер файла — 6 МБ из 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="996b4-269">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="996b4-270">прямоугольник «targetFace» должен содержать одной грани.</span><span class="sxs-lookup"><span data-stu-id="996b4-270">"targetFace" rectangle should contain one face.</span></span> <span data-ttu-id="996b4-271">Ноль или несколько лиц будет рассматриваться как ошибка.</span><span class="sxs-lookup"><span data-stu-id="996b4-271">Zero or multiple faces will be regarded as an error.</span></span> <span data-ttu-id="996b4-272">Если предоставленный «targetFace» прямоугольник не возвращен из [лиц — обнаруживать](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), нет никакой гарантии, для обнаружения и успешно добавить начертание шрифта.</span><span class="sxs-lookup"><span data-stu-id="996b4-272">If the provided "targetFace" rectangle is not returned from [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), there’s no guarantee to detect and add the face successfully.</span></span>
      * <span data-ttu-id="996b4-273">За пределы размера обнаруживаемых лиц (36 x 36-4096 x 4096 пикселей) больших occlusions головы или больших приведет к ошибкам.</span><span class="sxs-lookup"><span data-stu-id="996b4-273">Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose, or large occlusions will cause failures.</span></span>
      * <span data-ttu-id="996b4-274">Добавление или удаление лиц с тем же человека будут обрабатываться последовательно.</span><span class="sxs-lookup"><span data-stu-id="996b4-274">Adding/deleting faces to/from a same person will be processed sequentially.</span></span> <span data-ttu-id="996b4-275">Добавление или удаление лиц из разных лиц обрабатываются параллельно.</span><span class="sxs-lookup"><span data-stu-id="996b4-275">Adding/deleting faces to/from different persons are processed in parallel.</span></span>
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Models.PersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-276">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-276">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-277">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-277">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-278">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-278">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: PersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-279">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-279">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-280">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-280">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-281">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-281">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
          description: <span data-ttu-id="996b4-282">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="996b4-282">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-283">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-283">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: <span data-ttu-id="996b4-284">Идентификатор ссылки на группы определенным лицом.</span><span class="sxs-lookup"><span data-stu-id="996b4-284">Id referencing a particular person group.</span></span>
        - id: personId
          type:
            - string
          description: <span data-ttu-id="996b4-285">Идентификатор ссылки на конкретного пользователя.</span><span class="sxs-lookup"><span data-stu-id="996b4-285">Id referencing a particular person.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="996b4-286">Идентификатор ссылки на определенный persistedFaceId существующей поверхности.</span><span class="sxs-lookup"><span data-stu-id="996b4-286">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="996b4-287">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="996b4-287">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'