### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="08f00-101">Необязательные параметры.</span><span class="sxs-lookup"><span data-stu-id="08f00-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-102">Сигнал, который может использоваться для отмены запросов.</span><span class="sxs-lookup"><span data-stu-id="08f00-102">The signal which can be used to abort requests.</span></span>'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-103">{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.</span><span class="sxs-lookup"><span data-stu-id="08f00-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.detectionModel'
    name: detectionModel
    fullName: detectionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-104">Имя обнаружения модели.</span><span class="sxs-lookup"><span data-stu-id="08f00-104">Name of detection model.</span></span> <span data-ttu-id="08f00-105">Модель обнаружения используется для определения лиц отправленного изображения.</span><span class="sxs-lookup"><span data-stu-id="08f00-105">Detection model is used to detect faces in the submitted image.</span></span> <span data-ttu-id="08f00-106">Имя модели обнаружения можно указать при выполнении лиц - обнаружить или распознавания лиц (Large) FaceList — добавление распознавания лиц или каждой группе людей (Large) - добавить.</span><span class="sxs-lookup"><span data-stu-id="08f00-106">A detection model name can be provided when performing Face - Detect or (Large)FaceList - Add Face or (Large)PersonGroup - Add Face.</span></span> <span data-ttu-id="08f00-107">Значение по умолчанию — «detection_01», если требуется другой модели, необходимо явно указать его.</span><span class="sxs-lookup"><span data-stu-id="08f00-107">The default value is ''detection_01'', if another model is needed, please explicitly specify it.</span></span> <span data-ttu-id="08f00-108">Возможные значения: «detection_01», «detection_02».</span><span class="sxs-lookup"><span data-stu-id="08f00-108">Possible values include: ''detection_01'', ''detection_02''.</span></span> <span data-ttu-id="08f00-109">Значение по умолчанию: «detection_01».</span><span class="sxs-lookup"><span data-stu-id="08f00-109">Default value: ''detection_01''.</span></span>'
    optional: true
    syntax:
      content: 'detectionModel?: DetectionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.DetectionModel'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-110">Обратный вызов, который запускается после загрузки.</span><span class="sxs-lookup"><span data-stu-id="08f00-110">Callback which fires upon download progress.</span></span>'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-111">Обратный вызов, который срабатывает при ход передачи.</span><span class="sxs-lookup"><span data-stu-id="08f00-111">Callback which fires upon upload progress.</span></span>'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-112">Прямоугольник лиц, чтобы указать целевой фрагмент, чтобы добавить пользователя в формате «targetFace = left, top, ширина, высота».</span><span class="sxs-lookup"><span data-stu-id="08f00-112">A face rectangle to specify the target face to be added to a person in the format of "targetFace=left,top,width,height".</span></span> <span data-ttu-id="08f00-113">(например,</span><span class="sxs-lookup"><span data-stu-id="08f00-113">E.g.</span></span> <span data-ttu-id="08f00-114">«targetFace = 10, 10, 100, 100».</span><span class="sxs-lookup"><span data-stu-id="08f00-114">"targetFace=10,10,100,100".</span></span> <span data-ttu-id="08f00-115">Если имеется более одной грани в образе, targetFace необходим для указания, что лиц для добавления.</span><span class="sxs-lookup"><span data-stu-id="08f00-115">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id="08f00-116">Нет targetFace означает только одной грани, обнаружено изображения.</span><span class="sxs-lookup"><span data-stu-id="08f00-116">No targetFace means there is only one face detected in the entire image.</span></span>'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="08f00-117">Число микросекунд, которое запрос может выполняться автоматически прекращается.</span><span class="sxs-lookup"><span data-stu-id="08f00-117">The number of milliseconds a request can take before automatically being terminated.</span></span>'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="08f00-118">Определяемые пользователем данные о лиц для любых целей.</span><span class="sxs-lookup"><span data-stu-id="08f00-118">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="08f00-119">Максимальная длина — 1 КБ.</span><span class="sxs-lookup"><span data-stu-id="08f00-119">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.DetectionModel'
    name: DetectionModel
    spec.typeScript:
      - name: DetectionModel
        fullName: DetectionModel
        uid: '@azure/cognitiveservices-face.DetectionModel'