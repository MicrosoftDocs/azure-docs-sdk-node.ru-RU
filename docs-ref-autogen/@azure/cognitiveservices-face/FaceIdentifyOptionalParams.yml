### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    fullName: FaceIdentifyOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.confidenceThreshold'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.largePersonGroupId'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.maxNumOfCandidatesReturned'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.personGroupId'
      - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Необязательные параметры.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Сигнал, который может использоваться для отмены запросов.'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.confidenceThreshold'
    name: confidenceThreshold
    fullName: confidenceThreshold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Достоверности идентификации, используемый для оценки, которые принадлежат ли одной грани одного человека.
      Допустимые confidenceThreshold: [0, 1] (по умолчанию, определяемое алгоритма).
    optional: true
    syntax:
      content: 'confidenceThreshold?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.largePersonGroupId'
    name: largePersonGroupId
    fullName: largePersonGroupId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      LargePersonGroupId больших person целевой группы, созданные LargePersonGroup - создание.
      Параметр personGroupId и largePersonGroupId не следует указывать в то же время.
    optional: true
    syntax:
      content: 'largePersonGroupId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.maxNumOfCandidatesReturned'
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Диапазон maxNumOfCandidatesReturned — от 1 до 5 (по умолчанию — 1). Значение по умолчанию: 1.'
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который запускается после загрузки.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который срабатывает при ход передачи.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.personGroupId'
    name: personGroupId
    fullName: personGroupId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'PersonGroupId person целевой группы, созданные в каждой группе людей - создание. Параметр personGroupId и largePersonGroupId не следует указывать в то же время.'
    optional: true
    syntax:
      content: 'personGroupId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Число микросекунд, которое запрос может выполняться автоматически прекращается.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'