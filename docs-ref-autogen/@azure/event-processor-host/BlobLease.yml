### YamlMime:UniversalReference
ms.openlocfilehash: 27b3e3e615fb1f1f1d2a63392dd7977e3eeef15d
ms.sourcegitcommit: 8f2555cd23e454ff79e27bd3ed0a6f65b08c1c9e
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/10/2018
ms.locfileid: "48575432"
items:
- uid: '@azure/event-processor-host.BlobLease'
  name: BlobLease
  fullName: BlobLease
  children:
  - '@azure/event-processor-host.BlobLease.acquire'
  - '@azure/event-processor-host.BlobLease.blob'
  - '@azure/event-processor-host.BlobLease.constructor'
  - '@azure/event-processor-host.BlobLease.blobService'
  - '@azure/event-processor-host.BlobLease.containerName'
  - '@azure/event-processor-host.BlobLease.createFromNameAndKey'
  - '@azure/event-processor-host.BlobLease.ensureContainerAndBlobExist'
  - '@azure/event-processor-host.BlobLease.fullUri'
  - '@azure/event-processor-host.BlobLease.getContent'
  - '@azure/event-processor-host.BlobLease.hostName'
  - '@azure/event-processor-host.BlobLease.isHeld'
  - '@azure/event-processor-host.BlobLease.leaseId'
  - '@azure/event-processor-host.BlobLease.notHeldError'
  - '@azure/event-processor-host.BlobLease.partitionId'
  - '@azure/event-processor-host.BlobLease.release'
  - '@azure/event-processor-host.BlobLease.renew'
  - '@azure/event-processor-host.BlobLease.storageAccount'
  - '@azure/event-processor-host.BlobLease.updateContent'
  langs:
  - typeScript
  type: class
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.acquire'
  name: acquire
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function acquire(options: AcquireLeaseRequestOptions)'
    parameters:
    - id: options
      type:
      - AcquireLeaseRequestOptions
      description: ''
    return:
      type:
      - Promise<@azure/event-processor-host.BlobLease>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.blob'
  name: blob
  fullName: blob
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'blob: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.constructor'
  name: BlobLease
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new BlobLease(hostName: string, storageConnectionString: string, containerName: string, blob: string)'
    parameters:
    - id: hostName
      type:
      - string
      description: ''
    - id: storageConnectionString
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: blob
      type:
      - string
      description: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.blobService'
  name: blobService
  fullName: blobService
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'blobService: BlobService'
    return:
      type:
      - BlobService
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.containerName'
  name: containerName
  fullName: containerName
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'containerName: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.createFromNameAndKey'
  name: createFromNameAndKey
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7fe8-101">Создает аренду имя учетной записи хранения и ключа</span><span class="sxs-lookup"><span data-stu-id="a7fe8-101">Creates a lease from storage account name and key</span></span>
  syntax:
    content: 'static function createFromNameAndKey(hostName: string, storageAccount: string, storageKey: string, containerName: string, blob: string)'
    parameters:
    - id: hostName
      type:
      - string
      description: <span data-ttu-id="a7fe8-102">Имя узла EPH, к которому принадлежит аренда.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-102">The EPH host name to which the lease belongs.</span></span>
    - id: storageAccount
      type:
      - string
      description: <span data-ttu-id="a7fe8-103">Имя учетной записи хранения.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-103">The name of the storage account.</span></span>
    - id: storageKey
      type:
      - string
      description: <span data-ttu-id="a7fe8-104">Значение ключа хранилища.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-104">The storage key value.</span></span>
    - id: containerName
      type:
      - string
      description: <span data-ttu-id="a7fe8-105">Имя контейнера больших двоичных объектов хранилища Azure.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-105">The Azure storage blob container name.</span></span>
    - id: blob
      type:
      - string
      description: >
        <span data-ttu-id="a7fe8-106">Большой двоичный объект хранилища Azure.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-106">The Azure storage blob.</span></span>
    return:
      type:
      - '@azure/event-processor-host.BlobLease'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.ensureContainerAndBlobExist'
  name: ensureContainerAndBlobExist
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7fe8-107">Гарантирует существование контейнера и BLOB-объектов.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-107">Ensures that the container and blob exist.</span></span>
  syntax:
    content: function ensureContainerAndBlobExist()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.fullUri'
  name: fullUri
  fullName: fullUri
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'fullUri: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.getContent'
  name: getContent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7fe8-108">Получает содержимое из хранилища Blob.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-108">Gets content from the Azure Storage Blob.</span></span>
  syntax:
    content: 'function getContent(options?: GetBlobRequestOptions)'
    parameters:
    - id: options
      type:
      - GetBlobRequestOptions
      description: >
        <span data-ttu-id="a7fe8-109">Параметры для передачи при получении содержимого из большого двоичного объекта.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-109">Options to be passed while getting content from the blob.</span></span>
      optional: true
    return:
      type:
      - Promise<string>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.hostName'
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.isHeld'
  name: isHeld
  fullName: isHeld
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="a7fe8-110">{Логическое} isHeld предоставляет наиболее вероятного предположения относительно ли все еще удерживается аренды.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-110">{boolean} isHeld Provides the best-guess as to whether the lease is still held.</span></span>

    <span data-ttu-id="a7fe8-111">Не может быть неточной, если истек срок действия аренды.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-111">May not be accurate if the lease has expired.</span></span> <span data-ttu-id="a7fe8-112">Значение по умолчанию: false.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-112">Default value: false.</span></span>
  syntax:
    content: 'isHeld: boolean'
    return:
      type:
      - boolean
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.leaseId'
  name: leaseId
  fullName: leaseId
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'leaseId?: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.notHeldError'
  name: notHeldError
  fullName: notHeldError
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'static notHeldError: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.partitionId'
  name: partitionId
  fullName: partitionId
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'partitionId?: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.release'
  name: release
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function release(options?: LeaseRequestOptions)'
    parameters:
    - id: options
      type:
      - LeaseRequestOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.BlobLease>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.renew'
  name: renew
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function renew(options: AcquireLeaseRequestOptions)'
    parameters:
    - id: options
      type:
      - AcquireLeaseRequestOptions
      description: ''
    return:
      type:
      - Promise<@azure/event-processor-host.BlobLease>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.storageAccount'
  name: storageAccount
  fullName: storageAccount
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'storageAccount: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.BlobLease.updateContent'
  name: updateContent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a7fe8-113">Обновляет содержимое из хранилища Blob.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-113">Updates content from the Azure Storage Blob.</span></span>
  syntax:
    content: 'function updateContent(text: string, options?: CreateBlobRequestOptions)'
    parameters:
    - id: text
      type:
      - string
      description: <span data-ttu-id="a7fe8-114">Текст для записи</span><span class="sxs-lookup"><span data-stu-id="a7fe8-114">The text to be written</span></span>
    - id: options
      type:
      - CreateBlobRequestOptions
      description: >
        <span data-ttu-id="a7fe8-115">Параметры, которые можно указать при записи содержимого в большой двоичный объект.</span><span class="sxs-lookup"><span data-stu-id="a7fe8-115">The options that can be provided while writing content to the blob.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.BlobLease>
  package: '@azure/event-processor-host'
references:
- uid: Promise<@azure/event-processor-host.BlobLease>
  name: BlobLease>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobLease
    fullName: BlobLease
    uid: '@azure/event-processor-host.BlobLease'
  - name: '>'
    fullName: '>'
- uid: '@azure/event-processor-host.BlobLease'
  name: BlobLease
  spec.typeScript:
  - name: BlobLease
    fullName: BlobLease
    uid: '@azure/event-processor-host.BlobLease'
