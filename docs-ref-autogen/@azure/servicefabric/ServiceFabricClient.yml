### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClient'
    name: ServiceFabricClient
    fullName: ServiceFabricClient
    children:
      - '@azure/servicefabric.ServiceFabricClient.backupPartition'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
      - '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.createApplication'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.createApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.createName'
      - '@azure/servicefabric.ServiceFabricClient.createName_1'
      - '@azure/servicefabric.ServiceFabricClient.createName_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.createService'
      - '@azure/servicefabric.ServiceFabricClient.createService_1'
      - '@azure/servicefabric.ServiceFabricClient.createService_2'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
      - '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteName'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteName_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_1'
      - '@azure/servicefabric.ServiceFabricClient.deleteService_2'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
      - '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableNode'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.disableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableNode'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_1'
      - '@azure/servicefabric.ServiceFabricClient.enableNode_2'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
      - '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
      - '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
      - '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaos'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
      - '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
      - '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
      - '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
      - '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
      - '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
      - '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
      - '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
      - '@azure/servicefabric.ServiceFabricClient.meshApplication'
      - '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.meshGateway'
      - '@azure/servicefabric.ServiceFabricClient.meshNetwork'
      - '@azure/servicefabric.ServiceFabricClient.meshSecret'
      - '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
      - '@azure/servicefabric.ServiceFabricClient.meshService'
      - '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
      - '@azure/servicefabric.ServiceFabricClient.meshVolume'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
      - '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.putProperty'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_1'
      - '@azure/servicefabric.ServiceFabricClient.putProperty_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
      - '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
      - '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
      - '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
      - '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
      - '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
      - '@azure/servicefabric.ServiceFabricClient.resolveService'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_1'
      - '@azure/servicefabric.ServiceFabricClient.resolveService_2'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
      - '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
      - '@azure/servicefabric.ServiceFabricClient.restartNode'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_1'
      - '@azure/servicefabric.ServiceFabricClient.restartNode_2'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
      - '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
      - '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
      - '@azure/servicefabric.ServiceFabricClient.sendRequest'
      - '@azure/servicefabric.ServiceFabricClient.constructor'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
      - '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startChaos'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.startChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
      - '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
      - '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
      - '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
      - '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
      - '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
      - '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
      - '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
      - '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
      - '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService'
      - '@azure/servicefabric.ServiceFabricClient.updateService_1'
      - '@azure/servicefabric.ServiceFabricClient.updateService_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
      - '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/servicefabric.ServiceFabricClientContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition'
    name: 'backupPartition(string, Models.ServiceFabricClientBackupPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-101">Создает резервную копию состояния с отслеживанием состояния сохраненного разделов.</span><span class="sxs-lookup"><span data-stu-id="76520-101">Creates a backup of the stateful persisted partition's state.</span></span> <span data-ttu-id="76520-102">На случай, если раздел уже периодически резервного копирования, то по умолчанию новая резервная копия создается в том же хранилище резервных копий.</span><span class="sxs-lookup"><span data-stu-id="76520-102">In case the partition is already being periodically backed up, then by default the new backup is created at the same backup storage.</span></span> <span data-ttu-id="76520-103">Также же можно переопределить, указав сведения хранилища резервных копий как часть текста запроса.</span><span class="sxs-lookup"><span data-stu-id="76520-103">One can also override the same by specifying the backup storage details as part of the request body.</span></span> <span data-ttu-id="76520-104">После запуска резервного копирования, ход его выполнения можно отслеживать с помощью операции GetBackupProgress.</span><span class="sxs-lookup"><span data-stu-id="76520-104">Once the backup is initiated, its progress can be tracked using the GetBackupProgress operation.</span></span>
      <span data-ttu-id="76520-105">В случае истечения времени ожидания операции, больше времени ожидания резервного копирования в значение параметра запроса.</span><span class="sxs-lookup"><span data-stu-id="76520-105">In case, the operation times out, specify a greater backup timeout value in the query parameter.</span></span>
    syntax:
      content: 'function backupPartition(partitionId: string, options?: Models.ServiceFabricClientBackupPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-106">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-106">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientBackupPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_1'
    name: 'backupPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-107">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-107">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-108">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-108">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.backupPartition_2'
    name: 'backupPartition(string, ServiceFabricClientBackupPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function backupPartition(partitionId: string, options: ServiceFabricClientBackupPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-109">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-109">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
          description: <span data-ttu-id="76520-110">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-110">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-111">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-111">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation'
    name: 'cancelOperation(string, boolean, Models.ServiceFabricClientCancelOperationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-112">Следующие API начала сбоя операции, которые может быть сокращен, с помощью CancelOperation: StartDataLoss StartQuorumLoss StartPartitionRestart, использованием StartNodeTransition.</span><span class="sxs-lookup"><span data-stu-id="76520-112">The following APIs start fault operations that may be cancelled by using CancelOperation: StartDataLoss, StartQuorumLoss, StartPartitionRestart, StartNodeTransition.</span></span>
      <span data-ttu-id="76520-113">Если для force задано значение false, то указанная операция, вызываемая пользователем, будет корректно остановлена и очищена.</span><span class="sxs-lookup"><span data-stu-id="76520-113">If force is false, then the specified user-induced operation will be gracefully stopped and cleaned up.</span></span>  <span data-ttu-id="76520-114">Если для force задано значение true, команда будет прервана и внутреннее состояние может проигнорироваться.</span><span class="sxs-lookup"><span data-stu-id="76520-114">If force is true, the command will be aborted, and some internal state may be left behind.</span></span>  <span data-ttu-id="76520-115">Следует с осторожностью использовать true в качестве значения force.</span><span class="sxs-lookup"><span data-stu-id="76520-115">Specifying force as true should be used with care.</span></span>  <span data-ttu-id="76520-116">Если для force задано значение true, вызов этого API будет запрещен, пока этот API не будет вызван в той же тестовой команде, в которой для force задано значение false, или же если в команде параметр OperationState уже имеет значение OperationState.RollingBack.</span><span class="sxs-lookup"><span data-stu-id="76520-116">Calling this API with force set to true is not allowed until this API has already been called on the same test command with force set to false first, or unless the test command already has an OperationState of OperationState.RollingBack.</span></span>
      <span data-ttu-id="76520-117">Пояснение: OperationState.RollingBack означает, что система будет быть/Очистка состояния внутренней системы, из-за выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="76520-117">Clarification: OperationState.RollingBack means that the system will be/is cleaning up internal system state caused by executing the command.</span></span>  <span data-ttu-id="76520-118">Данные не восстановятся, если тестовая команда привела к их потере.</span><span class="sxs-lookup"><span data-stu-id="76520-118">It will not restore data if the test command was to cause data loss.</span></span>  <span data-ttu-id="76520-119">Например, если вызвать StartDataLoss, а затем этот API, система только очистит внутреннее состояние от запуска команды.</span><span class="sxs-lookup"><span data-stu-id="76520-119">For example, if you call StartDataLoss then call this API, the system will only clean up internal state from running the command.</span></span>
      <span data-ttu-id="76520-120">Данные целевой секции не восстановятся, если команда выполнялась достаточное время, что вызвало потерю данных.</span><span class="sxs-lookup"><span data-stu-id="76520-120">It will not restore the target partition's data, if the command progressed far enough to cause data loss.</span></span>

      <span data-ttu-id="76520-121">Важное примечание: Если этот API вызывается с force == true, внутреннего состояния могут остаться.</span><span class="sxs-lookup"><span data-stu-id="76520-121">Important note:  if this API is invoked with force==true, internal state may be left behind.</span></span>
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options?: Models.ServiceFabricClientCancelOperationOptionalParams)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-122">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-122">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-123">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-123">This is passed into the corresponding GetProgress API</span></span>'
        - id: force
          type:
            - boolean
          description: '<span data-ttu-id="76520-124">Указывает, следует ли корректно выполнить откат и очистить внутреннее состояние системы, изменяемое при выполнении операции, вызываемой пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-124">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientCancelOperationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_1'
    name: 'cancelOperation(string, boolean, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-125">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-125">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-126">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-126">This is passed into the corresponding GetProgress API</span></span>'
        - id: force
          type:
            - boolean
          description: '<span data-ttu-id="76520-127">Указывает, следует ли корректно выполнить откат и очистить внутреннее состояние системы, изменяемое при выполнении операции, вызываемой пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-127">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-128">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelOperation_2'
    name: 'cancelOperation(string, boolean, ServiceFabricClientCancelOperationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelOperation(operationId: string, force: boolean, options: ServiceFabricClientCancelOperationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-129">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-129">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-130">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-130">This is passed into the corresponding GetProgress API</span></span>'
        - id: force
          type:
            - boolean
          description: '<span data-ttu-id="76520-131">Указывает, следует ли корректно выполнить откат и очистить внутреннее состояние системы, изменяемое при выполнении операции, вызываемой пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-131">Indicates whether to gracefully roll back and clean up internal system state modified by executing the user-induced operation.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
          description: <span data-ttu-id="76520-132">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-133">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask'
    name: 'cancelRepairTask(RepairTaskCancelDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-134">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-134">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="76520-135">Описывает задачи исправления должны быть отменены.</span><span class="sxs-lookup"><span data-stu-id="76520-135">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_2'
    name: 'cancelRepairTask(RepairTaskCancelDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="76520-136">Описывает задачи исправления должны быть отменены.</span><span class="sxs-lookup"><span data-stu-id="76520-136">Describes the repair task to be cancelled.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-137">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-137">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-138">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-138">The callback</span></span>
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.cancelRepairTask_1'
    name: 'cancelRepairTask(RepairTaskCancelDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancelRepairTask(repairTaskCancelDescription: RepairTaskCancelDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskCancelDescription
          type:
            - '@azure/servicefabric.RepairTaskCancelDescription'
          description: <span data-ttu-id="76520-139">Описывает задачи исправления должны быть отменены.</span><span class="sxs-lookup"><span data-stu-id="76520-139">Describes the repair task to be cancelled.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-140">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-140">The callback</span></span>
      return:
        type:
          - Promise<Models.CancelRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession'
    name: 'commitImageStoreUploadSession(string, Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-141">При отправке все фрагменты файла сеанса передачи требуется зафиксировать явным образом, для завершения обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-141">When all file chunks have been uploaded, the upload session needs to be committed explicitly to complete the upload.</span></span> <span data-ttu-id="76520-142">Хранилище образов сохраняет сеанс отправки до истечения срока действия, 30 минут после получения последнего фрагмента данных.</span><span class="sxs-lookup"><span data-stu-id="76520-142">Image store preserves the upload session until the expiration time, which is 30 minutes after the last chunk received.</span></span>'
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-143">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-143">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-144">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-144">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_1'
    name: 'commitImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-145">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-145">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-146">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-146">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-147">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-147">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.commitImageStoreUploadSession_2'
    name: 'commitImageStoreUploadSession(string, ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function commitImageStoreUploadSession(sessionId: string, options: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-148">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-148">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-149">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-149">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
          description: <span data-ttu-id="76520-150">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-150">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-151">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-151">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-152">Копирует содержимое из хранилища образов из исходного хранилища относительный путь к изображению назначения хранилища относительный путь к изображению.</span><span class="sxs-lookup"><span data-stu-id="76520-152">Copies the image store content from the source image store relative path to the destination image store relative path.</span></span>
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options?: Models.ServiceFabricClientCopyImageStoreContentOptionalParams)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="76520-153">Описание копирования для хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-153">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCopyImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_1'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="76520-154">Описание копирования для хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-154">Describes the copy description for the image store.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-155">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-155">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.copyImageStoreContent_2'
    name: 'copyImageStoreContent(ImageStoreCopyDescription, ServiceFabricClientCopyImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function copyImageStoreContent(imageStoreCopyDescription: ImageStoreCopyDescription, options: ServiceFabricClientCopyImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: imageStoreCopyDescription
          type:
            - '@azure/servicefabric.ImageStoreCopyDescription'
          description: <span data-ttu-id="76520-156">Описание копирования для хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-156">Describes the copy description for the image store.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
          description: <span data-ttu-id="76520-157">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-158">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-158">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication'
    name: 'createApplication(ApplicationDescription, Models.ServiceFabricClientCreateApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-159">Создает приложение Service Fabric с помощью указанного описания.</span><span class="sxs-lookup"><span data-stu-id="76520-159">Creates a Service Fabric application using the specified description.</span></span>
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options?: Models.ServiceFabricClientCreateApplicationOptionalParams)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="76520-160">Описание для создания приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-160">Description for creating an application.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_1'
    name: 'createApplication(ApplicationDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="76520-161">Описание для создания приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-161">Description for creating an application.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-162">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createApplication_2'
    name: 'createApplication(ApplicationDescription, ServiceFabricClientCreateApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createApplication(applicationDescription: ApplicationDescription, options: ServiceFabricClientCreateApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationDescription
          type:
            - '@azure/servicefabric.ApplicationDescription'
          description: <span data-ttu-id="76520-163">Описание для создания приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-163">Description for creating an application.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
          description: <span data-ttu-id="76520-164">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-164">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-165">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-165">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy'
    name: 'createBackupPolicy(BackupPolicyDescription, Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-166">Создает политику резервного копирования, который можно связать позже с помощью приложения Service Fabric, службы или секции для периодического резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-166">Creates a backup policy which can be associated later with a Service Fabric application, service or a partition for periodic backup.</span></span>'
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options?: Models.ServiceFabricClientCreateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-167">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-167">Describes the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_1'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-168">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-168">Describes the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-169">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-169">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createBackupPolicy_2'
    name: 'createBackupPolicy(BackupPolicyDescription, ServiceFabricClientCreateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createBackupPolicy(backupPolicyDescription: BackupPolicyDescription, options: ServiceFabricClientCreateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-170">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-170">Describes the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
          description: <span data-ttu-id="76520-171">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-171">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-172">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-172">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-173">Compose — это формат файла, который описывает многоконтейнерных приложений.</span><span class="sxs-lookup"><span data-stu-id="76520-173">Compose is a file format that describes multi-container applications.</span></span> <span data-ttu-id="76520-174">Этот API позволяет развертывание приложений на основе контейнеров, определенных в compose формат в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-174">This API allows deploying container based applications defined in compose format in a Service Fabric cluster.</span></span> <span data-ttu-id="76520-175">После создания развертывания его состояние можно отслеживать с помощью `GetComposeDeploymentStatus` API.</span><span class="sxs-lookup"><span data-stu-id="76520-175">Once the deployment is created, its status can be tracked via the `GetComposeDeploymentStatus` API.</span></span>'
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options?: Models.ServiceFabricClientCreateComposeDeploymentOptionalParams)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: '<span data-ttu-id="76520-176">Описывает развертывание compose, который должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-176">Describes the compose deployment that needs to be created.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientCreateComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_1'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: '<span data-ttu-id="76520-177">Описывает развертывание compose, который должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-177">Describes the compose deployment that needs to be created.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-178">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-178">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createComposeDeployment_2'
    name: 'createComposeDeployment(CreateComposeDeploymentDescription, ServiceFabricClientCreateComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createComposeDeployment(createComposeDeploymentDescription: CreateComposeDeploymentDescription, options: ServiceFabricClientCreateComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - '@azure/servicefabric.CreateComposeDeploymentDescription'
          description: '<span data-ttu-id="76520-179">Описывает развертывание compose, который должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-179">Describes the compose deployment that needs to be created.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
          description: <span data-ttu-id="76520-180">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-180">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-181">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-181">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName'
    name: 'createName(NameDescription, Models.ServiceFabricClientCreateNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-182">Создает указанное имя Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-182">Creates the specified Service Fabric name.</span></span>
    syntax:
      content: 'function createName(nameDescription: NameDescription, options?: Models.ServiceFabricClientCreateNameOptionalParams)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="76520-183">Описывает имя Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-183">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientCreateNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_1'
    name: 'createName(NameDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="76520-184">Описывает имя Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-184">Describes the Service Fabric name to be created.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-185">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-185">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createName_2'
    name: 'createName(NameDescription, ServiceFabricClientCreateNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createName(nameDescription: NameDescription, options: ServiceFabricClientCreateNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameDescription
          type:
            - '@azure/servicefabric.NameDescription'
          description: <span data-ttu-id="76520-186">Описывает имя Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-186">Describes the Service Fabric name to be created.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
          description: <span data-ttu-id="76520-187">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-187">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-188">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-188">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask'
    name: 'createRepairTask(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-189">Для кластеров, настроить службу диспетчера восстановления этот API предоставляет способ создания задач восстановления, выполняемые автоматически или вручную.</span><span class="sxs-lookup"><span data-stu-id="76520-189">For clusters that have the Repair Manager Service configured, this API provides a way to create repair tasks that run automatically or manually.</span></span>
      <span data-ttu-id="76520-190">Для задач восстановления, которые запускаются автоматически исполнитель соответствующие восстановления должна быть запущена для каждого действия восстановления для автоматического запуска.</span><span class="sxs-lookup"><span data-stu-id="76520-190">For repair tasks that run automatically, an appropriate repair executor must be running for each repair action to run automatically.</span></span>
      <span data-ttu-id="76520-191">Они сейчас доступны только в специально настроенные облачных служб Azure.</span><span class="sxs-lookup"><span data-stu-id="76520-191">These are currently only available in specially-configured Azure Cloud Services.</span></span>
      <span data-ttu-id="76520-192">Чтобы создать задачу восстановления вручную, укажите набор имен затронутого узла и ожидаемому влиянию.</span><span class="sxs-lookup"><span data-stu-id="76520-192">To create a manual repair task, provide the set of impacted node names and the expected impact.</span></span> <span data-ttu-id="76520-193">Если изменения утверждены задач состояние созданный восстановления, можно безопасно выполнить действий по восстановлению на этих узлах.</span><span class="sxs-lookup"><span data-stu-id="76520-193">When the state of the created repair task changes to approved, you can safely perform repair actions on those nodes.</span></span>

      <span data-ttu-id="76520-194">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-194">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-195">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-195">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_2'
    name: 'createRepairTask(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-196">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-196">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-197">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-197">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-198">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-198">The callback</span></span>
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createRepairTask_1'
    name: 'createRepairTask(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createRepairTask(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-199">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-199">Describes the repair task to be created or updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-200">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-200">The callback</span></span>
      return:
        type:
          - Promise<Models.CreateRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService'
    name: 'createService(string, Models.ServiceDescriptionUnion, Models.ServiceFabricClientCreateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-201">Этот api позволяет создавать новые службы Service Fabric с отслеживанием или без отслеживания состояния в указанное приложение Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-201">This api allows creating a new Service Fabric stateless or stateful service under a specified Service Fabric application.</span></span> <span data-ttu-id="76520-202">Описание для создания службы включает секционирование сведения и дополнительные свойства для размещения и балансировки нагрузки.</span><span class="sxs-lookup"><span data-stu-id="76520-202">The description for creating the service includes partitioning information and optional properties for placement and load balancing.</span></span> <span data-ttu-id="76520-203">Некоторые свойства можно позже изменить, используя `UpdateService` API.</span><span class="sxs-lookup"><span data-stu-id="76520-203">Some of the properties can later be modified using `UpdateService` API.</span></span>'
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options?: Models.ServiceFabricClientCreateServiceOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-204">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-204">The identity of the application.</span></span> <span data-ttu-id="76520-205">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-205">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-206">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-206">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-207">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-207">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: '<span data-ttu-id="76520-208">Сведения, необходимые для создания службы.</span><span class="sxs-lookup"><span data-stu-id="76520-208">The information necessary to create a service.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_1'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-209">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-209">The identity of the application.</span></span> <span data-ttu-id="76520-210">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-210">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-211">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-211">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-212">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-212">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: '<span data-ttu-id="76520-213">Сведения, необходимые для создания службы.</span><span class="sxs-lookup"><span data-stu-id="76520-213">The information necessary to create a service.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-214">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-214">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createService_2'
    name: 'createService(string, Models.ServiceDescriptionUnion, ServiceFabricClientCreateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createService(applicationId: string, serviceDescription: Models.ServiceDescriptionUnion, options: ServiceFabricClientCreateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-215">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-215">The identity of the application.</span></span> <span data-ttu-id="76520-216">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-216">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-217">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-217">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-218">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-218">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceDescription
          type:
            - Models.ServiceDescriptionUnion
          description: '<span data-ttu-id="76520-219">Сведения, необходимые для создания службы.</span><span class="sxs-lookup"><span data-stu-id="76520-219">The information necessary to create a service.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
          description: <span data-ttu-id="76520-220">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-220">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-221">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-221">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-222">Создает службу Service Fabric из шаблона службы, определенные в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-222">Creates a Service Fabric service from the service template defined in the application manifest.</span></span>
      <span data-ttu-id="76520-223">Шаблон службы содержит свойства, будет одинаковым для экземпляра службы того же типа.</span><span class="sxs-lookup"><span data-stu-id="76520-223">A service template contains the properties that will be same for the service instance of the same type.</span></span> <span data-ttu-id="76520-224">Интерфейс API позволяет, переопределив свойства, которые обычно отличаются для разных служб одного типа службы.</span><span class="sxs-lookup"><span data-stu-id="76520-224">The API allows overriding the properties that are usually different for different services of the same service type.</span></span>
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options?: Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-225">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-225">The identity of the application.</span></span> <span data-ttu-id="76520-226">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-226">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-227">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-227">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-228">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-228">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: '<span data-ttu-id="76520-229">Описывает службу, которая должна быть создана на основе шаблона, определенных в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-229">Describes the service that needs to be created from the template defined in the application manifest.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientCreateServiceFromTemplateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_1'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-230">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-230">The identity of the application.</span></span> <span data-ttu-id="76520-231">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-231">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-232">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-232">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-233">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-233">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: '<span data-ttu-id="76520-234">Описывает службу, которая должна быть создана на основе шаблона, определенных в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-234">Describes the service that needs to be created from the template defined in the application manifest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-235">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-235">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.createServiceFromTemplate_2'
    name: 'createServiceFromTemplate(string, ServiceFromTemplateDescription, ServiceFabricClientCreateServiceFromTemplateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServiceFromTemplate(applicationId: string, serviceFromTemplateDescription: ServiceFromTemplateDescription, options: ServiceFabricClientCreateServiceFromTemplateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-236">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-236">The identity of the application.</span></span> <span data-ttu-id="76520-237">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-237">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-238">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-238">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-239">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-239">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceFromTemplateDescription
          type:
            - '@azure/servicefabric.ServiceFromTemplateDescription'
          description: '<span data-ttu-id="76520-240">Описывает службу, которая должна быть создана на основе шаблона, определенных в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-240">Describes the service that needs to be created from the template defined in the application manifest.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
          description: <span data-ttu-id="76520-241">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-241">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-242">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-242">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication'
    name: 'deleteApplication(string, Models.ServiceFabricClientDeleteApplicationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-243">Приложение должно быть создано, прежде чем его можно будет удалить.</span><span class="sxs-lookup"><span data-stu-id="76520-243">An application must be created before it can be deleted.</span></span> <span data-ttu-id="76520-244">При удалении приложения удаляются все службы, которые входят в состав этого приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-244">Deleting an application will delete all services that are part of that application.</span></span> <span data-ttu-id="76520-245">По умолчанию Service Fabric попытается нормально закрыть реплики службы, а затем удалит службу.</span><span class="sxs-lookup"><span data-stu-id="76520-245">By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service.</span></span> <span data-ttu-id="76520-246">Однако если из-за проблем в работе службы нормально закрыть реплики не удалось, операция удаления может длиться много времени или оказаться заблокированной.</span><span class="sxs-lookup"><span data-stu-id="76520-246">However, if a service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck.</span></span>
      <span data-ttu-id="76520-247">Используйте необязательный флаг ForceRemove, чтобы пропустить последовательность нормального закрытия и принудительно удалить приложение и все его службы.</span><span class="sxs-lookup"><span data-stu-id="76520-247">Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the application and all of its services.</span></span>
    syntax:
      content: 'function deleteApplication(applicationId: string, options?: Models.ServiceFabricClientDeleteApplicationOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-248">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-248">The identity of the application.</span></span> <span data-ttu-id="76520-249">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-249">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-250">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-250">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-251">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-251">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteApplicationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_1'
    name: 'deleteApplication(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-252">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-252">The identity of the application.</span></span> <span data-ttu-id="76520-253">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-253">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-254">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-254">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-255">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-255">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-256">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-256">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteApplication_2'
    name: 'deleteApplication(string, ServiceFabricClientDeleteApplicationOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteApplication(applicationId: string, options: ServiceFabricClientDeleteApplicationOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-257">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-257">The identity of the application.</span></span> <span data-ttu-id="76520-258">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-258">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-259">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-259">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-260">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-260">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
          description: <span data-ttu-id="76520-261">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-261">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-262">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-262">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy'
    name: 'deleteBackupPolicy(string, Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-263">Удаляет существующую политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-263">Deletes an existing backup policy.</span></span> <span data-ttu-id="76520-264">Необходимо создать политику резервного копирования, перед его удалением.</span><span class="sxs-lookup"><span data-stu-id="76520-264">A backup policy must be created before it can be deleted.</span></span> <span data-ttu-id="76520-265">В настоящее время активную политику резервного копирования, связанные с приложение Service Fabric, службы или секции, нельзя удалить без удаления сопоставление.</span><span class="sxs-lookup"><span data-stu-id="76520-265">A currently active backup policy, associated with any Service Fabric application, service or partition, cannot be deleted without first deleting the mapping.</span></span>'
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientDeleteBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-266">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-266">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_1'
    name: 'deleteBackupPolicy(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-267">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-267">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-268">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-268">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteBackupPolicy_2'
    name: 'deleteBackupPolicy(string, ServiceFabricClientDeleteBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteBackupPolicy(backupPolicyName: string, options: ServiceFabricClientDeleteBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-269">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-269">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
          description: <span data-ttu-id="76520-270">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-270">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-271">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-271">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent'
    name: 'deleteImageStoreContent(string, Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-272">Удаляет существующее содержимое хранилища образов, обнаруженное по заданному относительному пути к хранилищу образов.</span><span class="sxs-lookup"><span data-stu-id="76520-272">Deletes existing image store content being found within the given image store relative path.</span></span>
      <span data-ttu-id="76520-273">Эту команду можно использовать для удаления переданных пакетов приложения после их подготовки.</span><span class="sxs-lookup"><span data-stu-id="76520-273">This command can be used to delete uploaded application packages once they are provisioned.</span></span>
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientDeleteImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-274">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-274">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_1'
    name: 'deleteImageStoreContent(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-275">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-275">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-276">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-276">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreContent_2'
    name: 'deleteImageStoreContent(string, ServiceFabricClientDeleteImageStoreContentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreContent(contentPath: string, options: ServiceFabricClientDeleteImageStoreContentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-277">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-277">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
          description: <span data-ttu-id="76520-278">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-278">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-279">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-279">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession'
    name: 'deleteImageStoreUploadSession(string, Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-280">Запрос на удаление приведет к существующего сеанса передачи срока действия и удалить все блоки по ранее отправленный файл.</span><span class="sxs-lookup"><span data-stu-id="76520-280">The DELETE request will cause the existing upload session to expire and remove any previously uploaded file chunks.</span></span>
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options?: Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-281">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-281">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-282">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-282">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_1'
    name: 'deleteImageStoreUploadSession(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-283">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-283">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-284">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-284">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-285">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-285">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteImageStoreUploadSession_2'
    name: 'deleteImageStoreUploadSession(string, ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteImageStoreUploadSession(sessionId: string, options: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-286">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-286">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-287">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-287">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
          description: <span data-ttu-id="76520-288">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-288">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-289">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-289">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName'
    name: 'deleteName(string, Models.ServiceFabricClientDeleteNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-290">Удаляет указанное имя Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-290">Deletes the specified Service Fabric name.</span></span> <span data-ttu-id="76520-291">Имя необходимо создать перед его удалением.</span><span class="sxs-lookup"><span data-stu-id="76520-291">A name must be created before it can be deleted.</span></span>
      <span data-ttu-id="76520-292">Удаление имени с помощью свойства дочерних элементов не удастся.</span><span class="sxs-lookup"><span data-stu-id="76520-292">Deleting a name with child properties will fail.</span></span>
    syntax:
      content: 'function deleteName(nameId: string, options?: Models.ServiceFabricClientDeleteNameOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-293">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-293">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientDeleteNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_1'
    name: 'deleteName(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-294">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-294">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-295">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-295">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteName_2'
    name: 'deleteName(string, ServiceFabricClientDeleteNameOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteName(nameId: string, options: ServiceFabricClientDeleteNameOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-296">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-296">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
          description: <span data-ttu-id="76520-297">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-297">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-298">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-298">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty'
    name: 'deleteProperty(string, string, Models.ServiceFabricClientDeletePropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-299">Удаляет указанное свойство Service Fabric с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="76520-299">Deletes the specified Service Fabric property under a given name.</span></span> <span data-ttu-id="76520-300">Свойство должно быть создано, прежде чем его можно будет удалить.</span><span class="sxs-lookup"><span data-stu-id="76520-300">A property must be created before it can be deleted.</span></span>'
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options?: Models.ServiceFabricClientDeletePropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-301">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-301">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-302">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-302">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeletePropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_1'
    name: 'deleteProperty(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-303">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-303">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-304">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-304">Specifies the name of the property to get.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-305">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-305">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteProperty_2'
    name: 'deleteProperty(string, string, ServiceFabricClientDeletePropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteProperty(nameId: string, propertyName: string, options: ServiceFabricClientDeletePropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-306">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-306">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-307">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-307">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
          description: <span data-ttu-id="76520-308">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-308">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-309">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-309">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-310">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-310">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="76520-311">Описание задачи восстановления для удаления.</span><span class="sxs-lookup"><span data-stu-id="76520-311">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_2'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="76520-312">Описание задачи восстановления для удаления.</span><span class="sxs-lookup"><span data-stu-id="76520-312">Describes the repair task to be deleted.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-313">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-313">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-314">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-314">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteRepairTask_1'
    name: 'deleteRepairTask(RepairTaskDeleteDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteRepairTask(repairTaskDeleteDescription: RepairTaskDeleteDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - '@azure/servicefabric.RepairTaskDeleteDescription'
          description: <span data-ttu-id="76520-315">Описание задачи восстановления для удаления.</span><span class="sxs-lookup"><span data-stu-id="76520-315">Describes the repair task to be deleted.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-316">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-316">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService'
    name: 'deleteService(string, Models.ServiceFabricClientDeleteServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-317">Служба должна быть создана, прежде чем ее можно будет удалить.</span><span class="sxs-lookup"><span data-stu-id="76520-317">A service must be created before it can be deleted.</span></span> <span data-ttu-id="76520-318">По умолчанию Service Fabric попытается нормально закрыть реплики службы, а затем удалит службу.</span><span class="sxs-lookup"><span data-stu-id="76520-318">By default, Service Fabric will try to close service replicas in a graceful manner and then delete the service.</span></span> <span data-ttu-id="76520-319">Но если из-за проблем в работе службы нормально закрыть реплики не удается, операция удаления может занять много времени или зависнуть.</span><span class="sxs-lookup"><span data-stu-id="76520-319">However, if the service is having issues closing the replica gracefully, the delete operation may take a long time or get stuck.</span></span> <span data-ttu-id="76520-320">Используйте необязательный флаг ForceRemove, чтобы пропустить последовательность нормального закрытия и принудительно удалить службу.</span><span class="sxs-lookup"><span data-stu-id="76520-320">Use the optional ForceRemove flag to skip the graceful close sequence and forcefully delete the service.</span></span>'
    syntax:
      content: 'function deleteService(serviceId: string, options?: Models.ServiceFabricClientDeleteServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-321">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-321">The identity of the service.</span></span> <span data-ttu-id="76520-322">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-322">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-323">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-323">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-324">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-324">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeleteServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_1'
    name: 'deleteService(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-325">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-325">The identity of the service.</span></span> <span data-ttu-id="76520-326">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-326">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-327">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-327">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-328">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-328">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-329">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-329">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deleteService_2'
    name: 'deleteService(string, ServiceFabricClientDeleteServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteService(serviceId: string, options: ServiceFabricClientDeleteServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-330">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-330">The identity of the service.</span></span> <span data-ttu-id="76520-331">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-331">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-332">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-332">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-333">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-333">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
          description: <span data-ttu-id="76520-334">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-334">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-335">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-335">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-336">Этот API предоставляет способ загрузки пакетов кода, включая образы контейнеров на определенном узле за пределами развертывания нормальную работу приложения и путь обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-336">This API provides a way to download code packages including the container images on a specific node outside of the normal application deployment and upgrade path.</span></span> <span data-ttu-id="76520-337">Это полезно для больших кода пакеты и образы контейнеров, должны присутствовать на узле до развертывания приложения и обновления, тем самым значительно уменьшить общее время, необходимое для развертывания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-337">This is useful for the large code packages and container images to be present on the node before the actual application deployment and upgrade, thus significantly reducing the total time required for the deployment or upgrade.</span></span>'
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options?: Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-338">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-338">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="76520-339">Описывает сведения о развертывании пакета службы в узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-339">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDeployServicePackageToNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_1'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-340">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-340">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="76520-341">Описывает сведения о развертывании пакета службы в узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-341">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-342">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-342">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.deployServicePackageToNode_2'
    name: 'deployServicePackageToNode(string, DeployServicePackageToNodeDescription, ServiceFabricClientDeployServicePackageToNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deployServicePackageToNode(nodeName: string, deployServicePackageToNodeDescription: DeployServicePackageToNodeDescription, options: ServiceFabricClientDeployServicePackageToNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-343">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-343">The name of the node.</span></span>
        - id: deployServicePackageToNodeDescription
          type:
            - '@azure/servicefabric.DeployServicePackageToNodeDescription'
          description: <span data-ttu-id="76520-344">Описывает сведения о развертывании пакета службы в узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-344">Describes information for deploying a service package to a Service Fabric node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
          description: <span data-ttu-id="76520-345">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-345">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-346">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-346">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup'
    name: 'disableApplicationBackup(string, Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-347">Отключает периодическое резервное копирование приложения Service Fabric, которая ранее была включена.</span><span class="sxs-lookup"><span data-stu-id="76520-347">Disables periodic backup of Service Fabric application which was previously enabled.</span></span>'
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientDisableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-348">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-348">The identity of the application.</span></span> <span data-ttu-id="76520-349">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-349">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-350">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-350">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-351">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-351">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_1'
    name: 'disableApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-352">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-352">The identity of the application.</span></span> <span data-ttu-id="76520-353">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-353">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-354">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-354">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-355">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-355">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-356">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-356">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableApplicationBackup_2'
    name: 'disableApplicationBackup(string, ServiceFabricClientDisableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableApplicationBackup(applicationId: string, options: ServiceFabricClientDisableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-357">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-357">The identity of the application.</span></span> <span data-ttu-id="76520-358">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-358">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-359">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-359">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-360">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-360">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
          description: <span data-ttu-id="76520-361">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-361">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-362">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-362">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode'
    name: 'disableNode(string, DeactivationIntentDescription, Models.ServiceFabricClientDisableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-363">Деактивирует узел кластера Service Fabric с указанной целью деактивации.</span><span class="sxs-lookup"><span data-stu-id="76520-363">Deactivate a Service Fabric cluster node with the specified deactivation intent.</span></span> <span data-ttu-id="76520-364">После запуска деактивации ее уровень цели можно увеличить, но не понизить (например, узел, который деактивируется с целью приостановки, можно деактивировать с целью перезагрузки, но не наоборот).</span><span class="sxs-lookup"><span data-stu-id="76520-364">Once the deactivation is in progress, the deactivation intent can be increased, but not decreased (for example, a node that is deactivated with the Pause intent can be deactivated further with Restart, but not the other way around.</span></span> <span data-ttu-id="76520-365">Узлы могут быть повторно активированы с помощью операции активации узла в любой момент после деактивации.</span><span class="sxs-lookup"><span data-stu-id="76520-365">Nodes may be reactivated using the Activate a node operation any time after they are deactivated.</span></span> <span data-ttu-id="76520-366">Если деактивация не завершена, то она отменяется.</span><span class="sxs-lookup"><span data-stu-id="76520-366">If the deactivation is not complete, this will cancel the deactivation.</span></span> <span data-ttu-id="76520-367">Узел, доступность которого утрачивается и восстанавливается при деактивации, все равно необходимо будет активировать, прежде чем на нем разместят службы.</span><span class="sxs-lookup"><span data-stu-id="76520-367">A node that goes down and comes back up while deactivated will still need to be reactivated before services will be placed on that node.</span></span>'
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options?: Models.ServiceFabricClientDisableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-368">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-368">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="76520-369">Описывает цель или причину деактивация узла.</span><span class="sxs-lookup"><span data-stu-id="76520-369">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_1'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-370">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-370">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="76520-371">Описывает цель или причину деактивация узла.</span><span class="sxs-lookup"><span data-stu-id="76520-371">Describes the intent or reason for deactivating the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-372">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-372">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableNode_2'
    name: 'disableNode(string, DeactivationIntentDescription, ServiceFabricClientDisableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableNode(nodeName: string, deactivationIntentDescription: DeactivationIntentDescription, options: ServiceFabricClientDisableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-373">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-373">The name of the node.</span></span>
        - id: deactivationIntentDescription
          type:
            - '@azure/servicefabric.DeactivationIntentDescription'
          description: <span data-ttu-id="76520-374">Описывает цель или причину деактивация узла.</span><span class="sxs-lookup"><span data-stu-id="76520-374">Describes the intent or reason for deactivating the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
          description: <span data-ttu-id="76520-375">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-375">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-376">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-376">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup'
    name: 'disablePartitionBackup(string, Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-377">Отключает периодическое резервное копирование секции, которая ранее была включена.</span><span class="sxs-lookup"><span data-stu-id="76520-377">Disables periodic backup of partition which was previously enabled.</span></span> <span data-ttu-id="76520-378">Резервное копирование должно быть явно включено, прежде чем его можно отключить.</span><span class="sxs-lookup"><span data-stu-id="76520-378">Backup must be explicitly enabled before it can be disabled.</span></span>
      <span data-ttu-id="76520-379">В случае, если резервное копирование включено для приложения Service Fabric или службу, которая этот раздел является частью, она будет продолжать периодически создавать резервные копии согласно политике, сопоставленный в более поздней версии сущность уровня.</span><span class="sxs-lookup"><span data-stu-id="76520-379">In case the backup is enabled for the Service Fabric application or service, which this partition is part of, this partition would continue to be periodically backed up as per the policy mapped at the higher level entity.</span></span>
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientDisablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-380">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-380">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_1'
    name: 'disablePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-381">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-381">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-382">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-382">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disablePartitionBackup_2'
    name: 'disablePartitionBackup(string, ServiceFabricClientDisablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disablePartitionBackup(partitionId: string, options: ServiceFabricClientDisablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-383">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-383">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
          description: <span data-ttu-id="76520-384">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-384">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-385">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-385">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup'
    name: 'disableServiceBackup(string, Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-386">Отключает периодическое резервное копирование службы Service Fabric, которая ранее была включена.</span><span class="sxs-lookup"><span data-stu-id="76520-386">Disables periodic backup of Service Fabric service which was previously enabled.</span></span> <span data-ttu-id="76520-387">Резервное копирование должно быть явно включено, прежде чем его можно отключить.</span><span class="sxs-lookup"><span data-stu-id="76520-387">Backup must be explicitly enabled before it can be disabled.</span></span>
      <span data-ttu-id="76520-388">В случае, если резервное копирование включено для приложения Service Fabric, что эта служба является частью, эта служба будет продолжать периодически создавать резервные копии согласно политике сопоставления на уровне приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-388">In case the backup is enabled for the Service Fabric application, which this service is part of, this service would continue to be periodically backed up as per the policy mapped at the application level.</span></span>
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options?: Models.ServiceFabricClientDisableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-389">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-389">The identity of the service.</span></span> <span data-ttu-id="76520-390">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-390">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-391">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-391">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-392">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-392">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientDisableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_1'
    name: 'disableServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-393">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-393">The identity of the service.</span></span> <span data-ttu-id="76520-394">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-394">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-395">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-395">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-396">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-396">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-397">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-397">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.disableServiceBackup_2'
    name: 'disableServiceBackup(string, ServiceFabricClientDisableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disableServiceBackup(serviceId: string, options: ServiceFabricClientDisableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-398">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-398">The identity of the service.</span></span> <span data-ttu-id="76520-399">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-399">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-400">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-400">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-401">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-401">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
          description: <span data-ttu-id="76520-402">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-402">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-403">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-403">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup'
    name: 'enableApplicationBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-404">Обеспечивает периодическое резервное копирование разделов с отслеживанием состояния, которые являются частью этого приложения Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-404">Enables periodic backup of stateful partitions which are part of this Service Fabric application.</span></span> <span data-ttu-id="76520-405">Каждая секция резервного копирования по отдельности согласно указанной политике архивации описание.</span><span class="sxs-lookup"><span data-stu-id="76520-405">Each partition is backed up individually as per the specified backup policy description.</span></span>
      <span data-ttu-id="76520-406">Обратите внимание, только C# надежных субъектов и надежных с отслеживанием состояния службы в настоящее время поддерживаются для периодического резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-406">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-407">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-407">The identity of the application.</span></span> <span data-ttu-id="76520-408">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-408">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-409">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-409">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-410">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-410">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-411">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-411">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_1'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-412">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-412">The identity of the application.</span></span> <span data-ttu-id="76520-413">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-413">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-414">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-414">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-415">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-415">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-416">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-416">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-417">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-417">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableApplicationBackup_2'
    name: 'enableApplicationBackup(string, EnableBackupDescription, ServiceFabricClientEnableApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableApplicationBackup(applicationId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-418">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-418">The identity of the application.</span></span> <span data-ttu-id="76520-419">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-419">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-420">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-420">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-421">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-421">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-422">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-422">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
          description: <span data-ttu-id="76520-423">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-423">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-424">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-424">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode'
    name: 'enableNode(string, Models.ServiceFabricClientEnableNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-425">Активирует деактивированный узел кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-425">Activates a Service Fabric cluster node that is currently deactivated.</span></span> <span data-ttu-id="76520-426">После активации узел снова станет доступен для размещения новых реплик, а все деактивированные реплики на этом узле будут повторно активированы.</span><span class="sxs-lookup"><span data-stu-id="76520-426">Once activated, the node will again become a viable target for placing new replicas, and any deactivated replicas remaining on the node will be reactivated.</span></span>'
    syntax:
      content: 'function enableNode(nodeName: string, options?: Models.ServiceFabricClientEnableNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-427">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-427">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_1'
    name: 'enableNode(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-428">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-428">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-429">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-429">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableNode_2'
    name: 'enableNode(string, ServiceFabricClientEnableNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableNode(nodeName: string, options: ServiceFabricClientEnableNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-430">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-430">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
          description: <span data-ttu-id="76520-431">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-431">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-432">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-432">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup'
    name: 'enablePartitionBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-433">Обеспечивает периодическое резервное копирование с отслеживанием состояния сохраненного секции.</span><span class="sxs-lookup"><span data-stu-id="76520-433">Enables periodic backup of stateful persisted partition.</span></span> <span data-ttu-id="76520-434">Согласно указанной политике архивации описание резервного копирования каждой секции.</span><span class="sxs-lookup"><span data-stu-id="76520-434">Each partition is backed up as per the specified backup policy description.</span></span> <span data-ttu-id="76520-435">Если приложения или службы, который является частью, уже настроена для резервного копирования, а затем эту операцию нужно переопределить политику, используемую для периодического резервного копирования этой секции.</span><span class="sxs-lookup"><span data-stu-id="76520-435">In case the application or service, which is partition is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup of this partition.</span></span>
      <span data-ttu-id="76520-436">Обратите внимание, только C# надежных субъектов и надежных с отслеживанием состояния службы в настоящее время поддерживаются для периодического резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-436">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnablePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-437">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-437">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-438">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-438">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnablePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_1'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-439">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-439">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-440">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-440">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-441">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-441">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enablePartitionBackup_2'
    name: 'enablePartitionBackup(string, EnableBackupDescription, ServiceFabricClientEnablePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enablePartitionBackup(partitionId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnablePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-442">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-442">The identity of the partition.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-443">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-443">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
          description: <span data-ttu-id="76520-444">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-444">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-445">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-445">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup'
    name: 'enableServiceBackup(string, EnableBackupDescription, Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-446">Обеспечивает периодическое резервное копирование разделов с отслеживанием состояния, которые являются частью этой службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-446">Enables periodic backup of stateful partitions which are part of this Service Fabric service.</span></span>
      <span data-ttu-id="76520-447">Каждая секция резервного копирования по отдельности согласно указанной политике архивации описание.</span><span class="sxs-lookup"><span data-stu-id="76520-447">Each partition is backed up individually as per the specified backup policy description.</span></span> <span data-ttu-id="76520-448">В случае, если приложения, что служба является частью, уже настроена для резервного копирования, то эту операцию нужно переопределить политику, используемую, чтобы воспользоваться периодическое резервное копирование для этой службы и его секции (если явно не переопределено на уровне секции).</span><span class="sxs-lookup"><span data-stu-id="76520-448">In case the application, which the service is part of, is already enabled for backup then this operation would override the policy being used to take the periodic backup for this service and its partitions (unless explicitly overridden at the partition level).</span></span>
      <span data-ttu-id="76520-449">Обратите внимание, только C# надежных субъектов и надежных с отслеживанием состояния службы в настоящее время поддерживаются для периодического резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-449">Note only C# based Reliable Actor and Reliable Stateful services are currently supported for periodic backup.</span></span>
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options?: Models.ServiceFabricClientEnableServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-450">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-450">The identity of the service.</span></span> <span data-ttu-id="76520-451">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-451">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-452">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-452">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-453">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-453">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-454">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-454">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientEnableServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_1'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-455">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-455">The identity of the service.</span></span> <span data-ttu-id="76520-456">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-456">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-457">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-457">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-458">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-458">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-459">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-459">Specifies the parameters for enabling backup.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-460">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-460">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.enableServiceBackup_2'
    name: 'enableServiceBackup(string, EnableBackupDescription, ServiceFabricClientEnableServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableServiceBackup(serviceId: string, enableBackupDescription: EnableBackupDescription, options: ServiceFabricClientEnableServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-461">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-461">The identity of the service.</span></span> <span data-ttu-id="76520-462">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-462">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-463">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-463">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-464">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-464">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: enableBackupDescription
          type:
            - '@azure/servicefabric.EnableBackupDescription'
          description: <span data-ttu-id="76520-465">Задает параметры для включения резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-465">Specifies the parameters for enabling backup.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
          description: <span data-ttu-id="76520-466">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-466">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-467">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-467">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-468">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-468">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="76520-469">Описание задачи восстановления утверждения.</span><span class="sxs-lookup"><span data-stu-id="76520-469">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_2'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="76520-470">Описание задачи восстановления утверждения.</span><span class="sxs-lookup"><span data-stu-id="76520-470">Describes the repair task to be approved.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-471">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-471">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-472">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-472">The callback</span></span>
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.forceApproveRepairTask_1'
    name: 'forceApproveRepairTask(RepairTaskApproveDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceApproveRepairTask(repairTaskApproveDescription: RepairTaskApproveDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskApproveDescription
          type:
            - '@azure/servicefabric.RepairTaskApproveDescription'
          description: <span data-ttu-id="76520-473">Описание задачи восстановления утверждения.</span><span class="sxs-lookup"><span data-stu-id="76520-473">Describes the repair task to be approved.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-474">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-474">The callback</span></span>
      return:
        type:
          - Promise<Models.ForceApproveRepairTaskResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata'
    name: getAadMetadata(Models.ServiceFabricClientGetAadMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-475">Получает метаданные Azure Active Directory, используемые для безопасное подключение к кластеру.</span><span class="sxs-lookup"><span data-stu-id="76520-475">Gets the Azure Active Directory metadata used for secured connection to cluster.</span></span>
      <span data-ttu-id="76520-476">Этот API не должен вызываться отдельно.</span><span class="sxs-lookup"><span data-stu-id="76520-476">This API is not supposed to be called separately.</span></span> <span data-ttu-id="76520-477">Он предоставляет сведения, необходимые для настройки Azure Active Directory защитить соединение с кластером Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-477">It provides information needed to set up an Azure Active Directory secured connection with a Service Fabric cluster.</span></span>
    syntax:
      content: 'function getAadMetadata(options?: Models.ServiceFabricClientGetAadMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetAadMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_1'
    name: getAadMetadata(ServiceCallback<AadMetadataObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            <span data-ttu-id="76520-478">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-478">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAadMetadata_2'
    name: 'getAadMetadata(ServiceFabricClientGetAadMetadataOptionalParams, ServiceCallback<AadMetadataObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAadMetadata(options: ServiceFabricClientGetAadMetadataOptionalParams, callback: ServiceCallback<AadMetadataObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
          description: <span data-ttu-id="76520-479">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-479">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.AadMetadataObject>
          description: |
            <span data-ttu-id="76520-480">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-480">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAadMetadataResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy'
    name: 'getAllEntitiesBackedUpByPolicy(string, Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-481">Возвращает список приложений Service Fabric, службы или секции, который связаны с этой политикой резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-481">Returns a list of Service Fabric application, service or partition which are associated with this backup policy.</span></span>'
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options?: Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-482">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-482">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_1'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-483">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-483">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            <span data-ttu-id="76520-484">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-484">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getAllEntitiesBackedUpByPolicy_2'
    name: 'getAllEntitiesBackedUpByPolicy(string, ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, ServiceCallback<PagedBackupEntityList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllEntitiesBackedUpByPolicy(backupPolicyName: string, options: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams, callback: ServiceCallback<PagedBackupEntityList>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-485">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-485">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
          description: <span data-ttu-id="76520-486">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-486">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
          description: |
            <span data-ttu-id="76520-487">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-487">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAllEntitiesBackedUpByPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo'
    name: 'getApplicationBackupConfigurationInfo(string, Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-488">Получает сведения о конфигурации резервного копирования Service Fabric для приложения и службы и разделах этого приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-488">Gets the Service Fabric backup configuration information for the application and the services and partitions under this application.</span></span>
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-489">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-489">The identity of the application.</span></span> <span data-ttu-id="76520-490">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-490">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-491">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-491">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-492">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-492">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_1'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-493">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-493">The identity of the application.</span></span> <span data-ttu-id="76520-494">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-494">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-495">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-495">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-496">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-496">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="76520-497">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-497">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupConfigurationInfo_2'
    name: 'getApplicationBackupConfigurationInfo(string, ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupConfigurationInfo(applicationId: string, options: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-498">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-498">The identity of the application.</span></span> <span data-ttu-id="76520-499">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-499">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-500">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-500">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-501">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-501">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="76520-502">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-502">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="76520-503">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-503">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList'
    name: 'getApplicationBackupList(string, Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-504">Возвращает список резервных копий, доступных для каждой секции в этом приложении Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-504">Returns a list of backups available for every partition in this Service Fabric application.</span></span> <span data-ttu-id="76520-505">Сервер перечисляет все резервные копии, доступные в папку резервных копий, настроенные в политике резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-505">The server enumerates all the backups available at the backup location configured in the backup policy.</span></span> <span data-ttu-id="76520-506">Он также позволяет фильтровать результат, в зависимости от даты и времени начала и окончания или просто получение последней доступной резервной копии для каждой секции.</span><span class="sxs-lookup"><span data-stu-id="76520-506">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.</span></span>'
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options?: Models.ServiceFabricClientGetApplicationBackupListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-507">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-507">The identity of the application.</span></span> <span data-ttu-id="76520-508">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-508">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-509">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-509">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-510">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-510">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_1'
    name: 'getApplicationBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-511">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-511">The identity of the application.</span></span> <span data-ttu-id="76520-512">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-512">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-513">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-513">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-514">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-514">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-515">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-515">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationBackupList_2'
    name: 'getApplicationBackupList(string, ServiceFabricClientGetApplicationBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationBackupList(applicationId: string, options: ServiceFabricClientGetApplicationBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-516">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-516">The identity of the application.</span></span> <span data-ttu-id="76520-517">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-517">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-518">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-518">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-519">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-519">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
          description: <span data-ttu-id="76520-520">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-520">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-521">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-521">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList'
    name: 'getApplicationEventList(string, string, string, Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-522">Ответ является списком объектов ApplicationEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-522">The response is list of ApplicationEvent objects.</span></span>
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationEventListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-523">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-523">The identity of the application.</span></span> <span data-ttu-id="76520-524">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-524">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-525">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-525">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-526">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-526">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-527">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-527">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-528">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-528">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_1'
    name: 'getApplicationEventList(string, string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-529">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-529">The identity of the application.</span></span> <span data-ttu-id="76520-530">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-530">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-531">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-531">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-532">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-532">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-533">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-533">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-534">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-534">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="76520-535">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-535">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationEventList_2'
    name: 'getApplicationEventList(string, string, string, ServiceFabricClientGetApplicationEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationEventList(applicationId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-536">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-536">The identity of the application.</span></span> <span data-ttu-id="76520-537">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-537">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-538">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-538">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-539">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-539">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-540">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-540">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-541">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-541">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
          description: <span data-ttu-id="76520-542">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-542">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="76520-543">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-543">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth'
    name: 'getApplicationHealth(string, Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-544">Возвращает состояние работоспособности приложения Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-544">Returns the heath state of the service fabric application.</span></span> <span data-ttu-id="76520-545">Ответ содержит значение состояния работоспособности "Ok" (приложение работоспособно), "Error" (произошла ошибка) или "Warning" (Предупреждение).</span><span class="sxs-lookup"><span data-stu-id="76520-545">The response reports either Ok, Error or Warning health state.</span></span> <span data-ttu-id="76520-546">Если сущность не найдена в хранилище данных о работоспособности, возвращается значение Error.</span><span class="sxs-lookup"><span data-stu-id="76520-546">If the entity is not found in the health store, it will return Error.</span></span>'
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-547">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-547">The identity of the application.</span></span> <span data-ttu-id="76520-548">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-548">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-549">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-549">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-550">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-550">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_1'
    name: 'getApplicationHealth(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-551">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-551">The identity of the application.</span></span> <span data-ttu-id="76520-552">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-552">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-553">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-553">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-554">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-554">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="76520-555">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-555">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealth_2'
    name: 'getApplicationHealth(string, ServiceFabricClientGetApplicationHealthOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealth(applicationId: string, options: ServiceFabricClientGetApplicationHealthOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-556">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-556">The identity of the application.</span></span> <span data-ttu-id="76520-557">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-557">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-558">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-558">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-559">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-559">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
          description: <span data-ttu-id="76520-560">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-560">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="76520-561">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-561">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy'
    name: 'getApplicationHealthUsingPolicy(string, Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-562">Возвращает сведения о работоспособности приложения Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-562">Gets the health of a Service Fabric application.</span></span> <span data-ttu-id="76520-563">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности узла на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-563">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="76520-564">Используйте ClusterHealthPolicies для переопределения политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-564">Use ClusterHealthPolicies to override the health policies used to evaluate the health.</span></span>'
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options?: Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-565">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-565">The identity of the application.</span></span> <span data-ttu-id="76520-566">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-566">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-567">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-567">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-568">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-568">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_1'
    name: 'getApplicationHealthUsingPolicy(string, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-569">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-569">The identity of the application.</span></span> <span data-ttu-id="76520-570">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-570">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-571">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-571">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-572">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-572">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="76520-573">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-573">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy_2'
    name: 'getApplicationHealthUsingPolicy(string, ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, ServiceCallback<ApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationHealthUsingPolicy(applicationId: string, options: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<ApplicationHealth>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-574">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-574">The identity of the application.</span></span> <span data-ttu-id="76520-575">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-575">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-576">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-576">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-577">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-577">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-578">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-578">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationHealth>
          description: |
            <span data-ttu-id="76520-579">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-579">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo'
    name: 'getApplicationInfo(string, Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-580">Возвращает сведения о приложении, которое создано или находится в процессе создания в кластере Service Fabric и имя которого совпадает со значением, указанным в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="76520-580">Returns the information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span>
      <span data-ttu-id="76520-581">Ответ содержит имя, тип, состояние, параметры и другие сведения о приложении.</span><span class="sxs-lookup"><span data-stu-id="76520-581">The response includes the name, type, status, parameters, and other details about the application.</span></span>
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-582">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-582">The identity of the application.</span></span> <span data-ttu-id="76520-583">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-583">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-584">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-584">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-585">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-585">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_1'
    name: 'getApplicationInfo(string, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-586">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-586">The identity of the application.</span></span> <span data-ttu-id="76520-587">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-587">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-588">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-588">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-589">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-589">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            <span data-ttu-id="76520-590">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-590">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfo_2'
    name: 'getApplicationInfo(string, ServiceFabricClientGetApplicationInfoOptionalParams, ServiceCallback<ApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfo(applicationId: string, options: ServiceFabricClientGetApplicationInfoOptionalParams, callback: ServiceCallback<ApplicationInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-591">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-591">The identity of the application.</span></span> <span data-ttu-id="76520-592">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-592">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-593">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-593">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-594">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-594">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
          description: <span data-ttu-id="76520-595">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-595">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationInfo>
          description: |
            <span data-ttu-id="76520-596">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-596">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList'
    name: getApplicationInfoList(Models.ServiceFabricClientGetApplicationInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-597">Возвращает сведения о приложении, которое создано или находится в процессе создания в кластере Service Fabric и которое соответствует указанным фильтрам.</span><span class="sxs-lookup"><span data-stu-id="76520-597">Gets the information about the applications that were created or in the process of being created in the Service Fabric cluster and match the specified filters.</span></span> <span data-ttu-id="76520-598">Ответ содержит имя, тип, состояние, параметры и другие сведения о приложении.</span><span class="sxs-lookup"><span data-stu-id="76520-598">The response includes the name, type, status, parameters, and other details about the application.</span></span> <span data-ttu-id="76520-599">Если сведения о приложении не помещаются на странице, возвращается одна страница результатов и маркер продолжения, который можно использовать для получения следующей страницы.</span><span class="sxs-lookup"><span data-stu-id="76520-599">If the applications do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="76520-600">Фильтры ApplicationTypeName и ApplicationDefinitionKindFilter не могут быть заданы одновременно.</span><span class="sxs-lookup"><span data-stu-id="76520-600">Filters ApplicationTypeName and ApplicationDefinitionKindFilter cannot be specified at the same time.</span></span>'
    syntax:
      content: 'function getApplicationInfoList(options?: Models.ServiceFabricClientGetApplicationInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_1'
    name: getApplicationInfoList(ServiceCallback<PagedApplicationInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            <span data-ttu-id="76520-601">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-601">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationInfoList_2'
    name: 'getApplicationInfoList(ServiceFabricClientGetApplicationInfoListOptionalParams, ServiceCallback<PagedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationInfoList(options: ServiceFabricClientGetApplicationInfoListOptionalParams, callback: ServiceCallback<PagedApplicationInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
          description: <span data-ttu-id="76520-602">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-602">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
          description: |
            <span data-ttu-id="76520-603">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-603">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo'
    name: 'getApplicationLoadInfo(string, Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-604">Возвращает сведения о нагрузке приложения, которое создано или находится в процессе создания в кластере Service Fabric и имя которого совпадает со значением, указанным в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="76520-604">Returns the load information about the application that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span>
      <span data-ttu-id="76520-605">В ответе содержится имя, минимальное и максимальное число узлов, количество узлов, которые в настоящее время использует приложение, и информация о метриках нагрузки приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-605">The response includes the name, minimum nodes, maximum nodes, the number of nodes the application is occupying currently, and application load metric information about the application.</span></span>
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options?: Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-606">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-606">The identity of the application.</span></span> <span data-ttu-id="76520-607">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-607">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-608">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-608">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-609">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-609">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_1'
    name: 'getApplicationLoadInfo(string, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-610">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-610">The identity of the application.</span></span> <span data-ttu-id="76520-611">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-611">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-612">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-612">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-613">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-613">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            <span data-ttu-id="76520-614">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-614">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationLoadInfo_2'
    name: 'getApplicationLoadInfo(string, ServiceFabricClientGetApplicationLoadInfoOptionalParams, ServiceCallback<ApplicationLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationLoadInfo(applicationId: string, options: ServiceFabricClientGetApplicationLoadInfoOptionalParams, callback: ServiceCallback<ApplicationLoadInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-615">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-615">The identity of the application.</span></span> <span data-ttu-id="76520-616">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-616">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-617">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-617">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-618">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-618">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
          description: <span data-ttu-id="76520-619">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-619">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
          description: |
            <span data-ttu-id="76520-620">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-620">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest'
    name: 'getApplicationManifest(string, string, Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-621">Ответ содержит XML манифеста приложения в виде строки.</span><span class="sxs-lookup"><span data-stu-id="76520-621">The response contains the application manifest XML as a string.</span></span>
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetApplicationManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-622">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-622">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-623">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-623">The version of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_1'
    name: 'getApplicationManifest(string, string, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-624">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-624">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-625">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-625">The version of the application type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            <span data-ttu-id="76520-626">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-626">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationManifest_2'
    name: 'getApplicationManifest(string, string, ServiceFabricClientGetApplicationManifestOptionalParams, ServiceCallback<ApplicationTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationManifest(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetApplicationManifestOptionalParams, callback: ServiceCallback<ApplicationTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-627">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-627">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-628">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-628">The version of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
          description: <span data-ttu-id="76520-629">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
          description: |
            <span data-ttu-id="76520-630">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-630">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo'
    name: 'getApplicationNameInfo(string, Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-631">Возвращает имя приложения для указанной службы.</span><span class="sxs-lookup"><span data-stu-id="76520-631">Gets the name of the application for the specified service.</span></span> <span data-ttu-id="76520-632">Возвращается ошибка "404 FABRIC_E_SERVICE_DOES_NOT_EXIST", если служба с указанным идентификатором службы не существует.</span><span class="sxs-lookup"><span data-stu-id="76520-632">A 404 FABRIC_E_SERVICE_DOES_NOT_EXIST error is returned if a service with the provided service ID does not exist.</span></span>'
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options?: Models.ServiceFabricClientGetApplicationNameInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-633">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-633">The identity of the service.</span></span> <span data-ttu-id="76520-634">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-634">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-635">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-635">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-636">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-636">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_1'
    name: 'getApplicationNameInfo(string, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-637">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-637">The identity of the service.</span></span> <span data-ttu-id="76520-638">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-638">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-639">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-639">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-640">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-640">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            <span data-ttu-id="76520-641">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-641">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationNameInfo_2'
    name: 'getApplicationNameInfo(string, ServiceFabricClientGetApplicationNameInfoOptionalParams, ServiceCallback<ApplicationNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationNameInfo(serviceId: string, options: ServiceFabricClientGetApplicationNameInfoOptionalParams, callback: ServiceCallback<ApplicationNameInfo>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-642">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-642">The identity of the service.</span></span> <span data-ttu-id="76520-643">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-643">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-644">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-644">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-645">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-645">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
          description: <span data-ttu-id="76520-646">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-646">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
          description: |
            <span data-ttu-id="76520-647">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-647">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList'
    name: 'getApplicationsEventList(string, string, Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-648">Ответ является списком объектов ApplicationEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-648">The response is list of ApplicationEvent objects.</span></span>
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetApplicationsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-649">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-649">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-650">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-650">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_1'
    name: 'getApplicationsEventList(string, string, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-651">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-651">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-652">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-652">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="76520-653">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-653">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationsEventList_2'
    name: 'getApplicationsEventList(string, string, ServiceFabricClientGetApplicationsEventListOptionalParams, ServiceCallback<Models.ApplicationEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetApplicationsEventListOptionalParams, callback: ServiceCallback<Models.ApplicationEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-654">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-654">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-655">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-655">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
          description: <span data-ttu-id="76520-656">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-656">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ApplicationEventUnion[]>'
          description: |
            <span data-ttu-id="76520-657">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-657">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList'
    name: getApplicationTypeInfoList(Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-658">Возвращает сведения о типах приложений, которые подготовлены или подготавливаются в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-658">Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster.</span></span> <span data-ttu-id="76520-659">Каждая версия типа приложения возвращается как один тип приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-659">Each version of an application type is returned as one application type.</span></span> <span data-ttu-id="76520-660">Ответ содержит имя, версию, состояние и другие сведения о типе приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-660">The response includes the name, version, status, and other details about the application type.</span></span> <span data-ttu-id="76520-661">Это страничный запрос. Это значит, что если сведения о типах приложений не помещаются на странице, возвращается одна страница результатов и маркер продолжения, который можно использовать для получения следующей страницы.</span><span class="sxs-lookup"><span data-stu-id="76520-661">This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="76520-662">Например, если существуют 10 типов приложения, но страница вмещает только первые 3 типа, или задано максимальное число результатов, равное 3, тогда возвращаются 3 типа.</span><span class="sxs-lookup"><span data-stu-id="76520-662">For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned.</span></span>
      <span data-ttu-id="76520-663">Чтобы просмотреть остальную часть результатов, можно получить следующие страницы с помощью маркера продолжения, передав его в следующем запросе.</span><span class="sxs-lookup"><span data-stu-id="76520-663">To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.</span></span> <span data-ttu-id="76520-664">Если следующие страницы отсутствуют, возвращается пустой маркер продолжения.</span><span class="sxs-lookup"><span data-stu-id="76520-664">An empty continuation token is returned if there are no subsequent pages.</span></span>
    syntax:
      content: 'function getApplicationTypeInfoList(options?: Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_1'
    name: getApplicationTypeInfoList(ServiceCallback<PagedApplicationTypeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="76520-665">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-665">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoList_2'
    name: 'getApplicationTypeInfoList(ServiceFabricClientGetApplicationTypeInfoListOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoList(options: ServiceFabricClientGetApplicationTypeInfoListOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
          description: <span data-ttu-id="76520-666">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-666">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="76520-667">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-667">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName'
    name: 'getApplicationTypeInfoListByName(string, Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-668">Возвращает сведения о типах приложений, которые подготовлены или подготавливаются в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-668">Returns the information about the application types that are provisioned or in the process of being provisioned in the Service Fabric cluster.</span></span> <span data-ttu-id="76520-669">Эти результаты содержат типы приложений, имена которых совпадают со значением, указанным в качестве параметра, и которые соответствуют заданным параметрам запроса.</span><span class="sxs-lookup"><span data-stu-id="76520-669">These results are of application types whose name match exactly the one specified as the parameter, and which comply with the given query parameters.</span></span> <span data-ttu-id="76520-670">Возвращаются все версии типа приложения, соответствующего заданному имени типа приложения, при этом каждая версия возвращаются как тип приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-670">All versions of the application type matching the application type name are returned, with each version returned as one application type.</span></span> <span data-ttu-id="76520-671">Ответ содержит имя, версию, состояние и другие сведения о типе приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-671">The response includes the name, version, status, and other details about the application type.</span></span> <span data-ttu-id="76520-672">Это страничный запрос. Это значит, что если сведения о типах приложений не помещаются на странице, возвращается одна страница результатов и маркер продолжения, который можно использовать для получения следующей страницы.</span><span class="sxs-lookup"><span data-stu-id="76520-672">This is a paged query, meaning that if not all of the application types fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="76520-673">Например, если существуют 10 типов приложения, но страница вмещает только первые 3 типа, или задано максимальное число результатов, равное 3, тогда возвращаются 3 типа.</span><span class="sxs-lookup"><span data-stu-id="76520-673">For example, if there are 10 application types but a page only fits the first three application types, or if max results is set to 3, then three is returned.</span></span> <span data-ttu-id="76520-674">Чтобы просмотреть остальную часть результатов, можно получить следующие страницы с помощью маркера продолжения, передав его в следующем запросе.</span><span class="sxs-lookup"><span data-stu-id="76520-674">To access the rest of the results, retrieve subsequent pages by using the returned continuation token in the next query.</span></span> <span data-ttu-id="76520-675">Если следующие страницы отсутствуют, возвращается пустой маркер продолжения.</span><span class="sxs-lookup"><span data-stu-id="76520-675">An empty continuation token is returned if there are no subsequent pages.</span></span>'
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options?: Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-676">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-676">The name of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_1'
    name: 'getApplicationTypeInfoListByName(string, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-677">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-677">The name of the application type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="76520-678">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-678">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName_2'
    name: 'getApplicationTypeInfoListByName(string, ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, ServiceCallback<PagedApplicationTypeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationTypeInfoListByName(applicationTypeName: string, options: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams, callback: ServiceCallback<PagedApplicationTypeInfoList>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-679">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-679">The name of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
          description: <span data-ttu-id="76520-680">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-680">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
          description: |
            <span data-ttu-id="76520-681">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-681">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationTypeInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade'
    name: 'getApplicationUpgrade(string, Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-682">Возвращает сведения о состоянии последнего обновления приложения, а также сведения для упрощения отладки проблем в работоспособности приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-682">Returns information about the state of the latest application upgrade along with details to aid debugging application health issues.</span></span>'
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientGetApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-683">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-683">The identity of the application.</span></span> <span data-ttu-id="76520-684">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-684">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-685">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-685">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-686">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-686">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_1'
    name: 'getApplicationUpgrade(string, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-687">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-687">The identity of the application.</span></span> <span data-ttu-id="76520-688">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-688">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-689">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-689">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-690">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-690">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            <span data-ttu-id="76520-691">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-691">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getApplicationUpgrade_2'
    name: 'getApplicationUpgrade(string, ServiceFabricClientGetApplicationUpgradeOptionalParams, ServiceCallback<ApplicationUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getApplicationUpgrade(applicationId: string, options: ServiceFabricClientGetApplicationUpgradeOptionalParams, callback: ServiceCallback<ApplicationUpgradeProgressInfo>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-692">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-692">The identity of the application.</span></span> <span data-ttu-id="76520-693">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-693">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-694">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-694">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-695">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-695">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-696">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-696">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
          description: |
            <span data-ttu-id="76520-697">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-697">The callback</span></span>
      return:
        type:
          - Promise<Models.GetApplicationUpgradeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName'
    name: 'getBackupPolicyByName(string, Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-698">Получает определенной политики резервного копирования определяется {backupPolicyName}</span><span class="sxs-lookup"><span data-stu-id="76520-698">Gets a particular backup policy identified by {backupPolicyName}</span></span>'
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options?: Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-699">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-699">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_1'
    name: 'getBackupPolicyByName(string, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-700">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-700">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            <span data-ttu-id="76520-701">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-701">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyByName_2'
    name: 'getBackupPolicyByName(string, ServiceFabricClientGetBackupPolicyByNameOptionalParams, ServiceCallback<BackupPolicyDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyByName(backupPolicyName: string, options: ServiceFabricClientGetBackupPolicyByNameOptionalParams, callback: ServiceCallback<BackupPolicyDescription>)'
      parameters:
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-702">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-702">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
          description: <span data-ttu-id="76520-703">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-703">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
          description: |
            <span data-ttu-id="76520-704">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-704">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList'
    name: getBackupPolicyList(Models.ServiceFabricClientGetBackupPolicyListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-705">Получение списка всех политик резервного копирования настроена.</span><span class="sxs-lookup"><span data-stu-id="76520-705">Get a list of all the backup policies configured.</span></span>
    syntax:
      content: 'function getBackupPolicyList(options?: Models.ServiceFabricClientGetBackupPolicyListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupPolicyListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_1'
    name: getBackupPolicyList(ServiceCallback<PagedBackupPolicyDescriptionList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            <span data-ttu-id="76520-706">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-706">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupPolicyList_2'
    name: 'getBackupPolicyList(ServiceFabricClientGetBackupPolicyListOptionalParams, ServiceCallback<PagedBackupPolicyDescriptionList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupPolicyList(options: ServiceFabricClientGetBackupPolicyListOptionalParams, callback: ServiceCallback<PagedBackupPolicyDescriptionList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
          description: <span data-ttu-id="76520-707">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-707">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
          description: |
            <span data-ttu-id="76520-708">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-708">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupPolicyListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-709">Получает список доступных резервных копий для указанного резервного копирования (приложения, службы или секции) сущности в указанном расположении (общая папка или хранилище BLOB-объектов).</span><span class="sxs-lookup"><span data-stu-id="76520-709">Gets the list of backups available for the specified backed up entity (Application, Service or Partition) at the specified backup location (FileShare or Azure Blob Storage).</span></span>'
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options?: Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="76520-710">Описаны фильтры и сведения о хранилище резервных копий для перечисление резервных копий.</span><span class="sxs-lookup"><span data-stu-id="76520-710">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_1'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="76520-711">Описаны фильтры и сведения о хранилище резервных копий для перечисление резервных копий.</span><span class="sxs-lookup"><span data-stu-id="76520-711">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-712">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-712">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getBackupsFromBackupLocation_2'
    name: 'getBackupsFromBackupLocation(GetBackupByStorageQueryDescription, ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getBackupsFromBackupLocation(getBackupByStorageQueryDescription: GetBackupByStorageQueryDescription, options: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: getBackupByStorageQueryDescription
          type:
            - '@azure/servicefabric.GetBackupByStorageQueryDescription'
          description: <span data-ttu-id="76520-713">Описаны фильтры и сведения о хранилище резервных копий для перечисление резервных копий.</span><span class="sxs-lookup"><span data-stu-id="76520-713">Describes the filters and backup storage details to be used for enumerating backups.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
          description: <span data-ttu-id="76520-714">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-714">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-715">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-715">The callback</span></span>
      return:
        type:
          - Promise<Models.GetBackupsFromBackupLocationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos'
    name: getChaos(Models.ServiceFabricClientGetChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-716">Получить состояние службы Chaos, указывающее, работает Chaos или нет, параметры Chaos, используемые для запуска службы Chaos, и состояние расписания Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-716">Get the status of Chaos indicating whether or not Chaos is running, the Chaos parameters used for running Chaos and the status of the Chaos Schedule.</span></span>'
    syntax:
      content: 'function getChaos(options?: Models.ServiceFabricClientGetChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_1'
    name: getChaos(ServiceCallback<Chaos>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(callback: ServiceCallback<Chaos>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            <span data-ttu-id="76520-717">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-717">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaos_2'
    name: 'getChaos(ServiceFabricClientGetChaosOptionalParams, ServiceCallback<Chaos>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaos(options: ServiceFabricClientGetChaosOptionalParams, callback: ServiceCallback<Chaos>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
          description: <span data-ttu-id="76520-718">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-718">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.Chaos>
          description: |
            <span data-ttu-id="76520-719">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-719">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents'
    name: getChaosEvents(Models.ServiceFabricClientGetChaosEventsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-720">Для получения следующего сегмента событий службы Chaos можно указать маркер продолжения.</span><span class="sxs-lookup"><span data-stu-id="76520-720">To get the next segment of the Chaos events, you can specify the ContinuationToken.</span></span> <span data-ttu-id="76520-721">Чтобы получить начало нового сегмента событий службы Chaos, можно указать в системе UTC время начала и окончания диапазона времени.</span><span class="sxs-lookup"><span data-stu-id="76520-721">To get the start of a new segment of Chaos events, you can specify the time range through StartTimeUtc and EndTimeUtc.</span></span> <span data-ttu-id="76520-722">В одном и том же вызове запрещено одновременно указывать маркер продолжения и диапазон времени.</span><span class="sxs-lookup"><span data-stu-id="76520-722">You cannot specify both the ContinuationToken and the time range in the same call.</span></span>
      <span data-ttu-id="76520-723">Когда в службе Chaos происходит более 100 событий, то события Chaos возвращаются несколькими сегментами. Каждый сегмент содержит не более 100 событий Chaos. Для получения следующего сегмента делается вызов этого API с помощью токена продолжения.</span><span class="sxs-lookup"><span data-stu-id="76520-723">When there are more than 100 Chaos events, the Chaos events are returned in multiple segments where a segment contains no more than 100 Chaos events and to get the next segment you make a call to this API with the continuation token.</span></span>
    syntax:
      content: 'function getChaosEvents(options?: Models.ServiceFabricClientGetChaosEventsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosEventsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_1'
    name: getChaosEvents(ServiceCallback<ChaosEventsSegment>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            <span data-ttu-id="76520-724">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-724">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosEvents_2'
    name: 'getChaosEvents(ServiceFabricClientGetChaosEventsOptionalParams, ServiceCallback<ChaosEventsSegment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosEvents(options: ServiceFabricClientGetChaosEventsOptionalParams, callback: ServiceCallback<ChaosEventsSegment>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
          description: <span data-ttu-id="76520-725">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-725">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
          description: |
            <span data-ttu-id="76520-726">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-726">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosEventsResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule'
    name: getChaosSchedule(Models.ServiceFabricClientGetChaosScheduleOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-727">Получение версии используемого расписания Chaos, и расписания Chaos, которое определяет, когда и как запускать Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-727">Gets the version of the Chaos Schedule in use and the Chaos Schedule that defines when and how to run Chaos.</span></span>'
    syntax:
      content: 'function getChaosSchedule(options?: Models.ServiceFabricClientGetChaosScheduleOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_1'
    name: getChaosSchedule(ServiceCallback<ChaosScheduleDescription>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            <span data-ttu-id="76520-728">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-728">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getChaosSchedule_2'
    name: 'getChaosSchedule(ServiceFabricClientGetChaosScheduleOptionalParams, ServiceCallback<ChaosScheduleDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChaosSchedule(options: ServiceFabricClientGetChaosScheduleOptionalParams, callback: ServiceCallback<ChaosScheduleDescription>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
          description: <span data-ttu-id="76520-729">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-729">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
          description: |
            <span data-ttu-id="76520-730">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-730">The callback</span></span>
      return:
        type:
          - Promise<Models.GetChaosScheduleResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration'
    name: 'getClusterConfiguration(string, Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-731">Конфигурация кластера содержит свойства кластера, которые включают в себя различные типы узлов в кластере, конфигурацию безопасности, топологии доменов сбоя и доменов обновления и т. д.</span><span class="sxs-lookup"><span data-stu-id="76520-731">The cluster configuration contains properties of the cluster that include different node types on the cluster, security configurations, fault, and upgrade domain topologies, etc.</span></span>'
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options?: Models.ServiceFabricClientGetClusterConfigurationOptionalParams)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="76520-732">Версия API конфигурации json автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-732">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_1'
    name: 'getClusterConfiguration(string, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="76520-733">Версия API конфигурации json автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-733">The API version of the Standalone cluster json configuration.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            <span data-ttu-id="76520-734">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-734">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfiguration_2'
    name: 'getClusterConfiguration(string, ServiceFabricClientGetClusterConfigurationOptionalParams, ServiceCallback<ClusterConfiguration>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfiguration(configurationApiVersion: string, options: ServiceFabricClientGetClusterConfigurationOptionalParams, callback: ServiceCallback<ClusterConfiguration>)'
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: <span data-ttu-id="76520-735">Версия API конфигурации json автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-735">The API version of the Standalone cluster json configuration.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
          description: <span data-ttu-id="76520-736">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-736">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfiguration>
          description: |
            <span data-ttu-id="76520-737">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-737">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus'
    name: getClusterConfigurationUpgradeStatus(Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-738">Получение подробностей состояния обновления конфигурации автономного кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-738">Get the cluster configuration upgrade status details of a Service Fabric standalone cluster.</span></span>
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options?: Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_1'
    name: getClusterConfigurationUpgradeStatus(ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            <span data-ttu-id="76520-739">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-739">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus_2'
    name: 'getClusterConfigurationUpgradeStatus(ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterConfigurationUpgradeStatus(options: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams, callback: ServiceCallback<ClusterConfigurationUpgradeStatusInfo>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
          description: <span data-ttu-id="76520-740">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-740">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
          description: |
            <span data-ttu-id="76520-741">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-741">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterConfigurationUpgradeStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList'
    name: 'getClusterEventList(string, string, Models.ServiceFabricClientGetClusterEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-742">Ответ является списком объектов ClusterEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-742">The response is list of ClusterEvent objects.</span></span>
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetClusterEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-743">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-743">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-744">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-744">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_1'
    name: 'getClusterEventList(string, string, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-745">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-745">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-746">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-746">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            <span data-ttu-id="76520-747">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-747">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterEventList_2'
    name: 'getClusterEventList(string, string, ServiceFabricClientGetClusterEventListOptionalParams, ServiceCallback<Models.ClusterEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetClusterEventListOptionalParams, callback: ServiceCallback<Models.ClusterEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-748">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-748">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-749">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-749">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
          description: <span data-ttu-id="76520-750">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-750">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ClusterEventUnion[]>'
          description: |
            <span data-ttu-id="76520-751">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-751">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth'
    name: getClusterHealth(Models.ServiceFabricClientGetClusterHealthOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-752">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности кластера на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-752">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="76520-753">Аналогично используются NodesHealthStateFilter и ApplicationsHealthStateFilter для фильтрации получаемой коллекции узлов и приложений на основе их общего состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-753">Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.</span></span>
    syntax:
      content: 'function getClusterHealth(options?: Models.ServiceFabricClientGetClusterHealthOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_1'
    name: getClusterHealth(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="76520-754">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-754">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealth_2'
    name: 'getClusterHealth(ServiceFabricClientGetClusterHealthOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealth(options: ServiceFabricClientGetClusterHealthOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
          description: <span data-ttu-id="76520-755">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-755">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="76520-756">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-756">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk'
    name: getClusterHealthChunk(Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-757">Возвращает сведения о работоспособности кластера Service Fabric с помощью блоков работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-757">Gets the health of a Service Fabric cluster using health chunks.</span></span> <span data-ttu-id="76520-758">Включает общего состояния работоспособности кластера, но ни одна из сущностей кластеров.</span><span class="sxs-lookup"><span data-stu-id="76520-758">Includes the aggregated health state of the cluster, but none of the cluster entities.</span></span>
      <span data-ttu-id="76520-759">Чтобы развернуть работоспособность кластера и получить сведения о состоянии работоспособности всех или некоторых сущностей, используйте POST URI и укажите описания запроса фрагмента данных о работоспособности кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-759">To expand the cluster health and get the health state of all or some of the entities, use the POST URI and specify the cluster health chunk query description.</span></span>
    syntax:
      content: 'function getClusterHealthChunk(options?: Models.ServiceFabricClientGetClusterHealthChunkOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_1'
    name: getClusterHealthChunk(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="76520-760">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-760">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunk_2'
    name: 'getClusterHealthChunk(ServiceFabricClientGetClusterHealthChunkOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunk(options: ServiceFabricClientGetClusterHealthChunkOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
          description: <span data-ttu-id="76520-761">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-761">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="76520-762">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-762">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-763">Возвращает сведения о работоспособности кластера Service Fabric с помощью блоков работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-763">Gets the health of a Service Fabric cluster using health chunks.</span></span> <span data-ttu-id="76520-764">Оценка работоспособности выполняется по отдельным описания запроса фрагмента данных о работоспособности ввода кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-764">The health evaluation is done based on the input cluster health chunk query description.</span></span>
      <span data-ttu-id="76520-765">Описание запроса позволяет пользователям указать политики работоспособности для оценки кластера и его дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="76520-765">The query description allows users to specify health policies for evaluating the cluster and its children.</span></span>
      <span data-ttu-id="76520-766">Пользователи могут указать очень гибкие фильтры для выбора какие сущности кластера должны быть возвращены.</span><span class="sxs-lookup"><span data-stu-id="76520-766">Users can specify very flexible filters to select which cluster entities to return.</span></span> <span data-ttu-id="76520-767">Выбор можно по отдельным на состояние работоспособности сущностей и основанные на иерархии.</span><span class="sxs-lookup"><span data-stu-id="76520-767">The selection can be done based on the entities health state and based on the hierarchy.</span></span>
      <span data-ttu-id="76520-768">Запрос может возвратить многоуровневого дочерних элементов сущностей, в зависимости от заданных фильтров.</span><span class="sxs-lookup"><span data-stu-id="76520-768">The query can return multi-level children of the entities based on the specified filters.</span></span> <span data-ttu-id="76520-769">Например его можно возвращать одно приложение с указанным именем, а также для этого приложения, возвращают только те службы, которые находятся в ошибку или предупреждение и все разделы и реплики для одной из этих служб.</span><span class="sxs-lookup"><span data-stu-id="76520-769">For example, it can return one application with a specified name, and for this application, return only services that are in Error or Warning, and all partitions and replicas for one of these services.</span></span>
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options?: Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_1'
    name: getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceCallback<ClusterHealthChunk>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="76520-770">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-770">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters_2'
    name: 'getClusterHealthChunkUsingPolicyAndAdvancedFilters(ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, ServiceCallback<ClusterHealthChunk>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams, callback: ServiceCallback<ClusterHealthChunk>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
          description: <span data-ttu-id="76520-771">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-771">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
          description: |
            <span data-ttu-id="76520-772">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-772">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthChunkUsingPolicyAndAdvancedFiltersResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy'
    name: getClusterHealthUsingPolicy(Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-773">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности кластера на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-773">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="76520-774">Аналогично используются NodesHealthStateFilter и ApplicationsHealthStateFilter для фильтрации получаемой коллекции узлов и приложений на основе их общего состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-774">Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter the collection of nodes and applications returned based on their aggregated health state.</span></span>
      <span data-ttu-id="76520-775">Используйте ClusterHealthPolicies для переопределения политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-775">Use ClusterHealthPolicies to override the health policies used to evaluate the health.</span></span>
    syntax:
      content: 'function getClusterHealthUsingPolicy(options?: Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_1'
    name: getClusterHealthUsingPolicy(ServiceCallback<ClusterHealth>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="76520-776">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-776">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy_2'
    name: 'getClusterHealthUsingPolicy(ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, ServiceCallback<ClusterHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterHealthUsingPolicy(options: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams, callback: ServiceCallback<ClusterHealth>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-777">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-777">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterHealth>
          description: |
            <span data-ttu-id="76520-778">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-778">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest'
    name: getClusterManifest(Models.ServiceFabricClientGetClusterManifestOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-779">Возвращает манифест кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-779">Get the Service Fabric cluster manifest.</span></span> <span data-ttu-id="76520-780">Манифест кластера содержит свойства кластера, которые включают в себя различные типы узлов в кластере, конфигурацию безопасности, топологии доменов сбоя и доменов обновления и т. д. Эти свойства определяются в файле ClusterConfig.JSON при развертывании изолированного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-780">The cluster manifest contains properties of the cluster that include different node types on the cluster, security configurations, fault, and upgrade domain topologies, etc. These properties are specified as part of the ClusterConfig.JSON file while deploying a stand-alone cluster.</span></span> <span data-ttu-id="76520-781">Однако большая часть информации в манифесте кластера создается внутренними процессами Service Fabric во время развертывания кластера в других сценариях развертывания (например, при использовании портала Azure).</span><span class="sxs-lookup"><span data-stu-id="76520-781">However, most of the information in the cluster manifest is generated internally by service fabric during cluster deployment in other deployment scenarios (e.g. when using Azure portal).</span></span>

      <span data-ttu-id="76520-782">Содержимое манифеста кластера является исключительно информационным, и пользователи не должны устанавливать зависимости от формата содержимого этого файла или его интерпретации.</span><span class="sxs-lookup"><span data-stu-id="76520-782">The contents of the cluster manifest are for informational purposes only and users are not expected to take a dependency on the format of the file contents or its interpretation.</span></span>
    syntax:
      content: 'function getClusterManifest(options?: Models.ServiceFabricClientGetClusterManifestOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_1'
    name: getClusterManifest(ServiceCallback<ClusterManifest>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            <span data-ttu-id="76520-783">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-783">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterManifest_2'
    name: 'getClusterManifest(ServiceFabricClientGetClusterManifestOptionalParams, ServiceCallback<ClusterManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterManifest(options: ServiceFabricClientGetClusterManifestOptionalParams, callback: ServiceCallback<ClusterManifest>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
          description: <span data-ttu-id="76520-784">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-784">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterManifest>
          description: |
            <span data-ttu-id="76520-785">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-785">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress'
    name: getClusterUpgradeProgress(Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-786">Возвращает текущий ход выполнения текущего обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-786">Gets the current progress of the ongoing cluster upgrade.</span></span> <span data-ttu-id="76520-787">Если обновление не выполняется, вы получите последнее состояние предыдущего обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-787">If no upgrade is currently in progress, get the last state of the previous cluster upgrade.</span></span>'
    syntax:
      content: 'function getClusterUpgradeProgress(options?: Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_1'
    name: getClusterUpgradeProgress(ServiceCallback<ClusterUpgradeProgressObject>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            <span data-ttu-id="76520-788">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-788">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterUpgradeProgress_2'
    name: 'getClusterUpgradeProgress(ServiceFabricClientGetClusterUpgradeProgressOptionalParams, ServiceCallback<ClusterUpgradeProgressObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterUpgradeProgress(options: ServiceFabricClientGetClusterUpgradeProgressOptionalParams, callback: ServiceCallback<ClusterUpgradeProgressObject>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
          description: <span data-ttu-id="76520-789">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-789">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
          description: |
            <span data-ttu-id="76520-790">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-790">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion'
    name: getClusterVersion(Models.ServiceFabricClientGetClusterVersionOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-791">Если происходит обновление кластера, этот API вернет самую раннюю версию (более старая) текущего и предназначенные для версий среды выполнения кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-791">If a cluster upgrade is happening, then this API will return the lowest (older) version of the current and target cluster runtime versions.</span></span>'
    syntax:
      content: 'function getClusterVersion(options?: Models.ServiceFabricClientGetClusterVersionOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetClusterVersionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_1'
    name: getClusterVersion(ServiceCallback<ClusterVersion>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            <span data-ttu-id="76520-792">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-792">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getClusterVersion_2'
    name: 'getClusterVersion(ServiceFabricClientGetClusterVersionOptionalParams, ServiceCallback<ClusterVersion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClusterVersion(options: ServiceFabricClientGetClusterVersionOptionalParams, callback: ServiceCallback<ClusterVersion>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
          description: <span data-ttu-id="76520-793">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-793">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ClusterVersion>
          description: |
            <span data-ttu-id="76520-794">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-794">The callback</span></span>
      return:
        type:
          - Promise<Models.GetClusterVersionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus'
    name: 'getComposeDeploymentStatus(string, Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-795">Возвращает состояние развертывания Compose, которое создано или находится в процессе создания в кластере Service Fabric и имя которого совпадает со значением, указанным в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="76520-795">Returns the status of the compose deployment that was created or in the process of being created in the Service Fabric cluster and whose name matches the one specified as the parameter.</span></span> <span data-ttu-id="76520-796">Ответ содержит имя, состояние и другие сведения о развертывании.</span><span class="sxs-lookup"><span data-stu-id="76520-796">The response includes the name, status, and other details about the deployment.</span></span>'
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-797">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-797">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_1'
    name: 'getComposeDeploymentStatus(string, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-798">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-798">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            <span data-ttu-id="76520-799">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-799">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatus_2'
    name: 'getComposeDeploymentStatus(string, ServiceFabricClientGetComposeDeploymentStatusOptionalParams, ServiceCallback<ComposeDeploymentStatusInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatus(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentStatusOptionalParams, callback: ServiceCallback<ComposeDeploymentStatusInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-800">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-800">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
          description: <span data-ttu-id="76520-801">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-801">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
          description: |
            <span data-ttu-id="76520-802">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-802">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList'
    name: getComposeDeploymentStatusList(Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-803">Возвращает состояние развертываний Compose, которые были созданы или в процессе создания в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-803">Gets the status about the compose deployments that were created or in the process of being created in the Service Fabric cluster.</span></span> <span data-ttu-id="76520-804">Ответ содержит имя, состояние и другие сведения о развертывании Compose.</span><span class="sxs-lookup"><span data-stu-id="76520-804">The response includes the name, status, and other details about the compose deployments.</span></span> <span data-ttu-id="76520-805">Если список развертываний не помещается на странице, возвращается одна страница результатов и маркер продолжения, который можно использовать для получения следующей страницы.</span><span class="sxs-lookup"><span data-stu-id="76520-805">If the list of deployments do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span>'
    syntax:
      content: 'function getComposeDeploymentStatusList(options?: Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_1'
    name: getComposeDeploymentStatusList(ServiceCallback<PagedComposeDeploymentStatusInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            <span data-ttu-id="76520-806">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-806">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentStatusList_2'
    name: 'getComposeDeploymentStatusList(ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentStatusList(options: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams, callback: ServiceCallback<PagedComposeDeploymentStatusInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
          description: <span data-ttu-id="76520-807">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-807">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
          description: |
            <span data-ttu-id="76520-808">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-808">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentStatusListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress'
    name: 'getComposeDeploymentUpgradeProgress(string, Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-809">Возвращает сведения о состоянии обновления развертывания сборки, а также сведения для упрощения отладки приложений неисправности.</span><span class="sxs-lookup"><span data-stu-id="76520-809">Returns the information about the state of the compose deployment upgrade along with details to aid debugging application health issues.</span></span>'
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options?: Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-810">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-810">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_1'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-811">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-811">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            <span data-ttu-id="76520-812">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-812">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress_2'
    name: 'getComposeDeploymentUpgradeProgress(string, ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getComposeDeploymentUpgradeProgress(deploymentName: string, options: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams, callback: ServiceCallback<ComposeDeploymentUpgradeProgressInfo>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-813">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-813">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
          description: <span data-ttu-id="76520-814">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-814">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
          description: |
            <span data-ttu-id="76520-815">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-815">The callback</span></span>
      return:
        type:
          - Promise<Models.GetComposeDeploymentUpgradeProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-816">Возвращает журналы контейнера, развернутого на узле Service Fabric для указанного пакета кода.</span><span class="sxs-lookup"><span data-stu-id="76520-816">Gets the container logs for container deployed on a Service Fabric node for the given code package.</span></span>'
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options?: Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-817">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-817">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-818">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-818">The identity of the application.</span></span> <span data-ttu-id="76520-819">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-819">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-820">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-820">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-821">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-821">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-822">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-822">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-823">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-823">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_1'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-824">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-824">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-825">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-825">The identity of the application.</span></span> <span data-ttu-id="76520-826">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-826">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-827">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-827">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-828">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-828">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-829">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-829">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-830">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-830">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            <span data-ttu-id="76520-831">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-831">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainerLogsDeployedOnNode_2'
    name: 'getContainerLogsDeployedOnNode(string, string, string, string, ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, ServiceCallback<ContainerLogs>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainerLogsDeployedOnNode(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, options: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams, callback: ServiceCallback<ContainerLogs>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-832">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-832">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-833">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-833">The identity of the application.</span></span> <span data-ttu-id="76520-834">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-834">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-835">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-835">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-836">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-836">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-837">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-837">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-838">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-838">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
          description: <span data-ttu-id="76520-839">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-839">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerLogs>
          description: |
            <span data-ttu-id="76520-840">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-840">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainerLogsDeployedOnNodeResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList'
    name: 'getContainersEventList(string, string, Models.ServiceFabricClientGetContainersEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-841">Ответ является списком объектов ContainerInstanceEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-841">The response is list of ContainerInstanceEvent objects.</span></span>
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetContainersEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-842">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-842">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-843">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-843">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetContainersEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_1'
    name: 'getContainersEventList(string, string, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-844">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-844">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-845">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-845">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            <span data-ttu-id="76520-846">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-846">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getContainersEventList_2'
    name: 'getContainersEventList(string, string, ServiceFabricClientGetContainersEventListOptionalParams, ServiceCallback<ContainerInstanceEvent[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getContainersEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetContainersEventListOptionalParams, callback: ServiceCallback<ContainerInstanceEvent[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-847">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-847">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-848">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-848">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
          description: <span data-ttu-id="76520-849">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-849">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
          description: |
            <span data-ttu-id="76520-850">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-850">The callback</span></span>
      return:
        type:
          - Promise<Models.GetContainersEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList'
    name: 'getCorrelatedEventList(string, Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-851">Ответ является списком FabricEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-851">The response is list of FabricEvents.</span></span>
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options?: Models.ServiceFabricClientGetCorrelatedEventListOptionalParams)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-852">EventInstanceId.</span><span class="sxs-lookup"><span data-stu-id="76520-852">The EventInstanceId.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetCorrelatedEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_1'
    name: 'getCorrelatedEventList(string, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-853">EventInstanceId.</span><span class="sxs-lookup"><span data-stu-id="76520-853">The EventInstanceId.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            <span data-ttu-id="76520-854">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-854">The callback</span></span>
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getCorrelatedEventList_2'
    name: 'getCorrelatedEventList(string, ServiceFabricClientGetCorrelatedEventListOptionalParams, ServiceCallback<Models.FabricEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCorrelatedEventList(eventInstanceId: string, options: ServiceFabricClientGetCorrelatedEventListOptionalParams, callback: ServiceCallback<Models.FabricEventUnion[]>)'
      parameters:
        - id: eventInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-855">EventInstanceId.</span><span class="sxs-lookup"><span data-stu-id="76520-855">The EventInstanceId.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
          description: <span data-ttu-id="76520-856">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-856">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.FabricEventUnion[]>'
          description: |
            <span data-ttu-id="76520-857">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-857">The callback</span></span>
      return:
        type:
          - Promise<Models.GetCorrelatedEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress'
    name: 'getDataLossProgress(string, string, string, Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-858">Возвращает сведения о ходе выполнения операции с потерей данных, запущенной с помощью StartDataLoss, с использованием OperationId.</span><span class="sxs-lookup"><span data-stu-id="76520-858">Gets the progress of a data loss operation started with StartDataLoss, using the OperationId.</span></span>'
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetDataLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-859">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-859">The identity of the service.</span></span> <span data-ttu-id="76520-860">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-860">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-861">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-861">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-862">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-862">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-863">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-863">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-864">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-864">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-865">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-865">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetDataLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_1'
    name: 'getDataLossProgress(string, string, string, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-866">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-866">The identity of the service.</span></span> <span data-ttu-id="76520-867">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-867">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-868">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-868">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-869">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-869">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-870">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-870">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-871">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-871">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-872">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-872">This is passed into the corresponding GetProgress API</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            <span data-ttu-id="76520-873">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-873">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDataLossProgress_2'
    name: 'getDataLossProgress(string, string, string, ServiceFabricClientGetDataLossProgressOptionalParams, ServiceCallback<PartitionDataLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDataLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetDataLossProgressOptionalParams, callback: ServiceCallback<PartitionDataLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-874">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-874">The identity of the service.</span></span> <span data-ttu-id="76520-875">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-875">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-876">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-876">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-877">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-877">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-878">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-878">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-879">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-879">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-880">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-880">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
          description: <span data-ttu-id="76520-881">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-881">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
          description: |
            <span data-ttu-id="76520-882">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-882">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDataLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth'
    name: 'getDeployedApplicationHealth(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-883">Возвращает сведения о работоспособности приложения, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-883">Gets the information about health of an application deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-884">Используйте EventsHealthStateFilter, чтобы отфильтровать коллекцию объектов HealthEvent, включенных в развернутое приложение, по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-884">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state.</span></span> <span data-ttu-id="76520-885">Используйте DeployedServicePackagesHealthStateFilter, чтобы отфильтровать дочерние элементы DeployedServicePackageHealth по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-885">Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state.</span></span>'
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-886">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-886">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-887">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-887">The identity of the application.</span></span> <span data-ttu-id="76520-888">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-888">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-889">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-889">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-890">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-890">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_1'
    name: 'getDeployedApplicationHealth(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-891">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-891">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-892">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-892">The identity of the application.</span></span> <span data-ttu-id="76520-893">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-893">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-894">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-894">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-895">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-895">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="76520-896">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-896">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealth_2'
    name: 'getDeployedApplicationHealth(string, string, ServiceFabricClientGetDeployedApplicationHealthOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealth(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-897">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-897">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-898">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-898">The identity of the application.</span></span> <span data-ttu-id="76520-899">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-899">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-900">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-900">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-901">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-901">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
          description: <span data-ttu-id="76520-902">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-902">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="76520-903">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-903">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-904">Возвращает сведения о работоспособности приложения, развернутого на узле Service Fabric, используя указанную политику.</span><span class="sxs-lookup"><span data-stu-id="76520-904">Gets the information about health of an application deployed on a Service Fabric node using the specified policy.</span></span> <span data-ttu-id="76520-905">Используйте EventsHealthStateFilter, чтобы отфильтровать коллекцию объектов HealthEvent, включенных в развернутое приложение, по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-905">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed application based on health state.</span></span> <span data-ttu-id="76520-906">Используйте DeployedServicePackagesHealthStateFilter, чтобы отфильтровать дочерние элементы DeployedServicePackageHealth по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-906">Use DeployedServicePackagesHealthStateFilter to optionally filter for DeployedServicePackageHealth children based on health state.</span></span> <span data-ttu-id="76520-907">Используйте ApplicationHealthPolicy, чтобы при необходимости переопределить политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-907">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="76520-908">Этот API использует только поле «ConsiderWarningAsError» ApplicationHealthPolicy.</span><span class="sxs-lookup"><span data-stu-id="76520-908">This API only uses ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="76520-909">Остальные поля учитываются при оценке работоспособности развернутого приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-909">The rest of the fields are ignored while evaluating the health of the deployed application.</span></span>'
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-910">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-910">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-911">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-911">The identity of the application.</span></span> <span data-ttu-id="76520-912">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-912">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-913">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-913">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-914">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-914">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_1'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-915">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-915">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-916">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-916">The identity of the application.</span></span> <span data-ttu-id="76520-917">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-917">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-918">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-918">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-919">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-919">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="76520-920">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-920">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy_2'
    name: 'getDeployedApplicationHealthUsingPolicy(string, string, ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, ServiceCallback<DeployedApplicationHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationHealthUsingPolicy(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedApplicationHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-921">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-921">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-922">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-922">The identity of the application.</span></span> <span data-ttu-id="76520-923">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-923">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-924">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-924">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-925">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-925">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-926">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-926">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
          description: |
            <span data-ttu-id="76520-927">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-927">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo'
    name: 'getDeployedApplicationInfo(string, string, Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-928">Если предоставленный идентификатор приложения предназначен для системного приложения, то этот запрос возвращает сведения о системном приложении.</span><span class="sxs-lookup"><span data-stu-id="76520-928">This query returns system application information if the application ID provided is for system application.</span></span> <span data-ttu-id="76520-929">Результаты охватывают развернутые приложения в активном состоянии, состоянии активации и загрузки.</span><span class="sxs-lookup"><span data-stu-id="76520-929">Results encompass deployed applications in active, activating, and downloading states.</span></span> <span data-ttu-id="76520-930">Для этого запроса необходимо, чтобы имя узла соответствовало имени узла в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-930">This query requires that the node name corresponds to a node on the cluster.</span></span> <span data-ttu-id="76520-931">Если имя указанного узла не указывает на любой из активных узлов Service Fabric в кластере, запрос завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="76520-931">The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.</span></span>'
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-932">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-932">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-933">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-933">The identity of the application.</span></span> <span data-ttu-id="76520-934">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-934">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-935">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-935">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-936">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-936">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_1'
    name: 'getDeployedApplicationInfo(string, string, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-937">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-937">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-938">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-938">The identity of the application.</span></span> <span data-ttu-id="76520-939">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-939">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-940">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-940">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-941">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-941">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            <span data-ttu-id="76520-942">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-942">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfo_2'
    name: 'getDeployedApplicationInfo(string, string, ServiceFabricClientGetDeployedApplicationInfoOptionalParams, ServiceCallback<DeployedApplicationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfo(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedApplicationInfoOptionalParams, callback: ServiceCallback<DeployedApplicationInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-943">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-943">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-944">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-944">The identity of the application.</span></span> <span data-ttu-id="76520-945">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-945">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-946">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-946">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-947">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-947">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
          description: <span data-ttu-id="76520-948">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-948">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
          description: |
            <span data-ttu-id="76520-949">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-949">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList'
    name: 'getDeployedApplicationInfoList(string, Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-950">Возвращает список приложений, развернутых на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-950">Gets the list of applications deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-951">Результаты не включают в себя сведения о развернутых системных приложениях, если только они не запрашиваются явным образом по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="76520-951">The results do not include information about deployed system applications unless explicitly queried for by ID.</span></span> <span data-ttu-id="76520-952">Результаты охватывают развернутые приложения в активном состоянии, состоянии активации и загрузки.</span><span class="sxs-lookup"><span data-stu-id="76520-952">Results encompass deployed applications in active, activating, and downloading states.</span></span> <span data-ttu-id="76520-953">Для этого запроса необходимо, чтобы имя узла соответствовало имени узла в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-953">This query requires that the node name corresponds to a node on the cluster.</span></span> <span data-ttu-id="76520-954">Если имя указанного узла не указывает на любой из активных узлов Service Fabric в кластере, запрос завершается ошибкой.</span><span class="sxs-lookup"><span data-stu-id="76520-954">The query fails if the provided node name does not point to any active Service Fabric nodes on the cluster.</span></span>'
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options?: Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-955">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-955">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_1'
    name: 'getDeployedApplicationInfoList(string, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-956">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-956">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            <span data-ttu-id="76520-957">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-957">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedApplicationInfoList_2'
    name: 'getDeployedApplicationInfoList(string, ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, ServiceCallback<PagedDeployedApplicationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedApplicationInfoList(nodeName: string, options: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams, callback: ServiceCallback<PagedDeployedApplicationInfoList>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-958">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-958">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
          description: <span data-ttu-id="76520-959">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-959">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
          description: |
            <span data-ttu-id="76520-960">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-960">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedApplicationInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList'
    name: 'getDeployedCodePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-961">Возвращает список пакетов кода, развернутых на узле Service Fabric для указанного приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-961">Gets the list of code packages deployed on a Service Fabric node for the given application.</span></span>'
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-962">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-962">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-963">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-963">The identity of the application.</span></span> <span data-ttu-id="76520-964">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-964">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-965">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-965">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-966">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-966">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_1'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-967">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-967">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-968">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-968">The identity of the application.</span></span> <span data-ttu-id="76520-969">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-969">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-970">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-970">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-971">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-971">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-972">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-972">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList_2'
    name: 'getDeployedCodePackageInfoList(string, string, ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, ServiceCallback<DeployedCodePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedCodePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams, callback: ServiceCallback<DeployedCodePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-973">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-973">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-974">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-974">The identity of the application.</span></span> <span data-ttu-id="76520-975">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-975">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-976">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-976">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-977">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-977">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
          description: <span data-ttu-id="76520-978">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-978">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-979">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-979">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedCodePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth'
    name: 'getDeployedServicePackageHealth(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-980">Возвращает сведения о работоспособности пакета службы для указанного приложения, развернутого в узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-980">Gets the information about health of a service package for a specific application deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-981">Используйте EventsHealthStateFilter, чтобы отфильтровать коллекцию объектов HealthEvent, включенных в развернутый пакет службы, по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-981">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state.</span></span>'
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-982">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-982">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-983">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-983">The identity of the application.</span></span> <span data-ttu-id="76520-984">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-984">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-985">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-985">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-986">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-986">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-987">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-987">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_1'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-988">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-988">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-989">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-989">The identity of the application.</span></span> <span data-ttu-id="76520-990">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-990">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-991">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-991">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-992">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-992">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-993">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-993">The name of the service package.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="76520-994">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-994">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealth_2'
    name: 'getDeployedServicePackageHealth(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-995">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-995">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-996">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-996">The identity of the application.</span></span> <span data-ttu-id="76520-997">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-997">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-998">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-998">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-999">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-999">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1000">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1000">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
          description: <span data-ttu-id="76520-1001">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1001">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="76520-1002">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1002">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1003">Возвращает сведения о работоспособности пакета службы для указанного приложения, развернутого в узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1003">Gets the information about health of a service package for a specific application deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-1004">с помощью указанной политики.</span><span class="sxs-lookup"><span data-stu-id="76520-1004">using the specified policy.</span></span> <span data-ttu-id="76520-1005">Используйте EventsHealthStateFilter, чтобы отфильтровать коллекцию объектов HealthEvent, включенных в развернутый пакет службы, по состоянию работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1005">Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent objects reported on the deployed service package based on health state.</span></span> <span data-ttu-id="76520-1006">Используйте ApplicationHealthPolicy, чтобы при необходимости переопределить политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1006">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="76520-1007">Этот API использует только поле «ConsiderWarningAsError» ApplicationHealthPolicy.</span><span class="sxs-lookup"><span data-stu-id="76520-1007">This API only uses ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="76520-1008">Остальные поля учитываются при оценке работоспособности развернутого пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1008">The rest of the fields are ignored while evaluating the health of the deployed service package.</span></span>'
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1009">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1009">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1010">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1010">The identity of the application.</span></span> <span data-ttu-id="76520-1011">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1011">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1012">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1012">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1013">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1013">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1014">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1014">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_1'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1015">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1015">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1016">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1016">The identity of the application.</span></span> <span data-ttu-id="76520-1017">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1017">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1018">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1018">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1019">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1019">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1020">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1020">The name of the service package.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="76520-1021">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1021">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy_2'
    name: 'getDeployedServicePackageHealthUsingPolicy(string, string, string, ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, ServiceCallback<DeployedServicePackageHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageHealthUsingPolicy(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams, callback: ServiceCallback<DeployedServicePackageHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1022">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1022">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1023">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1023">The identity of the application.</span></span> <span data-ttu-id="76520-1024">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1024">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1025">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1025">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1026">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1026">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1027">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1027">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-1028">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1028">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
          description: |
            <span data-ttu-id="76520-1029">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1029">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList'
    name: 'getDeployedServicePackageInfoList(string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1030">Возвращает информацию о пакетах кода, развернутых на узле Service Fabric для указанного приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1030">Returns the information about the service packages deployed on a Service Fabric node for the given application.</span></span>'
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1031">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1031">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1032">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1032">The identity of the application.</span></span> <span data-ttu-id="76520-1033">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1033">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1034">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1034">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1035">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1035">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_1'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1036">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1036">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1037">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1037">The identity of the application.</span></span> <span data-ttu-id="76520-1038">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1038">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1039">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1039">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1040">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1040">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-1041">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1041">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList_2'
    name: 'getDeployedServicePackageInfoList(string, string, ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1042">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1042">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1043">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1043">The identity of the application.</span></span> <span data-ttu-id="76520-1044">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1044">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1045">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1045">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1046">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1046">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
          description: <span data-ttu-id="76520-1047">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1047">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-1048">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1048">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1049">Возвращает информацию о пакетах кода, развернутых на узле Service Fabric для указанного приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1049">Returns the information about the service packages deployed on a Service Fabric node for the given application.</span></span> <span data-ttu-id="76520-1050">Эти результаты содержат пакеты службы, имена которых строго соответствуют указанному в параметре имени пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1050">These results are of service packages whose name match exactly the service package name specified as the parameter.</span></span>'
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options?: Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1051">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1051">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1052">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1052">The identity of the application.</span></span> <span data-ttu-id="76520-1053">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1053">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1054">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1054">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1055">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1055">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1056">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1056">The name of the service package.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_1'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1057">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1057">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1058">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1058">The identity of the application.</span></span> <span data-ttu-id="76520-1059">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1059">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1060">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1060">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1061">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1061">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1062">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1062">The name of the service package.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-1063">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1063">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName_2'
    name: 'getDeployedServicePackageInfoListByName(string, string, string, ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, ServiceCallback<DeployedServicePackageInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServicePackageInfoListByName(nodeName: string, applicationId: string, servicePackageName: string, options: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams, callback: ServiceCallback<DeployedServicePackageInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1064">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1064">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1065">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1065">The identity of the application.</span></span> <span data-ttu-id="76520-1066">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1066">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1067">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1067">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1068">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1068">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-1069">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1069">The name of the service package.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
          description: <span data-ttu-id="76520-1070">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1070">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
          description: |
            <span data-ttu-id="76520-1071">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1071">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServicePackageInfoListByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1072">Возвращает сведения о реплике, которая развернута на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1072">Gets the details of the replica deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-1073">Эти сведения включают в себя вид службы, имя службы, текущую операцию службы, время и дату начала текущей операции службы, идентификатор секции, идентификатор реплики или экземпляра, полученные сведения о нагрузке и другую информацию.</span><span class="sxs-lookup"><span data-stu-id="76520-1073">The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1074">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1074">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1075">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1075">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1076">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1076">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_1'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1077">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1077">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1078">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1078">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1079">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1079">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="76520-1080">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1080">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo_2'
    name: 'getDeployedServiceReplicaDetailInfo(string, string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfo(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1081">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1081">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1082">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1082">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1083">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1083">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
          description: <span data-ttu-id="76520-1084">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1084">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="76520-1085">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1085">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1086">Возвращает сведения о реплике, которая развернута на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1086">Gets the details of the replica deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-1087">Эти сведения включают в себя вид службы, имя службы, текущую операцию службы, время и дату начала текущей операции службы, идентификатор секции, идентификатор реплики или экземпляра, полученные сведения о нагрузке и другую информацию.</span><span class="sxs-lookup"><span data-stu-id="76520-1087">The information includes service kind, service name, current service operation, current service operation start date time, partition ID, replica/instance ID, reported load, and other information.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1088">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1088">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1089">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1089">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_1'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1090">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1090">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1091">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1091">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="76520-1092">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1092">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId_2'
    name: 'getDeployedServiceReplicaDetailInfoByPartitionId(string, string, ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName: string, partitionId: string, options: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1093">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1093">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1094">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1094">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
          description: <span data-ttu-id="76520-1095">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1095">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.DeployedServiceReplicaDetailInfoUnion>
          description: |
            <span data-ttu-id="76520-1096">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1096">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaDetailInfoByPartitionIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList'
    name: 'getDeployedServiceReplicaInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1097">Получает список, содержащий информацию о репликах, развернутых на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1097">Gets the list containing the information about replicas deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-1098">Информация включает в себя идентификатор раздела, идентификатор реплики, состояние реплики, имя службы, имя типа службы и другую информацию.</span><span class="sxs-lookup"><span data-stu-id="76520-1098">The information include partition ID, replica ID, status of the replica, name of the service, name of the service type, and other information.</span></span> <span data-ttu-id="76520-1099">Используйте параметры запроса PartitionId или ServiceManifestName для возврата информации о развернутых репликах, соответствующих указанным значениям для этих параметров.</span><span class="sxs-lookup"><span data-stu-id="76520-1099">Use PartitionId or ServiceManifestName query parameters to return information about the deployed replicas matching the specified values for those parameters.</span></span>'
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1100">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1100">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1101">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1101">The identity of the application.</span></span> <span data-ttu-id="76520-1102">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1102">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1103">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1103">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1104">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1104">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_1'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1105">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1105">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1106">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1106">The identity of the application.</span></span> <span data-ttu-id="76520-1107">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1107">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1108">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1108">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1109">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1109">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            <span data-ttu-id="76520-1110">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1110">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList_2'
    name: 'getDeployedServiceReplicaInfoList(string, string, ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceReplicaInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams, callback: ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1111">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1111">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1112">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1112">The identity of the application.</span></span> <span data-ttu-id="76520-1113">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1113">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1114">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1114">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1115">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1115">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
          description: <span data-ttu-id="76520-1116">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1116">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.DeployedServiceReplicaInfoUnion[]>'
          description: |
            <span data-ttu-id="76520-1117">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1117">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1118">Возвращает список, содержащий сведения об указанном типе служб из приложений, развернутых на узле в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1118">Gets the list containing the information about a specific service type from the applications deployed on a node in a Service Fabric cluster.</span></span> <span data-ttu-id="76520-1119">Ответ включает имя типа службы, его состояние регистрации, пакет кода, который его зарегистрировал и идентификатор активации пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1119">The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package.</span></span> <span data-ttu-id="76520-1120">Каждая запись представляет одну активацию для типа службы с уникальным идентификатором активации.</span><span class="sxs-lookup"><span data-stu-id="76520-1120">Each entry represents one activation of a service type, differentiated by the activation ID.</span></span>'
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1121">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1121">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1122">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1122">The identity of the application.</span></span> <span data-ttu-id="76520-1123">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1123">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1124">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1124">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1125">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1125">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1126">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1126">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_1'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1127">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1127">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1128">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1128">The identity of the application.</span></span> <span data-ttu-id="76520-1129">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1129">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1130">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1130">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1131">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1131">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1132">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1132">Specifies the name of a Service Fabric service type.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1133">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName_2'
    name: 'getDeployedServiceTypeInfoByName(string, string, string, ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoByName(nodeName: string, applicationId: string, serviceTypeName: string, options: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1134">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1134">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1135">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1135">The identity of the application.</span></span> <span data-ttu-id="76520-1136">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1136">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1137">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1137">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1138">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1138">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1139">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1139">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
          description: <span data-ttu-id="76520-1140">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1140">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1141">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1141">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList'
    name: 'getDeployedServiceTypeInfoList(string, string, Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1142">Возвращает список, содержащий сведения о типах служб из приложений, развернутых на узле в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1142">Gets the list containing the information about service types from the applications deployed on a node in a Service Fabric cluster.</span></span> <span data-ttu-id="76520-1143">Ответ включает имя типа службы, его состояние регистрации, пакет кода, который его зарегистрировал и идентификатор активации пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1143">The response includes the name of the service type, its registration status, the code package that registered it and activation ID of the service package.</span></span>'
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options?: Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1144">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1144">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1145">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1145">The identity of the application.</span></span> <span data-ttu-id="76520-1146">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1146">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1147">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1147">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1148">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1148">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_1'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1149">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1149">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1150">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1150">The identity of the application.</span></span> <span data-ttu-id="76520-1151">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1151">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1152">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1152">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1153">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1153">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1154">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1154">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList_2'
    name: 'getDeployedServiceTypeInfoList(string, string, ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, ServiceCallback<DeployedServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeployedServiceTypeInfoList(nodeName: string, applicationId: string, options: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams, callback: ServiceCallback<DeployedServiceTypeInfo[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1155">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1155">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1156">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1156">The identity of the application.</span></span> <span data-ttu-id="76520-1157">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1157">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1158">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1158">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1159">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1159">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
          description: <span data-ttu-id="76520-1160">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1160">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1161">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1161">The callback</span></span>
      return:
        type:
          - Promise<Models.GetDeployedServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList'
    name: 'getFaultOperationList(number, number, Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1162">Возвращает список операций при ошибке, вызываемых пользователем, отфильтрованный по введенным параметрам.</span><span class="sxs-lookup"><span data-stu-id="76520-1162">Gets the list of user-induced fault operations filtered by provided input.</span></span>'
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options?: Models.ServiceFabricClientGetFaultOperationListOptionalParams)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1163">Используется для фильтрации по OperationType для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1163">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1164">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1164">65535 - select all</span></span>
            - <span data-ttu-id="76520-1165">1 - выберите PartitionDataLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1165">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="76520-1166">2 - выберите PartitionQuorumLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1166">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="76520-1167">4 - выберите partitionrestart, запущенной.</span><span class="sxs-lookup"><span data-stu-id="76520-1167">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="76520-1168">8 - выберите NodeTransition.</span><span class="sxs-lookup"><span data-stu-id="76520-1168">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1169">Используется для фильтрации по OperationState для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1169">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1170">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1170">65535 - select All</span></span>
            - <span data-ttu-id="76520-1171">1 — выбрать Running</span><span class="sxs-lookup"><span data-stu-id="76520-1171">1 - select Running</span></span>
            - <span data-ttu-id="76520-1172">2 - выберите откат</span><span class="sxs-lookup"><span data-stu-id="76520-1172">2 - select RollingBack</span></span>
            - <span data-ttu-id="76520-1173">8 - выберите завершено</span><span class="sxs-lookup"><span data-stu-id="76520-1173">8 - select Completed</span></span>
            - <span data-ttu-id="76520-1174">16 - выберите Faulted</span><span class="sxs-lookup"><span data-stu-id="76520-1174">16 - select Faulted</span></span>
            - <span data-ttu-id="76520-1175">32 - выберите отменено</span><span class="sxs-lookup"><span data-stu-id="76520-1175">32 - select Cancelled</span></span>
            - <span data-ttu-id="76520-1176">64 - выберите ForceCancelled</span><span class="sxs-lookup"><span data-stu-id="76520-1176">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetFaultOperationListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_1'
    name: 'getFaultOperationList(number, number, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1177">Используется для фильтрации по OperationType для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1177">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1178">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1178">65535 - select all</span></span>
            - <span data-ttu-id="76520-1179">1 - выберите PartitionDataLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1179">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="76520-1180">2 - выберите PartitionQuorumLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1180">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="76520-1181">4 - выберите partitionrestart, запущенной.</span><span class="sxs-lookup"><span data-stu-id="76520-1181">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="76520-1182">8 - выберите NodeTransition.</span><span class="sxs-lookup"><span data-stu-id="76520-1182">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1183">Используется для фильтрации по OperationState для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1183">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1184">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1184">65535 - select All</span></span>
            - <span data-ttu-id="76520-1185">1 — выбрать Running</span><span class="sxs-lookup"><span data-stu-id="76520-1185">1 - select Running</span></span>
            - <span data-ttu-id="76520-1186">2 - выберите откат</span><span class="sxs-lookup"><span data-stu-id="76520-1186">2 - select RollingBack</span></span>
            - <span data-ttu-id="76520-1187">8 - выберите завершено</span><span class="sxs-lookup"><span data-stu-id="76520-1187">8 - select Completed</span></span>
            - <span data-ttu-id="76520-1188">16 - выберите Faulted</span><span class="sxs-lookup"><span data-stu-id="76520-1188">16 - select Faulted</span></span>
            - <span data-ttu-id="76520-1189">32 - выберите отменено</span><span class="sxs-lookup"><span data-stu-id="76520-1189">32 - select Cancelled</span></span>
            - <span data-ttu-id="76520-1190">64 - выберите ForceCancelled</span><span class="sxs-lookup"><span data-stu-id="76520-1190">64 - select ForceCancelled</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            <span data-ttu-id="76520-1191">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1191">The callback</span></span>
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getFaultOperationList_2'
    name: 'getFaultOperationList(number, number, ServiceFabricClientGetFaultOperationListOptionalParams, ServiceCallback<OperationStatus[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFaultOperationList(typeFilter: number, stateFilter: number, options: ServiceFabricClientGetFaultOperationListOptionalParams, callback: ServiceCallback<OperationStatus[]>)'
      parameters:
        - id: typeFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1192">Используется для фильтрации по OperationType для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1192">Used to filter on OperationType for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1193">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1193">65535 - select all</span></span>
            - <span data-ttu-id="76520-1194">1 - выберите PartitionDataLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1194">1 - select PartitionDataLoss.</span></span>
            - <span data-ttu-id="76520-1195">2 - выберите PartitionQuorumLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-1195">2 - select PartitionQuorumLoss.</span></span>
            - <span data-ttu-id="76520-1196">4 - выберите partitionrestart, запущенной.</span><span class="sxs-lookup"><span data-stu-id="76520-1196">4 - select PartitionRestart.</span></span>
            - <span data-ttu-id="76520-1197">8 - выберите NodeTransition.</span><span class="sxs-lookup"><span data-stu-id="76520-1197">8 - select NodeTransition.</span></span>
        - id: stateFilter
          type:
            - number
          description: |-
            <span data-ttu-id="76520-1198">Используется для фильтрации по OperationState для операций, вызываемых пользователем.</span><span class="sxs-lookup"><span data-stu-id="76520-1198">Used to filter on OperationState's for user-induced operations.</span></span>

            - <span data-ttu-id="76520-1199">65535 — выбрать All</span><span class="sxs-lookup"><span data-stu-id="76520-1199">65535 - select All</span></span>
            - <span data-ttu-id="76520-1200">1 — выбрать Running</span><span class="sxs-lookup"><span data-stu-id="76520-1200">1 - select Running</span></span>
            - <span data-ttu-id="76520-1201">2 - выберите откат</span><span class="sxs-lookup"><span data-stu-id="76520-1201">2 - select RollingBack</span></span>
            - <span data-ttu-id="76520-1202">8 - выберите завершено</span><span class="sxs-lookup"><span data-stu-id="76520-1202">8 - select Completed</span></span>
            - <span data-ttu-id="76520-1203">16 - выберите Faulted</span><span class="sxs-lookup"><span data-stu-id="76520-1203">16 - select Faulted</span></span>
            - <span data-ttu-id="76520-1204">32 - выберите отменено</span><span class="sxs-lookup"><span data-stu-id="76520-1204">32 - select Cancelled</span></span>
            - <span data-ttu-id="76520-1205">64 - выберите ForceCancelled</span><span class="sxs-lookup"><span data-stu-id="76520-1205">64 - select ForceCancelled</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
          description: <span data-ttu-id="76520-1206">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1206">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
          description: |
            <span data-ttu-id="76520-1207">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1207">The callback</span></span>
      return:
        type:
          - Promise<Models.GetFaultOperationListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent'
    name: 'getImageStoreContent(string, Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1208">Возвращает сведения о содержимом в указанном расположении хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-1208">Returns the information about the image store content at the specified contentPath.</span></span> <span data-ttu-id="76520-1209">Расположение указывается относительно корневой папки хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-1209">The contentPath is relative to the root of the image store.</span></span>
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreContentOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1210">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1210">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_1'
    name: 'getImageStoreContent(string, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1211">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1211">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="76520-1212">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1212">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreContent_2'
    name: 'getImageStoreContent(string, ServiceFabricClientGetImageStoreContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreContent(contentPath: string, options: ServiceFabricClientGetImageStoreContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1213">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1213">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
          description: <span data-ttu-id="76520-1214">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1214">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="76520-1215">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1215">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent'
    name: getImageStoreRootContent(Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1216">Возвращает сведения о содержимом в корневом расположении хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-1216">Returns the information about the image store content at the root of the image store.</span></span>
    syntax:
      content: 'function getImageStoreRootContent(options?: Models.ServiceFabricClientGetImageStoreRootContentOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreRootContentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_1'
    name: getImageStoreRootContent(ServiceCallback<ImageStoreContent>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="76520-1217">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1217">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreRootContent_2'
    name: 'getImageStoreRootContent(ServiceFabricClientGetImageStoreRootContentOptionalParams, ServiceCallback<ImageStoreContent>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreRootContent(options: ServiceFabricClientGetImageStoreRootContentOptionalParams, callback: ServiceCallback<ImageStoreContent>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
          description: <span data-ttu-id="76520-1218">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1218">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ImageStoreContent>
          description: |
            <span data-ttu-id="76520-1219">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1219">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreRootContentResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById'
    name: 'getImageStoreUploadSessionById(string, Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1220">Получает изображение сеанса передачи магазина, определяемый заданным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="76520-1220">Gets the image store upload session identified by the given ID.</span></span> <span data-ttu-id="76520-1221">Пользователь может запросить сеанса передачи в любое время, во время передачи данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1221">User can query the upload session at any time during uploading.</span></span>'
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-1222">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-1222">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-1223">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-1223">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_1'
    name: 'getImageStoreUploadSessionById(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-1224">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-1224">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-1225">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-1225">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="76520-1226">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1226">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionById_2'
    name: 'getImageStoreUploadSessionById(string, ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionById(sessionId: string, options: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-1227">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-1227">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-1228">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-1228">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
          description: <span data-ttu-id="76520-1229">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1229">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="76520-1230">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1230">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByIdResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath'
    name: 'getImageStoreUploadSessionByPath(string, Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1231">Получает изображение сеанса передачи хранилища, связанный с изображением относительного пути к хранилищу.</span><span class="sxs-lookup"><span data-stu-id="76520-1231">Gets the image store upload session associated with the given image store relative path.</span></span> <span data-ttu-id="76520-1232">Пользователь может запросить сеанса передачи в любое время, во время передачи данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1232">User can query the upload session at any time during uploading.</span></span>'
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options?: Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1233">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1233">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_1'
    name: 'getImageStoreUploadSessionByPath(string, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1234">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1234">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="76520-1235">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1235">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getImageStoreUploadSessionByPath_2'
    name: 'getImageStoreUploadSessionByPath(string, ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, ServiceCallback<UploadSession>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getImageStoreUploadSessionByPath(contentPath: string, options: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams, callback: ServiceCallback<UploadSession>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-1236">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-1236">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
          description: <span data-ttu-id="76520-1237">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1237">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UploadSession>
          description: |
            <span data-ttu-id="76520-1238">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1238">The callback</span></span>
      return:
        type:
          - Promise<Models.GetImageStoreUploadSessionByPathResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo'
    name: 'getNameExistsInfo(string, Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1239">Возвращает значение, указывающее, существует ли указанное имя Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1239">Returns whether the specified Service Fabric name exists.</span></span>'
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options?: Models.ServiceFabricClientGetNameExistsInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1240">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1240">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNameExistsInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_1'
    name: 'getNameExistsInfo(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1241">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1241">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1242">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1242">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNameExistsInfo_2'
    name: 'getNameExistsInfo(string, ServiceFabricClientGetNameExistsInfoOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNameExistsInfo(nameId: string, options: ServiceFabricClientGetNameExistsInfoOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1243">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1243">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
          description: <span data-ttu-id="76520-1244">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1244">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1245">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1245">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList'
    name: 'getNodeEventList(string, string, string, Models.ServiceFabricClientGetNodeEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1246">Ответ является списком объектов NodeEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1246">The response is list of NodeEvent objects.</span></span>
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodeEventListOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1247">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1247">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1248">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1248">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1249">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1249">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_1'
    name: 'getNodeEventList(string, string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1250">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1250">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1251">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1251">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1252">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1252">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1253">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1253">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeEventList_2'
    name: 'getNodeEventList(string, string, string, ServiceFabricClientGetNodeEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeEventList(nodeName: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodeEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1254">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1254">The name of the node.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1255">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1255">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1256">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1256">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
          description: <span data-ttu-id="76520-1257">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1257">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1258">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1258">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth'
    name: 'getNodeHealth(string, Models.ServiceFabricClientGetNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1259">Возвращает сведения о работоспособности узла Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1259">Gets the health of a Service Fabric node.</span></span> <span data-ttu-id="76520-1260">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности узла на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1260">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="76520-1261">Если узел с заданным именем не существует в хранилище данных о работоспособности, то возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="76520-1261">If the node that you specify by name does not exist in the health store, this returns an error.</span></span>'
    syntax:
      content: 'function getNodeHealth(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1262">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1262">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_1'
    name: 'getNodeHealth(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1263">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1263">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="76520-1264">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1264">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealth_2'
    name: 'getNodeHealth(string, ServiceFabricClientGetNodeHealthOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealth(nodeName: string, options: ServiceFabricClientGetNodeHealthOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1265">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1265">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
          description: <span data-ttu-id="76520-1266">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1266">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="76520-1267">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1267">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy'
    name: 'getNodeHealthUsingPolicy(string, Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1268">Возвращает сведения о работоспособности узла Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1268">Gets the health of a Service Fabric node.</span></span> <span data-ttu-id="76520-1269">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности узла на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1269">Use EventsHealthStateFilter to filter the collection of health events reported on the node based on the health state.</span></span> <span data-ttu-id="76520-1270">Используйте ClusterHealthPolicy в тело запроса POST для переопределения политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1270">Use ClusterHealthPolicy in the POST body to override the health policies used to evaluate the health.</span></span> <span data-ttu-id="76520-1271">Если узел с заданным именем не существует в хранилище данных о работоспособности, то возвращается ошибка.</span><span class="sxs-lookup"><span data-stu-id="76520-1271">If the node that you specify by name does not exist in the health store, this returns an error.</span></span>'
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options?: Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1272">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1272">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_1'
    name: 'getNodeHealthUsingPolicy(string, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1273">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1273">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="76520-1274">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1274">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy_2'
    name: 'getNodeHealthUsingPolicy(string, ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, ServiceCallback<NodeHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeHealthUsingPolicy(nodeName: string, options: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams, callback: ServiceCallback<NodeHealth>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1275">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1275">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-1276">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1276">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeHealth>
          description: |
            <span data-ttu-id="76520-1277">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1277">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo'
    name: 'getNodeInfo(string, Models.ServiceFabricClientGetNodeInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1278">Ответ содержит имя, состояние, идентификатор, данные о работоспособности, время доступности и другие сведения об узле.</span><span class="sxs-lookup"><span data-stu-id="76520-1278">The response includes the name, status, ID, health, uptime, and other details about the node.</span></span>'
    syntax:
      content: 'function getNodeInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1279">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1279">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_1'
    name: 'getNodeInfo(string, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1280">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1280">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            <span data-ttu-id="76520-1281">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1281">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfo_2'
    name: 'getNodeInfo(string, ServiceFabricClientGetNodeInfoOptionalParams, ServiceCallback<NodeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfo(nodeName: string, options: ServiceFabricClientGetNodeInfoOptionalParams, callback: ServiceCallback<NodeInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1282">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1282">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
          description: <span data-ttu-id="76520-1283">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1283">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeInfo>
          description: |
            <span data-ttu-id="76520-1284">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1284">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList'
    name: getNodeInfoList(Models.ServiceFabricClientGetNodeInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1285">Ответ содержит имя, состояние, идентификатор, данные о работоспособности, время доступности и другие сведения об узлах.</span><span class="sxs-lookup"><span data-stu-id="76520-1285">The response includes the name, status, ID, health, uptime, and other details about the nodes.</span></span>'
    syntax:
      content: 'function getNodeInfoList(options?: Models.ServiceFabricClientGetNodeInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_1'
    name: getNodeInfoList(ServiceCallback<PagedNodeInfoList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            <span data-ttu-id="76520-1286">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1286">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeInfoList_2'
    name: 'getNodeInfoList(ServiceFabricClientGetNodeInfoListOptionalParams, ServiceCallback<PagedNodeInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeInfoList(options: ServiceFabricClientGetNodeInfoListOptionalParams, callback: ServiceCallback<PagedNodeInfoList>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
          description: <span data-ttu-id="76520-1287">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1287">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
          description: |
            <span data-ttu-id="76520-1288">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1288">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo'
    name: 'getNodeLoadInfo(string, Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1289">Извлекает сведения о нагрузке узла Service Fabric для всех метрик с определениями нагрузки или емкости.</span><span class="sxs-lookup"><span data-stu-id="76520-1289">Retrieves the load information of a Service Fabric node for all the metrics that have load or capacity defined.</span></span>
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options?: Models.ServiceFabricClientGetNodeLoadInfoOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1290">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1290">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeLoadInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_1'
    name: 'getNodeLoadInfo(string, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1291">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1291">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            <span data-ttu-id="76520-1292">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1292">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeLoadInfo_2'
    name: 'getNodeLoadInfo(string, ServiceFabricClientGetNodeLoadInfoOptionalParams, ServiceCallback<NodeLoadInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeLoadInfo(nodeName: string, options: ServiceFabricClientGetNodeLoadInfoOptionalParams, callback: ServiceCallback<NodeLoadInfo>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1293">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1293">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
          description: <span data-ttu-id="76520-1294">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1294">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeLoadInfo>
          description: |
            <span data-ttu-id="76520-1295">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1295">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeLoadInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList'
    name: 'getNodesEventList(string, string, Models.ServiceFabricClientGetNodesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1296">Ответ является списком объектов NodeEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1296">The response is list of NodeEvent objects.</span></span>
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetNodesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1297">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1297">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1298">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1298">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_1'
    name: 'getNodesEventList(string, string, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1299">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1299">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1300">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1300">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1301">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1301">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodesEventList_2'
    name: 'getNodesEventList(string, string, ServiceFabricClientGetNodesEventListOptionalParams, ServiceCallback<Models.NodeEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetNodesEventListOptionalParams, callback: ServiceCallback<Models.NodeEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1302">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1302">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1303">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1303">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
          description: <span data-ttu-id="76520-1304">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1304">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.NodeEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1305">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1305">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress'
    name: 'getNodeTransitionProgress(string, string, Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1306">Возвращает сведения о ходе выполнения операции, запущенной с помощью StartNodeTransition, с использованием предоставленного OperationId.</span><span class="sxs-lookup"><span data-stu-id="76520-1306">Gets the progress of an operation started with StartNodeTransition using the provided OperationId.</span></span>'
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options?: Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1307">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1307">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1308">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1308">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1309">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1309">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetNodeTransitionProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_1'
    name: 'getNodeTransitionProgress(string, string, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1310">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1310">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1311">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1311">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1312">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1312">This is passed into the corresponding GetProgress API</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            <span data-ttu-id="76520-1313">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1313">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getNodeTransitionProgress_2'
    name: 'getNodeTransitionProgress(string, string, ServiceFabricClientGetNodeTransitionProgressOptionalParams, ServiceCallback<NodeTransitionProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getNodeTransitionProgress(nodeName: string, operationId: string, options: ServiceFabricClientGetNodeTransitionProgressOptionalParams, callback: ServiceCallback<NodeTransitionProgress>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1314">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1314">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1315">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1315">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1316">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1316">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
          description: <span data-ttu-id="76520-1317">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1317">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
          description: |
            <span data-ttu-id="76520-1318">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1318">The callback</span></span>
      return:
        type:
          - Promise<Models.GetNodeTransitionProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo'
    name: 'getPartitionBackupConfigurationInfo(string, Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1319">Возвращает сведения о конфигурации резервного копирования Service Fabric для указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1319">Gets the Service Fabric Backup configuration information for the specified partition.</span></span>
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1320">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1320">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_1'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1321">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1321">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            <span data-ttu-id="76520-1322">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1322">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupConfigurationInfo_2'
    name: 'getPartitionBackupConfigurationInfo(string, ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, ServiceCallback<PartitionBackupConfigurationInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupConfigurationInfo(partitionId: string, options: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PartitionBackupConfigurationInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1323">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1323">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="76520-1324">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1324">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
          description: |
            <span data-ttu-id="76520-1325">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1325">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList'
    name: 'getPartitionBackupList(string, Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1326">Возвращает список резервных копий, доступных для данного раздела.</span><span class="sxs-lookup"><span data-stu-id="76520-1326">Returns a list of backups available for the specified partition.</span></span> <span data-ttu-id="76520-1327">Сервер перечисляет все резервные копии, доступные в хранилище резервных копий, настроенные в политике резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-1327">The server enumerates all the backups available in the backup store configured in the backup policy.</span></span> <span data-ttu-id="76520-1328">Он также позволяет фильтровать результат, в зависимости от даты и времени начала и окончания или просто получение последней доступной резервной копии для секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1328">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for the partition.</span></span>'
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1329">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1329">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_1'
    name: 'getPartitionBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1330">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1330">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-1331">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1331">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupList_2'
    name: 'getPartitionBackupList(string, ServiceFabricClientGetPartitionBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupList(partitionId: string, options: ServiceFabricClientGetPartitionBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1332">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1332">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
          description: <span data-ttu-id="76520-1333">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1333">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-1334">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1334">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress'
    name: 'getPartitionBackupProgress(string, Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1335">Возвращает сведения о состоянии из последней резервной копии, а также сведений и причину ошибки в случае завершения.</span><span class="sxs-lookup"><span data-stu-id="76520-1335">Returns information about the state of the latest backup along with details or failure reason in case of completion.</span></span>'
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1336">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1336">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionBackupProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_1'
    name: 'getPartitionBackupProgress(string, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1337">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1337">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            <span data-ttu-id="76520-1338">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1338">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionBackupProgress_2'
    name: 'getPartitionBackupProgress(string, ServiceFabricClientGetPartitionBackupProgressOptionalParams, ServiceCallback<BackupProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionBackupProgress(partitionId: string, options: ServiceFabricClientGetPartitionBackupProgressOptionalParams, callback: ServiceCallback<BackupProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1339">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1339">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
          description: <span data-ttu-id="76520-1340">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1340">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.BackupProgressInfo>
          description: |
            <span data-ttu-id="76520-1341">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1341">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionBackupProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList'
    name: 'getPartitionEventList(string, string, string, Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1342">Ответ является списком объектов PartitionEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1342">The response is list of PartitionEvent objects.</span></span>
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1343">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1343">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1344">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1344">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1345">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1345">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_1'
    name: 'getPartitionEventList(string, string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1346">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1346">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1347">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1347">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1348">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1348">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1349">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1349">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionEventList_2'
    name: 'getPartitionEventList(string, string, string, ServiceFabricClientGetPartitionEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1350">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1350">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1351">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1351">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1352">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1352">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
          description: <span data-ttu-id="76520-1353">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1353">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1354">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1354">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth'
    name: 'getPartitionHealth(string, Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1355">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности службы на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1355">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="76520-1356">ReplicasHealthStateFilter используется для фильтрации коллекции объектов ReplicaHealthState для секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1356">Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.</span></span>
      <span data-ttu-id="76520-1357">Если указанная секция не существует в хранилище данных о работоспособности, то этот запрос возвращает ошибку.</span><span class="sxs-lookup"><span data-stu-id="76520-1357">If you specify a partition that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1358">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1358">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_1'
    name: 'getPartitionHealth(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1359">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1359">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="76520-1360">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1360">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealth_2'
    name: 'getPartitionHealth(string, ServiceFabricClientGetPartitionHealthOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealth(partitionId: string, options: ServiceFabricClientGetPartitionHealthOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1361">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1361">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
          description: <span data-ttu-id="76520-1362">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1362">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="76520-1363">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1363">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy'
    name: 'getPartitionHealthUsingPolicy(string, Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1364">Возвращает сведения о работоспособности указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1364">Gets the health information of the specified partition.</span></span>
      <span data-ttu-id="76520-1365">Если политика работоспособности приложения указано, оценка работоспособности использует его для получения общего состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1365">If the application health policy is specified, the health evaluation uses it to get the aggregated health state.</span></span>
      <span data-ttu-id="76520-1366">Если политика не указана, оценка работоспособности использует политики работоспособности приложения, определенных в манифесте приложения или политику работоспособности по умолчанию, если политика не определена в манифесте.</span><span class="sxs-lookup"><span data-stu-id="76520-1366">If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.</span></span>
      <span data-ttu-id="76520-1367">Eventshealthstatefilter используется для фильтрации получаемой коллекции событий работоспособности секции на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1367">Use EventsHealthStateFilter to filter the collection of health events reported on the partition based on the health state.</span></span>
      <span data-ttu-id="76520-1368">ReplicasHealthStateFilter используется для фильтрации коллекции объектов ReplicaHealthState для секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1368">Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState objects on the partition.</span></span> <span data-ttu-id="76520-1369">Используйте ApplicationHealthPolicy в тело запроса POST для переопределения политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1369">Use ApplicationHealthPolicy in the POST body to override the health policies used to evaluate the health.</span></span>
      <span data-ttu-id="76520-1370">Если указанная секция не существует в хранилище данных о работоспособности, то этот запрос возвращает ошибку.</span><span class="sxs-lookup"><span data-stu-id="76520-1370">If you specify a partition that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options?: Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1371">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1371">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_1'
    name: 'getPartitionHealthUsingPolicy(string, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1372">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1372">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="76520-1373">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1373">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy_2'
    name: 'getPartitionHealthUsingPolicy(string, ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, ServiceCallback<PartitionHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionHealthUsingPolicy(partitionId: string, options: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams, callback: ServiceCallback<PartitionHealth>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1374">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1374">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-1375">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1375">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionHealth>
          description: |
            <span data-ttu-id="76520-1376">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1376">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo'
    name: 'getPartitionInfo(string, Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1377">Возвращает сведения об указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1377">Gets the information about the specified partition.</span></span> <span data-ttu-id="76520-1378">Ответ содержит идентификатор секции, сведения о схеме секционирования, ключи, поддерживаемые секцией, состояние, данные о работоспособности и другие сведения о секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1378">The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.</span></span>'
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options?: Models.ServiceFabricClientGetPartitionInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1379">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1379">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_1'
    name: 'getPartitionInfo(string, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1380">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1380">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            <span data-ttu-id="76520-1381">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1381">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfo_2'
    name: 'getPartitionInfo(string, ServiceFabricClientGetPartitionInfoOptionalParams, ServiceCallback<Models.ServicePartitionInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfo(partitionId: string, options: ServiceFabricClientGetPartitionInfoOptionalParams, callback: ServiceCallback<Models.ServicePartitionInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1382">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1382">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
          description: <span data-ttu-id="76520-1383">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1383">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServicePartitionInfoUnion>
          description: |
            <span data-ttu-id="76520-1384">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1384">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList'
    name: 'getPartitionInfoList(string, Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1385">Ответ содержит идентификатор секции, сведения о схеме секционирования, ключи, поддерживаемые секцией, состояние, данные о работоспособности и другие сведения о секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1385">The response includes the partition ID, partitioning scheme information, keys supported by the partition, status, health, and other details about the partition.</span></span>'
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options?: Models.ServiceFabricClientGetPartitionInfoListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1386">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1386">The identity of the service.</span></span> <span data-ttu-id="76520-1387">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1387">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1388">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1388">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1389">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1389">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_1'
    name: 'getPartitionInfoList(string, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1390">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1390">The identity of the service.</span></span> <span data-ttu-id="76520-1391">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1391">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1392">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1392">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1393">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1393">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            <span data-ttu-id="76520-1394">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1394">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionInfoList_2'
    name: 'getPartitionInfoList(string, ServiceFabricClientGetPartitionInfoListOptionalParams, ServiceCallback<PagedServicePartitionInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionInfoList(serviceId: string, options: ServiceFabricClientGetPartitionInfoListOptionalParams, callback: ServiceCallback<PagedServicePartitionInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1395">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1395">The identity of the service.</span></span> <span data-ttu-id="76520-1396">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1396">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1397">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1397">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1398">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1398">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
          description: <span data-ttu-id="76520-1399">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1399">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
          description: |
            <span data-ttu-id="76520-1400">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1400">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation'
    name: 'getPartitionLoadInformation(string, Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1401">Возвращает сведения о нагрузке указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1401">Returns information about the load of a specified partition.</span></span>
      <span data-ttu-id="76520-1402">Ответ включает список отчетов по загрузке для секции Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1402">The response includes a list of load reports for a Service Fabric partition.</span></span>
      <span data-ttu-id="76520-1403">Каждый отчет содержит имя метрики нагрузки, значение и время последнего сообщения в формате UTC.</span><span class="sxs-lookup"><span data-stu-id="76520-1403">Each report includes the load metric name, value, and last reported time in UTC.</span></span>
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options?: Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1404">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1404">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionLoadInformationOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_1'
    name: 'getPartitionLoadInformation(string, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1405">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1405">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            <span data-ttu-id="76520-1406">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1406">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionLoadInformation_2'
    name: 'getPartitionLoadInformation(string, ServiceFabricClientGetPartitionLoadInformationOptionalParams, ServiceCallback<PartitionLoadInformation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionLoadInformation(partitionId: string, options: ServiceFabricClientGetPartitionLoadInformationOptionalParams, callback: ServiceCallback<PartitionLoadInformation>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1407">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1407">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
          description: <span data-ttu-id="76520-1408">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1408">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
          description: |
            <span data-ttu-id="76520-1409">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1409">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionLoadInformationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList'
    name: 'getPartitionReplicaEventList(string, string, string, string, Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1410">Ответ является списком объектов ReplicaEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1410">The response is list of ReplicaEvent objects.</span></span>
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1411">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1411">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1412">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1412">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1413">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1413">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1414">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1414">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicaEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_1'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1415">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1415">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1416">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1416">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1417">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1417">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1418">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1418">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1419">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1419">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicaEventList_2'
    name: 'getPartitionReplicaEventList(string, string, string, string, ServiceFabricClientGetPartitionReplicaEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicaEventList(partitionId: string, replicaId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicaEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1420">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1420">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1421">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1421">The identifier of the replica.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1422">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1422">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1423">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1423">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
          description: <span data-ttu-id="76520-1424">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1424">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1425">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1425">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicaEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList'
    name: 'getPartitionReplicasEventList(string, string, string, Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1426">Ответ является списком объектов ReplicaEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1426">The response is list of ReplicaEvent objects.</span></span>
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1427">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1427">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1428">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1428">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1429">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1429">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionReplicasEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_1'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1430">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1430">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1431">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1431">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1432">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1432">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1433">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1433">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionReplicasEventList_2'
    name: 'getPartitionReplicasEventList(string, string, string, ServiceFabricClientGetPartitionReplicasEventListOptionalParams, ServiceCallback<Models.ReplicaEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionReplicasEventList(partitionId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionReplicasEventListOptionalParams, callback: ServiceCallback<Models.ReplicaEventUnion[]>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1434">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1434">The identity of the partition.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1435">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1435">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1436">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1436">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
          description: <span data-ttu-id="76520-1437">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1437">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ReplicaEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1438">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1438">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionReplicasEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress'
    name: 'getPartitionRestartProgress(string, string, string, Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1439">Возвращает сведения о ходе выполнения PartitionRestart, запущенного с помощью StartPartitionRestart, с использованием предоставленного OperationId.</span><span class="sxs-lookup"><span data-stu-id="76520-1439">Gets the progress of a PartitionRestart started with StartPartitionRestart using the provided OperationId.</span></span>'
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1440">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1440">The identity of the service.</span></span> <span data-ttu-id="76520-1441">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1441">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1442">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1442">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1443">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1443">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1444">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1444">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1445">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1445">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1446">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1446">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestartProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_1'
    name: 'getPartitionRestartProgress(string, string, string, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1447">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1447">The identity of the service.</span></span> <span data-ttu-id="76520-1448">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1448">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1449">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1449">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1450">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1450">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1451">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1451">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1452">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1452">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1453">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1453">This is passed into the corresponding GetProgress API</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            <span data-ttu-id="76520-1454">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1454">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestartProgress_2'
    name: 'getPartitionRestartProgress(string, string, string, ServiceFabricClientGetPartitionRestartProgressOptionalParams, ServiceCallback<PartitionRestartProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestartProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetPartitionRestartProgressOptionalParams, callback: ServiceCallback<PartitionRestartProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1455">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1455">The identity of the service.</span></span> <span data-ttu-id="76520-1456">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1456">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1457">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1457">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1458">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1458">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1459">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1459">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1460">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1460">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1461">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1461">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
          description: <span data-ttu-id="76520-1462">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1462">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
          description: |
            <span data-ttu-id="76520-1463">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1463">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestartProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress'
    name: 'getPartitionRestoreProgress(string, Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1464">Возвращает сведения о состоянии вместе с сведений и причину ошибки в случае завершения последней операции восстановления.</span><span class="sxs-lookup"><span data-stu-id="76520-1464">Returns information about the state of the latest restore operation along with details or failure reason in case of completion.</span></span>
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options?: Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1465">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1465">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionRestoreProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_1'
    name: 'getPartitionRestoreProgress(string, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1466">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1466">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            <span data-ttu-id="76520-1467">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1467">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionRestoreProgress_2'
    name: 'getPartitionRestoreProgress(string, ServiceFabricClientGetPartitionRestoreProgressOptionalParams, ServiceCallback<RestoreProgressInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionRestoreProgress(partitionId: string, options: ServiceFabricClientGetPartitionRestoreProgressOptionalParams, callback: ServiceCallback<RestoreProgressInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1468">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1468">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
          description: <span data-ttu-id="76520-1469">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1469">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
          description: |
            <span data-ttu-id="76520-1470">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1470">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionRestoreProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList'
    name: 'getPartitionsEventList(string, string, Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1471">Ответ является списком объектов PartitionEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1471">The response is list of PartitionEvent objects.</span></span>
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetPartitionsEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1472">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1472">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1473">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1473">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPartitionsEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_1'
    name: 'getPartitionsEventList(string, string, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1474">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1474">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1475">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1475">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1476">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1476">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPartitionsEventList_2'
    name: 'getPartitionsEventList(string, string, ServiceFabricClientGetPartitionsEventListOptionalParams, ServiceCallback<Models.PartitionEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPartitionsEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetPartitionsEventListOptionalParams, callback: ServiceCallback<Models.PartitionEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1477">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1477">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1478">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1478">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
          description: <span data-ttu-id="76520-1479">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1479">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.PartitionEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1480">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1480">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPartitionsEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo'
    name: 'getPropertyInfo(string, string, Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1481">Возвращает указанное свойство Service Fabric с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="76520-1481">Gets the specified Service Fabric property under a given name.</span></span> <span data-ttu-id="76520-1482">Всегда будет возвращать значение и метаданные.</span><span class="sxs-lookup"><span data-stu-id="76520-1482">This will always return both value and metadata.</span></span>
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options?: Models.ServiceFabricClientGetPropertyInfoOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1483">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1483">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-1484">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-1484">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_1'
    name: 'getPropertyInfo(string, string, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1485">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1485">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-1486">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-1486">Specifies the name of the property to get.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            <span data-ttu-id="76520-1487">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1487">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfo_2'
    name: 'getPropertyInfo(string, string, ServiceFabricClientGetPropertyInfoOptionalParams, ServiceCallback<PropertyInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfo(nameId: string, propertyName: string, options: ServiceFabricClientGetPropertyInfoOptionalParams, callback: ServiceCallback<PropertyInfo>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1488">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1488">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyName
          type:
            - string
          description: <span data-ttu-id="76520-1489">Указывает имя возвращаемого свойства.</span><span class="sxs-lookup"><span data-stu-id="76520-1489">Specifies the name of the property to get.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
          description: <span data-ttu-id="76520-1490">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1490">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PropertyInfo>
          description: |
            <span data-ttu-id="76520-1491">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1491">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList'
    name: 'getPropertyInfoList(string, Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1492">Имя Service Fabric может иметь одно или несколько именованных свойств для хранения пользовательской информации.</span><span class="sxs-lookup"><span data-stu-id="76520-1492">A Service Fabric name can have one or more named properties that store custom information.</span></span> <span data-ttu-id="76520-1493">Эта операция возвращает информацию об этих свойствах в списке, разбитом на страницы.</span><span class="sxs-lookup"><span data-stu-id="76520-1493">This operation gets the information about these properties in a paged list.</span></span> <span data-ttu-id="76520-1494">Информация включает имя, значение и метаданные о каждом из свойств.</span><span class="sxs-lookup"><span data-stu-id="76520-1494">The information includes name, value, and metadata about each of the properties.</span></span>'
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options?: Models.ServiceFabricClientGetPropertyInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1495">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1495">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetPropertyInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_1'
    name: 'getPropertyInfoList(string, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1496">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1496">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            <span data-ttu-id="76520-1497">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1497">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getPropertyInfoList_2'
    name: 'getPropertyInfoList(string, ServiceFabricClientGetPropertyInfoListOptionalParams, ServiceCallback<PagedPropertyInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPropertyInfoList(nameId: string, options: ServiceFabricClientGetPropertyInfoListOptionalParams, callback: ServiceCallback<PagedPropertyInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1498">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1498">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
          description: <span data-ttu-id="76520-1499">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1499">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
          description: |
            <span data-ttu-id="76520-1500">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1500">The callback</span></span>
      return:
        type:
          - Promise<Models.GetPropertyInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList'
    name: getProvisionedFabricCodeVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1501">Возвращает список сведений о версиях кода структуры, подготовленных в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-1501">Gets a list of information about fabric code versions that are provisioned in the cluster.</span></span> <span data-ttu-id="76520-1502">Параметр CodeVersion может использоваться для необязательной фильтрации выходных данных только для конкретной версии.</span><span class="sxs-lookup"><span data-stu-id="76520-1502">The parameter CodeVersion can be used to optionally filter the output to only that particular version.</span></span>'
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_1'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            <span data-ttu-id="76520-1503">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1503">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList_2'
    name: 'getProvisionedFabricCodeVersionInfoList(ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, ServiceCallback<FabricCodeVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricCodeVersionInfoList(options: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams, callback: ServiceCallback<FabricCodeVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
          description: <span data-ttu-id="76520-1504">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1504">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
          description: |
            <span data-ttu-id="76520-1505">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1505">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricCodeVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList'
    name: getProvisionedFabricConfigVersionInfoList(Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1506">Возвращает список сведений о версиях конфигурации структуры, подготовленных в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-1506">Gets a list of information about fabric config versions that are provisioned in the cluster.</span></span> <span data-ttu-id="76520-1507">Параметр ConfigVersion может использоваться для необязательной фильтрации выходных данных только для конкретной версии.</span><span class="sxs-lookup"><span data-stu-id="76520-1507">The parameter ConfigVersion can be used to optionally filter the output to only that particular version.</span></span>'
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options?: Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_1'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            <span data-ttu-id="76520-1508">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1508">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList_2'
    name: 'getProvisionedFabricConfigVersionInfoList(ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, ServiceCallback<FabricConfigVersionInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProvisionedFabricConfigVersionInfoList(options: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams, callback: ServiceCallback<FabricConfigVersionInfo[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
          description: <span data-ttu-id="76520-1509">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1509">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
          description: |
            <span data-ttu-id="76520-1510">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1510">The callback</span></span>
      return:
        type:
          - Promise<Models.GetProvisionedFabricConfigVersionInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress'
    name: 'getQuorumLossProgress(string, string, string, Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1511">Возвращает сведения о ходе выполнения операции потери кворума, запущенной с помощью StartQuorumLoss, с использованием предоставленного OperationId.</span><span class="sxs-lookup"><span data-stu-id="76520-1511">Gets the progress of a quorum loss operation started with StartQuorumLoss, using the provided OperationId.</span></span>'
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options?: Models.ServiceFabricClientGetQuorumLossProgressOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1512">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1512">The identity of the service.</span></span> <span data-ttu-id="76520-1513">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1513">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1514">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1514">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1515">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1515">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1516">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1516">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1517">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1517">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1518">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1518">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetQuorumLossProgressOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_1'
    name: 'getQuorumLossProgress(string, string, string, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1519">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1519">The identity of the service.</span></span> <span data-ttu-id="76520-1520">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1520">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1521">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1521">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1522">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1522">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1523">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1523">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1524">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1524">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1525">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1525">This is passed into the corresponding GetProgress API</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            <span data-ttu-id="76520-1526">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1526">The callback</span></span>
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getQuorumLossProgress_2'
    name: 'getQuorumLossProgress(string, string, string, ServiceFabricClientGetQuorumLossProgressOptionalParams, ServiceCallback<PartitionQuorumLossProgress>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getQuorumLossProgress(serviceId: string, partitionId: string, operationId: string, options: ServiceFabricClientGetQuorumLossProgressOptionalParams, callback: ServiceCallback<PartitionQuorumLossProgress>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1527">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1527">The identity of the service.</span></span> <span data-ttu-id="76520-1528">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1528">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1529">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1529">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1530">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1530">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1531">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1531">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-1532">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-1532">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-1533">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-1533">This is passed into the corresponding GetProgress API</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
          description: <span data-ttu-id="76520-1534">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1534">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
          description: |
            <span data-ttu-id="76520-1535">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1535">The callback</span></span>
      return:
        type:
          - Promise<Models.GetQuorumLossProgressResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList'
    name: getRepairTaskList(Models.ServiceFabricClientGetRepairTaskListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1536">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-1536">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function getRepairTaskList(options?: Models.ServiceFabricClientGetRepairTaskListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetRepairTaskListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_1'
    name: 'getRepairTaskList(ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            <span data-ttu-id="76520-1537">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1537">The callback</span></span>
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getRepairTaskList_2'
    name: 'getRepairTaskList(ServiceFabricClientGetRepairTaskListOptionalParams, ServiceCallback<RepairTask[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getRepairTaskList(options: ServiceFabricClientGetRepairTaskListOptionalParams, callback: ServiceCallback<RepairTask[]>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
          description: <span data-ttu-id="76520-1538">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1538">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
          description: |
            <span data-ttu-id="76520-1539">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1539">The callback</span></span>
      return:
        type:
          - Promise<Models.GetRepairTaskListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth'
    name: 'getReplicaHealth(string, string, Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1540">Возвращает сведения о работоспособности реплики Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1540">Gets the health of a Service Fabric replica.</span></span>
      <span data-ttu-id="76520-1541">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности реплики на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1541">Use EventsHealthStateFilter to filter the collection of health events reported on the replica based on the health state.</span></span>
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1542">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1542">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1543">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1543">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_1'
    name: 'getReplicaHealth(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1544">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1544">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1545">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1545">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="76520-1546">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1546">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealth_2'
    name: 'getReplicaHealth(string, string, ServiceFabricClientGetReplicaHealthOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealth(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1547">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1547">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1548">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1548">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
          description: <span data-ttu-id="76520-1549">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1549">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="76520-1550">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1550">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy'
    name: 'getReplicaHealthUsingPolicy(string, string, Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1551">Возвращает сведения о работоспособности реплики службы с отслеживанием состояния или экземпляра службы без отслеживания состояния Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1551">Gets the health of a Service Fabric stateful service replica or stateless service instance.</span></span>
      <span data-ttu-id="76520-1552">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности кластера на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1552">Use EventsHealthStateFilter to filter the collection of health events reported on the cluster based on the health state.</span></span>
      <span data-ttu-id="76520-1553">Используйте ApplicationHealthPolicy, чтобы при необходимости переопределить политики работоспособности, используемых для оценки работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1553">Use ApplicationHealthPolicy to optionally override the health policies used to evaluate the health.</span></span> <span data-ttu-id="76520-1554">Этот API использует только поле «ConsiderWarningAsError» ApplicationHealthPolicy.</span><span class="sxs-lookup"><span data-stu-id="76520-1554">This API only uses 'ConsiderWarningAsError' field of the ApplicationHealthPolicy.</span></span> <span data-ttu-id="76520-1555">Остальные поля учитываются при оценке работоспособности реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1555">The rest of the fields are ignored while evaluating the health of the replica.</span></span>
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1556">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1556">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1557">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1557">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_1'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1558">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1558">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1559">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1559">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="76520-1560">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1560">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy_2'
    name: 'getReplicaHealthUsingPolicy(string, string, ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, ServiceCallback<Models.ReplicaHealthUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaHealthUsingPolicy(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams, callback: ServiceCallback<Models.ReplicaHealthUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1561">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1561">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1562">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1562">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-1563">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1563">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaHealthUnion>
          description: |
            <span data-ttu-id="76520-1564">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1564">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo'
    name: 'getReplicaInfo(string, string, Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1565">Ответ содержит идентификатор, роль, состояние, сведения о работоспособности, имя узла, время доступности и другие сведения о реплике.</span><span class="sxs-lookup"><span data-stu-id="76520-1565">The response includes the ID, role, status, health, node name, uptime, and other details about the replica.</span></span>'
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options?: Models.ServiceFabricClientGetReplicaInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1566">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1566">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1567">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1567">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_1'
    name: 'getReplicaInfo(string, string, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1568">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1568">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1569">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1569">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            <span data-ttu-id="76520-1570">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1570">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfo_2'
    name: 'getReplicaInfo(string, string, ServiceFabricClientGetReplicaInfoOptionalParams, ServiceCallback<Models.ReplicaInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfo(partitionId: string, replicaId: string, options: ServiceFabricClientGetReplicaInfoOptionalParams, callback: ServiceCallback<Models.ReplicaInfoUnion>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1571">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1571">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1572">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1572">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
          description: <span data-ttu-id="76520-1573">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1573">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ReplicaInfoUnion>
          description: |
            <span data-ttu-id="76520-1574">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1574">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList'
    name: 'getReplicaInfoList(string, Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1575">Конечная точка GetReplicas возвращает сведения о репликах указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1575">The GetReplicas endpoint returns information about the replicas of the specified partition.</span></span> <span data-ttu-id="76520-1576">Ответ содержит идентификатор, роль, состояние, сведения о работоспособности, имя узла, время доступности и другие сведения о реплике.</span><span class="sxs-lookup"><span data-stu-id="76520-1576">The response includes the ID, role, status, health, node name, uptime, and other details about the replica.</span></span>'
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options?: Models.ServiceFabricClientGetReplicaInfoListOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1577">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1577">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetReplicaInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_1'
    name: 'getReplicaInfoList(string, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1578">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1578">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            <span data-ttu-id="76520-1579">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1579">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getReplicaInfoList_2'
    name: 'getReplicaInfoList(string, ServiceFabricClientGetReplicaInfoListOptionalParams, ServiceCallback<PagedReplicaInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReplicaInfoList(partitionId: string, options: ServiceFabricClientGetReplicaInfoListOptionalParams, callback: ServiceCallback<PagedReplicaInfoList>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1580">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1580">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
          description: <span data-ttu-id="76520-1581">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1581">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
          description: |
            <span data-ttu-id="76520-1582">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1582">The callback</span></span>
      return:
        type:
          - Promise<Models.GetReplicaInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo'
    name: 'getServiceBackupConfigurationInfo(string, Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1583">Получает сведения о конфигурации резервного копирования Service Fabric для службы и секции в этой службе.</span><span class="sxs-lookup"><span data-stu-id="76520-1583">Gets the Service Fabric backup configuration information for the service and the partitions under this service.</span></span>
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1584">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1584">The identity of the service.</span></span> <span data-ttu-id="76520-1585">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1585">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1586">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1586">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1587">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1587">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_1'
    name: 'getServiceBackupConfigurationInfo(string, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1588">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1588">The identity of the service.</span></span> <span data-ttu-id="76520-1589">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1589">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1590">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1590">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1591">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1591">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="76520-1592">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1592">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupConfigurationInfo_2'
    name: 'getServiceBackupConfigurationInfo(string, ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, ServiceCallback<PagedBackupConfigurationInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupConfigurationInfo(serviceId: string, options: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams, callback: ServiceCallback<PagedBackupConfigurationInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1593">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1593">The identity of the service.</span></span> <span data-ttu-id="76520-1594">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1594">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1595">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1595">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1596">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1596">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
          description: <span data-ttu-id="76520-1597">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1597">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
          description: |
            <span data-ttu-id="76520-1598">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1598">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupConfigurationInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList'
    name: 'getServiceBackupList(string, Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1599">Возвращает список резервных копий, доступных для каждой секции в этой службе Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1599">Returns a list of backups available for every partition in this Service Fabric service.</span></span> <span data-ttu-id="76520-1600">Сервер перечисляет все резервные копии, доступные в хранилище резервных копий, настроенные в политике резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-1600">The server enumerates all the backups available in the backup store configured in the backup policy.</span></span>
      <span data-ttu-id="76520-1601">Он также позволяет фильтровать результат, в зависимости от даты и времени начала и окончания или просто получение последней доступной резервной копии для каждой секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1601">It also allows filtering of the result based on start and end datetime or just fetching the latest available backup for every partition.</span></span>
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options?: Models.ServiceFabricClientGetServiceBackupListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1602">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1602">The identity of the service.</span></span> <span data-ttu-id="76520-1603">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1603">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1604">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1604">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1605">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1605">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceBackupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_1'
    name: 'getServiceBackupList(string, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1606">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1606">The identity of the service.</span></span> <span data-ttu-id="76520-1607">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1607">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1608">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1608">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1609">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1609">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-1610">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1610">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceBackupList_2'
    name: 'getServiceBackupList(string, ServiceFabricClientGetServiceBackupListOptionalParams, ServiceCallback<PagedBackupInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceBackupList(serviceId: string, options: ServiceFabricClientGetServiceBackupListOptionalParams, callback: ServiceCallback<PagedBackupInfoList>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1611">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1611">The identity of the service.</span></span> <span data-ttu-id="76520-1612">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1612">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1613">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1613">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1614">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1614">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
          description: <span data-ttu-id="76520-1615">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1615">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
          description: |
            <span data-ttu-id="76520-1616">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1616">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceBackupListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription'
    name: 'getServiceDescription(string, Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1617">Возвращает описание существующей службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1617">Gets the description of an existing Service Fabric service.</span></span> <span data-ttu-id="76520-1618">Служба должна быть создана, прежде чем можно будет извлечь ее описание.</span><span class="sxs-lookup"><span data-stu-id="76520-1618">A service must be created before its description can be obtained.</span></span>'
    syntax:
      content: 'function getServiceDescription(serviceId: string, options?: Models.ServiceFabricClientGetServiceDescriptionOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1619">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1619">The identity of the service.</span></span> <span data-ttu-id="76520-1620">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1620">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1621">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1621">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1622">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1622">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceDescriptionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_1'
    name: 'getServiceDescription(string, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1623">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1623">The identity of the service.</span></span> <span data-ttu-id="76520-1624">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1624">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1625">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1625">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1626">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1626">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            <span data-ttu-id="76520-1627">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1627">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceDescription_2'
    name: 'getServiceDescription(string, ServiceFabricClientGetServiceDescriptionOptionalParams, ServiceCallback<Models.ServiceDescriptionUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceDescription(serviceId: string, options: ServiceFabricClientGetServiceDescriptionOptionalParams, callback: ServiceCallback<Models.ServiceDescriptionUnion>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1628">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1628">The identity of the service.</span></span> <span data-ttu-id="76520-1629">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1629">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1630">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1630">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1631">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1631">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
          description: <span data-ttu-id="76520-1632">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1632">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceDescriptionUnion>
          description: |
            <span data-ttu-id="76520-1633">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1633">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceDescriptionResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList'
    name: 'getServiceEventList(string, string, string, Models.ServiceFabricClientGetServiceEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1634">Ответ является списком объектов ServiceEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1634">The response is list of ServiceEvent objects.</span></span>
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServiceEventListOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1635">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1635">The identity of the service.</span></span> <span data-ttu-id="76520-1636">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1636">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1637">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1637">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1638">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1638">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1639">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1639">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1640">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1640">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_1'
    name: 'getServiceEventList(string, string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1641">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1641">The identity of the service.</span></span> <span data-ttu-id="76520-1642">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1642">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1643">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1643">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1644">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1644">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1645">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1645">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1646">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1646">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1647">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1647">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceEventList_2'
    name: 'getServiceEventList(string, string, string, ServiceFabricClientGetServiceEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceEventList(serviceId: string, startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServiceEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1648">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1648">The identity of the service.</span></span> <span data-ttu-id="76520-1649">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1649">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1650">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1650">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1651">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1651">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1652">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1652">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1653">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1653">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
          description: <span data-ttu-id="76520-1654">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1654">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1655">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1655">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth'
    name: 'getServiceHealth(string, Models.ServiceFabricClientGetServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1656">Возвращает сведения о работоспособности указанной службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1656">Gets the health information of the specified service.</span></span>
      <span data-ttu-id="76520-1657">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности службы на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1657">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="76520-1658">PartitionsHealthStateFilter используется для фильтрации возвращаемой коллекции секций.</span><span class="sxs-lookup"><span data-stu-id="76520-1658">Use PartitionsHealthStateFilter to filter the collection of partitions returned.</span></span>
      <span data-ttu-id="76520-1659">Если указанная служба не существует в хранилище данных о работоспособности, то этот запрос возвращает ошибку.</span><span class="sxs-lookup"><span data-stu-id="76520-1659">If you specify a service that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getServiceHealth(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1660">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1660">The identity of the service.</span></span> <span data-ttu-id="76520-1661">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1661">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1662">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1662">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1663">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1663">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_1'
    name: 'getServiceHealth(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1664">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1664">The identity of the service.</span></span> <span data-ttu-id="76520-1665">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1665">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1666">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1666">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1667">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1667">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="76520-1668">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1668">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealth_2'
    name: 'getServiceHealth(string, ServiceFabricClientGetServiceHealthOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealth(serviceId: string, options: ServiceFabricClientGetServiceHealthOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1669">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1669">The identity of the service.</span></span> <span data-ttu-id="76520-1670">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1670">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1671">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1671">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1672">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1672">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
          description: <span data-ttu-id="76520-1673">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1673">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="76520-1674">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1674">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy'
    name: 'getServiceHealthUsingPolicy(string, Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1675">Возвращает сведения о работоспособности указанной службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1675">Gets the health information of the specified service.</span></span>
      <span data-ttu-id="76520-1676">Если политика работоспособности приложения указано, оценка работоспособности использует его для получения общего состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1676">If the application health policy is specified, the health evaluation uses it to get the aggregated health state.</span></span>
      <span data-ttu-id="76520-1677">Если политика не указана, оценка работоспособности использует политики работоспособности приложения, определенных в манифесте приложения или политику работоспособности по умолчанию, если политика не определена в манифесте.</span><span class="sxs-lookup"><span data-stu-id="76520-1677">If the policy is not specified, the health evaluation uses the application health policy defined in the application manifest, or the default health policy, if no policy is defined in the manifest.</span></span>
      <span data-ttu-id="76520-1678">EventsHealthStateFilter используется для фильтрации получаемой коллекции событий работоспособности службы на основе состояния работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1678">Use EventsHealthStateFilter to filter the collection of health events reported on the service based on the health state.</span></span>
      <span data-ttu-id="76520-1679">PartitionsHealthStateFilter используется для фильтрации возвращаемой коллекции секций.</span><span class="sxs-lookup"><span data-stu-id="76520-1679">Use PartitionsHealthStateFilter to filter the collection of partitions returned.</span></span>
      <span data-ttu-id="76520-1680">Если указанная служба не существует в хранилище данных о работоспособности, то этот запрос возвращает ошибку.</span><span class="sxs-lookup"><span data-stu-id="76520-1680">If you specify a service that does not exist in the health store, this request returns an error.</span></span>
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options?: Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1681">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1681">The identity of the service.</span></span> <span data-ttu-id="76520-1682">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1682">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1683">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1683">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1684">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1684">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_1'
    name: 'getServiceHealthUsingPolicy(string, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1685">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1685">The identity of the service.</span></span> <span data-ttu-id="76520-1686">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1686">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1687">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1687">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1688">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1688">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="76520-1689">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1689">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy_2'
    name: 'getServiceHealthUsingPolicy(string, ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, ServiceCallback<ServiceHealth>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceHealthUsingPolicy(serviceId: string, options: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams, callback: ServiceCallback<ServiceHealth>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1690">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1690">The identity of the service.</span></span> <span data-ttu-id="76520-1691">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1691">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1692">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1692">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1693">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1693">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
          description: <span data-ttu-id="76520-1694">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1694">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceHealth>
          description: |
            <span data-ttu-id="76520-1695">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1695">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceHealthUsingPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo'
    name: 'getServiceInfo(string, string, Models.ServiceFabricClientGetServiceInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1696">Возвращает сведения об указанной службе, относящейся к указанному приложению Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1696">Returns the information about the specified service belonging to the specified Service Fabric application.</span></span>'
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options?: Models.ServiceFabricClientGetServiceInfoOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1697">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1697">The identity of the application.</span></span> <span data-ttu-id="76520-1698">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1698">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1699">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1699">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1700">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1700">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1701">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1701">The identity of the service.</span></span> <span data-ttu-id="76520-1702">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1702">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1703">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1703">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1704">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1704">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_1'
    name: 'getServiceInfo(string, string, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1705">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1705">The identity of the application.</span></span> <span data-ttu-id="76520-1706">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1706">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1707">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1707">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1708">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1708">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1709">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1709">The identity of the service.</span></span> <span data-ttu-id="76520-1710">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1710">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1711">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1711">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1712">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1712">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            <span data-ttu-id="76520-1713">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1713">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfo_2'
    name: 'getServiceInfo(string, string, ServiceFabricClientGetServiceInfoOptionalParams, ServiceCallback<Models.ServiceInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfo(applicationId: string, serviceId: string, options: ServiceFabricClientGetServiceInfoOptionalParams, callback: ServiceCallback<Models.ServiceInfoUnion>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1714">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1714">The identity of the application.</span></span> <span data-ttu-id="76520-1715">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1715">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1716">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1716">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1717">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1717">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1718">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1718">The identity of the service.</span></span> <span data-ttu-id="76520-1719">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1719">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1720">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1720">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1721">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1721">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
          description: <span data-ttu-id="76520-1722">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1722">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.ServiceInfoUnion>
          description: |
            <span data-ttu-id="76520-1723">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1723">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList'
    name: 'getServiceInfoList(string, Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1724">Извлекает сведения обо всех службах, относящихся к приложению, указанному с помощью идентификатора приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1724">Returns the information about all services belonging to the application specified by the application ID.</span></span>'
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options?: Models.ServiceFabricClientGetServiceInfoListOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1725">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1725">The identity of the application.</span></span> <span data-ttu-id="76520-1726">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1726">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1727">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1727">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1728">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1728">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_1'
    name: 'getServiceInfoList(string, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1729">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1729">The identity of the application.</span></span> <span data-ttu-id="76520-1730">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1730">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1731">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1731">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1732">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1732">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            <span data-ttu-id="76520-1733">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1733">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceInfoList_2'
    name: 'getServiceInfoList(string, ServiceFabricClientGetServiceInfoListOptionalParams, ServiceCallback<PagedServiceInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceInfoList(applicationId: string, options: ServiceFabricClientGetServiceInfoListOptionalParams, callback: ServiceCallback<PagedServiceInfoList>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1734">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1734">The identity of the application.</span></span> <span data-ttu-id="76520-1735">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1735">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1736">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1736">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1737">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1737">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
          description: <span data-ttu-id="76520-1738">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1738">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
          description: |
            <span data-ttu-id="76520-1739">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1739">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest'
    name: 'getServiceManifest(string, string, string, Models.ServiceFabricClientGetServiceManifestOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1740">Возвращает манифест, описывающий тип службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1740">Gets the manifest describing a service type.</span></span> <span data-ttu-id="76520-1741">Ответ содержит XML манифеста службы в виде строки.</span><span class="sxs-lookup"><span data-stu-id="76520-1741">The response contains the service manifest XML as a string.</span></span>'
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options?: Models.ServiceFabricClientGetServiceManifestOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1742">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1742">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1743">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1743">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1744">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1744">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceManifestOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_1'
    name: 'getServiceManifest(string, string, string, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1745">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1745">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1746">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1746">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1747">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1747">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            <span data-ttu-id="76520-1748">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1748">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceManifest_2'
    name: 'getServiceManifest(string, string, string, ServiceFabricClientGetServiceManifestOptionalParams, ServiceCallback<ServiceTypeManifest>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceManifest(applicationTypeName: string, applicationTypeVersion: string, serviceManifestName: string, options: ServiceFabricClientGetServiceManifestOptionalParams, callback: ServiceCallback<ServiceTypeManifest>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1749">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1749">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1750">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1750">The version of the application type.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1751">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1751">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
          description: <span data-ttu-id="76520-1752">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1752">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
          description: |
            <span data-ttu-id="76520-1753">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1753">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceManifestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo'
    name: 'getServiceNameInfo(string, Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1754">Возвращает имя службы для заданной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1754">Gets name of the service for the specified partition.</span></span> <span data-ttu-id="76520-1755">Возвращается сообщение об ошибке 404, если идентификатор секции не существует в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-1755">A 404 error is returned if the partition ID does not exist in the cluster.</span></span>'
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options?: Models.ServiceFabricClientGetServiceNameInfoOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1756">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1756">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceNameInfoOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_1'
    name: 'getServiceNameInfo(string, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1757">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1757">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            <span data-ttu-id="76520-1758">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1758">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceNameInfo_2'
    name: 'getServiceNameInfo(string, ServiceFabricClientGetServiceNameInfoOptionalParams, ServiceCallback<ServiceNameInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceNameInfo(partitionId: string, options: ServiceFabricClientGetServiceNameInfoOptionalParams, callback: ServiceCallback<ServiceNameInfo>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1759">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1759">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
          description: <span data-ttu-id="76520-1760">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1760">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceNameInfo>
          description: |
            <span data-ttu-id="76520-1761">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1761">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceNameInfoResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList'
    name: 'getServicesEventList(string, string, Models.ServiceFabricClientGetServicesEventListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1762">Ответ является списком объектов ServiceEvent.</span><span class="sxs-lookup"><span data-stu-id="76520-1762">The response is list of ServiceEvent objects.</span></span>
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options?: Models.ServiceFabricClientGetServicesEventListOptionalParams)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1763">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1763">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1764">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1764">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetServicesEventListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_1'
    name: 'getServicesEventList(string, string, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1765">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1765">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1766">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1766">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1767">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1767">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServicesEventList_2'
    name: 'getServicesEventList(string, string, ServiceFabricClientGetServicesEventListOptionalParams, ServiceCallback<Models.ServiceEventUnion[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServicesEventList(startTimeUtc: string, endTimeUtc: string, options: ServiceFabricClientGetServicesEventListOptionalParams, callback: ServiceCallback<Models.ServiceEventUnion[]>)'
      parameters:
        - id: startTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1768">Время начала запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1768">The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: endTimeUtc
          type:
            - string
          description: '<span data-ttu-id="76520-1769">Время окончания запроса поиска в формате UTC ISO yyyy-MM-: ссZ.</span><span class="sxs-lookup"><span data-stu-id="76520-1769">The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
          description: <span data-ttu-id="76520-1770">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1770">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<Models.ServiceEventUnion[]>'
          description: |
            <span data-ttu-id="76520-1771">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1771">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServicesEventListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName'
    name: 'getServiceTypeInfoByName(string, string, string, Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1772">Возвращает сведения о типе определенной службы, поддерживаемых подготовленным типом приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1772">Gets the information about a specific service type that is supported by a provisioned application type in a Service Fabric cluster.</span></span> <span data-ttu-id="76520-1773">Указанный тип приложения должен существовать.</span><span class="sxs-lookup"><span data-stu-id="76520-1773">The provided application type must exist.</span></span>
      <span data-ttu-id="76520-1774">В противном случае возвращается состояние 404.</span><span class="sxs-lookup"><span data-stu-id="76520-1774">Otherwise, a 404 status is returned.</span></span> <span data-ttu-id="76520-1775">Номер ответа 204 возвращается в том случае, если указанный тип службы не найден в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-1775">A 204 response is returned if the specified service type is not found in the cluster.</span></span>
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options?: Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1776">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1776">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1777">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1777">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1778">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1778">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_1'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1779">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1779">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1780">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1780">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1781">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1781">Specifies the name of a Service Fabric service type.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            <span data-ttu-id="76520-1782">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1782">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoByName_2'
    name: 'getServiceTypeInfoByName(string, string, string, ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, ServiceCallback<ServiceTypeInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoByName(applicationTypeName: string, applicationTypeVersion: string, serviceTypeName: string, options: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams, callback: ServiceCallback<ServiceTypeInfo>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1783">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1783">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1784">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1784">The version of the application type.</span></span>
        - id: serviceTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1785">Задает имя для типа службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1785">Specifies the name of a Service Fabric service type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
          description: <span data-ttu-id="76520-1786">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1786">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
          description: |
            <span data-ttu-id="76520-1787">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1787">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoByNameResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList'
    name: 'getServiceTypeInfoList(string, string, Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1788">Возвращает список, содержащий сведения о типах служб, поддерживаемых подготовленным типом приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1788">Gets the list containing the information about service types that are supported by a provisioned application type in a Service Fabric cluster.</span></span> <span data-ttu-id="76520-1789">Указанный тип приложения должен существовать.</span><span class="sxs-lookup"><span data-stu-id="76520-1789">The provided application type must exist.</span></span>
      <span data-ttu-id="76520-1790">В противном случае возвращается состояние 404.</span><span class="sxs-lookup"><span data-stu-id="76520-1790">Otherwise, a 404 status is returned.</span></span>
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options?: Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1791">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1791">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1792">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1792">The version of the application type.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientGetServiceTypeInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_1'
    name: 'getServiceTypeInfoList(string, string, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1793">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1793">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1794">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1794">The version of the application type.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1795">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1795">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getServiceTypeInfoList_2'
    name: 'getServiceTypeInfoList(string, string, ServiceFabricClientGetServiceTypeInfoListOptionalParams, ServiceCallback<ServiceTypeInfo[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getServiceTypeInfoList(applicationTypeName: string, applicationTypeVersion: string, options: ServiceFabricClientGetServiceTypeInfoListOptionalParams, callback: ServiceCallback<ServiceTypeInfo[]>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-1796">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1796">The name of the application type.</span></span>
        - id: applicationTypeVersion
          type:
            - string
          description: <span data-ttu-id="76520-1797">Версия типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1797">The version of the application type.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
          description: <span data-ttu-id="76520-1798">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1798">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
          description: |
            <span data-ttu-id="76520-1799">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1799">The callback</span></span>
      return:
        type:
          - Promise<Models.GetServiceTypeInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList'
    name: 'getSubNameInfoList(string, Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1800">Перечисляет все имена Service Fabric в списке с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="76520-1800">Enumerates all the Service Fabric names under a given name.</span></span> <span data-ttu-id="76520-1801">Если subnames не помещаются на странице, а также маркер продолжения, который может использоваться для получения следующей страницы возвращается одна страница результатов.</span><span class="sxs-lookup"><span data-stu-id="76520-1801">If the subnames do not fit in a page, one page of results is returned as well as a continuation token, which can be used to get the next page.</span></span> <span data-ttu-id="76520-1802">Имя, которое не существует запрос завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="76520-1802">Querying a name that doesn''t exist will fail.</span></span>'
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options?: Models.ServiceFabricClientGetSubNameInfoListOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1803">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1803">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientGetSubNameInfoListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_1'
    name: 'getSubNameInfoList(string, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1804">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1804">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            <span data-ttu-id="76520-1805">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1805">The callback</span></span>
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getSubNameInfoList_2'
    name: 'getSubNameInfoList(string, ServiceFabricClientGetSubNameInfoListOptionalParams, ServiceCallback<PagedSubNameInfoList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSubNameInfoList(nameId: string, options: ServiceFabricClientGetSubNameInfoListOptionalParams, callback: ServiceCallback<PagedSubNameInfoList>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1806">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1806">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
          description: <span data-ttu-id="76520-1807">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1807">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
          description: |
            <span data-ttu-id="76520-1808">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1808">The callback</span></span>
      return:
        type:
          - Promise<Models.GetSubNameInfoListResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState'
    name: getUpgradeOrchestrationServiceState(Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1809">Получите состояние службы из службы обновления Оркестрации Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1809">Get the service state of Service Fabric Upgrade Orchestration Service.</span></span> <span data-ttu-id="76520-1810">Этот API используется внутренним образом для предоставления поддержки.</span><span class="sxs-lookup"><span data-stu-id="76520-1810">This API is internally used for support purposes.</span></span>
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options?: Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_1'
    name: getUpgradeOrchestrationServiceState(ServiceCallback<UpgradeOrchestrationServiceState>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            <span data-ttu-id="76520-1811">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1811">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.getUpgradeOrchestrationServiceState_2'
    name: 'getUpgradeOrchestrationServiceState(ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceState>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUpgradeOrchestrationServiceState(options: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceState>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
          description: <span data-ttu-id="76520-1812">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1812">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
          description: |
            <span data-ttu-id="76520-1813">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1813">The callback</span></span>
      return:
        type:
          - Promise<Models.GetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1814">Вызывает API контейнера, развернутого на узле Service Fabric для указанного пакета кода.</span><span class="sxs-lookup"><span data-stu-id="76520-1814">Invoke container API on a container deployed on a Service Fabric node for the given code package.</span></span>'
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options?: Models.ServiceFabricClientInvokeContainerApiOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1815">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1815">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1816">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1816">The identity of the application.</span></span> <span data-ttu-id="76520-1817">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1817">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1818">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1818">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1819">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1819">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1820">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1820">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-1821">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1821">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageInstanceId
          type:
            - string
          description: '<span data-ttu-id="76520-1822">Уникальный идентификатор экземпляра пакета кода, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1822">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>'
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="76520-1823">Параметры для выполнения вызова контейнера API</span><span class="sxs-lookup"><span data-stu-id="76520-1823">Parameters for making container API call</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeContainerApiOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_1'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1824">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1824">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1825">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1825">The identity of the application.</span></span> <span data-ttu-id="76520-1826">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1826">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1827">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1827">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1828">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1828">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1829">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1829">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-1830">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1830">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageInstanceId
          type:
            - string
          description: '<span data-ttu-id="76520-1831">Уникальный идентификатор экземпляра пакета кода, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1831">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>'
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="76520-1832">Параметры для выполнения вызова контейнера API</span><span class="sxs-lookup"><span data-stu-id="76520-1832">Parameters for making container API call</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            <span data-ttu-id="76520-1833">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1833">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeContainerApi_2'
    name: 'invokeContainerApi(string, string, string, string, string, ContainerApiRequestBody, ServiceFabricClientInvokeContainerApiOptionalParams, ServiceCallback<ContainerApiResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeContainerApi(nodeName: string, applicationId: string, serviceManifestName: string, codePackageName: string, codePackageInstanceId: string, containerApiRequestBody: ContainerApiRequestBody, options: ServiceFabricClientInvokeContainerApiOptionalParams, callback: ServiceCallback<ContainerApiResponse>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1834">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1834">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1835">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1835">The identity of the application.</span></span> <span data-ttu-id="76520-1836">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1836">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1837">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1837">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1838">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1838">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: serviceManifestName
          type:
            - string
          description: '<span data-ttu-id="76520-1839">Имя манифеста службы, зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1839">The name of a service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageName
          type:
            - string
          description: '<span data-ttu-id="76520-1840">Имя пакета кода, указанное в манифесте службы и зарегистрированное для типа приложения в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1840">The name of code package specified in service manifest registered as part of an application type in a Service Fabric cluster.</span></span>'
        - id: codePackageInstanceId
          type:
            - string
          description: '<span data-ttu-id="76520-1841">Уникальный идентификатор экземпляра пакета кода, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1841">ID that uniquely identifies a code package instance deployed on a service fabric node.</span></span>'
        - id: containerApiRequestBody
          type:
            - '@azure/servicefabric.ContainerApiRequestBody'
          description: <span data-ttu-id="76520-1842">Параметры для выполнения вызова контейнера API</span><span class="sxs-lookup"><span data-stu-id="76520-1842">Parameters for making container API call</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
          description: <span data-ttu-id="76520-1843">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1843">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ContainerApiResponse>
          description: |
            <span data-ttu-id="76520-1844">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1844">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeContainerApiResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand'
    name: 'invokeInfrastructureCommand(string, Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1845">Для кластеров с одним или несколькими экземплярами службы инфраструктуры этот API позволяет отправлять команды инфраструктуры конкретному экземпляру службы инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1845">For clusters that have one or more instances of the Infrastructure Service configured, this API provides a way to send infrastructure-specific commands to a particular instance of the Infrastructure Service.</span></span>
      <span data-ttu-id="76520-1846">Доступные команды и соответствующий формат ответа различаются в зависимости от инфраструктуры, в которой выполняется кластер.</span><span class="sxs-lookup"><span data-stu-id="76520-1846">Available commands and their corresponding response formats vary depending upon the infrastructure on which the cluster is running.</span></span>

      <span data-ttu-id="76520-1847">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-1847">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1848">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1848">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1849">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1849">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureCommandOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_1'
    name: 'invokeInfrastructureCommand(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1850">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1850">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1851">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1851">The content of the command is infrastructure-specific.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="76520-1852">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1852">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureCommand_2'
    name: 'invokeInfrastructureCommand(string, ServiceFabricClientInvokeInfrastructureCommandOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureCommand(command: string, options: ServiceFabricClientInvokeInfrastructureCommandOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1853">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1853">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1854">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1854">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
          description: <span data-ttu-id="76520-1855">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1855">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="76520-1856">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1856">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureCommandResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery'
    name: 'invokeInfrastructureQuery(string, Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1857">Для кластеров с одним или несколькими экземплярами службы инфраструктуры этот API позволяет отправлять запросы к инфраструктуре конкретному экземпляру службы инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1857">For clusters that have one or more instances of the Infrastructure Service configured, this API provides a way to send infrastructure-specific queries to a particular instance of the Infrastructure Service.</span></span>
      <span data-ttu-id="76520-1858">Доступные команды и соответствующий формат ответа различаются в зависимости от инфраструктуры, в которой выполняется кластер.</span><span class="sxs-lookup"><span data-stu-id="76520-1858">Available commands and their corresponding response formats vary depending upon the infrastructure on which the cluster is running.</span></span>

      <span data-ttu-id="76520-1859">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-1859">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options?: Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1860">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1860">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1861">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1861">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientInvokeInfrastructureQueryOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_1'
    name: 'invokeInfrastructureQuery(string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1862">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1862">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1863">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1863">The content of the command is infrastructure-specific.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="76520-1864">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1864">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.invokeInfrastructureQuery_2'
    name: 'invokeInfrastructureQuery(string, ServiceFabricClientInvokeInfrastructureQueryOptionalParams, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function invokeInfrastructureQuery(command: string, options: ServiceFabricClientInvokeInfrastructureQueryOptionalParams, callback: ServiceCallback<string>)'
      parameters:
        - id: command
          type:
            - string
          description: <span data-ttu-id="76520-1865">Текст команды для вызова.</span><span class="sxs-lookup"><span data-stu-id="76520-1865">The text of the command to be invoked.</span></span> <span data-ttu-id="76520-1866">Содержимое команды зависит от инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="76520-1866">The content of the command is infrastructure-specific.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
          description: <span data-ttu-id="76520-1867">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1867">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="76520-1868">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1868">The callback</span></span>
      return:
        type:
          - Promise<Models.InvokeInfrastructureQueryResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshApplication'
    name: meshApplication
    fullName: meshApplication
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshApplication: MeshApplication'
      return:
        type:
          - '@azure/servicefabric.MeshApplication'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshCodePackage'
    name: meshCodePackage
    fullName: meshCodePackage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshCodePackage: MeshCodePackage'
      return:
        type:
          - '@azure/servicefabric.MeshCodePackage'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshGateway'
    name: meshGateway
    fullName: meshGateway
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshGateway: MeshGateway'
      return:
        type:
          - '@azure/servicefabric.MeshGateway'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshNetwork'
    name: meshNetwork
    fullName: meshNetwork
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshNetwork: MeshNetwork'
      return:
        type:
          - '@azure/servicefabric.MeshNetwork'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecret'
    name: meshSecret
    fullName: meshSecret
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecret: MeshSecret'
      return:
        type:
          - '@azure/servicefabric.MeshSecret'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshSecretValue'
    name: meshSecretValue
    fullName: meshSecretValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshSecretValue: MeshSecretValue'
      return:
        type:
          - '@azure/servicefabric.MeshSecretValue'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshService'
    name: meshService
    fullName: meshService
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshService: MeshService'
      return:
        type:
          - '@azure/servicefabric.MeshService'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshServiceReplica'
    name: meshServiceReplica
    fullName: meshServiceReplica
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshServiceReplica: MeshServiceReplica'
      return:
        type:
          - '@azure/servicefabric.MeshServiceReplica'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.meshVolume'
    name: meshVolume
    fullName: meshVolume
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'meshVolume: MeshVolume'
      return:
        type:
          - '@azure/servicefabric.MeshVolume'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule'
    name: 'postChaosSchedule(ChaosScheduleDescription, Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1869">Chaos будет автоматически планировать запуски, основанные на расписании Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-1869">Chaos will automatically schedule runs based on the Chaos Schedule.</span></span>
      <span data-ttu-id="76520-1870">Chaos расписание будет обновляться, если предоставленная версия совпадает с версией на сервере.</span><span class="sxs-lookup"><span data-stu-id="76520-1870">The Chaos Schedule will be updated if the provided version matches the version on the server.</span></span>
      <span data-ttu-id="76520-1871">При обновлении расписания хаос, версии на сервере будет увеличено на 1.</span><span class="sxs-lookup"><span data-stu-id="76520-1871">When updating the Chaos Schedule, the version on the server is incremented by 1.</span></span>
      <span data-ttu-id="76520-1872">Версия на сервере будут перенесены в значение 0 после достижения большим числом.</span><span class="sxs-lookup"><span data-stu-id="76520-1872">The version on the server will wrap back to 0 after reaching a large number.</span></span>
      <span data-ttu-id="76520-1873">Если Chaos выполняется, когда этот вызов сделан, вызов завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="76520-1873">If Chaos is running when this call is made, the call will fail.</span></span>
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options?: Models.ServiceFabricClientPostChaosScheduleOptionalParams)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: '<span data-ttu-id="76520-1874">Описание расписания, которое используется, Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-1874">Describes the schedule used by Chaos.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientPostChaosScheduleOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_1'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: '<span data-ttu-id="76520-1875">Описание расписания, которое используется, Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-1875">Describes the schedule used by Chaos.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1876">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1876">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.postChaosSchedule_2'
    name: 'postChaosSchedule(ChaosScheduleDescription, ServiceFabricClientPostChaosScheduleOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function postChaosSchedule(chaosSchedule: ChaosScheduleDescription, options: ServiceFabricClientPostChaosScheduleOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosSchedule
          type:
            - '@azure/servicefabric.ChaosScheduleDescription'
          description: '<span data-ttu-id="76520-1877">Описание расписания, которое используется, Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-1877">Describes the schedule used by Chaos.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
          description: <span data-ttu-id="76520-1878">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1878">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1879">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1879">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1880">Подготавливает тип приложения Service Fabric в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-1880">Provisions a Service Fabric application type with the cluster.</span></span> <span data-ttu-id="76520-1881">Подготовка является обязательным, прежде чем могут создаваться новые приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1881">The provision is required before any new applications can be instantiated.</span></span>
      <span data-ttu-id="76520-1882">Операция подготовки может выполняться либо на пакета приложения, указанного параметром relativePathInImageStore, или с помощью URI внешних «.sfpkg».</span><span class="sxs-lookup"><span data-stu-id="76520-1882">The provision operation can be performed either on the application package specified by the relativePathInImageStore, or by using the URI of the external '.sfpkg'.</span></span>
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options?: Models.ServiceFabricClientProvisionApplicationTypeOptionalParams)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: '<span data-ttu-id="76520-1883">Базовый тип описания типа приложения подготовки, который поддерживает хранилище на основе подготовки образа или внешняя Подготовка на основе хранилища.</span><span class="sxs-lookup"><span data-stu-id="76520-1883">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientProvisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_1'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: '<span data-ttu-id="76520-1884">Базовый тип описания типа приложения подготовки, который поддерживает хранилище на основе подготовки образа или внешняя Подготовка на основе хранилища.</span><span class="sxs-lookup"><span data-stu-id="76520-1884">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1885">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1885">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionApplicationType_2'
    name: 'provisionApplicationType(Models.ProvisionApplicationTypeDescriptionBaseUnion, ServiceFabricClientProvisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionApplicationType(provisionApplicationTypeDescriptionBaseRequiredBodyParam: Models.ProvisionApplicationTypeDescriptionBaseUnion, options: ServiceFabricClientProvisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionApplicationTypeDescriptionBaseRequiredBodyParam
          type:
            - Models.ProvisionApplicationTypeDescriptionBaseUnion
          description: '<span data-ttu-id="76520-1886">Базовый тип описания типа приложения подготовки, который поддерживает хранилище на основе подготовки образа или внешняя Подготовка на основе хранилища.</span><span class="sxs-lookup"><span data-stu-id="76520-1886">The base type of provision application type description which supports either image store-based provision or external store-based provision.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
          description: <span data-ttu-id="76520-1887">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1887">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1888">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1888">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster'
    name: 'provisionCluster(ProvisionFabricDescription, Models.ServiceFabricClientProvisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1889">Проверяет и подготавливает пакеты кода или конфигурации кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1889">Validate and provision the code or configuration packages of a Service Fabric cluster.</span></span>
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options?: Models.ServiceFabricClientProvisionClusterOptionalParams)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="76520-1890">Описывает параметры для подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-1890">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientProvisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_1'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="76520-1891">Описывает параметры для подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-1891">Describes the parameters for provisioning a cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1892">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1892">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.provisionCluster_2'
    name: 'provisionCluster(ProvisionFabricDescription, ServiceFabricClientProvisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function provisionCluster(provisionFabricDescription: ProvisionFabricDescription, options: ServiceFabricClientProvisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: provisionFabricDescription
          type:
            - '@azure/servicefabric.ProvisionFabricDescription'
          description: <span data-ttu-id="76520-1893">Описывает параметры для подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-1893">Describes the parameters for provisioning a cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
          description: <span data-ttu-id="76520-1894">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1894">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1895">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1895">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty'
    name: 'putProperty(string, PropertyDescription, Models.ServiceFabricClientPutPropertyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1896">Создает или обновляет указанное свойство Service Fabric с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="76520-1896">Creates or updates the specified Service Fabric property under a given name.</span></span>
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options?: Models.ServiceFabricClientPutPropertyOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1897">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1897">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="76520-1898">Описание свойства Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-1898">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientPutPropertyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_1'
    name: 'putProperty(string, PropertyDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1899">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1899">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="76520-1900">Описание свойства Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-1900">Describes the Service Fabric property to be created.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1901">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1901">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.putProperty_2'
    name: 'putProperty(string, PropertyDescription, ServiceFabricClientPutPropertyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function putProperty(nameId: string, propertyDescription: PropertyDescription, options: ServiceFabricClientPutPropertyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-1902">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1902">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyDescription
          type:
            - '@azure/servicefabric.PropertyDescription'
          description: <span data-ttu-id="76520-1903">Описание свойства Service Fabric должен быть создан.</span><span class="sxs-lookup"><span data-stu-id="76520-1903">Describes the Service Fabric property to be created.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
          description: <span data-ttu-id="76520-1904">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1904">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1905">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1905">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions'
    name: recoverAllPartitions(Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1906">Эту операцию следует выполнять только в том случае, если известно, что неработающие реплики невозможно восстановить.</span><span class="sxs-lookup"><span data-stu-id="76520-1906">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="76520-1907">Неправильное использование этого API может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1907">Incorrect use of this API can cause potential data loss.</span></span>'
    syntax:
      content: 'function recoverAllPartitions(options?: Models.ServiceFabricClientRecoverAllPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverAllPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_1'
    name: recoverAllPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1908">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1908">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverAllPartitions_2'
    name: 'recoverAllPartitions(ServiceFabricClientRecoverAllPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverAllPartitions(options: ServiceFabricClientRecoverAllPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
          description: <span data-ttu-id="76520-1909">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1909">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1910">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1910">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition'
    name: 'recoverPartition(string, Models.ServiceFabricClientRecoverPartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1911">Эту операцию следует выполнять только в том случае, если известно, что неработающие реплики невозможно восстановить.</span><span class="sxs-lookup"><span data-stu-id="76520-1911">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="76520-1912">Неправильное использование этого API может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1912">Incorrect use of this API can cause potential data loss.</span></span>'
    syntax:
      content: 'function recoverPartition(partitionId: string, options?: Models.ServiceFabricClientRecoverPartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1913">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1913">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRecoverPartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_1'
    name: 'recoverPartition(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1914">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1914">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1915">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1915">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverPartition_2'
    name: 'recoverPartition(string, ServiceFabricClientRecoverPartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverPartition(partitionId: string, options: ServiceFabricClientRecoverPartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1916">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1916">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
          description: <span data-ttu-id="76520-1917">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1917">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1918">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1918">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions'
    name: 'recoverServicePartitions(string, Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1919">Указывает кластеру Service Fabric, что следует попытаться восстановить указанную службу, которая находится в состоянии потери кворума.</span><span class="sxs-lookup"><span data-stu-id="76520-1919">Indicates to the Service Fabric cluster that it should attempt to recover the specified service that is currently stuck in quorum loss.</span></span> <span data-ttu-id="76520-1920">Эту операцию следует выполнять только в том случае, если известно, что неработающие реплики невозможно восстановить.</span><span class="sxs-lookup"><span data-stu-id="76520-1920">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="76520-1921">Неправильное использование этого API может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1921">Incorrect use of this API can cause potential data loss.</span></span>'
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options?: Models.ServiceFabricClientRecoverServicePartitionsOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1922">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1922">The identity of the service.</span></span> <span data-ttu-id="76520-1923">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1923">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1924">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1924">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1925">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1925">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRecoverServicePartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_1'
    name: 'recoverServicePartitions(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1926">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1926">The identity of the service.</span></span> <span data-ttu-id="76520-1927">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1927">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1928">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1928">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1929">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1929">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1930">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1930">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverServicePartitions_2'
    name: 'recoverServicePartitions(string, ServiceFabricClientRecoverServicePartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverServicePartitions(serviceId: string, options: ServiceFabricClientRecoverServicePartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1931">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-1931">The identity of the service.</span></span> <span data-ttu-id="76520-1932">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1932">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1933">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1933">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1934">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-1934">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
          description: <span data-ttu-id="76520-1935">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1935">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1936">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1936">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions'
    name: recoverSystemPartitions(Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1937">Указывает кластеру Service Fabric, что следует попытаться восстановить системные службы, которые в настоящее время находятся в состоянии потери кворума.</span><span class="sxs-lookup"><span data-stu-id="76520-1937">Indicates to the Service Fabric cluster that it should attempt to recover the system services that are currently stuck in quorum loss.</span></span> <span data-ttu-id="76520-1938">Эту операцию следует выполнять только в том случае, если известно, что неработающие реплики невозможно восстановить.</span><span class="sxs-lookup"><span data-stu-id="76520-1938">This operation should only be performed if it is known that the replicas that are down cannot be recovered.</span></span> <span data-ttu-id="76520-1939">Неправильное использование этого API может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="76520-1939">Incorrect use of this API can cause potential data loss.</span></span>'
    syntax:
      content: 'function recoverSystemPartitions(options?: Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRecoverSystemPartitionsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_1'
    name: recoverSystemPartitions(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1940">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1940">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.recoverSystemPartitions_2'
    name: 'recoverSystemPartitions(ServiceFabricClientRecoverSystemPartitionsOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recoverSystemPartitions(options: ServiceFabricClientRecoverSystemPartitionsOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
          description: <span data-ttu-id="76520-1941">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1941">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1942">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1942">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment'
    name: 'removeComposeDeployment(string, Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-1943">Удаляет существующее развертывание Compose в Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1943">Deletes an existing Service Fabric compose deployment.</span></span>
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options?: Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-1944">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-1944">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveComposeDeploymentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_1'
    name: 'removeComposeDeployment(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-1945">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-1945">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1946">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1946">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeComposeDeployment_2'
    name: 'removeComposeDeployment(string, ServiceFabricClientRemoveComposeDeploymentOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeComposeDeployment(deploymentName: string, options: ServiceFabricClientRemoveComposeDeploymentOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-1947">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-1947">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
          description: <span data-ttu-id="76520-1948">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1948">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1949">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1949">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState'
    name: 'removeNodeState(string, Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1950">Это означает, что восстановить сохраненное состояние этого узла невозможно.</span><span class="sxs-lookup"><span data-stu-id="76520-1950">This implies that it is not possible to recover the persisted state of that node.</span></span> <span data-ttu-id="76520-1951">Обычно это происходит, если жесткий диск был очищен или если жесткий диск аварийно завершает работу.</span><span class="sxs-lookup"><span data-stu-id="76520-1951">This generally happens if a hard disk has been wiped clean, or if a hard disk crashes.</span></span> <span data-ttu-id="76520-1952">Для успешного выполнения этой операции узел должен быть недоступен.</span><span class="sxs-lookup"><span data-stu-id="76520-1952">The node has to be down for this operation to be successful.</span></span> <span data-ttu-id="76520-1953">Эта операция сообщает Service Fabric, что реплики на этом узле больше не существуют и что Service Fabric должна прекратить ожидание этих реплик.</span><span class="sxs-lookup"><span data-stu-id="76520-1953">This operation lets Service Fabric know that the replicas on that node no longer exist, and that Service Fabric should stop waiting for those replicas to come back up.</span></span> <span data-ttu-id="76520-1954">Не запускайте этот командлет, если состояние на узле не удалено, и узел может вернуться с сохраненному состоянию.</span><span class="sxs-lookup"><span data-stu-id="76520-1954">Do not run this cmdlet if the state on the node has not been removed and the node can come back up with its state intact.</span></span>'
    syntax:
      content: 'function removeNodeState(nodeName: string, options?: Models.ServiceFabricClientRemoveNodeStateOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1955">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1955">The name of the node.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveNodeStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_1'
    name: 'removeNodeState(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1956">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1956">The name of the node.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1957">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1957">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeNodeState_2'
    name: 'removeNodeState(string, ServiceFabricClientRemoveNodeStateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeNodeState(nodeName: string, options: ServiceFabricClientRemoveNodeStateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1958">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1958">The name of the node.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
          description: <span data-ttu-id="76520-1959">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1959">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1960">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1960">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica'
    name: 'removeReplica(string, string, string, Models.ServiceFabricClientRemoveReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-1961">Этот API имитирует сбой реплики Service Fabric, удаляя реплику из кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1961">This API simulates a Service Fabric replica failure by removing a replica from a Service Fabric cluster.</span></span> <span data-ttu-id="76520-1962">При этом данная реплика закрывается и ей назначается роль "None", а затем из кластера удаляются все сведения о состоянии реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1962">The removal closes the replica, transitions the replica to the role None, and then removes all of the state information of the replica from the cluster.</span></span> <span data-ttu-id="76520-1963">Этот API проверяет путь для удаления состояния реплики и имитирует сообщение о сбое постоянного пути через клиентские API.</span><span class="sxs-lookup"><span data-stu-id="76520-1963">This API tests the replica state removal path, and simulates the report fault permanent path through client APIs.</span></span> <span data-ttu-id="76520-1964">Предупреждение. При использовании этого API отсутствуют какие-либо проверки безопасности.</span><span class="sxs-lookup"><span data-stu-id="76520-1964">Warning - There are no safety checks performed when this API is used.</span></span> <span data-ttu-id="76520-1965">Неправильное использование этого API может привести к потере данных для служб с отслеживанием состояния.</span><span class="sxs-lookup"><span data-stu-id="76520-1965">Incorrect use of this API can lead to data loss for stateful services.</span></span> <span data-ttu-id="76520-1966">Кроме того, флаг forceRemove влияет на все остальные реплики, размещенные в том же процессе.</span><span class="sxs-lookup"><span data-stu-id="76520-1966">In addition, the forceRemove flag impacts all other replicas hosted in the same process.</span></span>'
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRemoveReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1967">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1967">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1968">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1968">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1969">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1969">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRemoveReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_1'
    name: 'removeReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1970">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1970">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1971">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1971">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1972">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1972">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1973">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1973">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.removeReplica_2'
    name: 'removeReplica(string, string, string, ServiceFabricClientRemoveReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRemoveReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-1974">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-1974">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-1975">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-1975">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-1976">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-1976">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
          description: <span data-ttu-id="76520-1977">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-1977">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1978">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1978">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth'
    name: 'reportApplicationHealth(string, HealthInformation, Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-1979">Возвращает состояние работоспособности для указанного приложения Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-1979">Reports health state of the specified Service Fabric application.</span></span> <span data-ttu-id="76520-1980">Отчет должен содержать информацию об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-1980">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-1981">Отчет отправляется в приложение шлюза Service Fabric, которое передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1981">The report is sent to a Service Fabric gateway Application, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-1982">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-1982">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-1983">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-1983">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-1984">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, получить состояние работоспособности приложения и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-1984">To see whether the report was applied in the health store, get application health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportApplicationHealthOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1985">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1985">The identity of the application.</span></span> <span data-ttu-id="76520-1986">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1986">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1987">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1987">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1988">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1988">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-1989">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1989">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-1990">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1990">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_1'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1991">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1991">The identity of the application.</span></span> <span data-ttu-id="76520-1992">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1992">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-1993">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-1993">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-1994">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-1994">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-1995">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1995">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-1996">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-1996">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-1997">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-1997">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportApplicationHealth_2'
    name: 'reportApplicationHealth(string, HealthInformation, ServiceFabricClientReportApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportApplicationHealth(applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-1998">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-1998">The identity of the application.</span></span> <span data-ttu-id="76520-1999">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-1999">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2000">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2000">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2001">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2001">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2002">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2002">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2003">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2003">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
          description: <span data-ttu-id="76520-2004">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2004">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2005">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2005">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth'
    name: 'reportClusterHealth(HealthInformation, Models.ServiceFabricClientReportClusterHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2006">Отправляет отчет о работоспособности в кластере Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2006">Sends a health report on a Service Fabric cluster.</span></span> <span data-ttu-id="76520-2007">Отчет должен содержать информацию об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2007">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2008">Отчет отправляется на узел шлюза Service Fabric, который передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2008">The report is sent to a Service Fabric gateway node, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2009">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2009">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2010">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2010">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2011">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, запустите GetClusterHealth и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2011">To see whether the report was applied in the health store, run GetClusterHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportClusterHealthOptionalParams)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2012">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2012">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2013">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2013">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportClusterHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_1'
    name: 'reportClusterHealth(HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2014">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2014">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2015">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2015">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2016">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2016">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportClusterHealth_2'
    name: 'reportClusterHealth(HealthInformation, ServiceFabricClientReportClusterHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportClusterHealth(healthInformation: HealthInformation, options: ServiceFabricClientReportClusterHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2017">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2017">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2018">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2018">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
          description: <span data-ttu-id="76520-2019">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2019">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2020">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2020">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2021">Сообщает о состоянии работоспособности приложения, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2021">Reports health state of the application deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-2022">Отчет должен содержать информацию об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2022">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2023">Отчет отправляется в службу шлюза Service Fabric, которая передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2023">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2024">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2024">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2025">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2025">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2026">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, получить сведения о работоспособности развернутого приложения и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2026">To see whether the report was applied in the health store, get deployed application health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2027">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2027">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2028">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2028">The identity of the application.</span></span> <span data-ttu-id="76520-2029">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2029">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2030">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2030">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2031">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2031">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2032">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2032">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2033">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2033">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedApplicationHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_1'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2034">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2034">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2035">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2035">The identity of the application.</span></span> <span data-ttu-id="76520-2036">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2036">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2037">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2037">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2038">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2038">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2039">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2039">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2040">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2040">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2041">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2041">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedApplicationHealth_2'
    name: 'reportDeployedApplicationHealth(string, string, HealthInformation, ServiceFabricClientReportDeployedApplicationHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedApplicationHealth(nodeName: string, applicationId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedApplicationHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2042">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2042">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2043">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2043">The identity of the application.</span></span> <span data-ttu-id="76520-2044">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2044">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2045">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2045">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2046">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2046">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2047">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2047">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2048">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2048">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
          description: <span data-ttu-id="76520-2049">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2049">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2050">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2050">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2051">Сообщает о состоянии работоспособности пакета службы приложения, развернутого на узле Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2051">Reports health state of the service package of the application deployed on a Service Fabric node.</span></span> <span data-ttu-id="76520-2052">Отчет должен содержать информацию об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2052">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2053">Отчет отправляется в службу шлюза Service Fabric, которая передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2053">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2054">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2054">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2055">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2055">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2056">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, получение работоспособности развернутого пакета службы и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2056">To see whether the report was applied in the health store, get deployed service package health and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2057">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2057">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2058">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2058">The identity of the application.</span></span> <span data-ttu-id="76520-2059">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2059">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2060">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2060">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2061">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2061">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-2062">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2062">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2063">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2063">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2064">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2064">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_1'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2065">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2065">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2066">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2066">The identity of the application.</span></span> <span data-ttu-id="76520-2067">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2067">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2068">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2068">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2069">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2069">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-2070">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2070">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2071">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2071">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2072">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2072">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2073">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2073">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth_2'
    name: 'reportDeployedServicePackageHealth(string, string, string, HealthInformation, ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportDeployedServicePackageHealth(nodeName: string, applicationId: string, servicePackageName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2074">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2074">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2075">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2075">The identity of the application.</span></span> <span data-ttu-id="76520-2076">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2076">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2077">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2077">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2078">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2078">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: servicePackageName
          type:
            - string
          description: <span data-ttu-id="76520-2079">Имя пакета службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2079">The name of the service package.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2080">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2080">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2081">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2081">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
          description: <span data-ttu-id="76520-2082">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2082">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2083">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2083">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth'
    name: 'reportNodeHealth(string, HealthInformation, Models.ServiceFabricClientReportNodeHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2084">Возвращает состояние работоспособности указанного узла Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2084">Reports health state of the specified Service Fabric node.</span></span> <span data-ttu-id="76520-2085">Отчет должен содержать информацию об источнике отчета о работоспособности и свойстве, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2085">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2086">Отчет отправляется на узел шлюза Service Fabric, который передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2086">The report is sent to a Service Fabric gateway node, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2087">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2087">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2088">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2088">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2089">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, запустите GetNodeHealth и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2089">To see whether the report was applied in the health store, run GetNodeHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportNodeHealthOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2090">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2090">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2091">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2091">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2092">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2092">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportNodeHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_1'
    name: 'reportNodeHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2093">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2093">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2094">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2094">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2095">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2095">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2096">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2096">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportNodeHealth_2'
    name: 'reportNodeHealth(string, HealthInformation, ServiceFabricClientReportNodeHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportNodeHealth(nodeName: string, healthInformation: HealthInformation, options: ServiceFabricClientReportNodeHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2097">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2097">The name of the node.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2098">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2098">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2099">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2099">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
          description: <span data-ttu-id="76520-2100">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2100">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2101">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2101">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth'
    name: 'reportPartitionHealth(string, HealthInformation, Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2102">Возвращает состояние работоспособности для указанной секции Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2102">Reports health state of the specified Service Fabric partition.</span></span> <span data-ttu-id="76520-2103">Отчет должен содержать информацию об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2103">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2104">Отчет отправляется в секцию шлюза Service Fabric, которая передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2104">The report is sent to a Service Fabric gateway Partition, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2105">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2105">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2106">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2106">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2107">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, запустите GetPartitionHealth и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2107">To see whether the report was applied in the health store, run GetPartitionHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportPartitionHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2108">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2108">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2109">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2109">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2110">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2110">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportPartitionHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_1'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2111">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2111">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2112">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2112">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2113">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2113">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2114">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2114">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportPartitionHealth_2'
    name: 'reportPartitionHealth(string, HealthInformation, ServiceFabricClientReportPartitionHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportPartitionHealth(partitionId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportPartitionHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2115">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2115">The identity of the partition.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2116">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2116">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2117">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2117">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
          description: <span data-ttu-id="76520-2118">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2118">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2119">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2119">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2120">Возвращает состояние работоспособности для указанной реплики Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2120">Reports health state of the specified Service Fabric replica.</span></span> <span data-ttu-id="76520-2121">Отчет должен содержать информацию об источнике отчета о работоспособности и свойстве, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2121">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2122">Отчет отправляется к реплике шлюза Service Fabric, которая передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2122">The report is sent to a Service Fabric gateway Replica, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2123">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2123">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2124">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2124">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2125">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, запустите GetReplicaHealth и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2125">To see whether the report was applied in the health store, run GetReplicaHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportReplicaHealthOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2126">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2126">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2127">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2127">The identifier of the replica.</span></span>
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="76520-2128">Тип реплики службы (без отслеживания состояния или с отслеживанием состояния), для которого сообщаются работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2128">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="76520-2129">Ниже приведены возможные значения.</span><span class="sxs-lookup"><span data-stu-id="76520-2129">Following are the possible values.</span></span> <span data-ttu-id="76520-2130">Ниже перечислены возможные значения. «Без отслеживания состояния», «С отслеживанием состояния»</span><span class="sxs-lookup"><span data-stu-id="76520-2130">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2131">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2131">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2132">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2132">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportReplicaHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_1'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2133">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2133">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2134">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2134">The identifier of the replica.</span></span>
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="76520-2135">Тип реплики службы (без отслеживания состояния или с отслеживанием состояния), для которого сообщаются работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2135">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="76520-2136">Ниже приведены возможные значения.</span><span class="sxs-lookup"><span data-stu-id="76520-2136">Following are the possible values.</span></span> <span data-ttu-id="76520-2137">Ниже перечислены возможные значения. «Без отслеживания состояния», «С отслеживанием состояния»</span><span class="sxs-lookup"><span data-stu-id="76520-2137">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2138">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2138">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2139">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2139">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2140">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2140">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportReplicaHealth_2'
    name: 'reportReplicaHealth(string, string, Models.ReplicaHealthReportServiceKind, HealthInformation, ServiceFabricClientReportReplicaHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportReplicaHealth(partitionId: string, replicaId: string, replicaHealthReportServiceKind: Models.ReplicaHealthReportServiceKind, healthInformation: HealthInformation, options: ServiceFabricClientReportReplicaHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2141">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2141">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2142">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2142">The identifier of the replica.</span></span>
        - id: replicaHealthReportServiceKind
          type:
            - Models.ReplicaHealthReportServiceKind
          description: '<span data-ttu-id="76520-2143">Тип реплики службы (без отслеживания состояния или с отслеживанием состояния), для которого сообщаются работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2143">The kind of service replica (Stateless or Stateful) for which the health is being reported.</span></span> <span data-ttu-id="76520-2144">Ниже приведены возможные значения.</span><span class="sxs-lookup"><span data-stu-id="76520-2144">Following are the possible values.</span></span> <span data-ttu-id="76520-2145">Ниже перечислены возможные значения. «Без отслеживания состояния», «С отслеживанием состояния»</span><span class="sxs-lookup"><span data-stu-id="76520-2145">Possible values include: ''Stateless'', ''Stateful''</span></span>'
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2146">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2146">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2147">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2147">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
          description: <span data-ttu-id="76520-2148">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2148">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2149">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2149">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth'
    name: 'reportServiceHealth(string, HealthInformation, Models.ServiceFabricClientReportServiceHealthOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2150">Возвращает состояние работоспособности указанной службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2150">Reports health state of the specified Service Fabric service.</span></span> <span data-ttu-id="76520-2151">Отчет должен содержать сведения об источнике отчета о работоспособности и свойство, в котором об этом сообщается.</span><span class="sxs-lookup"><span data-stu-id="76520-2151">The report must contain the information about the source of the health report and property on which it is reported.</span></span>
      <span data-ttu-id="76520-2152">Отчет отправляется в службу шлюза Service Fabric, которая передает его в хранилище данных о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2152">The report is sent to a Service Fabric gateway Service, which forwards to the health store.</span></span>
      <span data-ttu-id="76520-2153">Отчет может быть принят шлюзом, но затем отклонен хранилищем данных о работоспособности после дополнительной проверки.</span><span class="sxs-lookup"><span data-stu-id="76520-2153">The report may be accepted by the gateway, but rejected by the health store after extra validation.</span></span>
      <span data-ttu-id="76520-2154">Например, хранилище данных о работоспособности может отклонить отчет из-за недопустимого параметра, например устаревшего порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="76520-2154">For example, the health store may reject the report because of an invalid parameter, like a stale sequence number.</span></span>
      <span data-ttu-id="76520-2155">Чтобы увидеть, применены ли отчет в хранилище данных о работоспособности, запустите GetServiceHealth и убедитесь, что отчет отображается в разделе HealthEvents.</span><span class="sxs-lookup"><span data-stu-id="76520-2155">To see whether the report was applied in the health store, run GetServiceHealth and check that the report appears in the HealthEvents section.</span></span>
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options?: Models.ServiceFabricClientReportServiceHealthOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2156">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2156">The identity of the service.</span></span> <span data-ttu-id="76520-2157">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2157">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2158">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2158">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2159">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2159">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2160">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2160">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2161">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2161">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientReportServiceHealthOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_1'
    name: 'reportServiceHealth(string, HealthInformation, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2162">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2162">The identity of the service.</span></span> <span data-ttu-id="76520-2163">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2163">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2164">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2164">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2165">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2165">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2166">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2166">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2167">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2167">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2168">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2168">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.reportServiceHealth_2'
    name: 'reportServiceHealth(string, HealthInformation, ServiceFabricClientReportServiceHealthOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reportServiceHealth(serviceId: string, healthInformation: HealthInformation, options: ServiceFabricClientReportServiceHealthOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2169">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2169">The identity of the service.</span></span> <span data-ttu-id="76520-2170">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2170">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2171">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2171">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2172">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2172">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: healthInformation
          type:
            - '@azure/servicefabric.HealthInformation'
          description: <span data-ttu-id="76520-2173">Описывает сведения о работоспособности для отчета о работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2173">Describes the health information for the health report.</span></span> <span data-ttu-id="76520-2174">Эта информация должна присутствовать во всех отчетов о работоспособности отправляется диспетчеру работоспособности.</span><span class="sxs-lookup"><span data-stu-id="76520-2174">This information needs to be present in all of the health reports sent to the health manager.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
          description: <span data-ttu-id="76520-2175">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2175">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2176">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2176">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad'
    name: 'resetPartitionLoad(string, Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2177">Сбрасывает текущую нагрузку секции Service Fabric к загрузке по умолчанию для службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2177">Resets the current load of a Service Fabric partition to the default load for the service.</span></span>
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options?: Models.ServiceFabricClientResetPartitionLoadOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2178">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2178">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResetPartitionLoadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_1'
    name: 'resetPartitionLoad(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2179">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2179">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2180">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2180">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resetPartitionLoad_2'
    name: 'resetPartitionLoad(string, ServiceFabricClientResetPartitionLoadOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resetPartitionLoad(partitionId: string, options: ServiceFabricClientResetPartitionLoadOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2181">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2181">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
          description: <span data-ttu-id="76520-2182">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2182">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2183">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2183">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService'
    name: 'resolveService(string, Models.ServiceFabricClientResolveServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2184">Разрешает секцию службы Service Fabric для получения конечных точек реплик службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2184">Resolve a Service Fabric service partition to get the endpoints of the service replicas.</span></span>
    syntax:
      content: 'function resolveService(serviceId: string, options?: Models.ServiceFabricClientResolveServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2185">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2185">The identity of the service.</span></span> <span data-ttu-id="76520-2186">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2186">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2187">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2187">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2188">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2188">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResolveServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_1'
    name: 'resolveService(string, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2189">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2189">The identity of the service.</span></span> <span data-ttu-id="76520-2190">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2190">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2191">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2191">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2192">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2192">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            <span data-ttu-id="76520-2193">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2193">The callback</span></span>
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resolveService_2'
    name: 'resolveService(string, ServiceFabricClientResolveServiceOptionalParams, ServiceCallback<ResolvedServicePartition>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveService(serviceId: string, options: ServiceFabricClientResolveServiceOptionalParams, callback: ServiceCallback<ResolvedServicePartition>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2194">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2194">The identity of the service.</span></span> <span data-ttu-id="76520-2195">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2195">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2196">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2196">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2197">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2197">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
          description: <span data-ttu-id="76520-2198">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2198">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
          description: |
            <span data-ttu-id="76520-2199">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2199">The callback</span></span>
      return:
        type:
          - Promise<Models.ResolveServiceResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2200">Перезапуск пакета кода, развернутого на узле Service Fabric в кластере.</span><span class="sxs-lookup"><span data-stu-id="76520-2200">Restarts a code package deployed on a Service Fabric node in a cluster.</span></span> <span data-ttu-id="76520-2201">Это приводит к прерыванию процесса пакета кода, который перезапустит все реплики пользовательской службы, размещенные в этом процессе.</span><span class="sxs-lookup"><span data-stu-id="76520-2201">This aborts the code package process, which will restart all the user service replicas hosted in that process.</span></span>'
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options?: Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2202">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2202">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2203">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2203">The identity of the application.</span></span> <span data-ttu-id="76520-2204">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2204">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2205">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2205">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2206">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2206">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="76520-2207">Описание пакета кода развернутого на узле Service Fabric для перезапуска.</span><span class="sxs-lookup"><span data-stu-id="76520-2207">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestartDeployedCodePackageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_1'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2208">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2208">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2209">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2209">The identity of the application.</span></span> <span data-ttu-id="76520-2210">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2210">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2211">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2211">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2212">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2212">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="76520-2213">Описание пакета кода развернутого на узле Service Fabric для перезапуска.</span><span class="sxs-lookup"><span data-stu-id="76520-2213">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2214">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2214">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartDeployedCodePackage_2'
    name: 'restartDeployedCodePackage(string, string, RestartDeployedCodePackageDescription, ServiceFabricClientRestartDeployedCodePackageOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartDeployedCodePackage(nodeName: string, applicationId: string, restartDeployedCodePackageDescription: RestartDeployedCodePackageDescription, options: ServiceFabricClientRestartDeployedCodePackageOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2215">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2215">The name of the node.</span></span>
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2216">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2216">The identity of the application.</span></span> <span data-ttu-id="76520-2217">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2217">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2218">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2218">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2219">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2219">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: restartDeployedCodePackageDescription
          type:
            - '@azure/servicefabric.RestartDeployedCodePackageDescription'
          description: <span data-ttu-id="76520-2220">Описание пакета кода развернутого на узле Service Fabric для перезапуска.</span><span class="sxs-lookup"><span data-stu-id="76520-2220">Describes the deployed code package on Service Fabric node to restart.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
          description: <span data-ttu-id="76520-2221">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2221">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2222">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2222">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode'
    name: 'restartNode(string, RestartNodeDescription, Models.ServiceFabricClientRestartNodeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2223">Перезапускает узел кластера Service Fabric, который уже запущен.</span><span class="sxs-lookup"><span data-stu-id="76520-2223">Restarts a Service Fabric cluster node that is already started.</span></span>'
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options?: Models.ServiceFabricClientRestartNodeOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2224">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2224">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: '<span data-ttu-id="76520-2225">Экземпляр узла, перезапуск и флаг, указывающий необходимость создания дампа процесса fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2225">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientRestartNodeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_1'
    name: 'restartNode(string, RestartNodeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2226">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2226">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: '<span data-ttu-id="76520-2227">Экземпляр узла, перезапуск и флаг, указывающий необходимость создания дампа процесса fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2227">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2228">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2228">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartNode_2'
    name: 'restartNode(string, RestartNodeDescription, ServiceFabricClientRestartNodeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartNode(nodeName: string, restartNodeDescription: RestartNodeDescription, options: ServiceFabricClientRestartNodeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2229">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2229">The name of the node.</span></span>
        - id: restartNodeDescription
          type:
            - '@azure/servicefabric.RestartNodeDescription'
          description: '<span data-ttu-id="76520-2230">Экземпляр узла, перезапуск и флаг, указывающий необходимость создания дампа процесса fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2230">The instance of the node to be restarted and a flag indicating the need to take dump of the fabric process.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
          description: <span data-ttu-id="76520-2231">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2231">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2232">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2232">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica'
    name: 'restartReplica(string, string, string, Models.ServiceFabricClientRestartReplicaOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2233">Перезапускает реплику сохраненной службы, работающую на узле.</span><span class="sxs-lookup"><span data-stu-id="76520-2233">Restarts a service replica of a persisted service running on a node.</span></span> <span data-ttu-id="76520-2234">Предупреждение. При использовании этого API отсутствуют какие-либо проверки безопасности.</span><span class="sxs-lookup"><span data-stu-id="76520-2234">Warning - There are no safety checks performed when this API is used.</span></span> <span data-ttu-id="76520-2235">Неправильное использование этого API может привести к потере доступности служб с отслеживанием состояния.</span><span class="sxs-lookup"><span data-stu-id="76520-2235">Incorrect use of this API can lead to availability loss for stateful services.</span></span>'
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options?: Models.ServiceFabricClientRestartReplicaOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2236">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2236">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2237">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2237">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2238">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2238">The identifier of the replica.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestartReplicaOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_1'
    name: 'restartReplica(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2239">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2239">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2240">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2240">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2241">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2241">The identifier of the replica.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2242">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2242">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restartReplica_2'
    name: 'restartReplica(string, string, string, ServiceFabricClientRestartReplicaOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restartReplica(nodeName: string, partitionId: string, replicaId: string, options: ServiceFabricClientRestartReplicaOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2243">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2243">The name of the node.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2244">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2244">The identity of the partition.</span></span>
        - id: replicaId
          type:
            - string
          description: <span data-ttu-id="76520-2245">Идентификатор реплики.</span><span class="sxs-lookup"><span data-stu-id="76520-2245">The identifier of the replica.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
          description: <span data-ttu-id="76520-2246">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2246">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2247">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2247">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition'
    name: 'restorePartition(string, RestorePartitionDescription, Models.ServiceFabricClientRestorePartitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2248">Восстановление состояния объекта с отслеживанием состояния сохраняются секции с помощью указанной точки резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2248">Restores the state of a of the stateful persisted partition using the specified backup point.</span></span> <span data-ttu-id="76520-2249">В случае, если раздел уже периодически копируемую, затем по умолчанию точки резервного копирования производится поиск в хранилище, указанном в политике архивации.</span><span class="sxs-lookup"><span data-stu-id="76520-2249">In case the partition is already being periodically backed up, then by default the backup point is looked for in the storage specified in backup policy.</span></span> <span data-ttu-id="76520-2250">Один также же, можно переопределить, указав сведения хранилища резервных копий как часть описание раздела восстановления в тексте.</span><span class="sxs-lookup"><span data-stu-id="76520-2250">One can also override the same by specifying the backup storage details as part of the restore partition description in body.</span></span> <span data-ttu-id="76520-2251">После запуска восстановления, ход его выполнения можно отслеживать с помощью операции GetRestoreProgress.</span><span class="sxs-lookup"><span data-stu-id="76520-2251">Once the restore is initiated, its progress can be tracked using the GetRestoreProgress operation.</span></span>
      <span data-ttu-id="76520-2252">В случае истечения времени ожидания операции, укажите значение времени ожидания больше восстановления в параметр запроса.</span><span class="sxs-lookup"><span data-stu-id="76520-2252">In case, the operation times out, specify a greater restore timeout value in the query parameter.</span></span>
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options?: Models.ServiceFabricClientRestorePartitionOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2253">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2253">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="76520-2254">Описывает параметры для восстановления раздела.</span><span class="sxs-lookup"><span data-stu-id="76520-2254">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRestorePartitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_1'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2255">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2255">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="76520-2256">Описывает параметры для восстановления раздела.</span><span class="sxs-lookup"><span data-stu-id="76520-2256">Describes the parameters to restore the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2257">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2257">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.restorePartition_2'
    name: 'restorePartition(string, RestorePartitionDescription, ServiceFabricClientRestorePartitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function restorePartition(partitionId: string, restorePartitionDescription: RestorePartitionDescription, options: ServiceFabricClientRestorePartitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2258">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2258">The identity of the partition.</span></span>
        - id: restorePartitionDescription
          type:
            - '@azure/servicefabric.RestorePartitionDescription'
          description: <span data-ttu-id="76520-2259">Описывает параметры для восстановления раздела.</span><span class="sxs-lookup"><span data-stu-id="76520-2259">Describes the parameters to restore the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
          description: <span data-ttu-id="76520-2260">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2260">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2261">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2261">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup'
    name: 'resumeApplicationBackup(string, Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2262">Ранее приостановленного приложения Service Fabric возобновляет периодического резервного копирования согласно политике архивации, настроенные в настоящее время для того же.</span><span class="sxs-lookup"><span data-stu-id="76520-2262">The previously suspended Service Fabric application resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>'
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientResumeApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2263">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2263">The identity of the application.</span></span> <span data-ttu-id="76520-2264">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2264">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2265">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2265">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2266">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2266">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_1'
    name: 'resumeApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2267">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2267">The identity of the application.</span></span> <span data-ttu-id="76520-2268">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2268">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2269">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2269">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2270">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2270">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2271">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2271">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationBackup_2'
    name: 'resumeApplicationBackup(string, ServiceFabricClientResumeApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationBackup(applicationId: string, options: ServiceFabricClientResumeApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2272">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2272">The identity of the application.</span></span> <span data-ttu-id="76520-2273">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2273">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2274">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2274">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2275">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2275">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
          description: <span data-ttu-id="76520-2276">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2276">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2277">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2277">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2278">Возобновление неотслеживаемого ручного обновления приложения Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2278">Resumes an unmonitored manual Service Fabric application upgrade.</span></span> <span data-ttu-id="76520-2279">Service Fabric обновляет домены обновления по одному.</span><span class="sxs-lookup"><span data-stu-id="76520-2279">Service Fabric upgrades one upgrade domain at a time.</span></span> <span data-ttu-id="76520-2280">При неотслеживаемом обновлении вручную по завершении обновления домена обновления Service Fabric ожидает вызов этого API, прежде чем переходить к следующему домену обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2280">For unmonitored manual upgrades, after Service Fabric finishes an upgrade domain, it waits for you to call this API before proceeding to the next upgrade domain.</span></span>'
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options?: Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2281">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2281">The identity of the application.</span></span> <span data-ttu-id="76520-2282">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2282">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2283">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2283">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2284">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2284">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2285">Описывает параметры для возобновления обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2285">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_1'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2286">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2286">The identity of the application.</span></span> <span data-ttu-id="76520-2287">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2287">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2288">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2288">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2289">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2289">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2290">Описывает параметры для возобновления обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2290">Describes the parameters for resuming an application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2291">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2291">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeApplicationUpgrade_2'
    name: 'resumeApplicationUpgrade(string, ResumeApplicationUpgradeDescription, ServiceFabricClientResumeApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeApplicationUpgrade(applicationId: string, resumeApplicationUpgradeDescription: ResumeApplicationUpgradeDescription, options: ServiceFabricClientResumeApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2292">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2292">The identity of the application.</span></span> <span data-ttu-id="76520-2293">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2293">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2294">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2294">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2295">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2295">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: resumeApplicationUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2296">Описывает параметры для возобновления обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2296">Describes the parameters for resuming an application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2297">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2297">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2298">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2298">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2299">Переместите код кластера или обновление конфигурации на следующий домен обновления при необходимости.</span><span class="sxs-lookup"><span data-stu-id="76520-2299">Make the cluster code or configuration upgrade move on to the next upgrade domain if appropriate.</span></span>
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options?: Models.ServiceFabricClientResumeClusterUpgradeOptionalParams)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2300">Описывает параметры для возобновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2300">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_1'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2301">Описывает параметры для возобновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2301">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2302">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2302">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeClusterUpgrade_2'
    name: 'resumeClusterUpgrade(ResumeClusterUpgradeDescription, ServiceFabricClientResumeClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeClusterUpgrade(resumeClusterUpgradeDescription: ResumeClusterUpgradeDescription, options: ServiceFabricClientResumeClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - '@azure/servicefabric.ResumeClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2303">Описывает параметры для возобновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2303">Describes the parameters for resuming a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2304">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2304">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2305">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2305">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup'
    name: 'resumePartitionBackup(string, Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2306">Ранее приостановленного секции возобновляет периодического резервного копирования согласно политике архивации, настроенные в настоящее время для того же.</span><span class="sxs-lookup"><span data-stu-id="76520-2306">The previously suspended partition resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>'
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options?: Models.ServiceFabricClientResumePartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2307">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2307">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumePartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_1'
    name: 'resumePartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2308">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2308">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2309">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2309">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumePartitionBackup_2'
    name: 'resumePartitionBackup(string, ServiceFabricClientResumePartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumePartitionBackup(partitionId: string, options: ServiceFabricClientResumePartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2310">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2310">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
          description: <span data-ttu-id="76520-2311">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2311">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2312">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2312">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup'
    name: 'resumeServiceBackup(string, Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2313">Периодическое резервное копирование выполняется согласно политике архивации, настроенные в настоящее время для того же возобновлении ранее приостановленного службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2313">The previously suspended Service Fabric service resumes taking periodic backup as per the backup policy currently configured for the same.</span></span>'
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options?: Models.ServiceFabricClientResumeServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2314">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2314">The identity of the service.</span></span> <span data-ttu-id="76520-2315">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2315">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2316">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2316">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2317">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2317">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientResumeServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_1'
    name: 'resumeServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2318">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2318">The identity of the service.</span></span> <span data-ttu-id="76520-2319">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2319">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2320">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2320">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2321">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2321">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2322">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2322">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.resumeServiceBackup_2'
    name: 'resumeServiceBackup(string, ServiceFabricClientResumeServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resumeServiceBackup(serviceId: string, options: ServiceFabricClientResumeServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2323">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2323">The identity of the service.</span></span> <span data-ttu-id="76520-2324">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2324">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2325">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2325">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2326">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2326">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
          description: <span data-ttu-id="76520-2327">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2327">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2328">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2328">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade'
    name: 'rollbackApplicationUpgrade(string, Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2329">Запускает откат текущего обновления приложения до предыдущей версии.</span><span class="sxs-lookup"><span data-stu-id="76520-2329">Starts rolling back the current application upgrade to the previous version.</span></span> <span data-ttu-id="76520-2330">Этот API можно использовать только для отката текущего активного обновления, при котором выполняется накат до новой версии.</span><span class="sxs-lookup"><span data-stu-id="76520-2330">This API can only be used to roll back the current in-progress upgrade that is rolling forward to new version.</span></span> <span data-ttu-id="76520-2331">Если обновление приложения в текущий момент не выполняется, используйте API StartApplicationUpgrade, чтобы обновить его до нужной версии, включая откат до предыдущей версии.</span><span class="sxs-lookup"><span data-stu-id="76520-2331">If the application is not currently being upgraded use StartApplicationUpgrade API to upgrade it to desired version, including rolling back to a previous version.</span></span>'
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options?: Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2332">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2332">The identity of the application.</span></span> <span data-ttu-id="76520-2333">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2333">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2334">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2334">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2335">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2335">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientRollbackApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_1'
    name: 'rollbackApplicationUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2336">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2336">The identity of the application.</span></span> <span data-ttu-id="76520-2337">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2337">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2338">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2338">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2339">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2339">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2340">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2340">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackApplicationUpgrade_2'
    name: 'rollbackApplicationUpgrade(string, ServiceFabricClientRollbackApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackApplicationUpgrade(applicationId: string, options: ServiceFabricClientRollbackApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2341">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2341">The identity of the application.</span></span> <span data-ttu-id="76520-2342">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2342">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2343">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2343">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2344">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2344">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2345">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2345">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2346">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2346">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade'
    name: rollbackClusterUpgrade(Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2347">Откатите обновление кода или конфигурации кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2347">Roll back the code or configuration upgrade of a Service Fabric cluster.</span></span>
    syntax:
      content: 'function rollbackClusterUpgrade(options?: Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientRollbackClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_1'
    name: rollbackClusterUpgrade(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2348">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2348">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.rollbackClusterUpgrade_2'
    name: 'rollbackClusterUpgrade(ServiceFabricClientRollbackClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rollbackClusterUpgrade(options: ServiceFabricClientRollbackClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2349">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2349">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2350">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2350">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2351">Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.</span><span class="sxs-lookup"><span data-stu-id="76520-2351">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="76520-2352">Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.</span><span class="sxs-lookup"><span data-stu-id="76520-2352">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="76520-2353">OperationSpec, используемые для заполнения httpRequest.</span><span class="sxs-lookup"><span data-stu-id="76520-2353">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="76520-2354">Обратный вызов, вызываемый после получения ответа.</span><span class="sxs-lookup"><span data-stu-id="76520-2354">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2355">Отправьте предоставленный httpRequest.</span><span class="sxs-lookup"><span data-stu-id="76520-2355">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.constructor'
    name: ServiceFabricClient(Models.ServiceFabricClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2356">Инициализирует новый экземпляр класса ServiceFabricClient.</span><span class="sxs-lookup"><span data-stu-id="76520-2356">Initializes a new instance of the ServiceFabricClient class.</span></span>
    syntax:
      content: 'new ServiceFabricClient(options?: Models.ServiceFabricClientOptions)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientOptions
          description: ''
          optional: true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2357">Обновите состояние службы из службы обновления Оркестрации Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2357">Update the service state of Service Fabric Upgrade Orchestration Service.</span></span> <span data-ttu-id="76520-2358">Этот API используется внутренним образом для предоставления поддержки.</span><span class="sxs-lookup"><span data-stu-id="76520-2358">This API is internally used for support purposes.</span></span>
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options?: Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="76520-2359">Состояние службы из службы обновления Оркестрации Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2359">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_1'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="76520-2360">Состояние службы из службы обновления Оркестрации Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2360">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            <span data-ttu-id="76520-2361">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2361">The callback</span></span>
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.setUpgradeOrchestrationServiceState_2'
    name: 'setUpgradeOrchestrationServiceState(UpgradeOrchestrationServiceState, ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setUpgradeOrchestrationServiceState(upgradeOrchestrationServiceState: UpgradeOrchestrationServiceState, options: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams, callback: ServiceCallback<UpgradeOrchestrationServiceStateSummary>)'
      parameters:
        - id: upgradeOrchestrationServiceState
          type:
            - '@azure/servicefabric.UpgradeOrchestrationServiceState'
          description: <span data-ttu-id="76520-2362">Состояние службы из службы обновления Оркестрации Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2362">Service state of Service Fabric Upgrade Orchestration Service.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
          description: <span data-ttu-id="76520-2363">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2363">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
          description: |
            <span data-ttu-id="76520-2364">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2364">The callback</span></span>
      return:
        type:
          - Promise<Models.SetUpgradeOrchestrationServiceStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2365">Проверяет указанные параметры обновления приложения и запускает обновление приложения, если параметры являются допустимыми.</span><span class="sxs-lookup"><span data-stu-id="76520-2365">Validates the supplied application upgrade parameters and starts upgrading the application if the parameters are valid.</span></span>'
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options?: Models.ServiceFabricClientStartApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2366">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2366">The identity of the application.</span></span> <span data-ttu-id="76520-2367">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2367">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2368">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2368">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2369">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2369">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2370">Параметры для обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2370">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_1'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2371">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2371">The identity of the application.</span></span> <span data-ttu-id="76520-2372">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2372">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2373">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2373">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2374">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2374">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2375">Параметры для обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2375">Parameters for an application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2376">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2376">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startApplicationUpgrade_2'
    name: 'startApplicationUpgrade(string, ApplicationUpgradeDescription, ServiceFabricClientStartApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startApplicationUpgrade(applicationId: string, applicationUpgradeDescription: ApplicationUpgradeDescription, options: ServiceFabricClientStartApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2377">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2377">The identity of the application.</span></span> <span data-ttu-id="76520-2378">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2378">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2379">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2379">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2380">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2380">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeDescription'
          description: <span data-ttu-id="76520-2381">Параметры для обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2381">Parameters for an application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2382">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2382">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2383">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2383">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos'
    name: 'startChaos(ChaosParameters, Models.ServiceFabricClientStartChaosOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2384">Если служба Chaos еще не запущена в кластере, sfctl chaos start запускает ее с переданными параметрами.</span><span class="sxs-lookup"><span data-stu-id="76520-2384">If Chaos is not already running in the cluster, it starts Chaos with the passed in Chaos parameters.</span></span>
      <span data-ttu-id="76520-2385">Если во время вызова служба Chaos уже выполняется, вызов завершается ошибкой с кодом FABRIC_E_CHAOS_ALREADY_RUNNING.</span><span class="sxs-lookup"><span data-stu-id="76520-2385">If Chaos is already running when this call is made, the call fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING.</span></span>
      <span data-ttu-id="76520-2386">Ознакомьтесь со статьей [Induce управлением Chaos в кластерах Service Fabric](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) для получения дополнительных сведений.</span><span class="sxs-lookup"><span data-stu-id="76520-2386">Refer to the article [Induce controlled Chaos in Service Fabric clusters](https://docs.microsoft.com/azure/service-fabric/service-fabric-controlled-chaos) for more details.</span></span>
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options?: Models.ServiceFabricClientStartChaosOptionalParams)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: '<span data-ttu-id="76520-2387">Описание всех параметров, чтобы настроить запуск Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-2387">Describes all the parameters to configure a Chaos run.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_1'
    name: 'startChaos(ChaosParameters, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: '<span data-ttu-id="76520-2388">Описание всех параметров, чтобы настроить запуск Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-2388">Describes all the parameters to configure a Chaos run.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2389">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2389">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startChaos_2'
    name: 'startChaos(ChaosParameters, ServiceFabricClientStartChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startChaos(chaosParameters: ChaosParameters, options: ServiceFabricClientStartChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: chaosParameters
          type:
            - '@azure/servicefabric.ChaosParameters'
          description: '<span data-ttu-id="76520-2390">Описание всех параметров, чтобы настроить запуск Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-2390">Describes all the parameters to configure a Chaos run.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
          description: <span data-ttu-id="76520-2391">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2391">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2392">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2392">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2393">Проверка указанных параметров обновления поставляемой конфигурации и запуск обновления конфигурации кластера, если параметры действительны.</span><span class="sxs-lookup"><span data-stu-id="76520-2393">Validate the supplied configuration upgrade parameters and start upgrading the cluster configuration if the parameters are valid.</span></span>'
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options?: Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="76520-2394">Параметры для обновления конфигурации автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2394">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_1'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="76520-2395">Параметры для обновления конфигурации автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2395">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2396">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2396">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade_2'
    name: 'startClusterConfigurationUpgrade(ClusterConfigurationUpgradeDescription, ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription: ClusterConfigurationUpgradeDescription, options: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
          description: <span data-ttu-id="76520-2397">Параметры для обновления конфигурации автономного кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2397">Parameters for a standalone cluster configuration upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2398">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2398">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2399">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2399">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2400">Проверяет указанные параметры обновления и начинает обновление версии кода или конфигурации кластера Service Fabric, если параметры являются допустимыми.</span><span class="sxs-lookup"><span data-stu-id="76520-2400">Validate the supplied upgrade parameters and start upgrading the code or configuration version of a Service Fabric cluster if the parameters are valid.</span></span>'
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options?: Models.ServiceFabricClientStartClusterUpgradeOptionalParams)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2401">Описывает параметры для запуска обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2401">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_1'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2402">Описывает параметры для запуска обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2402">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2403">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2403">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startClusterUpgrade_2'
    name: 'startClusterUpgrade(StartClusterUpgradeDescription, ServiceFabricClientStartClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startClusterUpgrade(startClusterUpgradeDescription: StartClusterUpgradeDescription, options: ServiceFabricClientStartClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - '@azure/servicefabric.StartClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2404">Описывает параметры для запуска обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2404">Describes the parameters for starting a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2405">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2405">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2406">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2406">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2407">Проверяет указанные параметры обновления и запускает обновление развертывания, если параметры верные.</span><span class="sxs-lookup"><span data-stu-id="76520-2407">Validates the supplied upgrade parameters and starts upgrading the deployment if the parameters are valid.</span></span>'
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options?: Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2408">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2408">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="76520-2409">Параметры обновления развертывания compose.</span><span class="sxs-lookup"><span data-stu-id="76520-2409">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_1'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2410">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2410">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="76520-2411">Параметры обновления развертывания compose.</span><span class="sxs-lookup"><span data-stu-id="76520-2411">Parameters for upgrading compose deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2412">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2412">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade_2'
    name: 'startComposeDeploymentUpgrade(string, ComposeDeploymentUpgradeDescription, ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startComposeDeploymentUpgrade(deploymentName: string, composeDeploymentUpgradeDescription: ComposeDeploymentUpgradeDescription, options: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2413">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2413">The identity of the deployment.</span></span>
        - id: composeDeploymentUpgradeDescription
          type:
            - '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
          description: <span data-ttu-id="76520-2414">Параметры обновления развертывания compose.</span><span class="sxs-lookup"><span data-stu-id="76520-2414">Parameters for upgrading compose deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2415">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2415">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2416">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2416">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, Models.ServiceFabricClientStartDataLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2417">Этот API вызовет потерю данных в указанной секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2417">This API will induce data loss for the specified partition.</span></span> <span data-ttu-id="76520-2418">Он активирует вызов API OnDataLoss секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2418">It will trigger a call to the OnDataLoss API of the partition.</span></span>
      <span data-ttu-id="76520-2419">Потеря фактических данных будет зависеть от указанного DataLossMode.</span><span class="sxs-lookup"><span data-stu-id="76520-2419">Actual data loss will depend on the specified DataLossMode.</span></span>
      - <span data-ttu-id="76520-2420">PartialDataLoss. Только кворум реплик будет удален и OnDataLoss запустится для секции, но фактическая потеря данных зависит от наличия репликации на лету.</span><span class="sxs-lookup"><span data-stu-id="76520-2420">PartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is triggered for the partition but actual data loss depends on the presence of in-flight replication.</span></span>
      - <span data-ttu-id="76520-2421">FullDataLoss. Все реплики удаляются, таким образом все данные будут потеряны и активируется OnDataLoss.</span><span class="sxs-lookup"><span data-stu-id="76520-2421">FullDataLoss - All replicas are removed hence all data is lost and OnDataLoss is triggered.</span></span>

      <span data-ttu-id="76520-2422">Этот API следует вызывать только со службой с отслеживанием состояния в качестве целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="76520-2422">This API should only be called with a stateful service as the target.</span></span>

      <span data-ttu-id="76520-2423">Вызов этого API с системной службой в качестве целевого объекта не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="76520-2423">Calling this API with a system service as the target is not advised.</span></span>

      <span data-ttu-id="76520-2424">Примечание.  Вызов этого API нельзя отменить.</span><span class="sxs-lookup"><span data-stu-id="76520-2424">Note:  Once this API has been called, it cannot be reversed.</span></span> <span data-ttu-id="76520-2425">Вызов CancelOperation только остановит выполнение и очистит внутреннее состояния системы.</span><span class="sxs-lookup"><span data-stu-id="76520-2425">Calling CancelOperation will only stop execution and clean up internal system state.</span></span>
      <span data-ttu-id="76520-2426">Данные не восстановятся, если команда выполнялась достаточное время, чтобы вызвать потерю данных.</span><span class="sxs-lookup"><span data-stu-id="76520-2426">It will not restore data if the command has progressed far enough to cause data loss.</span></span>

      <span data-ttu-id="76520-2427">Вызовите API GetDataLossProgress с тем же OperationId, чтобы вернуть сведения об операции, запущенной с помощью этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2427">Call the GetDataLossProgress API with the same OperationId to return information on the operation started with this API.</span></span>
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options?: Models.ServiceFabricClientStartDataLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2428">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2428">The identity of the service.</span></span> <span data-ttu-id="76520-2429">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2429">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2430">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2430">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2431">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2431">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2432">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2432">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2433">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2433">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2434">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2434">This is passed into the corresponding GetProgress API</span></span>'
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="76520-2435">Это перечисление передается в API StartDataLoss, чтобы указать, какой тип потери данных следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2435">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="76520-2436">Ниже перечислены возможные значения. «Invalid», «PartialDataLoss», «FullDataLoss»</span><span class="sxs-lookup"><span data-stu-id="76520-2436">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartDataLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_1'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2437">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2437">The identity of the service.</span></span> <span data-ttu-id="76520-2438">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2438">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2439">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2439">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2440">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2440">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2441">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2441">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2442">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2442">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2443">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2443">This is passed into the corresponding GetProgress API</span></span>'
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="76520-2444">Это перечисление передается в API StartDataLoss, чтобы указать, какой тип потери данных следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2444">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="76520-2445">Ниже перечислены возможные значения. «Invalid», «PartialDataLoss», «FullDataLoss»</span><span class="sxs-lookup"><span data-stu-id="76520-2445">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2446">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2446">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startDataLoss_2'
    name: 'startDataLoss(string, string, string, Models.DataLossMode, ServiceFabricClientStartDataLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startDataLoss(serviceId: string, partitionId: string, operationId: string, dataLossMode: Models.DataLossMode, options: ServiceFabricClientStartDataLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2447">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2447">The identity of the service.</span></span> <span data-ttu-id="76520-2448">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2448">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2449">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2449">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2450">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2450">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2451">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2451">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2452">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2452">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2453">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2453">This is passed into the corresponding GetProgress API</span></span>'
        - id: dataLossMode
          type:
            - Models.DataLossMode
          description: '<span data-ttu-id="76520-2454">Это перечисление передается в API StartDataLoss, чтобы указать, какой тип потери данных следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2454">This enum is passed to the StartDataLoss API to indicate what type of data loss to induce.</span></span> <span data-ttu-id="76520-2455">Ниже перечислены возможные значения. «Invalid», «PartialDataLoss», «FullDataLoss»</span><span class="sxs-lookup"><span data-stu-id="76520-2455">Possible values include: ''Invalid'', ''PartialDataLoss'', ''FullDataLoss''</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
          description: <span data-ttu-id="76520-2456">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2456">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2457">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2457">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2458">Запускает или останавливает узел кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2458">Starts or stops a cluster node.</span></span>  <span data-ttu-id="76520-2459">Узел кластера — это процесс, а не экземпляр операционной системы.</span><span class="sxs-lookup"><span data-stu-id="76520-2459">A cluster node is a process, not the OS instance itself.</span></span>  <span data-ttu-id="76520-2460">Для запуска узла передайте значение "Start" в параметр NodeTransitionType.</span><span class="sxs-lookup"><span data-stu-id="76520-2460">To start a node, pass in "Start" for the NodeTransitionType parameter.</span></span>
      <span data-ttu-id="76520-2461">Для остановки узла передайте в параметр NodeTransitionType значение "Stop".</span><span class="sxs-lookup"><span data-stu-id="76520-2461">To stop a node, pass in "Stop" for the NodeTransitionType parameter.</span></span>  <span data-ttu-id="76520-2462">Этот API начнет операцию. Когда API вернется, возможно, узел еще не завершит переход.</span><span class="sxs-lookup"><span data-stu-id="76520-2462">This API starts the operation - when the API returns the node may not have finished transitioning yet.</span></span>
      <span data-ttu-id="76520-2463">Вызовите GetNodeTransitionProgress с тем же значением OperationId, чтобы узнать ход выполнения операции.</span><span class="sxs-lookup"><span data-stu-id="76520-2463">Call GetNodeTransitionProgress with the same OperationId to get the progress of the operation.</span></span>
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options?: Models.ServiceFabricClientStartNodeTransitionOptionalParams)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2464">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2464">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2465">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2465">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2466">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2466">This is passed into the corresponding GetProgress API</span></span>'
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="76520-2467">Указывает тип выполняемого перехода.</span><span class="sxs-lookup"><span data-stu-id="76520-2467">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="76520-2468">NodeTransitionType.Start запускает остановленный узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2468">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="76520-2469">NodeTransitionType.Stop останавливает работающий узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2469">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="76520-2470">Ниже перечислены возможные значения. «Invalid», «Start», «Stop»</span><span class="sxs-lookup"><span data-stu-id="76520-2470">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-2471">Идентификатор экземпляра целевого узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2471">The node instance ID of the target node.</span></span>  <span data-ttu-id="76520-2472">Его можно определить с помощью API GetNodeInfo.</span><span class="sxs-lookup"><span data-stu-id="76520-2472">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="76520-2473">Длительность остановки узла в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2473">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="76520-2474">Минимальное значение равно 600, а максимальное — 14400.</span><span class="sxs-lookup"><span data-stu-id="76520-2474">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="76520-2475">После истечения этого времени узел автоматически возобновляет работу.</span><span class="sxs-lookup"><span data-stu-id="76520-2475">After this time expires, the node will automatically come back up.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartNodeTransitionOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_1'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2476">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2476">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2477">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2477">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2478">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2478">This is passed into the corresponding GetProgress API</span></span>'
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="76520-2479">Указывает тип выполняемого перехода.</span><span class="sxs-lookup"><span data-stu-id="76520-2479">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="76520-2480">NodeTransitionType.Start запускает остановленный узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2480">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="76520-2481">NodeTransitionType.Stop останавливает работающий узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2481">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="76520-2482">Ниже перечислены возможные значения. «Invalid», «Start», «Stop»</span><span class="sxs-lookup"><span data-stu-id="76520-2482">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-2483">Идентификатор экземпляра целевого узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2483">The node instance ID of the target node.</span></span>  <span data-ttu-id="76520-2484">Его можно определить с помощью API GetNodeInfo.</span><span class="sxs-lookup"><span data-stu-id="76520-2484">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="76520-2485">Длительность остановки узла в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2485">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="76520-2486">Минимальное значение равно 600, а максимальное — 14400.</span><span class="sxs-lookup"><span data-stu-id="76520-2486">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="76520-2487">После истечения этого времени узел автоматически возобновляет работу.</span><span class="sxs-lookup"><span data-stu-id="76520-2487">After this time expires, the node will automatically come back up.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2488">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2488">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startNodeTransition_2'
    name: 'startNodeTransition(string, string, Models.NodeTransitionType, string, number, ServiceFabricClientStartNodeTransitionOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startNodeTransition(nodeName: string, operationId: string, nodeTransitionType: Models.NodeTransitionType, nodeInstanceId: string, stopDurationInSeconds: number, options: ServiceFabricClientStartNodeTransitionOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: nodeName
          type:
            - string
          description: <span data-ttu-id="76520-2489">Имя узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2489">The name of the node.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2490">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2490">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2491">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2491">This is passed into the corresponding GetProgress API</span></span>'
        - id: nodeTransitionType
          type:
            - Models.NodeTransitionType
          description: '<span data-ttu-id="76520-2492">Указывает тип выполняемого перехода.</span><span class="sxs-lookup"><span data-stu-id="76520-2492">Indicates the type of transition to perform.</span></span>  <span data-ttu-id="76520-2493">NodeTransitionType.Start запускает остановленный узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2493">NodeTransitionType.Start will start a stopped node.</span></span>  <span data-ttu-id="76520-2494">NodeTransitionType.Stop останавливает работающий узел.</span><span class="sxs-lookup"><span data-stu-id="76520-2494">NodeTransitionType.Stop will stop a node that is up.</span></span> <span data-ttu-id="76520-2495">Ниже перечислены возможные значения. «Invalid», «Start», «Stop»</span><span class="sxs-lookup"><span data-stu-id="76520-2495">Possible values include: ''Invalid'', ''Start'', ''Stop''</span></span>'
        - id: nodeInstanceId
          type:
            - string
          description: <span data-ttu-id="76520-2496">Идентификатор экземпляра целевого узла.</span><span class="sxs-lookup"><span data-stu-id="76520-2496">The node instance ID of the target node.</span></span>  <span data-ttu-id="76520-2497">Его можно определить с помощью API GetNodeInfo.</span><span class="sxs-lookup"><span data-stu-id="76520-2497">This can be determined through GetNodeInfo API.</span></span>
        - id: stopDurationInSeconds
          type:
            - number
          description: '<span data-ttu-id="76520-2498">Длительность остановки узла в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2498">The duration, in seconds, to keep the node stopped.</span></span>  <span data-ttu-id="76520-2499">Минимальное значение равно 600, а максимальное — 14400.</span><span class="sxs-lookup"><span data-stu-id="76520-2499">The minimum value is 600, the maximum is 14400.</span></span>  <span data-ttu-id="76520-2500">После истечения этого времени узел автоматически возобновляет работу.</span><span class="sxs-lookup"><span data-stu-id="76520-2500">After this time expires, the node will automatically come back up.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
          description: <span data-ttu-id="76520-2501">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2501">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2502">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2502">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2503">Этот API удобен для тестирования отработки отказа.</span><span class="sxs-lookup"><span data-stu-id="76520-2503">This API is useful for testing failover.</span></span>
      <span data-ttu-id="76520-2504">Если он используется для секции службы без отслеживания состояния, то параметр RestartPartitionMode должен иметь значение AllReplicasOrInstances.</span><span class="sxs-lookup"><span data-stu-id="76520-2504">If used to target a stateless service partition, RestartPartitionMode must be AllReplicasOrInstances.</span></span>

      <span data-ttu-id="76520-2505">Вызовите API GetPartitionRestartProgress, указав то же значение OperationId, чтобы узнать ход выполнения.</span><span class="sxs-lookup"><span data-stu-id="76520-2505">Call the GetPartitionRestartProgress API using the same OperationId to get the progress.</span></span>
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options?: Models.ServiceFabricClientStartPartitionRestartOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2506">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2506">The identity of the service.</span></span> <span data-ttu-id="76520-2507">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2507">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2508">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2508">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2509">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2509">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2510">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2510">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2511">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2511">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2512">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2512">This is passed into the corresponding GetProgress API</span></span>'
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="76520-2513">Указывает, какие секции нужно перезапустить.</span><span class="sxs-lookup"><span data-stu-id="76520-2513">Describe which partitions to restart.</span></span> <span data-ttu-id="76520-2514">Ниже перечислены возможные значения. «Invalid», «AllReplicasOrInstances», «OnlyActiveSecondaries»</span><span class="sxs-lookup"><span data-stu-id="76520-2514">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartPartitionRestartOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_1'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2515">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2515">The identity of the service.</span></span> <span data-ttu-id="76520-2516">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2516">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2517">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2517">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2518">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2518">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2519">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2519">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2520">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2520">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2521">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2521">This is passed into the corresponding GetProgress API</span></span>'
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="76520-2522">Указывает, какие секции нужно перезапустить.</span><span class="sxs-lookup"><span data-stu-id="76520-2522">Describe which partitions to restart.</span></span> <span data-ttu-id="76520-2523">Ниже перечислены возможные значения. «Invalid», «AllReplicasOrInstances», «OnlyActiveSecondaries»</span><span class="sxs-lookup"><span data-stu-id="76520-2523">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2524">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2524">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startPartitionRestart_2'
    name: 'startPartitionRestart(string, string, string, Models.RestartPartitionMode, ServiceFabricClientStartPartitionRestartOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startPartitionRestart(serviceId: string, partitionId: string, operationId: string, restartPartitionMode: Models.RestartPartitionMode, options: ServiceFabricClientStartPartitionRestartOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2525">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2525">The identity of the service.</span></span> <span data-ttu-id="76520-2526">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2526">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2527">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2527">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2528">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2528">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2529">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2529">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2530">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2530">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2531">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2531">This is passed into the corresponding GetProgress API</span></span>'
        - id: restartPartitionMode
          type:
            - Models.RestartPartitionMode
          description: '<span data-ttu-id="76520-2532">Указывает, какие секции нужно перезапустить.</span><span class="sxs-lookup"><span data-stu-id="76520-2532">Describe which partitions to restart.</span></span> <span data-ttu-id="76520-2533">Ниже перечислены возможные значения. «Invalid», «AllReplicasOrInstances», «OnlyActiveSecondaries»</span><span class="sxs-lookup"><span data-stu-id="76520-2533">Possible values include: ''Invalid'', ''AllReplicasOrInstances'', ''OnlyActiveSecondaries''</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
          description: <span data-ttu-id="76520-2534">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2534">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2535">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2535">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, Models.ServiceFabricClientStartQuorumLossOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2536">Этот API полезен в ситуации временной потери кворума в службе.</span><span class="sxs-lookup"><span data-stu-id="76520-2536">This API is useful for a temporary quorum loss situation on your service.</span></span>
      <span data-ttu-id="76520-2537">Вызовите API GetQuorumLossProgress с тем же OperationId, чтобы вернуть сведения об операции, запущенной с помощью этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2537">Call the GetQuorumLossProgress API with the same OperationId to return information on the operation started with this API.</span></span>

      <span data-ttu-id="76520-2538">Его можно вызвать только в постоянных службах с отслеживанием состояния (HasPersistedState имеет значение true).</span><span class="sxs-lookup"><span data-stu-id="76520-2538">This can only be called on stateful persisted (HasPersistedState==true) services.</span></span>  <span data-ttu-id="76520-2539">Не используйте этот API в службах без отслеживания состояния или в службах с отслеживанием состояния, применяемых только в памяти.</span><span class="sxs-lookup"><span data-stu-id="76520-2539">Do not use this API on stateless services or stateful in-memory only services.</span></span>
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options?: Models.ServiceFabricClientStartQuorumLossOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2540">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2540">The identity of the service.</span></span> <span data-ttu-id="76520-2541">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2541">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2542">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2542">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2543">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2543">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2544">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2544">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2545">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2545">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2546">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2546">This is passed into the corresponding GetProgress API</span></span>'
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="76520-2547">Это перечисление передается в API StartQuorumLoss, чтобы указать, какой тип потери кворума следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2547">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="76520-2548">Ниже перечислены возможные значения. «Invalid», «QuorumReplicas», «AllReplicas»</span><span class="sxs-lookup"><span data-stu-id="76520-2548">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: '<span data-ttu-id="76520-2549">Количество времени, в течение которого секция будет находиться в состоянии потери кворума.</span><span class="sxs-lookup"><span data-stu-id="76520-2549">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="76520-2550">Значение должно указываться в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2550">This must be specified in seconds.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientStartQuorumLossOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_1'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2551">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2551">The identity of the service.</span></span> <span data-ttu-id="76520-2552">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2552">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2553">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2553">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2554">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2554">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2555">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2555">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2556">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2556">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2557">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2557">This is passed into the corresponding GetProgress API</span></span>'
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="76520-2558">Это перечисление передается в API StartQuorumLoss, чтобы указать, какой тип потери кворума следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2558">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="76520-2559">Ниже перечислены возможные значения. «Invalid», «QuorumReplicas», «AllReplicas»</span><span class="sxs-lookup"><span data-stu-id="76520-2559">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: '<span data-ttu-id="76520-2560">Количество времени, в течение которого секция будет находиться в состоянии потери кворума.</span><span class="sxs-lookup"><span data-stu-id="76520-2560">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="76520-2561">Значение должно указываться в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2561">This must be specified in seconds.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2562">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2562">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startQuorumLoss_2'
    name: 'startQuorumLoss(string, string, string, Models.QuorumLossMode, number, ServiceFabricClientStartQuorumLossOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startQuorumLoss(serviceId: string, partitionId: string, operationId: string, quorumLossMode: Models.QuorumLossMode, quorumLossDuration: number, options: ServiceFabricClientStartQuorumLossOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2563">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2563">The identity of the service.</span></span> <span data-ttu-id="76520-2564">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2564">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2565">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2565">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2566">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2566">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2567">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2567">The identity of the partition.</span></span>
        - id: operationId
          type:
            - string
          description: '<span data-ttu-id="76520-2568">Идентификатор GUID, определяющий вызов этого API.</span><span class="sxs-lookup"><span data-stu-id="76520-2568">A GUID that identifies a call of this API.</span></span>  <span data-ttu-id="76520-2569">Он передается в соответствующий API GetProgress</span><span class="sxs-lookup"><span data-stu-id="76520-2569">This is passed into the corresponding GetProgress API</span></span>'
        - id: quorumLossMode
          type:
            - Models.QuorumLossMode
          description: '<span data-ttu-id="76520-2570">Это перечисление передается в API StartQuorumLoss, чтобы указать, какой тип потери кворума следует вызвать.</span><span class="sxs-lookup"><span data-stu-id="76520-2570">This enum is passed to the StartQuorumLoss API to indicate what type of quorum loss to induce.</span></span> <span data-ttu-id="76520-2571">Ниже перечислены возможные значения. «Invalid», «QuorumReplicas», «AllReplicas»</span><span class="sxs-lookup"><span data-stu-id="76520-2571">Possible values include: ''Invalid'', ''QuorumReplicas'', ''AllReplicas''</span></span>'
        - id: quorumLossDuration
          type:
            - number
          description: '<span data-ttu-id="76520-2572">Количество времени, в течение которого секция будет находиться в состоянии потери кворума.</span><span class="sxs-lookup"><span data-stu-id="76520-2572">The amount of time for which the partition will be kept in quorum loss.</span></span>  <span data-ttu-id="76520-2573">Значение должно указываться в секундах.</span><span class="sxs-lookup"><span data-stu-id="76520-2573">This must be specified in seconds.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
          description: <span data-ttu-id="76520-2574">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2574">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2575">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2575">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade'
    name: 'startRollbackComposeDeploymentUpgrade(string, Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2576">Выполняет откат обновления развертывания Compose в Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2576">Rollback a service fabric compose deployment upgrade.</span></span>
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options?: Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2577">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2577">The identity of the deployment.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_1'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2578">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2578">The identity of the deployment.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2579">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2579">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.startRollbackComposeDeploymentUpgrade_2'
    name: 'startRollbackComposeDeploymentUpgrade(string, ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function startRollbackComposeDeploymentUpgrade(deploymentName: string, options: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: deploymentName
          type:
            - string
          description: <span data-ttu-id="76520-2580">Идентификатор развертывания.</span><span class="sxs-lookup"><span data-stu-id="76520-2580">The identity of the deployment.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2581">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2581">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2582">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2582">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos'
    name: stopChaos(Models.ServiceFabricClientStopChaosOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2583">Останавливает службу Chaos от выполнения новых неполадок.</span><span class="sxs-lookup"><span data-stu-id="76520-2583">Stops Chaos from executing new faults.</span></span> <span data-ttu-id="76520-2584">Ошибки в активном состоянии будут продолжать выполняться, пока не завершатся.</span><span class="sxs-lookup"><span data-stu-id="76520-2584">In-flight faults will continue to execute until they are complete.</span></span> <span data-ttu-id="76520-2585">Текущее расписание Chaos переведено в состояние остановки.</span><span class="sxs-lookup"><span data-stu-id="76520-2585">The current Chaos Schedule is put into a stopped state.</span></span>
      <span data-ttu-id="76520-2586">После остановки расписания оно останется в остановленном состоянии и не будет использоваться расписанием Chaos для новых запусков службы Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-2586">Once a schedule is stopped, it will stay in the stopped state and not be used to Chaos Schedule new runs of Chaos.</span></span> <span data-ttu-id="76520-2587">Чтобы возобновить планирование, необходимо задать новое расписание Chaos.</span><span class="sxs-lookup"><span data-stu-id="76520-2587">A new Chaos Schedule must be set in order to resume scheduling.</span></span>
    syntax:
      content: 'function stopChaos(options?: Models.ServiceFabricClientStopChaosOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ServiceFabricClientStopChaosOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_1'
    name: stopChaos(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2588">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2588">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.stopChaos_2'
    name: 'stopChaos(ServiceFabricClientStopChaosOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stopChaos(options: ServiceFabricClientStopChaosOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
          description: <span data-ttu-id="76520-2589">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2589">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2590">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2590">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2591">Отправляет пакет операций свойств.</span><span class="sxs-lookup"><span data-stu-id="76520-2591">Submits a batch of property operations.</span></span> <span data-ttu-id="76520-2592">Все или ни одна из операций будут зафиксированы.</span><span class="sxs-lookup"><span data-stu-id="76520-2592">Either all or none of the operations will be committed.</span></span>
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options?: Models.ServiceFabricClientSubmitPropertyBatchOptionalParams)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-2593">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2593">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="76520-2594">Описывает свойство пакетные операции отправки.</span><span class="sxs-lookup"><span data-stu-id="76520-2594">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSubmitPropertyBatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_1'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-2595">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2595">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="76520-2596">Описывает свойство пакетные операции отправки.</span><span class="sxs-lookup"><span data-stu-id="76520-2596">Describes the property batch operations to be submitted.</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            <span data-ttu-id="76520-2597">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2597">The callback</span></span>
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.submitPropertyBatch_2'
    name: 'submitPropertyBatch(string, PropertyBatchDescriptionList, ServiceFabricClientSubmitPropertyBatchOptionalParams, ServiceCallback<Models.PropertyBatchInfoUnion>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function submitPropertyBatch(nameId: string, propertyBatchDescriptionList: PropertyBatchDescriptionList, options: ServiceFabricClientSubmitPropertyBatchOptionalParams, callback: ServiceCallback<Models.PropertyBatchInfoUnion>)'
      parameters:
        - id: nameId
          type:
            - string
          description: '<span data-ttu-id="76520-2598">Назовите Service Fabric, без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2598">The Service Fabric name, without the ''fabric:'' URI scheme.</span></span>'
        - id: propertyBatchDescriptionList
          type:
            - '@azure/servicefabric.PropertyBatchDescriptionList'
          description: <span data-ttu-id="76520-2599">Описывает свойство пакетные операции отправки.</span><span class="sxs-lookup"><span data-stu-id="76520-2599">Describes the property batch operations to be submitted.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
          description: <span data-ttu-id="76520-2600">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2600">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<Models.PropertyBatchInfoUnion>
          description: |
            <span data-ttu-id="76520-2601">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2601">The callback</span></span>
      return:
        type:
          - Promise<Models.SubmitPropertyBatchResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup'
    name: 'suspendApplicationBackup(string, Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2602">Приложения, который настроен на периодическую архивацию приостановлена для дальнейшего создание резервных копий, пока он снова возобновляется.</span><span class="sxs-lookup"><span data-stu-id="76520-2602">The application which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span> <span data-ttu-id="76520-2603">Эта операция применяется к иерархии, все приложение.</span><span class="sxs-lookup"><span data-stu-id="76520-2603">This operation applies to the entire application's hierarchy.</span></span>
      <span data-ttu-id="76520-2604">Это означает, что все службы и разделах этого приложения теперь приостанавливаются для резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2604">It means all the services and partitions under this application are now suspended for backup.</span></span>
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options?: Models.ServiceFabricClientSuspendApplicationBackupOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2605">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2605">The identity of the application.</span></span> <span data-ttu-id="76520-2606">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2606">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2607">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2607">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2608">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2608">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendApplicationBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_1'
    name: 'suspendApplicationBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2609">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2609">The identity of the application.</span></span> <span data-ttu-id="76520-2610">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2610">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2611">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2611">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2612">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2612">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2613">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2613">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendApplicationBackup_2'
    name: 'suspendApplicationBackup(string, ServiceFabricClientSuspendApplicationBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendApplicationBackup(applicationId: string, options: ServiceFabricClientSuspendApplicationBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2614">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2614">The identity of the application.</span></span> <span data-ttu-id="76520-2615">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2615">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2616">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2616">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2617">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2617">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
          description: <span data-ttu-id="76520-2618">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2618">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2619">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2619">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup'
    name: 'suspendPartitionBackup(string, Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2620">Раздел, который настроен на периодическую архивацию приостановлена для дальнейшего создание резервных копий, пока он снова возобновляется.</span><span class="sxs-lookup"><span data-stu-id="76520-2620">The partition which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span>'
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options?: Models.ServiceFabricClientSuspendPartitionBackupOptionalParams)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2621">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2621">The identity of the partition.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendPartitionBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_1'
    name: 'suspendPartitionBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2622">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2622">The identity of the partition.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2623">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2623">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendPartitionBackup_2'
    name: 'suspendPartitionBackup(string, ServiceFabricClientSuspendPartitionBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendPartitionBackup(partitionId: string, options: ServiceFabricClientSuspendPartitionBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: partitionId
          type:
            - string
          description: <span data-ttu-id="76520-2624">Идентификатор секции.</span><span class="sxs-lookup"><span data-stu-id="76520-2624">The identity of the partition.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
          description: <span data-ttu-id="76520-2625">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2625">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2626">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2626">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup'
    name: 'suspendServiceBackup(string, Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2627">Службы, который настроен на периодическую архивацию приостановлена для дальнейшего создание резервных копий, пока он снова возобновляется.</span><span class="sxs-lookup"><span data-stu-id="76520-2627">The service which is configured to take periodic backups, is suspended for taking further backups till it is resumed again.</span></span> <span data-ttu-id="76520-2628">Эта операция применяется к иерархии всей службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2628">This operation applies to the entire service''s hierarchy.</span></span> <span data-ttu-id="76520-2629">Это означает, что все секции в этой службе теперь будут приостановлены для резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2629">It means all the partitions under this service are now suspended for backup.</span></span>'
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options?: Models.ServiceFabricClientSuspendServiceBackupOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2630">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2630">The identity of the service.</span></span> <span data-ttu-id="76520-2631">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2631">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2632">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2632">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2633">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2633">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientSuspendServiceBackupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_1'
    name: 'suspendServiceBackup(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2634">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2634">The identity of the service.</span></span> <span data-ttu-id="76520-2635">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2635">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2636">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2636">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2637">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2637">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2638">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2638">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.suspendServiceBackup_2'
    name: 'suspendServiceBackup(string, ServiceFabricClientSuspendServiceBackupOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suspendServiceBackup(serviceId: string, options: ServiceFabricClientSuspendServiceBackupOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2639">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2639">The identity of the service.</span></span> <span data-ttu-id="76520-2640">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2640">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2641">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2641">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2642">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2642">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
          description: <span data-ttu-id="76520-2643">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2643">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2644">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2644">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2645">Эта операция может быть выполнена только в том случае, если были удалены все экземпляры приложения указанного типа.</span><span class="sxs-lookup"><span data-stu-id="76520-2645">This operation can only be performed if all application instances of the application type have been deleted.</span></span> <span data-ttu-id="76520-2646">После отмены регистрации типа приложения создание экземпляров приложения этого типа невозможно.</span><span class="sxs-lookup"><span data-stu-id="76520-2646">Once the application type is unregistered, no new application instances can be created for this particular application type.</span></span>'
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options?: Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-2647">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2647">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="76520-2648">Относительный путь для пакета приложения в хранилище образов указывается во время операции копирования предыдущего.</span><span class="sxs-lookup"><span data-stu-id="76520-2648">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionApplicationTypeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_1'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-2649">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2649">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="76520-2650">Относительный путь для пакета приложения в хранилище образов указывается во время операции копирования предыдущего.</span><span class="sxs-lookup"><span data-stu-id="76520-2650">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2651">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2651">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionApplicationType_2'
    name: 'unprovisionApplicationType(string, UnprovisionApplicationTypeDescriptionInfo, ServiceFabricClientUnprovisionApplicationTypeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionApplicationType(applicationTypeName: string, unprovisionApplicationTypeDescriptionInfo: UnprovisionApplicationTypeDescriptionInfo, options: ServiceFabricClientUnprovisionApplicationTypeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: <span data-ttu-id="76520-2652">Имя типа приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2652">The name of the application type.</span></span>
        - id: unprovisionApplicationTypeDescriptionInfo
          type:
            - '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
          description: <span data-ttu-id="76520-2653">Относительный путь для пакета приложения в хранилище образов указывается во время операции копирования предыдущего.</span><span class="sxs-lookup"><span data-stu-id="76520-2653">The relative path for the application package in the image store specified during the prior copy operation.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
          description: <span data-ttu-id="76520-2654">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2654">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2655">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2655">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster'
    name: 'unprovisionCluster(UnprovisionFabricDescription, Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2656">Поддерживается отмена подготовки кода и конфигурации отдельно.</span><span class="sxs-lookup"><span data-stu-id="76520-2656">It is supported to unprovision code and configuration separately.</span></span>
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options?: Models.ServiceFabricClientUnprovisionClusterOptionalParams)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="76520-2657">Описывает параметры для отмены подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2657">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUnprovisionClusterOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_1'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="76520-2658">Описывает параметры для отмены подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2658">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2659">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2659">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.unprovisionCluster_2'
    name: 'unprovisionCluster(UnprovisionFabricDescription, ServiceFabricClientUnprovisionClusterOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unprovisionCluster(unprovisionFabricDescription: UnprovisionFabricDescription, options: ServiceFabricClientUnprovisionClusterOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: unprovisionFabricDescription
          type:
            - '@azure/servicefabric.UnprovisionFabricDescription'
          description: <span data-ttu-id="76520-2660">Описывает параметры для отмены подготовки кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2660">Describes the parameters for unprovisioning a cluster.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
          description: <span data-ttu-id="76520-2661">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2661">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2662">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2662">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2663">Обновления параметров текущего приложения после обновления с значений, указанных во время запуска обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2663">Updates the parameters of an ongoing application upgrade from the ones specified at the time of starting the application upgrade.</span></span> <span data-ttu-id="76520-2664">Это может потребоваться во избежание обновления заблокированной приложения из-за неверные параметры или проблем в приложении прогресса.</span><span class="sxs-lookup"><span data-stu-id="76520-2664">This may be required to mitigate stuck application upgrades due to incorrect parameters or issues in the application to make progress.</span></span>'
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options?: Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2665">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2665">The identity of the application.</span></span> <span data-ttu-id="76520-2666">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2666">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2667">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2667">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2668">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2668">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="76520-2669">Параметры для обновления существующего обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2669">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateApplicationUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_1'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2670">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2670">The identity of the application.</span></span> <span data-ttu-id="76520-2671">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2671">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2672">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2672">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2673">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2673">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="76520-2674">Параметры для обновления существующего обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2674">Parameters for updating an existing application upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2675">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2675">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateApplicationUpgrade_2'
    name: 'updateApplicationUpgrade(string, ApplicationUpgradeUpdateDescription, ServiceFabricClientUpdateApplicationUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateApplicationUpgrade(applicationId: string, applicationUpgradeUpdateDescription: ApplicationUpgradeUpdateDescription, options: ServiceFabricClientUpdateApplicationUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: applicationId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2676">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2676">The identity of the application.</span></span> <span data-ttu-id="76520-2677">Обычно это полное имя приложения без указания схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2677">This is typically the full name of the application without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2678">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2678">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2679">Например, если имя приложения — "fabric:/myapp/app1", то в версии 6.0 и более поздних версиях идентификатором приложения будет "myapp~app1", а в предыдущих версиях идентификатором был бы "myapp/app1".</span><span class="sxs-lookup"><span data-stu-id="76520-2679">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
        - id: applicationUpgradeUpdateDescription
          type:
            - '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
          description: <span data-ttu-id="76520-2680">Параметры для обновления существующего обновления приложения.</span><span class="sxs-lookup"><span data-stu-id="76520-2680">Parameters for updating an existing application upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2681">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2681">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2682">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2682">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2683">Обновляет политику резервного копирования определяется {backupPolicyName}</span><span class="sxs-lookup"><span data-stu-id="76520-2683">Updates the backup policy identified by {backupPolicyName}</span></span>'
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options?: Models.ServiceFabricClientUpdateBackupPolicyOptionalParams)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-2684">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2684">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-2685">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2685">The name of the backup policy.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateBackupPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_1'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-2686">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2686">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-2687">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2687">The name of the backup policy.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2688">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2688">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateBackupPolicy_2'
    name: 'updateBackupPolicy(BackupPolicyDescription, string, ServiceFabricClientUpdateBackupPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateBackupPolicy(backupPolicyDescription: BackupPolicyDescription, backupPolicyName: string, options: ServiceFabricClientUpdateBackupPolicyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: backupPolicyDescription
          type:
            - '@azure/servicefabric.BackupPolicyDescription'
          description: <span data-ttu-id="76520-2689">Описывает политику резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2689">Describes the backup policy.</span></span>
        - id: backupPolicyName
          type:
            - string
          description: <span data-ttu-id="76520-2690">Имя политики резервного копирования.</span><span class="sxs-lookup"><span data-stu-id="76520-2690">The name of the backup policy.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
          description: <span data-ttu-id="76520-2691">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2691">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2692">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2692">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2693">Обновляет параметры обновления, используемый во время обновления кластера Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2693">Update the upgrade parameters used during a Service Fabric cluster upgrade.</span></span>'
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options?: Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2694">Параметры для обновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2694">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUpdateClusterUpgradeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_1'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2695">Параметры для обновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2695">Parameters for updating a cluster upgrade.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2696">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2696">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateClusterUpgrade_2'
    name: 'updateClusterUpgrade(UpdateClusterUpgradeDescription, ServiceFabricClientUpdateClusterUpgradeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateClusterUpgrade(updateClusterUpgradeDescription: UpdateClusterUpgradeDescription, options: ServiceFabricClientUpdateClusterUpgradeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - '@azure/servicefabric.UpdateClusterUpgradeDescription'
          description: <span data-ttu-id="76520-2697">Параметры для обновления обновления кластера.</span><span class="sxs-lookup"><span data-stu-id="76520-2697">Parameters for updating a cluster upgrade.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
          description: <span data-ttu-id="76520-2698">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2698">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2699">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2699">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState'
    name: 'updateRepairExecutionState(RepairTask, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2700">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-2700">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-2701">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2701">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_2'
    name: 'updateRepairExecutionState(RepairTask, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-2702">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2702">Describes the repair task to be created or updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-2703">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2703">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-2704">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2704">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairExecutionState_1'
    name: 'updateRepairExecutionState(RepairTask, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairExecutionState(repairTask: RepairTask, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTask
          type:
            - '@azure/servicefabric.RepairTask'
          description: <span data-ttu-id="76520-2705">Описание задачи восстановления для создания или обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2705">Describes the repair task to be created or updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-2706">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2706">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairExecutionStateResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="76520-2707">Этот API поддерживает платформу Service Fabric. Он не предназначен для использования непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="76520-2707">This API supports the Service Fabric platform; it is not meant to be used directly from your code.</span></span>
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="76520-2708">Описывает политику работоспособности задачи восстановления обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2708">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_2'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, RequestOptionsBase, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, options: RequestOptionsBase, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="76520-2709">Описывает политику работоспособности задачи восстановления обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2709">Describes the repair task healthy policy to be updated.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="76520-2710">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2710">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-2711">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2711">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy_1'
    name: 'updateRepairTaskHealthPolicy(RepairTaskUpdateHealthPolicyDescription, ServiceCallback<RepairTaskUpdateInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription: RepairTaskUpdateHealthPolicyDescription, callback: ServiceCallback<RepairTaskUpdateInfo>)'
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
          description: <span data-ttu-id="76520-2712">Описывает политику работоспособности задачи восстановления обновления.</span><span class="sxs-lookup"><span data-stu-id="76520-2712">Describes the repair task healthy policy to be updated.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
          description: |
            <span data-ttu-id="76520-2713">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2713">The callback</span></span>
      return:
        type:
          - Promise<Models.UpdateRepairTaskHealthPolicyResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, Models.ServiceFabricClientUpdateServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2714">Этот API позволяет обновлять свойства работающей службы Service Fabric.</span><span class="sxs-lookup"><span data-stu-id="76520-2714">This API allows updating properties of a running Service Fabric service.</span></span> <span data-ttu-id="76520-2715">Набор свойств, которые могут быть обновлены представляют собой подмножество свойств, которые были указаны во время создания службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2715">The set of properties that can be updated are a subset of the properties that were specified at the time of creating the service.</span></span> <span data-ttu-id="76520-2716">Текущий набор свойств можно получить с помощью `GetServiceDescription` API.</span><span class="sxs-lookup"><span data-stu-id="76520-2716">The current set of properties can be obtained using `GetServiceDescription` API.</span></span>
      <span data-ttu-id="76520-2717">Обратите внимание, что обновление свойств работающей службы отличается от обновления приложения с помощью `StartApplicationUpgrade` API.</span><span class="sxs-lookup"><span data-stu-id="76520-2717">Note that updating the properties of a running service is different than upgrading your application using `StartApplicationUpgrade` API.</span></span> <span data-ttu-id="76520-2718">Обновления является длительная операция фона, включает в себя перемещение приложения из одной версии в другую, одному домену обновления за раз, а обновление применимо новые свойства непосредственно в службу.</span><span class="sxs-lookup"><span data-stu-id="76520-2718">The upgrade is a long running background operation that involves moving the application from one version to another, one upgrade domain at a time, whereas update applies the new properties immediately to the service.</span></span>
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options?: Models.ServiceFabricClientUpdateServiceOptionalParams)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2719">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2719">The identity of the service.</span></span> <span data-ttu-id="76520-2720">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2720">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2721">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2721">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2722">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2722">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: '<span data-ttu-id="76520-2723">Сведения, необходимые для обновления службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2723">The information necessary to update a service.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientUpdateServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_1'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2724">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2724">The identity of the service.</span></span> <span data-ttu-id="76520-2725">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2725">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2726">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2726">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2727">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2727">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: '<span data-ttu-id="76520-2728">Сведения, необходимые для обновления службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2728">The information necessary to update a service.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2729">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2729">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.updateService_2'
    name: 'updateService(string, Models.ServiceUpdateDescriptionUnion, ServiceFabricClientUpdateServiceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateService(serviceId: string, serviceUpdateDescription: Models.ServiceUpdateDescriptionUnion, options: ServiceFabricClientUpdateServiceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: serviceId
          type:
            - string
          description: |-
            <span data-ttu-id="76520-2730">Идентификатор службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2730">The identity of the service.</span></span> <span data-ttu-id="76520-2731">Этот идентификатор обычно — полное имя службы без "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="76520-2731">This ID is typically the full name of the service without the 'fabric:' URI scheme.</span></span>
            <span data-ttu-id="76520-2732">Начиная с версии 6.0, иерархические имена разделяются знаком "~".</span><span class="sxs-lookup"><span data-stu-id="76520-2732">Starting from version 6.0, hierarchical names are delimited with the "~" character.</span></span>
            <span data-ttu-id="76520-2733">Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1 ~ svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="76520-2733">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
        - id: serviceUpdateDescription
          type:
            - Models.ServiceUpdateDescriptionUnion
          description: '<span data-ttu-id="76520-2734">Сведения, необходимые для обновления службы.</span><span class="sxs-lookup"><span data-stu-id="76520-2734">The information necessary to update a service.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
          description: <span data-ttu-id="76520-2735">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2735">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2736">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2736">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile'
    name: 'uploadFile(string, Models.ServiceFabricClientUploadFileOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="76520-2737">Отправляет содержимое файла в хранилище образов.</span><span class="sxs-lookup"><span data-stu-id="76520-2737">Uploads contents of the file to the image store.</span></span> <span data-ttu-id="76520-2738">Этот API можно используйте, если файл является достаточно небольшим, чтобы отправить еще раз, в случае сбоя подключения.</span><span class="sxs-lookup"><span data-stu-id="76520-2738">Use this API if the file is small enough to upload again if the connection fails.</span></span> <span data-ttu-id="76520-2739">Файл данных должен быть добавлен в тело запроса.</span><span class="sxs-lookup"><span data-stu-id="76520-2739">The file''s data needs to be added to the request body.</span></span> <span data-ttu-id="76520-2740">Содержимое будет отправляться по указанному пути.</span><span class="sxs-lookup"><span data-stu-id="76520-2740">The contents will be uploaded to the specified path.</span></span> <span data-ttu-id="76520-2741">Службу хранилища образов использует пометить файл для указания доступности папки.</span><span class="sxs-lookup"><span data-stu-id="76520-2741">Image store service uses a mark file to indicate the availability of the folder.</span></span> <span data-ttu-id="76520-2742">Пометить файл — это пустой файл с именем «_.dir».</span><span class="sxs-lookup"><span data-stu-id="76520-2742">The mark file is an empty file named "_.dir".</span></span> <span data-ttu-id="76520-2743">Пометить файл создается при передаче всех файлов в папке службы хранилища образов.</span><span class="sxs-lookup"><span data-stu-id="76520-2743">The mark file is generated by the image store service when all files in a folder are uploaded.</span></span> <span data-ttu-id="76520-2744">При использовании подхода файлы для отправки пакета приложения в REST службы хранилища образов не будет учитывать иерархию файлов пакета приложения. требуется для создания пометить файл в папке и отправьте его последнего, чтобы разрешить службу хранилища образов, в папке считается завершенной.</span><span class="sxs-lookup"><span data-stu-id="76520-2744">When using File-by-File approach to upload application package in REST, the image store service isn''t aware of the file hierarchy of the application package; you need to create a mark file per folder and upload it last, to let the image store service know that the folder is complete.</span></span>'
    syntax:
      content: 'function uploadFile(contentPath: string, options?: Models.ServiceFabricClientUploadFileOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2745">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2745">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_1'
    name: 'uploadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2746">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2746">Relative path to file or folder in the image store from its root.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2747">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2747">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFile_2'
    name: 'uploadFile(string, ServiceFabricClientUploadFileOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFile(contentPath: string, options: ServiceFabricClientUploadFileOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2748">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2748">Relative path to file or folder in the image store from its root.</span></span>
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
          description: <span data-ttu-id="76520-2749">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2749">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2750">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2750">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk'
    name: 'uploadFileChunk(string, string, string, Models.ServiceFabricClientUploadFileChunkOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="76520-2751">Передает фрагмент файла в хранилище образов с помощью сеанса указанного передачи, идентификатор и образ относительному пути к хранилищу.</span><span class="sxs-lookup"><span data-stu-id="76520-2751">Uploads a file chunk to the image store with the specified upload session ID and image store relative path.</span></span> <span data-ttu-id="76520-2752">Этот API дает пользователю возможность возобновить операции загрузки файла.</span><span class="sxs-lookup"><span data-stu-id="76520-2752">This API allows user to resume the file upload operation.</span></span> <span data-ttu-id="76520-2753">пользователю не нужно перезапустить Загрузка файла с нуля каждый раз при обнаружении перебоев в работе сети.</span><span class="sxs-lookup"><span data-stu-id="76520-2753">user doesn't have to restart the file upload from scratch whenever there is a network interruption.</span></span> <span data-ttu-id="76520-2754">Используйте этот параметр, если файл имеет большой размер.</span><span class="sxs-lookup"><span data-stu-id="76520-2754">Use this option if the file size is large.</span></span>
      <span data-ttu-id="76520-2755">Чтобы выполнить передачу файла возобновляемой, пользователю нужно разбить файл на несколько фрагменты и отправить эти блоки в хранилище образов по одному.</span><span class="sxs-lookup"><span data-stu-id="76520-2755">To perform a resumable file upload, user need to break the file into multiple chunks and upload these chunks to the image store one-by-one.</span></span> <span data-ttu-id="76520-2756">Блоки не нужно отправить в порядке.</span><span class="sxs-lookup"><span data-stu-id="76520-2756">Chunks don't have to be uploaded in order.</span></span> <span data-ttu-id="76520-2757">Если файл, представленный относительного пути к хранилищу изображение уже существует, он перезаписывается при фиксации сеанса передачи.</span><span class="sxs-lookup"><span data-stu-id="76520-2757">If the file represented by the image store relative path already exists, it will be overwritten when the upload session commits.</span></span>
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options?: Models.ServiceFabricClientUploadFileChunkOptionalParams)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2758">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2758">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-2759">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-2759">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-2760">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-2760">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="76520-2761">При передаче фрагменты файлов в хранилище образов, то поле заголовка Content-Range должны быть настроены и отправлены с запросом.</span><span class="sxs-lookup"><span data-stu-id="76520-2761">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="76520-2762">Формат должен выглядит как «байты {First-Byte-Position}-{Last-Byte-Position}/{File-Length}».</span><span class="sxs-lookup"><span data-stu-id="76520-2762">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="76520-2763">Например, содержимого-диапазона: байт 300 до 5000/20000 указывает, что для пользователя отправляет байт 300 через 5 000, так и для длину всего файла составляет 20 000 байт.</span><span class="sxs-lookup"><span data-stu-id="76520-2763">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: options
          type:
            - Models.ServiceFabricClientUploadFileChunkOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_1'
    name: 'uploadFileChunk(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2764">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2764">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-2765">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-2765">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-2766">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-2766">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="76520-2767">При передаче фрагменты файлов в хранилище образов, то поле заголовка Content-Range должны быть настроены и отправлены с запросом.</span><span class="sxs-lookup"><span data-stu-id="76520-2767">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="76520-2768">Формат должен выглядит как «байты {First-Byte-Position}-{Last-Byte-Position}/{File-Length}».</span><span class="sxs-lookup"><span data-stu-id="76520-2768">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="76520-2769">Например, содержимого-диапазона: байт 300 до 5000/20000 указывает, что для пользователя отправляет байт 300 через 5 000, так и для длину всего файла составляет 20 000 байт.</span><span class="sxs-lookup"><span data-stu-id="76520-2769">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2770">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2770">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClient.uploadFileChunk_2'
    name: 'uploadFileChunk(string, string, string, ServiceFabricClientUploadFileChunkOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function uploadFileChunk(contentPath: string, sessionId: string, contentRange: string, options: ServiceFabricClientUploadFileChunkOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: contentPath
          type:
            - string
          description: <span data-ttu-id="76520-2771">Путь к файлу или папке в хранилище образов относительно его корня.</span><span class="sxs-lookup"><span data-stu-id="76520-2771">Relative path to file or folder in the image store from its root.</span></span>
        - id: sessionId
          type:
            - string
          description: '<span data-ttu-id="76520-2772">Идентификатор GUID, создаваемых пользователем для загрузки файлов.</span><span class="sxs-lookup"><span data-stu-id="76520-2772">A GUID generated by the user for a file uploading.</span></span> <span data-ttu-id="76520-2773">Он идентифицирует сеанс передачи образа хранилища, который отслеживает все фрагменты файла пока она не будет зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="76520-2773">It identifies an image store upload session which keeps track of all file chunks until it is committed.</span></span>'
        - id: contentRange
          type:
            - string
          description: '<span data-ttu-id="76520-2774">При передаче фрагменты файлов в хранилище образов, то поле заголовка Content-Range должны быть настроены и отправлены с запросом.</span><span class="sxs-lookup"><span data-stu-id="76520-2774">When uploading file chunks to the image store, the Content-Range header field need to be configured and sent with a request.</span></span> <span data-ttu-id="76520-2775">Формат должен выглядит как «байты {First-Byte-Position}-{Last-Byte-Position}/{File-Length}».</span><span class="sxs-lookup"><span data-stu-id="76520-2775">The format should looks like "bytes {First-Byte-Position}-{Last-Byte-Position}/{File-Length}".</span></span> <span data-ttu-id="76520-2776">Например, содержимого-диапазона: байт 300 до 5000/20000 указывает, что для пользователя отправляет байт 300 через 5 000, так и для длину всего файла составляет 20 000 байт.</span><span class="sxs-lookup"><span data-stu-id="76520-2776">For example, Content-Range:bytes 300-5000/20000 indicates that user is sending bytes 300 through 5,000 and the total file length is 20,000 bytes.</span></span>'
        - id: options
          type:
            - '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
          description: <span data-ttu-id="76520-2777">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="76520-2777">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="76520-2778">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="76520-2778">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ServiceFabricClientContext'
    name: ServiceFabricClientContext
    spec.typeScript:
      - name: ServiceFabricClientContext
        fullName: ServiceFabricClientContext
        uid: '@azure/servicefabric.ServiceFabricClientContext'
  - uid: '@azure/servicefabric.MeshApplication'
    name: MeshApplication
    spec.typeScript:
      - name: MeshApplication
        fullName: MeshApplication
        uid: '@azure/servicefabric.MeshApplication'
  - uid: '@azure/servicefabric.MeshCodePackage'
    name: MeshCodePackage
    spec.typeScript:
      - name: MeshCodePackage
        fullName: MeshCodePackage
        uid: '@azure/servicefabric.MeshCodePackage'
  - uid: '@azure/servicefabric.MeshGateway'
    name: MeshGateway
    spec.typeScript:
      - name: MeshGateway
        fullName: MeshGateway
        uid: '@azure/servicefabric.MeshGateway'
  - uid: '@azure/servicefabric.MeshNetwork'
    name: MeshNetwork
    spec.typeScript:
      - name: MeshNetwork
        fullName: MeshNetwork
        uid: '@azure/servicefabric.MeshNetwork'
  - uid: '@azure/servicefabric.MeshSecret'
    name: MeshSecret
    spec.typeScript:
      - name: MeshSecret
        fullName: MeshSecret
        uid: '@azure/servicefabric.MeshSecret'
  - uid: '@azure/servicefabric.MeshSecretValue'
    name: MeshSecretValue
    spec.typeScript:
      - name: MeshSecretValue
        fullName: MeshSecretValue
        uid: '@azure/servicefabric.MeshSecretValue'
  - uid: '@azure/servicefabric.MeshService'
    name: MeshService
    spec.typeScript:
      - name: MeshService
        fullName: MeshService
        uid: '@azure/servicefabric.MeshService'
  - uid: '@azure/servicefabric.MeshServiceReplica'
    name: MeshServiceReplica
    spec.typeScript:
      - name: MeshServiceReplica
        fullName: MeshServiceReplica
        uid: '@azure/servicefabric.MeshServiceReplica'
  - uid: '@azure/servicefabric.MeshVolume'
    name: MeshVolume
    spec.typeScript:
      - name: MeshVolume
        fullName: MeshVolume
        uid: '@azure/servicefabric.MeshVolume'
  - uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
    name: ServiceFabricClientBackupPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientBackupPartitionOptionalParams
        fullName: ServiceFabricClientBackupPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientBackupPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
    name: ServiceFabricClientCancelOperationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCancelOperationOptionalParams
        fullName: ServiceFabricClientCancelOperationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCancelOperationOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskCancelDescription'
    name: RepairTaskCancelDescription
    spec.typeScript:
      - name: RepairTaskCancelDescription
        fullName: RepairTaskCancelDescription
        uid: '@azure/servicefabric.RepairTaskCancelDescription'
  - uid: ServiceCallback<@azure/servicefabric.RepairTaskUpdateInfo>
    name: RepairTaskUpdateInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTaskUpdateInfo
        fullName: RepairTaskUpdateInfo
        uid: '@azure/servicefabric.RepairTaskUpdateInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientCommitImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCommitImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ImageStoreCopyDescription'
    name: ImageStoreCopyDescription
    spec.typeScript:
      - name: ImageStoreCopyDescription
        fullName: ImageStoreCopyDescription
        uid: '@azure/servicefabric.ImageStoreCopyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
    name: ServiceFabricClientCopyImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCopyImageStoreContentOptionalParams
        fullName: ServiceFabricClientCopyImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCopyImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ApplicationDescription'
    name: ApplicationDescription
    spec.typeScript:
      - name: ApplicationDescription
        fullName: ApplicationDescription
        uid: '@azure/servicefabric.ApplicationDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
    name: ServiceFabricClientCreateApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateApplicationOptionalParams
        fullName: ServiceFabricClientCreateApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateApplicationOptionalParams'
  - uid: '@azure/servicefabric.BackupPolicyDescription'
    name: BackupPolicyDescription
    spec.typeScript:
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
    name: ServiceFabricClientCreateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateBackupPolicyOptionalParams
        fullName: ServiceFabricClientCreateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
    name: CreateComposeDeploymentDescription
    spec.typeScript:
      - name: CreateComposeDeploymentDescription
        fullName: CreateComposeDeploymentDescription
        uid: '@azure/servicefabric.CreateComposeDeploymentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
    name: ServiceFabricClientCreateComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateComposeDeploymentOptionalParams
        fullName: ServiceFabricClientCreateComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.NameDescription'
    name: NameDescription
    spec.typeScript:
      - name: NameDescription
        fullName: NameDescription
        uid: '@azure/servicefabric.NameDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
    name: ServiceFabricClientCreateNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateNameOptionalParams
        fullName: ServiceFabricClientCreateNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateNameOptionalParams'
  - uid: '@azure/servicefabric.RepairTask'
    name: RepairTask
    spec.typeScript:
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
    name: ServiceFabricClientCreateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceOptionalParams
        fullName: ServiceFabricClientCreateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFromTemplateDescription'
    name: ServiceFromTemplateDescription
    spec.typeScript:
      - name: ServiceFromTemplateDescription
        fullName: ServiceFromTemplateDescription
        uid: '@azure/servicefabric.ServiceFromTemplateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
    name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        fullName: ServiceFabricClientCreateServiceFromTemplateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientCreateServiceFromTemplateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
    name: ServiceFabricClientDeleteApplicationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteApplicationOptionalParams
        fullName: ServiceFabricClientDeleteApplicationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteApplicationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
    name: ServiceFabricClientDeleteBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteBackupPolicyOptionalParams
        fullName: ServiceFabricClientDeleteBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
    name: ServiceFabricClientDeleteImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreContentOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
    name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        fullName: ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteImageStoreUploadSessionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
    name: ServiceFabricClientDeleteNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteNameOptionalParams
        fullName: ServiceFabricClientDeleteNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
    name: ServiceFabricClientDeletePropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeletePropertyOptionalParams
        fullName: ServiceFabricClientDeletePropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeletePropertyOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskDeleteDescription'
    name: RepairTaskDeleteDescription
    spec.typeScript:
      - name: RepairTaskDeleteDescription
        fullName: RepairTaskDeleteDescription
        uid: '@azure/servicefabric.RepairTaskDeleteDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
    name: ServiceFabricClientDeleteServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeleteServiceOptionalParams
        fullName: ServiceFabricClientDeleteServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeleteServiceOptionalParams'
  - uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
    name: DeployServicePackageToNodeDescription
    spec.typeScript:
      - name: DeployServicePackageToNodeDescription
        fullName: DeployServicePackageToNodeDescription
        uid: '@azure/servicefabric.DeployServicePackageToNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
    name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        fullName: ServiceFabricClientDeployServicePackageToNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDeployServicePackageToNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
    name: ServiceFabricClientDisableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableApplicationBackupOptionalParams
        fullName: ServiceFabricClientDisableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.DeactivationIntentDescription'
    name: DeactivationIntentDescription
    spec.typeScript:
      - name: DeactivationIntentDescription
        fullName: DeactivationIntentDescription
        uid: '@azure/servicefabric.DeactivationIntentDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
    name: ServiceFabricClientDisableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableNodeOptionalParams
        fullName: ServiceFabricClientDisableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
    name: ServiceFabricClientDisablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisablePartitionBackupOptionalParams
        fullName: ServiceFabricClientDisablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
    name: ServiceFabricClientDisableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientDisableServiceBackupOptionalParams
        fullName: ServiceFabricClientDisableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientDisableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.EnableBackupDescription'
    name: EnableBackupDescription
    spec.typeScript:
      - name: EnableBackupDescription
        fullName: EnableBackupDescription
        uid: '@azure/servicefabric.EnableBackupDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
    name: ServiceFabricClientEnableApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableApplicationBackupOptionalParams
        fullName: ServiceFabricClientEnableApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
    name: ServiceFabricClientEnableNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableNodeOptionalParams
        fullName: ServiceFabricClientEnableNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
    name: ServiceFabricClientEnablePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnablePartitionBackupOptionalParams
        fullName: ServiceFabricClientEnablePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnablePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
    name: ServiceFabricClientEnableServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientEnableServiceBackupOptionalParams
        fullName: ServiceFabricClientEnableServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientEnableServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskApproveDescription'
    name: RepairTaskApproveDescription
    spec.typeScript:
      - name: RepairTaskApproveDescription
        fullName: RepairTaskApproveDescription
        uid: '@azure/servicefabric.RepairTaskApproveDescription'
  - uid: ServiceCallback<@azure/servicefabric.AadMetadataObject>
    name: AadMetadataObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AadMetadataObject
        fullName: AadMetadataObject
        uid: '@azure/servicefabric.AadMetadataObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
    name: ServiceFabricClientGetAadMetadataOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAadMetadataOptionalParams
        fullName: ServiceFabricClientGetAadMetadataOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAadMetadataOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupEntityList>
    name: PagedBackupEntityList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupEntityList
        fullName: PagedBackupEntityList
        uid: '@azure/servicefabric.PagedBackupEntityList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
    name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        fullName: ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetAllEntitiesBackedUpByPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupConfigurationInfoList>
    name: PagedBackupConfigurationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupConfigurationInfoList
        fullName: PagedBackupConfigurationInfoList
        uid: '@azure/servicefabric.PagedBackupConfigurationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupConfigurationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupInfoList>
    name: PagedBackupInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupInfoList
        fullName: PagedBackupInfoList
        uid: '@azure/servicefabric.PagedBackupInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
    name: ServiceFabricClientGetApplicationBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationBackupListOptionalParams
        fullName: ServiceFabricClientGetApplicationBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
    name: ServiceFabricClientGetApplicationEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationHealth>
    name: ApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationHealth
        fullName: ApplicationHealth
        uid: '@azure/servicefabric.ApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
    name: ServiceFabricClientGetApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationInfo>
    name: ApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationInfo
        fullName: ApplicationInfo
        uid: '@azure/servicefabric.ApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
    name: ServiceFabricClientGetApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationInfoList>
    name: PagedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationInfoList
        fullName: PagedApplicationInfoList
        uid: '@azure/servicefabric.PagedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationLoadInfo>
    name: ApplicationLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationLoadInfo
        fullName: ApplicationLoadInfo
        uid: '@azure/servicefabric.ApplicationLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
    name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationTypeManifest>
    name: ApplicationTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationTypeManifest
        fullName: ApplicationTypeManifest
        uid: '@azure/servicefabric.ApplicationTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
    name: ServiceFabricClientGetApplicationManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationManifestOptionalParams
        fullName: ServiceFabricClientGetApplicationManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationNameInfo>
    name: ApplicationNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationNameInfo
        fullName: ApplicationNameInfo
        uid: '@azure/servicefabric.ApplicationNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
    name: ServiceFabricClientGetApplicationNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationNameInfoOptionalParams
        fullName: ServiceFabricClientGetApplicationNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedApplicationTypeInfoList>
    name: PagedApplicationTypeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedApplicationTypeInfoList
        fullName: PagedApplicationTypeInfoList
        uid: '@azure/servicefabric.PagedApplicationTypeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
    name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationTypeInfoListByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ApplicationUpgradeProgressInfo>
    name: ApplicationUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ApplicationUpgradeProgressInfo
        fullName: ApplicationUpgradeProgressInfo
        uid: '@azure/servicefabric.ApplicationUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
    name: ServiceFabricClientGetApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientGetApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
    name: ServiceFabricClientGetApplicationsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetApplicationsEventListOptionalParams
        fullName: ServiceFabricClientGetApplicationsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetApplicationsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupPolicyDescription>
    name: BackupPolicyDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupPolicyDescription
        fullName: BackupPolicyDescription
        uid: '@azure/servicefabric.BackupPolicyDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
    name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyByNameOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedBackupPolicyDescriptionList>
    name: PagedBackupPolicyDescriptionList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedBackupPolicyDescriptionList
        fullName: PagedBackupPolicyDescriptionList
        uid: '@azure/servicefabric.PagedBackupPolicyDescriptionList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
    name: ServiceFabricClientGetBackupPolicyListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupPolicyListOptionalParams
        fullName: ServiceFabricClientGetBackupPolicyListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupPolicyListOptionalParams'
  - uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
    name: GetBackupByStorageQueryDescription
    spec.typeScript:
      - name: GetBackupByStorageQueryDescription
        fullName: GetBackupByStorageQueryDescription
        uid: '@azure/servicefabric.GetBackupByStorageQueryDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
    name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        fullName: ServiceFabricClientGetBackupsFromBackupLocationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetBackupsFromBackupLocationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.Chaos>
    name: Chaos>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Chaos
        fullName: Chaos
        uid: '@azure/servicefabric.Chaos'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
    name: ServiceFabricClientGetChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosOptionalParams
        fullName: ServiceFabricClientGetChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosEventsSegment>
    name: ChaosEventsSegment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosEventsSegment
        fullName: ChaosEventsSegment
        uid: '@azure/servicefabric.ChaosEventsSegment'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
    name: ServiceFabricClientGetChaosEventsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosEventsOptionalParams
        fullName: ServiceFabricClientGetChaosEventsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosEventsOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ChaosScheduleDescription>
    name: ChaosScheduleDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
    name: ServiceFabricClientGetChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetChaosScheduleOptionalParams
        fullName: ServiceFabricClientGetChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetChaosScheduleOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfiguration>
    name: ClusterConfiguration>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfiguration
        fullName: ClusterConfiguration
        uid: '@azure/servicefabric.ClusterConfiguration'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo>
    name: ClusterConfigurationUpgradeStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterConfigurationUpgradeStatusInfo
        fullName: ClusterConfigurationUpgradeStatusInfo
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
    name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        fullName: ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterConfigurationUpgradeStatusOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
    name: ServiceFabricClientGetClusterEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterEventListOptionalParams
        fullName: ServiceFabricClientGetClusterEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealth>
    name: ClusterHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealth
        fullName: ClusterHealth
        uid: '@azure/servicefabric.ClusterHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
    name: ServiceFabricClientGetClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthOptionalParams
        fullName: ServiceFabricClientGetClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterHealthChunk>
    name: ClusterHealthChunk>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterHealthChunk
        fullName: ClusterHealthChunk
        uid: '@azure/servicefabric.ClusterHealthChunk'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
    name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        fullName: ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthChunkUsingPolicyAndAdvancedFiltersOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterManifest>
    name: ClusterManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterManifest
        fullName: ClusterManifest
        uid: '@azure/servicefabric.ClusterManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
    name: ServiceFabricClientGetClusterManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterManifestOptionalParams
        fullName: ServiceFabricClientGetClusterManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterUpgradeProgressObject>
    name: ClusterUpgradeProgressObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterUpgradeProgressObject
        fullName: ClusterUpgradeProgressObject
        uid: '@azure/servicefabric.ClusterUpgradeProgressObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetClusterUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ClusterVersion>
    name: ClusterVersion>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ClusterVersion
        fullName: ClusterVersion
        uid: '@azure/servicefabric.ClusterVersion'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
    name: ServiceFabricClientGetClusterVersionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetClusterVersionOptionalParams
        fullName: ServiceFabricClientGetClusterVersionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetClusterVersionOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentStatusInfo>
    name: ComposeDeploymentStatusInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentStatusInfo
        fullName: ComposeDeploymentStatusInfo
        uid: '@azure/servicefabric.ComposeDeploymentStatusInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedComposeDeploymentStatusInfoList>
    name: PagedComposeDeploymentStatusInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedComposeDeploymentStatusInfoList
        fullName: PagedComposeDeploymentStatusInfoList
        uid: '@azure/servicefabric.PagedComposeDeploymentStatusInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentStatusListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentStatusListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo>
    name: ComposeDeploymentUpgradeProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ComposeDeploymentUpgradeProgressInfo
        fullName: ComposeDeploymentUpgradeProgressInfo
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
    name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        fullName: ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetComposeDeploymentUpgradeProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ContainerLogs>
    name: ContainerLogs>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerLogs
        fullName: ContainerLogs
        uid: '@azure/servicefabric.ContainerLogs'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
    name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        fullName: ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainerLogsDeployedOnNodeOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ContainerInstanceEvent[]>'
    name: 'ContainerInstanceEvent[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerInstanceEvent
        fullName: ContainerInstanceEvent
        uid: '@azure/servicefabric.ContainerInstanceEvent'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
    name: ServiceFabricClientGetContainersEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetContainersEventListOptionalParams
        fullName: ServiceFabricClientGetContainersEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetContainersEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
    name: ServiceFabricClientGetCorrelatedEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetCorrelatedEventListOptionalParams
        fullName: ServiceFabricClientGetCorrelatedEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetCorrelatedEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionDataLossProgress>
    name: PartitionDataLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionDataLossProgress
        fullName: PartitionDataLossProgress
        uid: '@azure/servicefabric.PartitionDataLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
    name: ServiceFabricClientGetDataLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDataLossProgressOptionalParams
        fullName: ServiceFabricClientGetDataLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDataLossProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationHealth>
    name: DeployedApplicationHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationHealth
        fullName: DeployedApplicationHealth
        uid: '@azure/servicefabric.DeployedApplicationHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedApplicationInfo>
    name: DeployedApplicationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedApplicationInfo
        fullName: DeployedApplicationInfo
        uid: '@azure/servicefabric.DeployedApplicationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedDeployedApplicationInfoList>
    name: PagedDeployedApplicationInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedDeployedApplicationInfoList
        fullName: PagedDeployedApplicationInfoList
        uid: '@azure/servicefabric.PagedDeployedApplicationInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedApplicationInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedApplicationInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedCodePackageInfo[]>'
    name: 'DeployedCodePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedCodePackageInfo
        fullName: DeployedCodePackageInfo
        uid: '@azure/servicefabric.DeployedCodePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedCodePackageInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.DeployedServicePackageHealth>
    name: DeployedServicePackageHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageHealth
        fullName: DeployedServicePackageHealth
        uid: '@azure/servicefabric.DeployedServicePackageHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageHealthUsingPolicyOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServicePackageInfo[]>'
    name: 'DeployedServicePackageInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServicePackageInfo
        fullName: DeployedServicePackageInfo
        uid: '@azure/servicefabric.DeployedServicePackageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServicePackageInfoListByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaDetailInfoByPartitionIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceReplicaInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.DeployedServiceTypeInfo[]>'
    name: 'DeployedServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeployedServiceTypeInfo
        fullName: DeployedServiceTypeInfo
        uid: '@azure/servicefabric.DeployedServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoByNameOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetDeployedServiceTypeInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.OperationStatus[]>'
    name: 'OperationStatus[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/servicefabric.OperationStatus'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
    name: ServiceFabricClientGetFaultOperationListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetFaultOperationListOptionalParams
        fullName: ServiceFabricClientGetFaultOperationListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetFaultOperationListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ImageStoreContent>
    name: ImageStoreContent>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageStoreContent
        fullName: ImageStoreContent
        uid: '@azure/servicefabric.ImageStoreContent'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
    name: ServiceFabricClientGetImageStoreContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreContentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
    name: ServiceFabricClientGetImageStoreRootContentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreRootContentOptionalParams
        fullName: ServiceFabricClientGetImageStoreRootContentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreRootContentOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UploadSession>
    name: UploadSession>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UploadSession
        fullName: UploadSession
        uid: '@azure/servicefabric.UploadSession'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByIdOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
    name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        fullName: ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetImageStoreUploadSessionByPathOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
    name: ServiceFabricClientGetNameExistsInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNameExistsInfoOptionalParams
        fullName: ServiceFabricClientGetNameExistsInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNameExistsInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
    name: ServiceFabricClientGetNodeEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeEventListOptionalParams
        fullName: ServiceFabricClientGetNodeEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeHealth>
    name: NodeHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeHealth
        fullName: NodeHealth
        uid: '@azure/servicefabric.NodeHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
    name: ServiceFabricClientGetNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthOptionalParams
        fullName: ServiceFabricClientGetNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeHealthUsingPolicyOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeInfo>
    name: NodeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeInfo
        fullName: NodeInfo
        uid: '@azure/servicefabric.NodeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
    name: ServiceFabricClientGetNodeInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoOptionalParams
        fullName: ServiceFabricClientGetNodeInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedNodeInfoList>
    name: PagedNodeInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedNodeInfoList
        fullName: PagedNodeInfoList
        uid: '@azure/servicefabric.PagedNodeInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
    name: ServiceFabricClientGetNodeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeInfoListOptionalParams
        fullName: ServiceFabricClientGetNodeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeLoadInfo>
    name: NodeLoadInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeLoadInfo
        fullName: NodeLoadInfo
        uid: '@azure/servicefabric.NodeLoadInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
    name: ServiceFabricClientGetNodeLoadInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeLoadInfoOptionalParams
        fullName: ServiceFabricClientGetNodeLoadInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeLoadInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.NodeTransitionProgress>
    name: NodeTransitionProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NodeTransitionProgress
        fullName: NodeTransitionProgress
        uid: '@azure/servicefabric.NodeTransitionProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
    name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        fullName: ServiceFabricClientGetNodeTransitionProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodeTransitionProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
    name: ServiceFabricClientGetNodesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetNodesEventListOptionalParams
        fullName: ServiceFabricClientGetNodesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetNodesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionBackupConfigurationInfo>
    name: PartitionBackupConfigurationInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionBackupConfigurationInfo
        fullName: PartitionBackupConfigurationInfo
        uid: '@azure/servicefabric.PartitionBackupConfigurationInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
    name: ServiceFabricClientGetPartitionBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupListOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.BackupProgressInfo>
    name: BackupProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupProgressInfo
        fullName: BackupProgressInfo
        uid: '@azure/servicefabric.BackupProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
    name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionBackupProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionBackupProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
    name: ServiceFabricClientGetPartitionEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionHealth>
    name: PartitionHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionHealth
        fullName: PartitionHealth
        uid: '@azure/servicefabric.PartitionHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
    name: ServiceFabricClientGetPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
    name: ServiceFabricClientGetPartitionInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServicePartitionInfoList>
    name: PagedServicePartitionInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServicePartitionInfoList
        fullName: PagedServicePartitionInfoList
        uid: '@azure/servicefabric.PagedServicePartitionInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
    name: ServiceFabricClientGetPartitionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionInfoListOptionalParams
        fullName: ServiceFabricClientGetPartitionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionLoadInformation>
    name: PartitionLoadInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionLoadInformation
        fullName: PartitionLoadInformation
        uid: '@azure/servicefabric.PartitionLoadInformation'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
    name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        fullName: ServiceFabricClientGetPartitionLoadInformationOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionLoadInformationOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicaEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicaEventListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
    name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionReplicasEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionReplicasEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionRestartProgress>
    name: PartitionRestartProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionRestartProgress
        fullName: PartitionRestartProgress
        uid: '@azure/servicefabric.PartitionRestartProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestartProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestartProgressOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.RestoreProgressInfo>
    name: RestoreProgressInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RestoreProgressInfo
        fullName: RestoreProgressInfo
        uid: '@azure/servicefabric.RestoreProgressInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
    name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        fullName: ServiceFabricClientGetPartitionRestoreProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionRestoreProgressOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
    name: ServiceFabricClientGetPartitionsEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPartitionsEventListOptionalParams
        fullName: ServiceFabricClientGetPartitionsEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPartitionsEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PropertyInfo>
    name: PropertyInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PropertyInfo
        fullName: PropertyInfo
        uid: '@azure/servicefabric.PropertyInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
    name: ServiceFabricClientGetPropertyInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedPropertyInfoList>
    name: PagedPropertyInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedPropertyInfoList
        fullName: PagedPropertyInfoList
        uid: '@azure/servicefabric.PagedPropertyInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
    name: ServiceFabricClientGetPropertyInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetPropertyInfoListOptionalParams
        fullName: ServiceFabricClientGetPropertyInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetPropertyInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricCodeVersionInfo[]>'
    name: 'FabricCodeVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricCodeVersionInfo
        fullName: FabricCodeVersionInfo
        uid: '@azure/servicefabric.FabricCodeVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricCodeVersionInfoListOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.FabricConfigVersionInfo[]>'
    name: 'FabricConfigVersionInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FabricConfigVersionInfo
        fullName: FabricConfigVersionInfo
        uid: '@azure/servicefabric.FabricConfigVersionInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
    name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        fullName: ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetProvisionedFabricConfigVersionInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PartitionQuorumLossProgress>
    name: PartitionQuorumLossProgress>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PartitionQuorumLossProgress
        fullName: PartitionQuorumLossProgress
        uid: '@azure/servicefabric.PartitionQuorumLossProgress'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
    name: ServiceFabricClientGetQuorumLossProgressOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetQuorumLossProgressOptionalParams
        fullName: ServiceFabricClientGetQuorumLossProgressOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetQuorumLossProgressOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.RepairTask[]>'
    name: 'RepairTask[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RepairTask
        fullName: RepairTask
        uid: '@azure/servicefabric.RepairTask'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
    name: ServiceFabricClientGetRepairTaskListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetRepairTaskListOptionalParams
        fullName: ServiceFabricClientGetRepairTaskListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetRepairTaskListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
    name: ServiceFabricClientGetReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
    name: ServiceFabricClientGetReplicaInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedReplicaInfoList>
    name: PagedReplicaInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedReplicaInfoList
        fullName: PagedReplicaInfoList
        uid: '@azure/servicefabric.PagedReplicaInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
    name: ServiceFabricClientGetReplicaInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetReplicaInfoListOptionalParams
        fullName: ServiceFabricClientGetReplicaInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetReplicaInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
    name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        fullName: ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupConfigurationInfoOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
    name: ServiceFabricClientGetServiceBackupListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceBackupListOptionalParams
        fullName: ServiceFabricClientGetServiceBackupListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceBackupListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
    name: ServiceFabricClientGetServiceDescriptionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceDescriptionOptionalParams
        fullName: ServiceFabricClientGetServiceDescriptionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceDescriptionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
    name: ServiceFabricClientGetServiceEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceEventListOptionalParams
        fullName: ServiceFabricClientGetServiceEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceHealth>
    name: ServiceHealth>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceHealth
        fullName: ServiceHealth
        uid: '@azure/servicefabric.ServiceHealth'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
    name: ServiceFabricClientGetServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthOptionalParams
        fullName: ServiceFabricClientGetServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
    name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        fullName: ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceHealthUsingPolicyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
    name: ServiceFabricClientGetServiceInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoOptionalParams
        fullName: ServiceFabricClientGetServiceInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedServiceInfoList>
    name: PagedServiceInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedServiceInfoList
        fullName: PagedServiceInfoList
        uid: '@azure/servicefabric.PagedServiceInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
    name: ServiceFabricClientGetServiceInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeManifest>
    name: ServiceTypeManifest>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeManifest
        fullName: ServiceTypeManifest
        uid: '@azure/servicefabric.ServiceTypeManifest'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
    name: ServiceFabricClientGetServiceManifestOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceManifestOptionalParams
        fullName: ServiceFabricClientGetServiceManifestOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceManifestOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceNameInfo>
    name: ServiceNameInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceNameInfo
        fullName: ServiceNameInfo
        uid: '@azure/servicefabric.ServiceNameInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
    name: ServiceFabricClientGetServiceNameInfoOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceNameInfoOptionalParams
        fullName: ServiceFabricClientGetServiceNameInfoOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceNameInfoOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ServiceTypeInfo>
    name: ServiceTypeInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoByNameOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoByNameOptionalParams'
  - uid: 'ServiceCallback<@azure/servicefabric.ServiceTypeInfo[]>'
    name: 'ServiceTypeInfo[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ServiceTypeInfo
        fullName: ServiceTypeInfo
        uid: '@azure/servicefabric.ServiceTypeInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
    name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        fullName: ServiceFabricClientGetServiceTypeInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServiceTypeInfoListOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
    name: ServiceFabricClientGetServicesEventListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetServicesEventListOptionalParams
        fullName: ServiceFabricClientGetServicesEventListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetServicesEventListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.PagedSubNameInfoList>
    name: PagedSubNameInfoList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PagedSubNameInfoList
        fullName: PagedSubNameInfoList
        uid: '@azure/servicefabric.PagedSubNameInfoList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
    name: ServiceFabricClientGetSubNameInfoListOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetSubNameInfoListOptionalParams
        fullName: ServiceFabricClientGetSubNameInfoListOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetSubNameInfoListOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceState>
    name: UpgradeOrchestrationServiceState>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientGetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ContainerApiRequestBody'
    name: ContainerApiRequestBody
    spec.typeScript:
      - name: ContainerApiRequestBody
        fullName: ContainerApiRequestBody
        uid: '@azure/servicefabric.ContainerApiRequestBody'
  - uid: ServiceCallback<@azure/servicefabric.ContainerApiResponse>
    name: ContainerApiResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerApiResponse
        fullName: ContainerApiResponse
        uid: '@azure/servicefabric.ContainerApiResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
    name: ServiceFabricClientInvokeContainerApiOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeContainerApiOptionalParams
        fullName: ServiceFabricClientInvokeContainerApiOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeContainerApiOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureCommandOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureCommandOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
    name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        fullName: ServiceFabricClientInvokeInfrastructureQueryOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientInvokeInfrastructureQueryOptionalParams'
  - uid: '@azure/servicefabric.ChaosScheduleDescription'
    name: ChaosScheduleDescription
    spec.typeScript:
      - name: ChaosScheduleDescription
        fullName: ChaosScheduleDescription
        uid: '@azure/servicefabric.ChaosScheduleDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
    name: ServiceFabricClientPostChaosScheduleOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPostChaosScheduleOptionalParams
        fullName: ServiceFabricClientPostChaosScheduleOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPostChaosScheduleOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
    name: ServiceFabricClientProvisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientProvisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.ProvisionFabricDescription'
    name: ProvisionFabricDescription
    spec.typeScript:
      - name: ProvisionFabricDescription
        fullName: ProvisionFabricDescription
        uid: '@azure/servicefabric.ProvisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
    name: ServiceFabricClientProvisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientProvisionClusterOptionalParams
        fullName: ServiceFabricClientProvisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientProvisionClusterOptionalParams'
  - uid: '@azure/servicefabric.PropertyDescription'
    name: PropertyDescription
    spec.typeScript:
      - name: PropertyDescription
        fullName: PropertyDescription
        uid: '@azure/servicefabric.PropertyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
    name: ServiceFabricClientPutPropertyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientPutPropertyOptionalParams
        fullName: ServiceFabricClientPutPropertyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientPutPropertyOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
    name: ServiceFabricClientRecoverAllPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverAllPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverAllPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverAllPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
    name: ServiceFabricClientRecoverPartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverPartitionOptionalParams
        fullName: ServiceFabricClientRecoverPartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverPartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
    name: ServiceFabricClientRecoverServicePartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverServicePartitionsOptionalParams
        fullName: ServiceFabricClientRecoverServicePartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverServicePartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
    name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        fullName: ServiceFabricClientRecoverSystemPartitionsOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRecoverSystemPartitionsOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
    name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        fullName: ServiceFabricClientRemoveComposeDeploymentOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveComposeDeploymentOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
    name: ServiceFabricClientRemoveNodeStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveNodeStateOptionalParams
        fullName: ServiceFabricClientRemoveNodeStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveNodeStateOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
    name: ServiceFabricClientRemoveReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRemoveReplicaOptionalParams
        fullName: ServiceFabricClientRemoveReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRemoveReplicaOptionalParams'
  - uid: '@azure/servicefabric.HealthInformation'
    name: HealthInformation
    spec.typeScript:
      - name: HealthInformation
        fullName: HealthInformation
        uid: '@azure/servicefabric.HealthInformation'
  - uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
    name: ServiceFabricClientReportApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
    name: ServiceFabricClientReportClusterHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportClusterHealthOptionalParams
        fullName: ServiceFabricClientReportClusterHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportClusterHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
    name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedApplicationHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedApplicationHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
    name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        fullName: ServiceFabricClientReportDeployedServicePackageHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportDeployedServicePackageHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
    name: ServiceFabricClientReportNodeHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportNodeHealthOptionalParams
        fullName: ServiceFabricClientReportNodeHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportNodeHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
    name: ServiceFabricClientReportPartitionHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportPartitionHealthOptionalParams
        fullName: ServiceFabricClientReportPartitionHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportPartitionHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
    name: ServiceFabricClientReportReplicaHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportReplicaHealthOptionalParams
        fullName: ServiceFabricClientReportReplicaHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportReplicaHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
    name: ServiceFabricClientReportServiceHealthOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientReportServiceHealthOptionalParams
        fullName: ServiceFabricClientReportServiceHealthOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
    name: ServiceFabricClientResetPartitionLoadOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResetPartitionLoadOptionalParams
        fullName: ServiceFabricClientResetPartitionLoadOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResetPartitionLoadOptionalParams'
  - uid: ServiceCallback<@azure/servicefabric.ResolvedServicePartition>
    name: ResolvedServicePartition>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResolvedServicePartition
        fullName: ResolvedServicePartition
        uid: '@azure/servicefabric.ResolvedServicePartition'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
    name: ServiceFabricClientResolveServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResolveServiceOptionalParams
        fullName: ServiceFabricClientResolveServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResolveServiceOptionalParams'
  - uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
    name: RestartDeployedCodePackageDescription
    spec.typeScript:
      - name: RestartDeployedCodePackageDescription
        fullName: RestartDeployedCodePackageDescription
        uid: '@azure/servicefabric.RestartDeployedCodePackageDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
    name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        fullName: ServiceFabricClientRestartDeployedCodePackageOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartDeployedCodePackageOptionalParams'
  - uid: '@azure/servicefabric.RestartNodeDescription'
    name: RestartNodeDescription
    spec.typeScript:
      - name: RestartNodeDescription
        fullName: RestartNodeDescription
        uid: '@azure/servicefabric.RestartNodeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
    name: ServiceFabricClientRestartNodeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartNodeOptionalParams
        fullName: ServiceFabricClientRestartNodeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartNodeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
    name: ServiceFabricClientRestartReplicaOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestartReplicaOptionalParams
        fullName: ServiceFabricClientRestartReplicaOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestartReplicaOptionalParams'
  - uid: '@azure/servicefabric.RestorePartitionDescription'
    name: RestorePartitionDescription
    spec.typeScript:
      - name: RestorePartitionDescription
        fullName: RestorePartitionDescription
        uid: '@azure/servicefabric.RestorePartitionDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
    name: ServiceFabricClientRestorePartitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRestorePartitionOptionalParams
        fullName: ServiceFabricClientRestorePartitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRestorePartitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
    name: ServiceFabricClientResumeApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationBackupOptionalParams
        fullName: ServiceFabricClientResumeApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
    name: ResumeApplicationUpgradeDescription
    spec.typeScript:
      - name: ResumeApplicationUpgradeDescription
        fullName: ResumeApplicationUpgradeDescription
        uid: '@azure/servicefabric.ResumeApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
    name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientResumeApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
    name: ResumeClusterUpgradeDescription
    spec.typeScript:
      - name: ResumeClusterUpgradeDescription
        fullName: ResumeClusterUpgradeDescription
        uid: '@azure/servicefabric.ResumeClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
    name: ServiceFabricClientResumeClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeClusterUpgradeOptionalParams
        fullName: ServiceFabricClientResumeClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
    name: ServiceFabricClientResumePartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumePartitionBackupOptionalParams
        fullName: ServiceFabricClientResumePartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumePartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
    name: ServiceFabricClientResumeServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientResumeServiceBackupOptionalParams
        fullName: ServiceFabricClientResumeServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientResumeServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
    name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
    name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        fullName: ServiceFabricClientRollbackClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientRollbackClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
    name: UpgradeOrchestrationServiceState
    spec.typeScript:
      - name: UpgradeOrchestrationServiceState
        fullName: UpgradeOrchestrationServiceState
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceState'
  - uid: ServiceCallback<@azure/servicefabric.UpgradeOrchestrationServiceStateSummary>
    name: UpgradeOrchestrationServiceStateSummary>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UpgradeOrchestrationServiceStateSummary
        fullName: UpgradeOrchestrationServiceStateSummary
        uid: '@azure/servicefabric.UpgradeOrchestrationServiceStateSummary'
      - name: '>'
        fullName: '>'
  - uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
    name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        fullName: ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSetUpgradeOrchestrationServiceStateOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeDescription'
    name: ApplicationUpgradeDescription
    spec.typeScript:
      - name: ApplicationUpgradeDescription
        fullName: ApplicationUpgradeDescription
        uid: '@azure/servicefabric.ApplicationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
    name: ServiceFabricClientStartApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientStartApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    spec.typeScript:
      - name: ChaosParameters
        fullName: ChaosParameters
        uid: '@azure/servicefabric.ChaosParameters'
  - uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
    name: ServiceFabricClientStartChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartChaosOptionalParams
        fullName: ServiceFabricClientStartChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartChaosOptionalParams'
  - uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
    name: ClusterConfigurationUpgradeDescription
    spec.typeScript:
      - name: ClusterConfigurationUpgradeDescription
        fullName: ClusterConfigurationUpgradeDescription
        uid: '@azure/servicefabric.ClusterConfigurationUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterConfigurationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.StartClusterUpgradeDescription'
    name: StartClusterUpgradeDescription
    spec.typeScript:
      - name: StartClusterUpgradeDescription
        fullName: StartClusterUpgradeDescription
        uid: '@azure/servicefabric.StartClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
    name: ServiceFabricClientStartClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartClusterUpgradeOptionalParams
        fullName: ServiceFabricClientStartClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
    name: ComposeDeploymentUpgradeDescription
    spec.typeScript:
      - name: ComposeDeploymentUpgradeDescription
        fullName: ComposeDeploymentUpgradeDescription
        uid: '@azure/servicefabric.ComposeDeploymentUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
    name: ServiceFabricClientStartDataLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartDataLossOptionalParams
        fullName: ServiceFabricClientStartDataLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartDataLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
    name: ServiceFabricClientStartNodeTransitionOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartNodeTransitionOptionalParams
        fullName: ServiceFabricClientStartNodeTransitionOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartNodeTransitionOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
    name: ServiceFabricClientStartPartitionRestartOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartPartitionRestartOptionalParams
        fullName: ServiceFabricClientStartPartitionRestartOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartPartitionRestartOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
    name: ServiceFabricClientStartQuorumLossOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartQuorumLossOptionalParams
        fullName: ServiceFabricClientStartQuorumLossOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartQuorumLossOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
    name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        fullName: ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStartRollbackComposeDeploymentUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
    name: ServiceFabricClientStopChaosOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientStopChaosOptionalParams
        fullName: ServiceFabricClientStopChaosOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientStopChaosOptionalParams'
  - uid: '@azure/servicefabric.PropertyBatchDescriptionList'
    name: PropertyBatchDescriptionList
    spec.typeScript:
      - name: PropertyBatchDescriptionList
        fullName: PropertyBatchDescriptionList
        uid: '@azure/servicefabric.PropertyBatchDescriptionList'
  - uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
    name: ServiceFabricClientSubmitPropertyBatchOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSubmitPropertyBatchOptionalParams
        fullName: ServiceFabricClientSubmitPropertyBatchOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSubmitPropertyBatchOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
    name: ServiceFabricClientSuspendApplicationBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendApplicationBackupOptionalParams
        fullName: ServiceFabricClientSuspendApplicationBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendApplicationBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
    name: ServiceFabricClientSuspendPartitionBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendPartitionBackupOptionalParams
        fullName: ServiceFabricClientSuspendPartitionBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendPartitionBackupOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
    name: ServiceFabricClientSuspendServiceBackupOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientSuspendServiceBackupOptionalParams
        fullName: ServiceFabricClientSuspendServiceBackupOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientSuspendServiceBackupOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
    name: UnprovisionApplicationTypeDescriptionInfo
    spec.typeScript:
      - name: UnprovisionApplicationTypeDescriptionInfo
        fullName: UnprovisionApplicationTypeDescriptionInfo
        uid: '@azure/servicefabric.UnprovisionApplicationTypeDescriptionInfo'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
    name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        fullName: ServiceFabricClientUnprovisionApplicationTypeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionApplicationTypeOptionalParams'
  - uid: '@azure/servicefabric.UnprovisionFabricDescription'
    name: UnprovisionFabricDescription
    spec.typeScript:
      - name: UnprovisionFabricDescription
        fullName: UnprovisionFabricDescription
        uid: '@azure/servicefabric.UnprovisionFabricDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
    name: ServiceFabricClientUnprovisionClusterOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUnprovisionClusterOptionalParams
        fullName: ServiceFabricClientUnprovisionClusterOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUnprovisionClusterOptionalParams'
  - uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
    name: ApplicationUpgradeUpdateDescription
    spec.typeScript:
      - name: ApplicationUpgradeUpdateDescription
        fullName: ApplicationUpgradeUpdateDescription
        uid: '@azure/servicefabric.ApplicationUpgradeUpdateDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
    name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateApplicationUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateApplicationUpgradeOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
    name: ServiceFabricClientUpdateBackupPolicyOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateBackupPolicyOptionalParams
        fullName: ServiceFabricClientUpdateBackupPolicyOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateBackupPolicyOptionalParams'
  - uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
    name: UpdateClusterUpgradeDescription
    spec.typeScript:
      - name: UpdateClusterUpgradeDescription
        fullName: UpdateClusterUpgradeDescription
        uid: '@azure/servicefabric.UpdateClusterUpgradeDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
    name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        fullName: ServiceFabricClientUpdateClusterUpgradeOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateClusterUpgradeOptionalParams'
  - uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
    name: RepairTaskUpdateHealthPolicyDescription
    spec.typeScript:
      - name: RepairTaskUpdateHealthPolicyDescription
        fullName: RepairTaskUpdateHealthPolicyDescription
        uid: '@azure/servicefabric.RepairTaskUpdateHealthPolicyDescription'
  - uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
    name: ServiceFabricClientUpdateServiceOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUpdateServiceOptionalParams
        fullName: ServiceFabricClientUpdateServiceOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUpdateServiceOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
    name: ServiceFabricClientUploadFileOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileOptionalParams
        fullName: ServiceFabricClientUploadFileOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileOptionalParams'
  - uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'
    name: ServiceFabricClientUploadFileChunkOptionalParams
    spec.typeScript:
      - name: ServiceFabricClientUploadFileChunkOptionalParams
        fullName: ServiceFabricClientUploadFileChunkOptionalParams
        uid: '@azure/servicefabric.ServiceFabricClientUploadFileChunkOptionalParams'