### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.DeployedApplicationInfo'
    name: DeployedApplicationInfo
    fullName: DeployedApplicationInfo
    children:
      - '@azure/servicefabric.DeployedApplicationInfo.healthState'
      - '@azure/servicefabric.DeployedApplicationInfo.id'
      - '@azure/servicefabric.DeployedApplicationInfo.logDirectory'
      - '@azure/servicefabric.DeployedApplicationInfo.name'
      - '@azure/servicefabric.DeployedApplicationInfo.status'
      - '@azure/servicefabric.DeployedApplicationInfo.tempDirectory'
      - '@azure/servicefabric.DeployedApplicationInfo.typeName'
      - '@azure/servicefabric.DeployedApplicationInfo.workDirectory'
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="db76c-101">Сведения о приложении, развернутом на узле.</span><span class="sxs-lookup"><span data-stu-id="db76c-101">Information about application deployed on the node.</span></span>'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.healthState'
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="db76c-102">Состояние работоспособности сущности Service Fabric, например кластера, узла, приложения, службы, секции, реплики и т.д. Ниже перечислены возможные значения. «Invalid», «ОК», «Предупреждение», «Ошибка», «Неизвестный»</span><span class="sxs-lookup"><span data-stu-id="db76c-102">The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: ''Invalid'', ''Ok'', ''Warning'', ''Error'', ''Unknown''</span></span>'
    optional: true
    syntax:
      content: 'healthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="db76c-103">Идентификатор приложения.</span><span class="sxs-lookup"><span data-stu-id="db76c-103">The identity of the application.</span></span> <span data-ttu-id="db76c-104">Это закодированное представление имени приложения.</span><span class="sxs-lookup"><span data-stu-id="db76c-104">This is an encoded representation of the application name.</span></span>
      <span data-ttu-id="db76c-105">Это используется в API REST для определения ресурса приложения.</span><span class="sxs-lookup"><span data-stu-id="db76c-105">This is used in the REST APIs to identify the application resource.</span></span>
      <span data-ttu-id="db76c-106">Начиная с версии 6.0, иерархические имена разделяются с помощью "\~" символов.</span><span class="sxs-lookup"><span data-stu-id="db76c-106">Starting in version 6.0, hierarchical names are delimited with the "\~" character.</span></span> <span data-ttu-id="db76c-107">Например, если имя приложения — «fabric: / myapp/app1», идентификатором приложения будет «myapp\~app1» в 6.0 + и «myapp/app1», в предыдущих версиях.</span><span class="sxs-lookup"><span data-stu-id="db76c-107">For example, if the application name is "fabric:/myapp/app1", the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1" in previous versions.</span></span>
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.logDirectory'
    name: logDirectory
    fullName: logDirectory
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="db76c-108">Каталог журнала приложения на узле.</span><span class="sxs-lookup"><span data-stu-id="db76c-108">The log directory of the application on the node.</span></span> <span data-ttu-id="db76c-109">Каталог журнала можно использовать для хранения журналов приложений.</span><span class="sxs-lookup"><span data-stu-id="db76c-109">The log directory can be used to store application logs.</span></span>
    optional: true
    syntax:
      content: 'logDirectory?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="db76c-110">Имя приложения, включая "fabric:" схемы универсального кода ресурса (URI) "fabric:".</span><span class="sxs-lookup"><span data-stu-id="db76c-110">The name of the application, including the ''fabric:'' URI scheme.</span></span>'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="db76c-111">Состояние приложения, развернутого на узле.</span><span class="sxs-lookup"><span data-stu-id="db76c-111">The status of the application deployed on the node.</span></span> <span data-ttu-id="db76c-112">Ниже приведены возможные значения.</span><span class="sxs-lookup"><span data-stu-id="db76c-112">Following are the possible values.</span></span>
      <span data-ttu-id="db76c-113">Ниже перечислены возможные значения. «Invalid», «Загрузки», «Активация», «Активно», «Обновление», «Деактивация»</span><span class="sxs-lookup"><span data-stu-id="db76c-113">Possible values include: 'Invalid', 'Downloading', 'Activating', 'Active', 'Upgrading', 'Deactivating'</span></span>
    optional: true
    syntax:
      content: 'status?: DeployedApplicationStatus'
      return:
        type:
          - '@azure/servicefabric.DeployedApplicationStatus'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.tempDirectory'
    name: tempDirectory
    fullName: tempDirectory
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="db76c-114">Временный каталог приложения на узле.</span><span class="sxs-lookup"><span data-stu-id="db76c-114">The temp directory of the application on the node.</span></span> <span data-ttu-id="db76c-115">Пакеты кода, относящихся к приложению разделенными с этот каталог в качестве их во временный каталог.</span><span class="sxs-lookup"><span data-stu-id="db76c-115">The code packages belonging to the application are forked with this directory set as their temporary directory.</span></span>'
    optional: true
    syntax:
      content: 'tempDirectory?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.typeName'
    name: typeName
    fullName: typeName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="db76c-116">Имя типа приложения, как определено в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="db76c-116">The application type name as defined in the application manifest.</span></span>'
    optional: true
    syntax:
      content: 'typeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.DeployedApplicationInfo.workDirectory'
    name: workDirectory
    fullName: workDirectory
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="db76c-117">Рабочий каталог приложения на узле.</span><span class="sxs-lookup"><span data-stu-id="db76c-117">The work directory of the application on the node.</span></span> <span data-ttu-id="db76c-118">Рабочий каталог используется для хранения данных приложений.</span><span class="sxs-lookup"><span data-stu-id="db76c-118">The work directory can be used to store application data.</span></span>
    optional: true
    syntax:
      content: 'workDirectory?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.DeployedApplicationStatus'
    name: DeployedApplicationStatus
    spec.typeScript:
      - name: DeployedApplicationStatus
        fullName: DeployedApplicationStatus
        uid: '@azure/servicefabric.DeployedApplicationStatus'