### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams'
    name: ServiceFabricClientReportServiceHealthOptionalParams
    fullName: ServiceFabricClientReportServiceHealthOptionalParams
    children:
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.abortSignal'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.customHeaders'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.immediate'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.onDownloadProgress'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.onUploadProgress'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.timeout'
      - '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.timeoutParameter'
    langs:
      - typeScript
    type: interface
    summary: Необязательные параметры.
    extends:
      name: RequestOptionsBase
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Сигнал, который может использоваться для отмены запросов.'
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{объект} [customHeaders] Пользовательский пользовательские заголовки запросов, которые будут применяться перед отправкой запроса.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.immediate'
    name: immediate
    fullName: immediate
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Этот флаг обозначает, что отчет нужно отправить немедленно.
      Отчет о работоспособности отправляется в приложение шлюза Service Fabric, которое передает его в хранилище данных о работоспособности.
      Если флагу Immediate задано значение true, отчет немедленно отправляется через шлюз HTTP в хранилище данных о работоспособности, независимо от параметров клиента структуры, которые использует приложение шлюза HTTP.
      Это полезно для критически важных отчетов, которые необходимо передать как можно быстрее.
      В зависимости от времени и других условий отправка отчета может завершиться сбоем, например, если шлюз HTTP закрыт или сообщение не достигает этого шлюза.
      Если флагу Immediate задано значение false, отчет отправляется с учетом параметров клиента работоспособности через шлюз HTTP. Это значит, что он будет включен в пакет отчетов в соответствии со значением параметра HealthReportSendInterval.
      Рекомендуется применять именно такой вариант, так как он позволяет клиенту работоспособности оптимизировать отправку отчетов в хранилище данных о работоспособности, а также обработку отчетов о работоспособности.
      По умолчанию отчеты не отправляются немедленно. Значение по умолчанию: false.
    optional: true
    syntax:
      content: 'immediate?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который запускается после загрузки.'
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Обратный вызов, который срабатывает при ход передачи.'
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Число микросекунд, которое запрос может выполняться автоматически прекращается.'
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ServiceFabricClientReportServiceHealthOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Время ожидания сервера для выполнения операции в секундах. Это время ожидания задает промежуток времени, который клиент ожидает завершения запрошенной операции. Значение по умолчанию для этого параметра — 60 секунд. Значение по умолчанию: 60.'
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'