### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    fullName: ChaosTargetFilter
    children:
      - '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
      - '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    langs:
      - typeScript
    type: interface
    summary: |-
      Определяет все фильтры для целевых ошибки Chaos, например, сбой только определенных типов узлов или сбой только определенных приложений.
      Если фильтр ChaosTargetFilter не используется, Chaos создает ошибки во всех сущностях кластера. Если фильтр ChaosTargetFilter используется, Chaos создает ошибки только в тех сущностях, которые соответствуют параметрам ChaosTargetFilter. NodeTypeInclusionList и ApplicationInclusionList допускают только семантику объединения.
      Вы не сможете использовать пересечение условий NodeTypeInclusionList и ApplicationInclusionList. Например, нельзя создать правило "создавать ошибки в этом приложении, только если оно размещено в узле этого типа".
      Если правило NodeTypeInclusionList или ApplicationInclusionList включают определенную сущность, ее нельзя исключить с помощью ChaosTargetFilter. В приложении X могут создаваться ошибки Chaos, даже если оно не входит в список ApplicationInclusionList, если в определенный момент это приложение будет выполняться в узле типа Y, включенного в список NodeTypeInclusionList. Если NodeTypeInclusionList и ApplicationInclusionList одновременно не указаны или имеют значение NULL, создается исключение ArgumentException.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.applicationInclusionList'
    name: applicationInclusionList
    fullName: applicationInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Это список URI приложений, которые нужно включать в ошибки Chaos.
      Все реплики, относящиеся к службам этих приложений, становятся доступными для ошибок реплики Chaos (перезапуск реплики, удаление реплики, перемещения первичной или вторичной реплики).
      Chaos может перезапустить пакет кода, только если в нем размещены реплики указанных приложений.
      Если приложение не включено в этот список, для него иногда могут создаваться ошибки Chaos, если в определенный момент это приложение будет выполняться в узле определенного типа, включенного в список NodeTypeInclusionList.
      Тем не менее, при этом приложение x привязано к типу узла y посредством ограничений размещения и этом приложение x отсутствует списке ApplicationInclusionList и тип узла y отсутствует списке NodeTypeInclusionList, затем в приложении x будет никогда не находится в состоянии сбоя.
      В этот список можно включить не более 1000 имен приложений. Чтобы увеличить это число, измените параметр конфигурации MaxNumberOfApplicationsInChaosEntityFilter.
    optional: true
    syntax:
      content: 'applicationInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosTargetFilter.nodeTypeInclusionList'
    name: nodeTypeInclusionList
    fullName: nodeTypeInclusionList
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Это список типов узлов, которые нужно включать в ошибки Chaos.
      Для узлов этого типа применяются все типы ошибок (перезапуск узла, перезапуск пакета кода, удаление реплики, перезапуск реплики, перемещение первичной и вторичной реплик).
      Если тип узла (скажем, списка Applicationinclusionlist) не отображается в список NodeTypeInclusionList, то сбоев на уровне узла (например, типа) никогда не следует включать для список ошибок кода пакета и реплики по-прежнему может использоваться для списка Applicationinclusionlist, если приложение в ApplicationInclusionList.
      Происходит, находиться на узле из списка Applicationinclusionlist.
      В этот список можно включить не более 100 имен типов узлов. Чтобы увеличить это число, измените параметр конфигурации MaxNumberOfNodeTypesInChaosEntityFilter.
    optional: true
    syntax:
      content: 'nodeTypeInclusionList?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/servicefabric'