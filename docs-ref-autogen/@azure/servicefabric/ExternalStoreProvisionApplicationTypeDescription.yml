### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription'
    name: ExternalStoreProvisionApplicationTypeDescription
    fullName: ExternalStoreProvisionApplicationTypeDescription
    children:
      - '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationPackageDownloadUri'
      - '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationTypeName'
      - '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationTypeVersion'
      - '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.async'
      - '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.kind'
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="f7f37-101">Описывает операцию для регистрации или подготовки типа приложения, с помощью пакета приложения из внешнего хранилища вместо загрузки в хранилище образов Service Fabric пакета.</span><span class="sxs-lookup"><span data-stu-id="f7f37-101">Describes the operation to register or provision an application type using an application package from an external store instead of a package uploaded to the Service Fabric image store.</span></span>'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationPackageDownloadUri'
    name: applicationPackageDownloadUri
    fullName: applicationPackageDownloadUri
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="f7f37-102">Путь к пакету приложения SFPKG, по которому можно скачать пакет приложения с помощью протоколов HTTP или HTTPS.</span><span class="sxs-lookup"><span data-stu-id="f7f37-102">The path to the ''.sfpkg'' application package from where the application package can be downloaded using HTTP or HTTPS protocols.</span></span> <span data-ttu-id="f7f37-103">Пакет приложения может быть сохранен во внешнем хранилище. В этом случае можно скачать файл с помощью операции GET.</span><span class="sxs-lookup"><span data-stu-id="f7f37-103">The application package can be stored in an external store that provides GET operation to download the file.</span></span> <span data-ttu-id="f7f37-104">Поддерживаются протоколы HTTP и HTTPS, и для пути должен быть разрешен доступ на чтение.</span><span class="sxs-lookup"><span data-stu-id="f7f37-104">Supported protocols are HTTP and HTTPS, and the path must allow READ access.</span></span>'
    syntax:
      content: 'applicationPackageDownloadUri: string'
      return:
        type:
          - string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationTypeName'
    name: applicationTypeName
    fullName: applicationTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="f7f37-105">Имя типа приложения соответствует имени, обнаруженном в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="f7f37-105">The application type name represents the name of the application type found in the application manifest.</span></span>'
    syntax:
      content: 'applicationTypeName: string'
      return:
        type:
          - string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.applicationTypeVersion'
    name: applicationTypeVersion
    fullName: applicationTypeVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="f7f37-106">Версия типа приложения соответствует версии, обнаруженной в манифесте приложения.</span><span class="sxs-lookup"><span data-stu-id="f7f37-106">The application type version represents the version of the application type found in the application manifest.</span></span>'
    syntax:
      content: 'applicationTypeVersion: string'
      return:
        type:
          - string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.async'
    name: async
    fullName: async
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="f7f37-107">Указывает, должна ли подготовка выполняться асинхронно.</span><span class="sxs-lookup"><span data-stu-id="f7f37-107">Indicates whether or not provisioning should occur asynchronously.</span></span> <span data-ttu-id="f7f37-108">Если задано значение true, после принятия запроса системой операция подготовки продолжается без какого-либо ограничения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="f7f37-108">When set to true, the provision operation returns when the request is accepted by the system, and the provision operation continues without any timeout limit.</span></span> <span data-ttu-id="f7f37-109">По умолчанию для этого параметра используется значение false.</span><span class="sxs-lookup"><span data-stu-id="f7f37-109">The default value is false.</span></span> <span data-ttu-id="f7f37-110">Для больших пакетов приложений рекомендуется установить значение true.</span><span class="sxs-lookup"><span data-stu-id="f7f37-110">For large application packages, we recommend setting the value to true.</span></span>'
    syntax:
      content: 'async: boolean'
      return:
        type:
          - boolean
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ExternalStoreProvisionApplicationTypeDescription.kind'
    name: kind
    fullName: kind
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="f7f37-111">Полиморфные дискриминатора</span><span class="sxs-lookup"><span data-stu-id="f7f37-111">Polymorphic Discriminator</span></span>
    syntax:
      content: 'kind: "ExternalStore"'
      return:
        type:
          - '"ExternalStore"'
    package: '@azure/servicefabric'