### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatelessServiceInfo'
    name: StatelessServiceInfo
    fullName: StatelessServiceInfo
    children:
      - '@azure/servicefabric.StatelessServiceInfo.healthState'
      - '@azure/servicefabric.StatelessServiceInfo.id'
      - '@azure/servicefabric.StatelessServiceInfo.isServiceGroup'
      - '@azure/servicefabric.StatelessServiceInfo.manifestVersion'
      - '@azure/servicefabric.StatelessServiceInfo.name'
      - '@azure/servicefabric.StatelessServiceInfo.serviceKind'
      - '@azure/servicefabric.StatelessServiceInfo.serviceStatus'
      - '@azure/servicefabric.StatelessServiceInfo.typeName'
    langs:
      - typeScript
    type: interface
    summary: Сведения о службе без отслеживания состояния Service Fabric.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.healthState'
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Состояние работоспособности сущности Service Fabric, например кластера, узла, приложения, службы, секции, реплики и т.д. Ниже перечислены возможные значения. «Invalid», «ОК», «Предупреждение», «Ошибка», «Неизвестный»'
    optional: true
    syntax:
      content: 'healthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Идентификатор службы. Этот идентификатор является закодированное представление имени службы. Это используется в API REST для идентификации ресурса службы.
      Начиная с версии 6.0, иерархические имена разделяются с помощью "\~" символов. Например, если имя службы — «fabric: / myapp/app1/svc1», идентификатором службы будет «myapp ~ app1\~svc1, а» в 6.0 + и «myapp/app1/svc1» в предыдущих версиях.
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.isServiceGroup'
    name: isServiceGroup
    fullName: isServiceGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: Находится ли служба в группу служб.
    optional: true
    syntax:
      content: 'isServiceGroup?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.manifestVersion'
    name: manifestVersion
    fullName: manifestVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: Версия манифеста службы.
    optional: true
    syntax:
      content: 'manifestVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Полное имя службы с "fabric:" схемы универсального кода ресурса (URI) "fabric:".'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.serviceKind'
    name: serviceKind
    fullName: serviceKind
    children: []
    langs:
      - typeScript
    type: property
    summary: Полиморфные дискриминатора
    syntax:
      content: 'serviceKind: "Stateless"'
      return:
        type:
          - '"Stateless"'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.serviceStatus'
    name: serviceStatus
    fullName: serviceStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Состояние приложения. Ниже перечислены возможные значения. «Неизвестный», «Active», «Обновления», «удаление», «Создание», «сбой»'
    optional: true
    syntax:
      content: 'serviceStatus?: ServiceStatus'
      return:
        type:
          - '@azure/servicefabric.ServiceStatus'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatelessServiceInfo.typeName'
    name: typeName
    fullName: typeName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Имя типа службы, как указано в манифесте службы.'
    optional: true
    syntax:
      content: 'typeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.ServiceStatus'
    name: ServiceStatus
    spec.typeScript:
      - name: ServiceStatus
        fullName: ServiceStatus
        uid: '@azure/servicefabric.ServiceStatus'