### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-locks.ManagementLocks'
    name: ManagementLocks
    fullName: ManagementLocks
    children:
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_2'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_1'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_2'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_1'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_2'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_1'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateByScope'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_2'
      - '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_1'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_2'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_1'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_2'
      - '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_1'
      - '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel'
      - '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_2'
      - '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_1'
      - '@azure/arm-locks.ManagementLocks.deleteByScope'
      - '@azure/arm-locks.ManagementLocks.deleteByScope_2'
      - '@azure/arm-locks.ManagementLocks.deleteByScope_1'
      - '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel'
      - '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_2'
      - '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_1'
      - '@azure/arm-locks.ManagementLocks.getAtResourceLevel'
      - '@azure/arm-locks.ManagementLocks.getAtResourceLevel_2'
      - '@azure/arm-locks.ManagementLocks.getAtResourceLevel_1'
      - '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel'
      - '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_2'
      - '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_1'
      - '@azure/arm-locks.ManagementLocks.getByScope'
      - '@azure/arm-locks.ManagementLocks.getByScope_2'
      - '@azure/arm-locks.ManagementLocks.getByScope_1'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_2'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_1'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_2'
      - '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_1'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevel_2'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevel'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevel_1'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_2'
      - '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_1'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_2'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_1'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_2'
      - '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_1'
      - '@azure/arm-locks.ManagementLocks.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий ManagementLocks.'
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel'
    name: 'createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'При применении блокировки к родительской области все дочерние ресурсы наследуют ту же блокировку. Чтобы создать блокировки управления, необходимо иметь доступ к Microsoft.Authorization/* или Microsoft.Authorization/locks/* действий. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_2'
    name: 'createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceGroupLevel_1'
    name: 'createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel'
    name: 'createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'При применении блокировки к родительской области все дочерние ресурсы наследуют ту же блокировку. Чтобы создать блокировки управления, необходимо иметь доступ к Microsoft.Authorization/* или Microsoft.Authorization/locks/* действий. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс блокировки.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов из ресурса для блокировки.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса для блокировки ресурсов.
        - id: resourceName
          type:
            - string
          description: Имя ресурса для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры для создания или обновления блокировки управления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_2'
    name: 'createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс блокировки.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов из ресурса для блокировки.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса для блокировки ресурсов.
        - id: resourceName
          type:
            - string
          description: Имя ресурса для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры для создания или обновления блокировки управления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtResourceLevel_1'
    name: 'createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс блокировки.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов из ресурса для блокировки.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса для блокировки ресурсов.
        - id: resourceName
          type:
            - string
          description: Имя ресурса для блокировки.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры для создания или обновления блокировки управления.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel'
    name: 'createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'При применении блокировки к родительской области все дочерние ресурсы наследуют ту же блокировку. Чтобы создать блокировки управления, необходимо иметь доступ к Microsoft.Authorization/* или Microsoft.Authorization/locks/* действий. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_2'
    name: 'createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateAtSubscriptionLevel_1'
    name: 'createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки. Имя блокировки не может превышать 260 символов. Он не может содержать <>, % &,:, \, ?, /, или управляющие символы.'
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Параметры блокировки управления.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope'
    name: 'createOrUpdateByScope(string, string, ManagementLockObject, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создание или обновление блокировки управления областью.
    syntax:
      content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область блокировки. При предоставлении область для назначения, используйте «/ subscriptions / {subscriptionId}» для подписок, «/ subscriptions / {subscriptionId} /resourcegroups/ {resourceGroupName}» для группы ресурсов, и "/ subscriptions / {subscriptionId} / resourcegroups / {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / {parentResourcePathIfPresent} / {Тип_ресурса} / {resourceName} "для ресурсов.'
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Создание или обновление параметров блокировки управления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_2'
    name: 'createOrUpdateByScope(string, string, ManagementLockObject, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область блокировки. При предоставлении область для назначения, используйте «/ subscriptions / {subscriptionId}» для подписок, «/ subscriptions / {subscriptionId} /resourcegroups/ {resourceGroupName}» для группы ресурсов, и "/ subscriptions / {subscriptionId} / resourcegroups / {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / {parentResourcePathIfPresent} / {Тип_ресурса} / {resourceName} "для ресурсов.'
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Создание или обновление параметров блокировки управления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.createOrUpdateByScope_1'
    name: 'createOrUpdateByScope(string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область блокировки. При предоставлении область для назначения, используйте «/ subscriptions / {subscriptionId}» для подписок, «/ subscriptions / {subscriptionId} /resourcegroups/ {resourceGroupName}» для группы ресурсов, и "/ subscriptions / {subscriptionId} / resourcegroups / {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / {parentResourcePathIfPresent} / {Тип_ресурса} / {resourceName} "для ресурсов.'
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: parameters
          type:
            - '@azure/arm-locks.ManagementLockObject'
          description: Создание или обновление параметров блокировки управления.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksCreateOrUpdateByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel'
    name: 'deleteAtResourceGroupLevel(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Чтобы удалить блокировки управления, необходимо иметь доступ к действиям Microsoft.Authorization/* или Microsoft.Authorization/locks/*. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей блокировку.'
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_2'
    name: 'deleteAtResourceGroupLevel(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей блокировку.'
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceGroupLevel_1'
    name: 'deleteAtResourceGroupLevel(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей блокировку.'
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel'
    name: 'deleteAtResourceLevel(string, string, string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Чтобы удалить блокировки управления, необходимо иметь доступ к действиям Microsoft.Authorization/* или Microsoft.Authorization/locks/*. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, которая содержит ресурс с блокировкой для удаления.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов с блокировкой для удаления ресурса.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса с блокировкой для удаления ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса с блокировкой для удаления.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы удалить.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_2'
    name: 'deleteAtResourceLevel(string, string, string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, которая содержит ресурс с блокировкой для удаления.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов с блокировкой для удаления ресурса.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса с блокировкой для удаления ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса с блокировкой для удаления.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы удалить.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtResourceLevel_1'
    name: 'deleteAtResourceLevel(string, string, string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, которая содержит ресурс с блокировкой для удаления.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов с блокировкой для удаления ресурса.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: Тип ресурса с блокировкой для удаления ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса с блокировкой для удаления.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы удалить.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel'
    name: 'deleteAtSubscriptionLevel(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Чтобы удалить блокировки управления, необходимо иметь доступ к действиям Microsoft.Authorization/* или Microsoft.Authorization/locks/*. Из встроенных ролей эти действия предоставляются только владельцу и администратору доступа пользователей.'
    syntax:
      content: 'function deleteAtSubscriptionLevel(lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_2'
    name: 'deleteAtSubscriptionLevel(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtSubscriptionLevel(lockName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteAtSubscriptionLevel_1'
    name: 'deleteAtSubscriptionLevel(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAtSubscriptionLevel(lockName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: lockName
          type:
            - string
          description: Имя блокировки для удаления.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteByScope'
    name: 'deleteByScope(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаление блокировки управления областью.
    syntax:
      content: 'function deleteByScope(scope: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteByScope_2'
    name: 'deleteByScope(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteByScope(scope: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.deleteByScope_1'
    name: 'deleteByScope(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteByScope(scope: string, lockName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel'
    name: 'getAtResourceGroupLevel(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает блокировку управления на уровне группы ресурсов.
    syntax:
      content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы заблокированного ресурса.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_2'
    name: 'getAtResourceGroupLevel(string, string, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы заблокированного ресурса.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceGroupLevel_1'
    name: 'getAtResourceGroupLevel(string, string, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы заблокированного ресурса.
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel'
    name: 'getAtResourceLevel(string, string, string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получите блокировки управления из любого уровня ниже ресурсов или ресурса.
    syntax:
      content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: 'В некоторых службах, таких как базы данных SQL требуется параметр дополнительный путь.'
        - id: resourceType
          type:
            - string
          description: Тип ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel_2'
    name: 'getAtResourceLevel(string, string, string, string, string, string, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: 'В некоторых службах, таких как базы данных SQL требуется параметр дополнительный путь.'
        - id: resourceType
          type:
            - string
          description: Тип ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtResourceLevel_1'
    name: 'getAtResourceLevel(string, string, string, string, string, string, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов.
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: 'В некоторых службах, таких как базы данных SQL требуется параметр дополнительный путь.'
        - id: resourceType
          type:
            - string
          description: Тип ресурса.
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel'
    name: 'getAtSubscriptionLevel(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает блокировку управления на уровне подписки.
    syntax:
      content: 'function getAtSubscriptionLevel(lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksGetAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_2'
    name: 'getAtSubscriptionLevel(string, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtSubscriptionLevel(lockName: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getAtSubscriptionLevel_1'
    name: 'getAtSubscriptionLevel(string, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAtSubscriptionLevel(lockName: string, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: lockName
          type:
            - string
          description: 'Имя блокировки, чтобы получить.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getByScope'
    name: 'getByScope(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получите блокировки управления областью.
    syntax:
      content: 'function getByScope(scope: string, lockName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksGetByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getByScope_2'
    name: 'getByScope(string, string, RequestOptionsBase, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getByScope(scope: string, lockName: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.getByScope_1'
    name: 'getByScope(string, string, ServiceCallback<ManagementLockObject>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getByScope(scope: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
      parameters:
        - id: scope
          type:
            - string
          description: Область блокировки.
        - id: lockName
          type:
            - string
          description: Имя блокировки.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockObject>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksGetByScopeResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_2'
    name: 'listAtResourceGroupLevel(string, ManagementLocksListAtResourceGroupLevelOptionalParams, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceGroupLevel(resourceGroupName: string, options: ManagementLocksListAtResourceGroupLevelOptionalParams, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащая блокировки для получения.'
        - id: options
          type:
            - '@azure/arm-locks.ManagementLocksListAtResourceGroupLevelOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel'
    name: 'listAtResourceGroupLevel(string, Models.ManagementLocksListAtResourceGroupLevelOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для группы ресурсов.
    syntax:
      content: 'function listAtResourceGroupLevel(resourceGroupName: string, options?: Models.ManagementLocksListAtResourceGroupLevelOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащая блокировки для получения.'
        - id: options
          type:
            - Models.ManagementLocksListAtResourceGroupLevelOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevel_1'
    name: 'listAtResourceGroupLevel(string, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceGroupLevel(resourceGroupName: string, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащая блокировки для получения.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext'
    name: 'listAtResourceGroupLevelNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для группы ресурсов.
    syntax:
      content: 'function listAtResourceGroupLevelNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_2'
    name: 'listAtResourceGroupLevelNext(string, RequestOptionsBase, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceGroupLevelNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceGroupLevelNext_1'
    name: 'listAtResourceGroupLevelNext(string, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceGroupLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceGroupLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel_2'
    name: 'listAtResourceLevel(string, string, string, string, string, ManagementLocksListAtResourceLevelOptionalParams, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: ManagementLocksListAtResourceLevelOptionalParams, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей заблокированного ресурса. Имя без учета регистра.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: 'Тип ресурса, заблокированного ресурса.'
        - id: resourceName
          type:
            - string
          description: Имя заблокированного ресурса.
        - id: options
          type:
            - '@azure/arm-locks.ManagementLocksListAtResourceLevelOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel'
    name: 'listAtResourceLevel(string, string, string, string, string, Models.ManagementLocksListAtResourceLevelOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для любого уровня ниже ресурсов или ресурса.
    syntax:
      content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Models.ManagementLocksListAtResourceLevelOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей заблокированного ресурса. Имя без учета регистра.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: 'Тип ресурса, заблокированного ресурса.'
        - id: resourceName
          type:
            - string
          description: Имя заблокированного ресурса.
        - id: options
          type:
            - Models.ManagementLocksListAtResourceLevelOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevel_1'
    name: 'listAtResourceLevel(string, string, string, string, string, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей заблокированного ресурса. Имя без учета регистра.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов.
        - id: parentResourcePath
          type:
            - string
          description: Идентификатор родительского ресурса.
        - id: resourceType
          type:
            - string
          description: 'Тип ресурса, заблокированного ресурса.'
        - id: resourceName
          type:
            - string
          description: Имя заблокированного ресурса.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext'
    name: 'listAtResourceLevelNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для любого уровня ниже ресурсов или ресурса.
    syntax:
      content: 'function listAtResourceLevelNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_2'
    name: 'listAtResourceLevelNext(string, RequestOptionsBase, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceLevelNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtResourceLevelNext_1'
    name: 'listAtResourceLevelNext(string, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtResourceLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtResourceLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_2'
    name: 'listAtSubscriptionLevel(ManagementLocksListAtSubscriptionLevelOptionalParams, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtSubscriptionLevel(options: ManagementLocksListAtSubscriptionLevelOptionalParams, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: options
          type:
            - '@azure/arm-locks.ManagementLocksListAtSubscriptionLevelOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel'
    name: listAtSubscriptionLevel(Models.ManagementLocksListAtSubscriptionLevelOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для подписки.
    syntax:
      content: 'function listAtSubscriptionLevel(options?: Models.ManagementLocksListAtSubscriptionLevelOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ManagementLocksListAtSubscriptionLevelOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevel_1'
    name: listAtSubscriptionLevel(ServiceCallback<ManagementLockListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtSubscriptionLevel(callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext'
    name: 'listAtSubscriptionLevelNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает всех блокировок управления для подписки.
    syntax:
      content: 'function listAtSubscriptionLevelNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_2'
    name: 'listAtSubscriptionLevelNext(string, RequestOptionsBase, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtSubscriptionLevelNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.listAtSubscriptionLevelNext_1'
    name: 'listAtSubscriptionLevelNext(string, ServiceCallback<ManagementLockListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listAtSubscriptionLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-locks.ManagementLockListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ManagementLocksListAtSubscriptionLevelNextResponse>
    package: '@azure/arm-locks'
  - uid: '@azure/arm-locks.ManagementLocks.constructor'
    name: ManagementLocks(ManagementLockClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте ManagementLocks.
    syntax:
      content: 'new ManagementLocks(client: ManagementLockClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-locks.ManagementLockClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-locks'
references:
  - uid: '@azure/arm-locks.ManagementLockClientContext'
    name: ManagementLockClientContext
    spec.typeScript:
      - name: ManagementLockClientContext
        fullName: ManagementLockClientContext
        uid: '@azure/arm-locks.ManagementLockClientContext'
  - uid: '@azure/arm-locks.ManagementLockObject'
    name: ManagementLockObject
    spec.typeScript:
      - name: ManagementLockObject
        fullName: ManagementLockObject
        uid: '@azure/arm-locks.ManagementLockObject'
  - uid: ServiceCallback<@azure/arm-locks.ManagementLockObject>
    name: ManagementLockObject>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagementLockObject
        fullName: ManagementLockObject
        uid: '@azure/arm-locks.ManagementLockObject'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-locks.ManagementLockListResult>
    name: ManagementLockListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ManagementLockListResult
        fullName: ManagementLockListResult
        uid: '@azure/arm-locks.ManagementLockListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-locks.ManagementLocksListAtResourceGroupLevelOptionalParams'
    name: ManagementLocksListAtResourceGroupLevelOptionalParams
    spec.typeScript:
      - name: ManagementLocksListAtResourceGroupLevelOptionalParams
        fullName: ManagementLocksListAtResourceGroupLevelOptionalParams
        uid: '@azure/arm-locks.ManagementLocksListAtResourceGroupLevelOptionalParams'
  - uid: '@azure/arm-locks.ManagementLocksListAtResourceLevelOptionalParams'
    name: ManagementLocksListAtResourceLevelOptionalParams
    spec.typeScript:
      - name: ManagementLocksListAtResourceLevelOptionalParams
        fullName: ManagementLocksListAtResourceLevelOptionalParams
        uid: '@azure/arm-locks.ManagementLocksListAtResourceLevelOptionalParams'
  - uid: '@azure/arm-locks.ManagementLocksListAtSubscriptionLevelOptionalParams'
    name: ManagementLocksListAtSubscriptionLevelOptionalParams
    spec.typeScript:
      - name: ManagementLocksListAtSubscriptionLevelOptionalParams
        fullName: ManagementLocksListAtSubscriptionLevelOptionalParams
        uid: '@azure/arm-locks.ManagementLocksListAtSubscriptionLevelOptionalParams'