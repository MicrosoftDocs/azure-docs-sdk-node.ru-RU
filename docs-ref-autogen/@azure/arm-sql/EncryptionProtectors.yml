### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-sql.EncryptionProtectors'
    name: EncryptionProtectors
    fullName: EncryptionProtectors
    children:
      - '@azure/arm-sql.EncryptionProtectors.beginCreateOrUpdate'
      - '@azure/arm-sql.EncryptionProtectors.createOrUpdate'
      - '@azure/arm-sql.EncryptionProtectors.constructor'
      - '@azure/arm-sql.EncryptionProtectors.get'
      - '@azure/arm-sql.EncryptionProtectors.get_2'
      - '@azure/arm-sql.EncryptionProtectors.get_1'
      - '@azure/arm-sql.EncryptionProtectors.listByServer'
      - '@azure/arm-sql.EncryptionProtectors.listByServer_2'
      - '@azure/arm-sql.EncryptionProtectors.listByServer_1'
      - '@azure/arm-sql.EncryptionProtectors.listByServerNext'
      - '@azure/arm-sql.EncryptionProtectors.listByServerNext_2'
      - '@azure/arm-sql.EncryptionProtectors.listByServerNext_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий EncryptionProtectors.'
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, EncryptionProtector, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет существующие предохранитель шифрования.
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, serverName: string, parameters: EncryptionProtector, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: parameters
          type:
            - '@azure/arm-sql.EncryptionProtector'
          description: Состояние ресурсов предохранителя запрошенного шифрования.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.createOrUpdate'
    name: 'createOrUpdate(string, string, EncryptionProtector, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Обновляет существующие предохранитель шифрования.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serverName: string, parameters: EncryptionProtector, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: parameters
          type:
            - '@azure/arm-sql.EncryptionProtector'
          description: Состояние ресурсов предохранителя запрошенного шифрования.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EncryptionProtectorsCreateOrUpdateResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.constructor'
    name: EncryptionProtectors(SqlManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте EncryptionProtectors.
    syntax:
      content: 'new EncryptionProtectors(client: SqlManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-sql.SqlManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает средство защиты шифрования сервера.
    syntax:
      content: 'function get(resourceGroupName: string, serverName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EncryptionProtectorsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<EncryptionProtector>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serverName: string, options: RequestOptionsBase, callback: ServiceCallback<EncryptionProtector>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtector>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.get_1'
    name: 'get(string, string, ServiceCallback<EncryptionProtector>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serverName: string, callback: ServiceCallback<EncryptionProtector>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtector>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsGetResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServer'
    name: 'listByServer(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получение списка предохранителей шифрования сервера
    syntax:
      content: 'function listByServer(resourceGroupName: string, serverName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServer_2'
    name: 'listByServer(string, string, RequestOptionsBase, ServiceCallback<EncryptionProtectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServer(resourceGroupName: string, serverName: string, options: RequestOptionsBase, callback: ServiceCallback<EncryptionProtectorListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtectorListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServer_1'
    name: 'listByServer(string, string, ServiceCallback<EncryptionProtectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServer(resourceGroupName: string, serverName: string, callback: ServiceCallback<EncryptionProtectorListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, к которой относится ресурс. Это значение можно получить от API-интерфейса диспетчера ресурсов Azure или портала.'
        - id: serverName
          type:
            - string
          description: Имени сервера.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtectorListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServerNext'
    name: 'listByServerNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получение списка предохранителей шифрования сервера
    syntax:
      content: 'function listByServerNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServerNext_2'
    name: 'listByServerNext(string, RequestOptionsBase, ServiceCallback<EncryptionProtectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServerNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<EncryptionProtectorListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtectorListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerNextResponse>
    package: '@azure/arm-sql'
  - uid: '@azure/arm-sql.EncryptionProtectors.listByServerNext_1'
    name: 'listByServerNext(string, ServiceCallback<EncryptionProtectorListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServerNext(nextPageLink: string, callback: ServiceCallback<EncryptionProtectorListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-sql.EncryptionProtectorListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.EncryptionProtectorsListByServerNextResponse>
    package: '@azure/arm-sql'
references:
  - uid: '@azure/arm-sql.SqlManagementClientContext'
    name: SqlManagementClientContext
    spec.typeScript:
      - name: SqlManagementClientContext
        fullName: SqlManagementClientContext
        uid: '@azure/arm-sql.SqlManagementClientContext'
  - uid: '@azure/arm-sql.EncryptionProtector'
    name: EncryptionProtector
    spec.typeScript:
      - name: EncryptionProtector
        fullName: EncryptionProtector
        uid: '@azure/arm-sql.EncryptionProtector'
  - uid: ServiceCallback<@azure/arm-sql.EncryptionProtector>
    name: EncryptionProtector>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EncryptionProtector
        fullName: EncryptionProtector
        uid: '@azure/arm-sql.EncryptionProtector'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-sql.EncryptionProtectorListResult>
    name: EncryptionProtectorListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EncryptionProtectorListResult
        fullName: EncryptionProtectorListResult
        uid: '@azure/arm-sql.EncryptionProtectorListResult'
      - name: '>'
        fullName: '>'