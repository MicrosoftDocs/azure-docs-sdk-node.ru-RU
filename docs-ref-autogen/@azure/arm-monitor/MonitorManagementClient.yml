### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-monitor.MonitorManagementClient'
    name: MonitorManagementClient
    fullName: MonitorManagementClient
    children:
      - '@azure/arm-monitor.MonitorManagementClient.acceptLanguage'
      - '@azure/arm-monitor.MonitorManagementClient.actionGroups'
      - '@azure/arm-monitor.MonitorManagementClient.activityLogAlerts'
      - '@azure/arm-monitor.MonitorManagementClient.activityLogs'
      - '@azure/arm-monitor.MonitorManagementClient.alertRuleIncidents'
      - '@azure/arm-monitor.MonitorManagementClient.alertRules'
      - '@azure/arm-monitor.MonitorManagementClient.autoscaleSettings'
      - '@azure/arm-monitor.MonitorManagementClient.beginLongRunningRequest'
      - '@azure/arm-monitor.MonitorManagementClient.credentials'
      - '@azure/arm-monitor.MonitorManagementClient.diagnosticSettings'
      - '@azure/arm-monitor.MonitorManagementClient.diagnosticSettingsCategory'
      - '@azure/arm-monitor.MonitorManagementClient.eventCategories'
      - '@azure/arm-monitor.MonitorManagementClient.logProfiles'
      - '@azure/arm-monitor.MonitorManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-monitor.MonitorManagementClient.metricAlerts'
      - '@azure/arm-monitor.MonitorManagementClient.metricAlertsStatus'
      - '@azure/arm-monitor.MonitorManagementClient.metricBaseline'
      - '@azure/arm-monitor.MonitorManagementClient.metricDefinitions'
      - '@azure/arm-monitor.MonitorManagementClient.metricNamespaces'
      - '@azure/arm-monitor.MonitorManagementClient.metrics'
      - '@azure/arm-monitor.MonitorManagementClient.constructor'
      - '@azure/arm-monitor.MonitorManagementClient.operations'
      - '@azure/arm-monitor.MonitorManagementClient.restoreLROPoller'
      - '@azure/arm-monitor.MonitorManagementClient.scheduledQueryRules'
      - '@azure/arm-monitor.MonitorManagementClient.sendLongRunningRequest'
      - '@azure/arm-monitor.MonitorManagementClient.sendLRORequest'
      - '@azure/arm-monitor.MonitorManagementClient.sendOperationRequest'
      - '@azure/arm-monitor.MonitorManagementClient.sendRequest'
      - '@azure/arm-monitor.MonitorManagementClient.subscriptionId'
      - '@azure/arm-monitor.MonitorManagementClient.tenantActivityLogs'
      - '@azure/arm-monitor.MonitorManagementClient.vMInsights'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-monitor.MonitorManagementClientContext'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.actionGroups'
    name: actionGroups
    fullName: actionGroups
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'actionGroups: ActionGroups'
      return:
        type:
          - '@azure/arm-monitor.ActionGroups'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.activityLogAlerts'
    name: activityLogAlerts
    fullName: activityLogAlerts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'activityLogAlerts: ActivityLogAlerts'
      return:
        type:
          - '@azure/arm-monitor.ActivityLogAlerts'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.activityLogs'
    name: activityLogs
    fullName: activityLogs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'activityLogs: ActivityLogs'
      return:
        type:
          - '@azure/arm-monitor.ActivityLogs'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.alertRuleIncidents'
    name: alertRuleIncidents
    fullName: alertRuleIncidents
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'alertRuleIncidents: AlertRuleIncidents'
      return:
        type:
          - '@azure/arm-monitor.AlertRuleIncidents'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.alertRules'
    name: alertRules
    fullName: alertRules
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'alertRules: AlertRules'
      return:
        type:
          - '@azure/arm-monitor.AlertRules'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.autoscaleSettings'
    name: autoscaleSettings
    fullName: autoscaleSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'autoscaleSettings: AutoscaleSettings'
      return:
        type:
          - '@azure/arm-monitor.AutoscaleSettings'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно HttpLongRunningOperationResponse, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.diagnosticSettings'
    name: diagnosticSettings
    fullName: diagnosticSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'diagnosticSettings: DiagnosticSettingsOperations'
      return:
        type:
          - '@azure/arm-monitor.DiagnosticSettingsOperations'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.diagnosticSettingsCategory'
    name: diagnosticSettingsCategory
    fullName: diagnosticSettingsCategory
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'diagnosticSettingsCategory: DiagnosticSettingsCategoryOperations'
      return:
        type:
          - '@azure/arm-monitor.DiagnosticSettingsCategoryOperations'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.eventCategories'
    name: eventCategories
    fullName: eventCategories
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eventCategories: EventCategories'
      return:
        type:
          - '@azure/arm-monitor.EventCategories'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.logProfiles'
    name: logProfiles
    fullName: logProfiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'logProfiles: LogProfiles'
      return:
        type:
          - '@azure/arm-monitor.LogProfiles'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Время ожидания в секундах для длительных операций повтора. Значение по умолчанию — 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metricAlerts'
    name: metricAlerts
    fullName: metricAlerts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metricAlerts: MetricAlerts'
      return:
        type:
          - '@azure/arm-monitor.MetricAlerts'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metricAlertsStatus'
    name: metricAlertsStatus
    fullName: metricAlertsStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metricAlertsStatus: MetricAlertsStatus'
      return:
        type:
          - '@azure/arm-monitor.MetricAlertsStatus'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metricBaseline'
    name: metricBaseline
    fullName: metricBaseline
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metricBaseline: MetricBaseline'
      return:
        type:
          - '@azure/arm-monitor.MetricBaseline'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metricDefinitions'
    name: metricDefinitions
    fullName: metricDefinitions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metricDefinitions: MetricDefinitions'
      return:
        type:
          - '@azure/arm-monitor.MetricDefinitions'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metricNamespaces'
    name: metricNamespaces
    fullName: metricNamespaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metricNamespaces: MetricNamespaces'
      return:
        type:
          - '@azure/arm-monitor.MetricNamespaces'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.metrics'
    name: metrics
    fullName: metrics
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'metrics: Metrics'
      return:
        type:
          - '@azure/arm-monitor.Metrics'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.constructor'
    name: 'MonitorManagementClient(ServiceClientCredentials, string, Models.MonitorManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Инициализирует новый экземпляр класса MonitorManagementClient.
    syntax:
      content: 'new MonitorManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.MonitorManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 'Учетные данные, необходимые для клиента для подключения к Azure.'
        - id: subscriptionId
          type:
            - string
          description: Идентификатор подписки Azure.
        - id: options
          type:
            - Models.MonitorManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-monitor.Operations'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Восстановите LROPoller из предоставленного LROPollState. Этот метод может использоваться для повторного создания LROPoller на другом процессе или компьютере.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.scheduledQueryRules'
    name: scheduledQueryRules
    fullName: scheduledQueryRules
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'scheduledQueryRules: ScheduledQueryRules'
      return:
        type:
          - '@azure/arm-monitor.ScheduledQueryRules'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Предоставляет механизм для выполнения запроса, которая будет опрашивать и предоставляют результат.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно LROPoller, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Аргументы операции.
        - id: operationSpec
          type:
            - OperationSpec
          description: Спецификация для операции.
        - id: options
          type:
            - RequestOptionsBase
          description: Дополнительные параметры для отправляться при создании запроса.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'OperationSpec, используемые для заполнения httpRequest.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Обратный вызов, вызываемый после получения ответа.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправьте предоставленный httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.tenantActivityLogs'
    name: tenantActivityLogs
    fullName: tenantActivityLogs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tenantActivityLogs: TenantActivityLogs'
      return:
        type:
          - '@azure/arm-monitor.TenantActivityLogs'
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.MonitorManagementClient.vMInsights'
    name: vMInsights
    fullName: vMInsights
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'vMInsights: VMInsights'
      return:
        type:
          - '@azure/arm-monitor.VMInsights'
    package: '@azure/arm-monitor'
references:
  - uid: '@azure/arm-monitor.MonitorManagementClientContext'
    name: MonitorManagementClientContext
    spec.typeScript:
      - name: MonitorManagementClientContext
        fullName: MonitorManagementClientContext
        uid: '@azure/arm-monitor.MonitorManagementClientContext'
  - uid: '@azure/arm-monitor.ActionGroups'
    name: ActionGroups
    spec.typeScript:
      - name: ActionGroups
        fullName: ActionGroups
        uid: '@azure/arm-monitor.ActionGroups'
  - uid: '@azure/arm-monitor.ActivityLogAlerts'
    name: ActivityLogAlerts
    spec.typeScript:
      - name: ActivityLogAlerts
        fullName: ActivityLogAlerts
        uid: '@azure/arm-monitor.ActivityLogAlerts'
  - uid: '@azure/arm-monitor.ActivityLogs'
    name: ActivityLogs
    spec.typeScript:
      - name: ActivityLogs
        fullName: ActivityLogs
        uid: '@azure/arm-monitor.ActivityLogs'
  - uid: '@azure/arm-monitor.AlertRuleIncidents'
    name: AlertRuleIncidents
    spec.typeScript:
      - name: AlertRuleIncidents
        fullName: AlertRuleIncidents
        uid: '@azure/arm-monitor.AlertRuleIncidents'
  - uid: '@azure/arm-monitor.AlertRules'
    name: AlertRules
    spec.typeScript:
      - name: AlertRules
        fullName: AlertRules
        uid: '@azure/arm-monitor.AlertRules'
  - uid: '@azure/arm-monitor.AutoscaleSettings'
    name: AutoscaleSettings
    spec.typeScript:
      - name: AutoscaleSettings
        fullName: AutoscaleSettings
        uid: '@azure/arm-monitor.AutoscaleSettings'
  - uid: '@azure/arm-monitor.DiagnosticSettingsOperations'
    name: DiagnosticSettingsOperations
    spec.typeScript:
      - name: DiagnosticSettingsOperations
        fullName: DiagnosticSettingsOperations
        uid: '@azure/arm-monitor.DiagnosticSettingsOperations'
  - uid: '@azure/arm-monitor.DiagnosticSettingsCategoryOperations'
    name: DiagnosticSettingsCategoryOperations
    spec.typeScript:
      - name: DiagnosticSettingsCategoryOperations
        fullName: DiagnosticSettingsCategoryOperations
        uid: '@azure/arm-monitor.DiagnosticSettingsCategoryOperations'
  - uid: '@azure/arm-monitor.EventCategories'
    name: EventCategories
    spec.typeScript:
      - name: EventCategories
        fullName: EventCategories
        uid: '@azure/arm-monitor.EventCategories'
  - uid: '@azure/arm-monitor.LogProfiles'
    name: LogProfiles
    spec.typeScript:
      - name: LogProfiles
        fullName: LogProfiles
        uid: '@azure/arm-monitor.LogProfiles'
  - uid: '@azure/arm-monitor.MetricAlerts'
    name: MetricAlerts
    spec.typeScript:
      - name: MetricAlerts
        fullName: MetricAlerts
        uid: '@azure/arm-monitor.MetricAlerts'
  - uid: '@azure/arm-monitor.MetricAlertsStatus'
    name: MetricAlertsStatus
    spec.typeScript:
      - name: MetricAlertsStatus
        fullName: MetricAlertsStatus
        uid: '@azure/arm-monitor.MetricAlertsStatus'
  - uid: '@azure/arm-monitor.MetricBaseline'
    name: MetricBaseline
    spec.typeScript:
      - name: MetricBaseline
        fullName: MetricBaseline
        uid: '@azure/arm-monitor.MetricBaseline'
  - uid: '@azure/arm-monitor.MetricDefinitions'
    name: MetricDefinitions
    spec.typeScript:
      - name: MetricDefinitions
        fullName: MetricDefinitions
        uid: '@azure/arm-monitor.MetricDefinitions'
  - uid: '@azure/arm-monitor.MetricNamespaces'
    name: MetricNamespaces
    spec.typeScript:
      - name: MetricNamespaces
        fullName: MetricNamespaces
        uid: '@azure/arm-monitor.MetricNamespaces'
  - uid: '@azure/arm-monitor.Metrics'
    name: Metrics
    spec.typeScript:
      - name: Metrics
        fullName: Metrics
        uid: '@azure/arm-monitor.Metrics'
  - uid: '@azure/arm-monitor.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-monitor.Operations'
  - uid: '@azure/arm-monitor.ScheduledQueryRules'
    name: ScheduledQueryRules
    spec.typeScript:
      - name: ScheduledQueryRules
        fullName: ScheduledQueryRules
        uid: '@azure/arm-monitor.ScheduledQueryRules'
  - uid: '@azure/arm-monitor.TenantActivityLogs'
    name: TenantActivityLogs
    spec.typeScript:
      - name: TenantActivityLogs
        fullName: TenantActivityLogs
        uid: '@azure/arm-monitor.TenantActivityLogs'
  - uid: '@azure/arm-monitor.VMInsights'
    name: VMInsights
    spec.typeScript:
      - name: VMInsights
        fullName: VMInsights
        uid: '@azure/arm-monitor.VMInsights'