### YamlMime:UniversalReference
items:
  - uid: '@azure/eventgrid.EventGridClient'
    name: EventGridClient
    fullName: EventGridClient
    children:
      - '@azure/eventgrid.EventGridClient.acceptLanguage'
      - '@azure/eventgrid.EventGridClient.apiVersion'
      - '@azure/eventgrid.EventGridClient.beginLongRunningRequest'
      - '@azure/eventgrid.EventGridClient.credentials'
      - '@azure/eventgrid.EventGridClient.constructor'
      - '@azure/eventgrid.EventGridClient.longRunningOperationRetryTimeout'
      - '@azure/eventgrid.EventGridClient.publishEvents'
      - '@azure/eventgrid.EventGridClient.publishEvents_2'
      - '@azure/eventgrid.EventGridClient.publishEvents_1'
      - '@azure/eventgrid.EventGridClient.restoreLROPoller'
      - '@azure/eventgrid.EventGridClient.sendLongRunningRequest'
      - '@azure/eventgrid.EventGridClient.sendLRORequest'
      - '@azure/eventgrid.EventGridClient.sendOperationRequest'
      - '@azure/eventgrid.EventGridClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/eventgrid.EventGridClientContext'
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d02be-101">Отправить первоначальный запрос LRO (длительные операции) и получить обратно HttpLongRunningOperationResponse, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.</span><span class="sxs-lookup"><span data-stu-id="d02be-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d02be-102">Объект запроса</span><span class="sxs-lookup"><span data-stu-id="d02be-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.constructor'
    name: 'EventGridClient(ServiceClientCredentials, msRestAzure.AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d02be-103">Инициализирует новый экземпляр класса EventGridClient.</span><span class="sxs-lookup"><span data-stu-id="d02be-103">Initializes a new instance of the EventGridClient class.</span></span>
    syntax:
      content: 'new EventGridClient(credentials: ServiceClientCredentials, options?: msRestAzure.AzureServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: '<span data-ttu-id="d02be-104">Учетные данные, необходимые для клиента для подключения к Azure.</span><span class="sxs-lookup"><span data-stu-id="d02be-104">Credentials needed for the client to connect to Azure.</span></span>'
        - id: options
          type:
            - msRestAzure.AzureServiceClientOptions
          description: ''
          optional: true
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d02be-105">Время ожидания в секундах для длительных операций повтора.</span><span class="sxs-lookup"><span data-stu-id="d02be-105">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="d02be-106">Значение по умолчанию — 30.</span><span class="sxs-lookup"><span data-stu-id="d02be-106">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.publishEvents'
    name: 'publishEvents(string, EventGridEvent[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d02be-107">Публикует пакет событий, которые на раздел "Сетка событий Azure".</span><span class="sxs-lookup"><span data-stu-id="d02be-107">Publishes a batch of events to an Azure Event Grid topic.</span></span>'
    syntax:
      content: 'function publishEvents(topicHostname: string, events: EventGridEvent[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: topicHostname
          type:
            - string
          description: '<span data-ttu-id="d02be-108">Имя узла раздела, например topic1.westus2 1.eventgrid.azure.net</span><span class="sxs-lookup"><span data-stu-id="d02be-108">The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net</span></span>'
        - id: events
          type:
            - '@azure/eventgrid.EventGridEvent[]'
          description: <span data-ttu-id="d02be-109">Массив событий для публикации "Сетка событий".</span><span class="sxs-lookup"><span data-stu-id="d02be-109">An array of events to be published to Event Grid.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.publishEvents_2'
    name: 'publishEvents(string, EventGridEvent[], RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publishEvents(topicHostname: string, events: EventGridEvent[], options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: topicHostname
          type:
            - string
          description: '<span data-ttu-id="d02be-110">Имя узла раздела, например topic1.westus2 1.eventgrid.azure.net</span><span class="sxs-lookup"><span data-stu-id="d02be-110">The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net</span></span>'
        - id: events
          type:
            - '@azure/eventgrid.EventGridEvent[]'
          description: <span data-ttu-id="d02be-111">Массив событий для публикации "Сетка событий".</span><span class="sxs-lookup"><span data-stu-id="d02be-111">An array of events to be published to Event Grid.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d02be-112">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d02be-112">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d02be-113">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d02be-113">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.publishEvents_1'
    name: 'publishEvents(string, EventGridEvent[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function publishEvents(topicHostname: string, events: EventGridEvent[], callback: ServiceCallback<void>)'
      parameters:
        - id: topicHostname
          type:
            - string
          description: '<span data-ttu-id="d02be-114">Имя узла раздела, например topic1.westus2 1.eventgrid.azure.net</span><span class="sxs-lookup"><span data-stu-id="d02be-114">The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net</span></span>'
        - id: events
          type:
            - '@azure/eventgrid.EventGridEvent[]'
          description: <span data-ttu-id="d02be-115">Массив событий для публикации "Сетка событий".</span><span class="sxs-lookup"><span data-stu-id="d02be-115">An array of events to be published to Event Grid.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="d02be-116">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d02be-116">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d02be-117">Восстановите LROPoller из предоставленного LROPollState.</span><span class="sxs-lookup"><span data-stu-id="d02be-117">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="d02be-118">Этот метод может использоваться для повторного создания LROPoller на другом процессе или компьютере.</span><span class="sxs-lookup"><span data-stu-id="d02be-118">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d02be-119">Предоставляет механизм для выполнения запроса, которая будет опрашивать и предоставляют результат.</span><span class="sxs-lookup"><span data-stu-id="d02be-119">Provides a mechanism to make a request that will poll and provide the final result.</span></span>'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d02be-120">Объект запроса</span><span class="sxs-lookup"><span data-stu-id="d02be-120">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d02be-121">Отправить первоначальный запрос LRO (длительные операции) и получить обратно LROPoller, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.</span><span class="sxs-lookup"><span data-stu-id="d02be-121">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d02be-122">Аргументы операции.</span><span class="sxs-lookup"><span data-stu-id="d02be-122">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d02be-123">Спецификация для операции.</span><span class="sxs-lookup"><span data-stu-id="d02be-123">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d02be-124">Дополнительные параметры для отправляться при создании запроса.</span><span class="sxs-lookup"><span data-stu-id="d02be-124">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d02be-125">Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.</span><span class="sxs-lookup"><span data-stu-id="d02be-125">Send an HTTP request that is populated using the provided OperationSpec.</span></span>'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: '<span data-ttu-id="d02be-126">Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.</span><span class="sxs-lookup"><span data-stu-id="d02be-126">The arguments that the HTTP request''s templated values will be populated from.</span></span>'
        - id: operationSpec
          type:
            - OperationSpec
          description: '<span data-ttu-id="d02be-127">OperationSpec, используемые для заполнения httpRequest.</span><span class="sxs-lookup"><span data-stu-id="d02be-127">The OperationSpec to use to populate the httpRequest.</span></span>'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="d02be-128">Обратный вызов, вызываемый после получения ответа.</span><span class="sxs-lookup"><span data-stu-id="d02be-128">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/eventgrid'
  - uid: '@azure/eventgrid.EventGridClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d02be-129">Отправьте предоставленный httpRequest.</span><span class="sxs-lookup"><span data-stu-id="d02be-129">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/eventgrid'
references:
  - uid: '@azure/eventgrid.EventGridClientContext'
    name: EventGridClientContext
    spec.typeScript:
      - name: EventGridClientContext
        fullName: EventGridClientContext
        uid: '@azure/eventgrid.EventGridClientContext'
  - uid: '@azure/eventgrid.EventGridEvent[]'
    name: 'EventGridEvent[]'
    spec.typeScript:
      - name: EventGridEvent
        fullName: EventGridEvent
        uid: '@azure/eventgrid.EventGridEvent'
      - name: '[]'
        fullName: '[]'