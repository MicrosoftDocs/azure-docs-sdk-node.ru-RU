### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts'
    name: DatabaseAccounts
    fullName: DatabaseAccounts
    children:
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
      - '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
      - '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
      - '@azure/arm-cosmosdb.DatabaseAccounts.patch'
      - '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
      - '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="138ed-101">Класс, представляющий DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="138ed-101">Class representing a DatabaseAccounts.</span></span>'
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-102">Создает или обновляет учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-102">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-103">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-103">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-104">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-104">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="138ed-105">Параметры для предоставления для текущей учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-105">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraKeyspace'
    name: 'beginCreateUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-106">Создание или обновление пространства ключей Azure Cosmos DB Cassandra</span><span class="sxs-lookup"><span data-stu-id="138ed-106">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-107">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-107">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-108">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-108">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-109">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-109">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="138ed-110">Параметры для обеспечения текущего пространства ключей Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-110">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateCassandraTable'
    name: 'beginCreateUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-111">Создание или обновление таблиц Cassandra Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-111">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function beginCreateUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-112">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-112">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-113">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-113">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-114">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-114">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-115">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-115">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="138ed-116">Параметры для предоставления для текущей таблицы Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-116">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinDatabase'
    name: 'beginCreateUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-117">Создать или обновить базу данных Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="138ed-117">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-118">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-118">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-119">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-119">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-120">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-120">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: '<span data-ttu-id="138ed-121">Параметры, чтобы предоставить для текущей базы данных Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-121">The parameters to provide for the current Gremlin database.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateGremlinGraph'
    name: 'beginCreateUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-122">Создать или обновить Azure Cosmos DB Gremlin graph</span><span class="sxs-lookup"><span data-stu-id="138ed-122">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginCreateUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-123">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-123">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-124">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-124">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-125">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-125">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-126">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-126">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="138ed-127">Параметры для обеспечения текущего графа Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-127">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBCollection'
    name: 'beginCreateUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-128">Создает или обновляет коллекцию MongoDB Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-128">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-129">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-129">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-130">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-130">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-131">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-131">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-132">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-132">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="138ed-133">Параметры для предоставления для текущей коллекции MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-133">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateMongoDBDatabase'
    name: 'beginCreateUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-134">Создание или обновление базы данных Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-134">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginCreateUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-135">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-135">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-136">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-136">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-137">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-137">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="138ed-138">Параметры для предоставления в текущей базе данных MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-138">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlContainer'
    name: 'beginCreateUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-139">Создать или обновить контейнер Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-139">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-140">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-140">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-141">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-141">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-142">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-142">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-143">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-143">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="138ed-144">Параметры для предоставления в текущем контейнере SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-144">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateSqlDatabase'
    name: 'beginCreateUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-145">Создать или обновить базу данных Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-145">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function beginCreateUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-146">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-146">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-147">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-147">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-148">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-148">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="138ed-149">Параметры для предоставления в текущей базе данных SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-149">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateUpdateTable'
    name: 'beginCreateUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-150">Создание или обновление таблиц Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-150">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginCreateUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-151">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-151">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-152">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-152">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-153">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-153">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="138ed-154">Параметры для предоставления для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="138ed-154">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraKeyspace'
    name: 'beginDeleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-155">Удаляет существующие пространства ключей Azure Cosmos DB Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-155">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function beginDeleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-156">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-156">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-157">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-157">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-158">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-158">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteCassandraTable'
    name: 'beginDeleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-159">Удаление существующей таблицы Azure Cosmos DB Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-159">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function beginDeleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-160">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-160">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-161">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-161">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-162">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-162">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-163">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-163">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinDatabase'
    name: 'beginDeleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-164">Удаляет существующую базу данных Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-164">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function beginDeleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-165">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-165">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-166">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-166">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-167">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-167">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteGremlinGraph'
    name: 'beginDeleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-168">Удаляет существующую диаграмму Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-168">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function beginDeleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-169">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-169">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-170">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-170">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-171">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-171">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-172">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-172">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-173">Удаляет существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-173">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-174">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-174">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-175">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-175">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBCollection'
    name: 'beginDeleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-176">Удаляет существующую коллекцию Azure Cosmos DB MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-176">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-177">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-177">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-178">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-178">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-179">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-179">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-180">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-180">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteMongoDBDatabase'
    name: 'beginDeleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-181">Удаляет существующую базу данных Azure Cosmos DB MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-181">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function beginDeleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-182">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-182">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-183">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-183">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-184">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-184">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlContainer'
    name: 'beginDeleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-185">Удаляет существующий контейнер Azure Cosmos DB SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-185">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function beginDeleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-186">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-186">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-187">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-187">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-188">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-188">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-189">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-189">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteSqlDatabase'
    name: 'beginDeleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-190">Удаление существующей базы данных Azure Cosmos DB SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-190">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function beginDeleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-191">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-191">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-192">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-192">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-193">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-193">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteTable'
    name: 'beginDeleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-194">Удаление существующей таблицы Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-194">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function beginDeleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-195">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-195">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-196">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-196">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-197">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-197">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    name: 'beginFailoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-198">Изменение приоритета отработки отказа для учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-198">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="138ed-199">Приоритет отработки отказа 0 указывает, регион записи.</span><span class="sxs-lookup"><span data-stu-id="138ed-199">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="138ed-200">Максимальное значение приоритета отработки отказа = (общее число регионов - 1).</span><span class="sxs-lookup"><span data-stu-id="138ed-200">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="138ed-201">Значения приоритетов отработки отказа должен быть уникальным для каждого из регионов, в которых существует учетная запись базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-201">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>'
    syntax:
      content: 'function beginFailoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-202">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-202">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-203">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-203">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="138ed-204">Новые политики отработки отказа для учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-204">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    name: 'beginOfflineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-205">Автономный режим учетная запись базы данных заданной области для указанного Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-205">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOfflineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-206">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-206">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-207">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-207">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="138ed-208">Регион Cosmos DB в автономный режим для учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-208">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    name: 'beginOnlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-209">Online учетная запись базы данных заданной области для указанного Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-209">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginOnlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-210">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-210">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-211">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-211">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="138ed-212">Регион Cosmos DB для интерактивной учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-212">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginPatch'
    name: 'beginPatch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-213">Исправления, свойства существующей учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-213">Patches the properties of an existing Azure Cosmos DB database account.</span></span>'
    syntax:
      content: 'function beginPatch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-214">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-214">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-215">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-215">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="138ed-216">Параметр тегов исправление для текущей учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-216">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    name: 'beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-217">Повторно создает ключ доступа для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-217">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function beginRegenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-218">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-218">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-219">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-219">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="138ed-220">Имя ключа для повторного создания.</span><span class="sxs-lookup"><span data-stu-id="138ed-220">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraKeyspaceThroughput'
    name: 'beginUpdateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-221">Обновление ru в секунду пространства ключей Cassandra Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-221">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function beginUpdateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-222">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-222">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-223">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-223">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-224">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-224">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-225">Единицы запросов в секунду параметров для обеспечения текущего пространства ключей Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-225">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateCassandraTableThroughput'
    name: 'beginUpdateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-226">Обновление единиц запросов в секунду, таблицы Azure Cosmos DB Cassandra</span><span class="sxs-lookup"><span data-stu-id="138ed-226">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>'
    syntax:
      content: 'function beginUpdateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-227">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-227">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-228">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-228">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-229">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-229">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-230">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-230">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-231">Единицы запросов в секунду параметров для предоставления для текущей таблицы Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-231">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinDatabaseThroughput'
    name: 'beginUpdateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-232">Обновление единиц запросов в секунду, базы данных Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="138ed-232">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>'
    syntax:
      content: 'function beginUpdateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-233">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-233">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-234">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-234">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-235">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-235">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: '<span data-ttu-id="138ed-236">Единицы запросов в секунду, параметров и обеспечить для текущей базы данных Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-236">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateGremlinGraphThroughput'
    name: 'beginUpdateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-237">Обновление единиц запросов в секунду для Azure Cosmos DB Gremlin graph</span><span class="sxs-lookup"><span data-stu-id="138ed-237">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function beginUpdateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-238">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-238">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-239">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-239">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-240">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-240">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-241">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-241">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-242">Единицы запросов в секунду параметров для обеспечения текущего графа Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-242">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBCollectionThroughput'
    name: 'beginUpdateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-243">Обновление единиц запросов в секунду коллекции Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-243">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function beginUpdateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-244">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-244">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-245">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-245">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-246">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-246">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-247">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-247">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-248">Единицы запросов в секунду параметров для обеспечения текущей коллекции MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-248">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateMongoDBDatabaseThroughput'
    name: 'beginUpdateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-249">Обновление единиц запросов в секунду к базе данных Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-249">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function beginUpdateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-250">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-250">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-251">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-251">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-252">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-252">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-253">Единицы запросов в секунду параметров для предоставления в текущей базе данных MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-253">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlContainerThroughput'
    name: 'beginUpdateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-254">Обновление единиц запросов в секунду контейнера Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-254">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function beginUpdateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-255">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-255">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-256">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-256">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-257">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-257">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-258">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-258">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-259">Параметры для обеспечения ru в секунду в текущем контейнере SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-259">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateSqlDatabaseThroughput'
    name: 'beginUpdateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-260">Обновление единиц запросов в секунду, базы данных Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-260">Update RUs per second of an Azure Cosmos DB SQL database</span></span>'
    syntax:
      content: 'function beginUpdateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-261">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-261">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-262">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-262">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-263">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-263">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-264">Параметры для обеспечения единиц запросов в секунду текущей базы данных SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-264">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateTableThroughput'
    name: 'beginUpdateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-265">Обновление единиц запросов в секунду для таблиц Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-265">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function beginUpdateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-266">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-266">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-267">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-267">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-268">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-268">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-269">Параметры для обеспечения единиц запросов в секунду из текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="138ed-269">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    name: 'checkNameExists(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-270">Проверяет, что имя учетной записи Azure Cosmos DB уже существует.</span><span class="sxs-lookup"><span data-stu-id="138ed-270">Checks that the Azure Cosmos DB account name already exists.</span></span> <span data-ttu-id="138ed-271">Имя действительной учетной записи может содержать только строчные буквы, цифры и "-" символ и должна составлять от 3 до 50 символов.</span><span class="sxs-lookup"><span data-stu-id="138ed-271">A valid account name may contain only lowercase letters, numbers, and the ''-'' character, and must be between 3 and 50 characters.</span></span>'
    syntax:
      content: 'function checkNameExists(accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-272">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-272">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_2'
    name: 'checkNameExists(string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-273">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-273">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-274">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-274">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="138ed-275">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-275">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists_1'
    name: 'checkNameExists(string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameExists(accountName: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-276">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-276">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            <span data-ttu-id="138ed-277">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-277">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsCheckNameExistsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createOrUpdate'
    name: 'createOrUpdate(string, string, DatabaseAccountCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-278">Создает или обновляет учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-278">Creates or updates an Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, accountName: string, createUpdateParameters: DatabaseAccountCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-279">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-279">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-280">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-280">Cosmos DB database account name.</span></span>
        - id: createUpdateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
          description: <span data-ttu-id="138ed-281">Параметры для предоставления для текущей учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-281">The parameters to provide for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateOrUpdateResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraKeyspace'
    name: 'createUpdateCassandraKeyspace(string, string, string, CassandraKeyspaceCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-282">Создание или обновление пространства ключей Azure Cosmos DB Cassandra</span><span class="sxs-lookup"><span data-stu-id="138ed-282">Create or update an Azure Cosmos DB Cassandra keyspace</span></span>
    syntax:
      content: 'function createUpdateCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, createUpdateCassandraKeyspaceParameters: CassandraKeyspaceCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-283">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-283">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-284">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-284">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-285">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-285">Cosmos DB keyspace name.</span></span>
        - id: createUpdateCassandraKeyspaceParameters
          type:
            - '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
          description: <span data-ttu-id="138ed-286">Параметры для обеспечения текущего пространства ключей Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-286">The parameters to provide for the current Cassandra keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateCassandraTable'
    name: 'createUpdateCassandraTable(string, string, string, string, CassandraTableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-287">Создание или обновление таблиц Cassandra Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-287">Create or update an Azure Cosmos DB Cassandra Table</span></span>
    syntax:
      content: 'function createUpdateCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, createUpdateCassandraTableParameters: CassandraTableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-288">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-288">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-289">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-289">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-290">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-290">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-291">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-291">Cosmos DB table name.</span></span>
        - id: createUpdateCassandraTableParameters
          type:
            - '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
          description: <span data-ttu-id="138ed-292">Параметры для предоставления для текущей таблицы Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-292">The parameters to provide for the current Cassandra Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinDatabase'
    name: 'createUpdateGremlinDatabase(string, string, string, GremlinDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-293">Создать или обновить базу данных Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="138ed-293">Create or update an Azure Cosmos DB Gremlin database</span></span>
    syntax:
      content: 'function createUpdateGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateGremlinDatabaseParameters: GremlinDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-294">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-294">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-295">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-295">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-296">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-296">Cosmos DB database name.</span></span>
        - id: createUpdateGremlinDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
          description: '<span data-ttu-id="138ed-297">Параметры, чтобы предоставить для текущей базы данных Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-297">The parameters to provide for the current Gremlin database.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateGremlinGraph'
    name: 'createUpdateGremlinGraph(string, string, string, string, GremlinGraphCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-298">Создать или обновить Azure Cosmos DB Gremlin graph</span><span class="sxs-lookup"><span data-stu-id="138ed-298">Create or update an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function createUpdateGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-299">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-299">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-300">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-300">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-301">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-301">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-302">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-302">Cosmos DB graph name.</span></span>
        - id: createUpdateGremlinGraphParameters
          type:
            - '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
          description: <span data-ttu-id="138ed-303">Параметры для обеспечения текущего графа Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-303">The parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBCollection'
    name: 'createUpdateMongoDBCollection(string, string, string, string, MongoDBCollectionCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-304">Создает или обновляет коллекцию MongoDB Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-304">Create or update an Azure Cosmos DB MongoDB Collection</span></span>
    syntax:
      content: 'function createUpdateMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, createUpdateMongoDBCollectionParameters: MongoDBCollectionCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-305">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-305">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-306">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-306">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-307">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-307">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-308">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-308">Cosmos DB collection name.</span></span>
        - id: createUpdateMongoDBCollectionParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
          description: <span data-ttu-id="138ed-309">Параметры для предоставления для текущей коллекции MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-309">The parameters to provide for the current MongoDB Collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateMongoDBDatabase'
    name: 'createUpdateMongoDBDatabase(string, string, string, MongoDBDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-310">Создание или обновление базы данных Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-310">Create or updates Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function createUpdateMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateMongoDBDatabaseParameters: MongoDBDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-311">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-311">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-312">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-312">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-313">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-313">Cosmos DB database name.</span></span>
        - id: createUpdateMongoDBDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="138ed-314">Параметры для предоставления в текущей базе данных MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-314">The parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlContainer'
    name: 'createUpdateSqlContainer(string, string, string, string, SqlContainerCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-315">Создать или обновить контейнер Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-315">Create or update an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function createUpdateSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, createUpdateSqlContainerParameters: SqlContainerCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-316">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-316">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-317">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-317">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-318">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-318">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-319">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-319">Cosmos DB container name.</span></span>
        - id: createUpdateSqlContainerParameters
          type:
            - '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
          description: <span data-ttu-id="138ed-320">Параметры для предоставления в текущем контейнере SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-320">The parameters to provide for the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateSqlDatabase'
    name: 'createUpdateSqlDatabase(string, string, string, SqlDatabaseCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-321">Создать или обновить базу данных Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-321">Create or update an Azure Cosmos DB SQL database</span></span>
    syntax:
      content: 'function createUpdateSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, createUpdateSqlDatabaseParameters: SqlDatabaseCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-322">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-322">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-323">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-323">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-324">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-324">Cosmos DB database name.</span></span>
        - id: createUpdateSqlDatabaseParameters
          type:
            - '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
          description: <span data-ttu-id="138ed-325">Параметры для предоставления в текущей базе данных SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-325">The parameters to provide for the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.createUpdateTable'
    name: 'createUpdateTable(string, string, string, TableCreateUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-326">Создание или обновление таблиц Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-326">Create or update an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function createUpdateTable(resourceGroupName: string, accountName: string, tableName: string, createUpdateTableParameters: TableCreateUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-327">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-327">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-328">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-328">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-329">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-329">Cosmos DB table name.</span></span>
        - id: createUpdateTableParameters
          type:
            - '@azure/arm-cosmosdb.TableCreateUpdateParameters'
          description: <span data-ttu-id="138ed-330">Параметры для предоставления для текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="138ed-330">The parameters to provide for the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsCreateUpdateTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.constructor'
    name: DatabaseAccounts(CosmosDBManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-331">Создайте DatabaseAccounts.</span><span class="sxs-lookup"><span data-stu-id="138ed-331">Create a DatabaseAccounts.</span></span>
    syntax:
      content: 'new DatabaseAccounts(client: CosmosDBManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
          description: |
            <span data-ttu-id="138ed-332">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="138ed-332">Reference to the service client.</span></span>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraKeyspace'
    name: 'deleteCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-333">Удаляет существующие пространства ключей Azure Cosmos DB Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-333">Deletes an existing Azure Cosmos DB Cassandra keyspace.</span></span>
    syntax:
      content: 'function deleteCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-334">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-334">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-335">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-335">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-336">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-336">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteCassandraTable'
    name: 'deleteCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-337">Удаление существующей таблицы Azure Cosmos DB Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-337">Deletes an existing Azure Cosmos DB Cassandra table.</span></span>
    syntax:
      content: 'function deleteCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-338">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-338">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-339">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-339">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-340">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-340">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-341">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-341">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinDatabase'
    name: 'deleteGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-342">Удаляет существующую базу данных Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-342">Deletes an existing Azure Cosmos DB Gremlin database.</span></span>
    syntax:
      content: 'function deleteGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-343">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-343">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-344">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-344">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-345">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-345">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteGremlinGraph'
    name: 'deleteGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-346">Удаляет существующую диаграмму Azure Cosmos DB Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-346">Deletes an existing Azure Cosmos DB Gremlin graph.</span></span>
    syntax:
      content: 'function deleteGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-347">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-347">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-348">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-348">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-349">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-349">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-350">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-350">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-351">Удаляет существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-351">Deletes an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-352">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-352">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-353">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-353">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBCollection'
    name: 'deleteMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-354">Удаляет существующую коллекцию Azure Cosmos DB MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-354">Deletes an existing Azure Cosmos DB MongoDB Collection.</span></span>
    syntax:
      content: 'function deleteMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-355">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-355">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-356">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-356">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-357">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-357">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-358">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-358">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteMongoDBDatabase'
    name: 'deleteMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-359">Удаляет существующую базу данных Azure Cosmos DB MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-359">Deletes an existing Azure Cosmos DB MongoDB database.</span></span>
    syntax:
      content: 'function deleteMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-360">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-360">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-361">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-361">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-362">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-362">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlContainer'
    name: 'deleteSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-363">Удаляет существующий контейнер Azure Cosmos DB SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-363">Deletes an existing Azure Cosmos DB SQL container.</span></span>
    syntax:
      content: 'function deleteSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-364">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-364">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-365">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-365">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-366">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-366">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-367">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-367">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteSqlDatabase'
    name: 'deleteSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-368">Удаление существующей базы данных Azure Cosmos DB SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-368">Deletes an existing Azure Cosmos DB SQL database.</span></span>
    syntax:
      content: 'function deleteSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-369">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-369">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-370">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-370">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-371">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-371">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.deleteTable'
    name: 'deleteTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-372">Удаление существующей таблицы Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-372">Deletes an existing Azure Cosmos DB Table.</span></span>
    syntax:
      content: 'function deleteTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-373">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-373">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-374">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-374">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-375">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-375">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.failoverPriorityChange'
    name: 'failoverPriorityChange(string, string, FailoverPolicies, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-376">Изменение приоритета отработки отказа для учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-376">Changes the failover priority for the Azure Cosmos DB database account.</span></span> <span data-ttu-id="138ed-377">Приоритет отработки отказа 0 указывает, регион записи.</span><span class="sxs-lookup"><span data-stu-id="138ed-377">A failover priority of 0 indicates a write region.</span></span> <span data-ttu-id="138ed-378">Максимальное значение приоритета отработки отказа = (общее число регионов - 1).</span><span class="sxs-lookup"><span data-stu-id="138ed-378">The maximum value for a failover priority = (total number of regions - 1).</span></span> <span data-ttu-id="138ed-379">Значения приоритетов отработки отказа должен быть уникальным для каждого из регионов, в которых существует учетная запись базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-379">Failover priority values must be unique for each of the regions in which the database account exists.</span></span>'
    syntax:
      content: 'function failoverPriorityChange(resourceGroupName: string, accountName: string, failoverParameters: FailoverPolicies, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-380">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-380">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-381">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-381">Cosmos DB database account name.</span></span>
        - id: failoverParameters
          type:
            - '@azure/arm-cosmosdb.FailoverPolicies'
          description: <span data-ttu-id="138ed-382">Новые политики отработки отказа для учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-382">The new failover policies for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-383">Извлекает свойства существующей учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-383">Retrieves the properties of an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-384">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-384">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-385">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-385">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-386">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-386">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-387">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-387">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-388">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-388">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="138ed-389">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-389">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.get_1'
    name: 'get(string, string, ServiceCallback<DatabaseAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccount>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-390">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-390">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-391">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-391">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
          description: |
            <span data-ttu-id="138ed-392">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-392">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace'
    name: 'getCassandraKeyspace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-393">Получает пространств Cassandra с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-393">Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-394">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-394">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-395">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-395">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-396">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-396">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_2'
    name: 'getCassandraKeyspace(string, string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-397">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-397">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-398">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-398">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-399">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-399">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-400">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-400">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="138ed-401">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-401">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspace_1'
    name: 'getCassandraKeyspace(string, string, string, ServiceCallback<CassandraKeyspace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspace(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraKeyspace>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-402">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-402">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-403">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-403">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-404">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-404">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
          description: |
            <span data-ttu-id="138ed-405">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-405">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput'
    name: 'getCassandraKeyspaceThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-406">Получает количество ЕЗ в секунду ключевых пространств Cassandra с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-406">Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-407">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-407">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-408">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-408">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-409">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-409">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_2'
    name: 'getCassandraKeyspaceThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-410">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-410">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-411">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-411">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-412">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-412">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-413">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-413">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-414">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-414">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraKeyspaceThroughput_1'
    name: 'getCassandraKeyspaceThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-415">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-415">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-416">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-416">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-417">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-417">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-418">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-418">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable'
    name: 'getCassandraTable(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-419">Возвращает таблицу Cassandra с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-419">Gets the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-420">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-420">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-421">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-421">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-422">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-422">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-423">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-423">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_2'
    name: 'getCassandraTable(string, string, string, string, RequestOptionsBase, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-424">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-424">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-425">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-425">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-426">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-426">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-427">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-427">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-428">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-428">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="138ed-429">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-429">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTable_1'
    name: 'getCassandraTable(string, string, string, string, ServiceCallback<CassandraTable>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTable(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<CassandraTable>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-430">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-430">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-431">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-431">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-432">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-432">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-433">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-433">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
          description: |
            <span data-ttu-id="138ed-434">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-434">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput'
    name: 'getCassandraTableThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-435">Получает количество ЕЗ в секунду таблицы Cassandra с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-435">Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-436">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-436">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-437">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-437">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-438">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-438">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-439">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-439">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_2'
    name: 'getCassandraTableThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-440">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-440">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-441">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-441">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-442">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-442">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-443">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-443">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-444">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-444">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-445">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-445">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getCassandraTableThroughput_1'
    name: 'getCassandraTableThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-446">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-446">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-447">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-447">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-448">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-448">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-449">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-449">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-450">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-450">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase'
    name: 'getGremlinDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-451">Возвращает базы данных Gremlin с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-451">Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-452">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-452">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-453">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-453">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-454">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-454">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_2'
    name: 'getGremlinDatabase(string, string, string, RequestOptionsBase, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-455">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-455">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-456">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-456">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-457">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-457">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-458">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-458">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="138ed-459">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-459">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabase_1'
    name: 'getGremlinDatabase(string, string, string, ServiceCallback<GremlinDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-460">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-460">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-461">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-461">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-462">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-462">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
          description: |
            <span data-ttu-id="138ed-463">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-463">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput'
    name: 'getGremlinDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-464">Получает количество ЕЗ в секунду базы данных Gremlin с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-464">Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-465">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-465">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-466">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-466">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-467">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-467">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_2'
    name: 'getGremlinDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-468">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-468">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-469">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-469">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-470">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-470">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-471">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-471">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-472">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-472">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinDatabaseThroughput_1'
    name: 'getGremlinDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-473">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-473">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-474">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-474">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-475">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-475">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-476">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-476">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph'
    name: 'getGremlinGraph(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-477">Получает графа Gremlin в существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-477">Gets the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-478">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-478">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-479">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-479">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-480">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-480">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-481">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-481">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_2'
    name: 'getGremlinGraph(string, string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-482">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-482">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-483">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-483">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-484">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-484">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-485">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-485">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-486">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-486">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="138ed-487">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-487">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraph_1'
    name: 'getGremlinGraph(string, string, string, string, ServiceCallback<GremlinGraph>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraph(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<GremlinGraph>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-488">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-488">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-489">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-489">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-490">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-490">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-491">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-491">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
          description: |
            <span data-ttu-id="138ed-492">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-492">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput'
    name: 'getGremlinGraphThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-493">Получает пропускную способность графа Gremlin с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-493">Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-494">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-494">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-495">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-495">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-496">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-496">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-497">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-497">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_2'
    name: 'getGremlinGraphThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-498">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-498">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-499">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-499">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-500">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-500">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-501">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-501">Cosmos DB graph name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-502">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-502">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-503">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-503">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getGremlinGraphThroughput_1'
    name: 'getGremlinGraphThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-504">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-504">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-505">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-505">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-506">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-506">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-507">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-507">Cosmos DB graph name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-508">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-508">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection'
    name: 'getMongoDBCollection(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-509">Возвращает коллекцию MongoDB с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-509">Gets the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-510">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-510">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-511">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-511">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-512">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-512">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-513">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-513">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_2'
    name: 'getMongoDBCollection(string, string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-514">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-514">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-515">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-515">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-516">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-516">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-517">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-517">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-518">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-518">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="138ed-519">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-519">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollection_1'
    name: 'getMongoDBCollection(string, string, string, string, ServiceCallback<MongoDBCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollection(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<MongoDBCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-520">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-520">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-521">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-521">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-522">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-522">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-523">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-523">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
          description: |
            <span data-ttu-id="138ed-524">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-524">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-525">Получает количество ЕЗ в секунду в коллекцию MongoDB с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-525">Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-526">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-526">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-527">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-527">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-528">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-528">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-529">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-529">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_2'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-530">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-530">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-531">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-531">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-532">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-532">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-533">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-533">Cosmos DB collection name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-534">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-534">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-535">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-535">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBCollectionThroughput_1'
    name: 'getMongoDBCollectionThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-536">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-536">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-537">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-537">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-538">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-538">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-539">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-539">Cosmos DB collection name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-540">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-540">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase'
    name: 'getMongoDBDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-541">Возвращает базы данных MongoDB с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-541">Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-542">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-542">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-543">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-543">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-544">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-544">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_2'
    name: 'getMongoDBDatabase(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-545">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-545">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-546">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-546">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-547">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-547">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-548">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-548">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="138ed-549">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-549">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabase_1'
    name: 'getMongoDBDatabase(string, string, string, ServiceCallback<MongoDBDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-550">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-550">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-551">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-551">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-552">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-552">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
          description: |
            <span data-ttu-id="138ed-553">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-553">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput'
    name: 'getMongoDBDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-554">Получает количество ЕЗ в секунду базы данных MongoDB с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-554">Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-555">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-555">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-556">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-556">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-557">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-557">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_2'
    name: 'getMongoDBDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-558">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-558">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-559">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-559">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-560">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-560">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-561">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-561">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-562">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-562">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getMongoDBDatabaseThroughput_1'
    name: 'getMongoDBDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-563">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-563">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-564">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-564">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-565">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-565">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-566">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-566">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    name: 'getReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-567">Список ключей доступа только для чтения для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-567">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-568">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-568">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-569">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-569">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_2'
    name: 'getReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-570">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-570">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-571">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-571">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-572">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-572">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="138ed-573">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-573">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys_1'
    name: 'getReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-574">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-574">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-575">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-575">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="138ed-576">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-576">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer'
    name: 'getSqlContainer(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-577">Возвращает контейнер SQL с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-577">Gets the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-578">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-578">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-579">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-579">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-580">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-580">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-581">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-581">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_2'
    name: 'getSqlContainer(string, string, string, string, RequestOptionsBase, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-582">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-582">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-583">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-583">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-584">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-584">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-585">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-585">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-586">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-586">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="138ed-587">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-587">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainer_1'
    name: 'getSqlContainer(string, string, string, string, ServiceCallback<SqlContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainer(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<SqlContainer>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-588">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-588">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-589">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-589">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-590">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-590">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-591">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-591">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
          description: |
            <span data-ttu-id="138ed-592">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-592">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput'
    name: 'getSqlContainerThroughput(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-593">Получает количество ЕЗ в секунду контейнера SQL с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-593">Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-594">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-594">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-595">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-595">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-596">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-596">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-597">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-597">Cosmos DB container name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_2'
    name: 'getSqlContainerThroughput(string, string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-598">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-598">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-599">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-599">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-600">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-600">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-601">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-601">Cosmos DB container name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-602">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-602">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-603">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-603">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlContainerThroughput_1'
    name: 'getSqlContainerThroughput(string, string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-604">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-604">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-605">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-605">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-606">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-606">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-607">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-607">Cosmos DB container name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-608">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-608">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase'
    name: 'getSqlDatabase(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-609">Возвращает базу данных SQL с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-609">Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-610">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-610">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-611">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-611">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-612">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-612">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_2'
    name: 'getSqlDatabase(string, string, string, RequestOptionsBase, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-613">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-613">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-614">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-614">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-615">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-615">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-616">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-616">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="138ed-617">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-617">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabase_1'
    name: 'getSqlDatabase(string, string, string, ServiceCallback<SqlDatabase>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabase(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlDatabase>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-618">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-618">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-619">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-619">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-620">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-620">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
          description: |
            <span data-ttu-id="138ed-621">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-621">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput'
    name: 'getSqlDatabaseThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-622">Получает количество ЕЗ в секунду, базы данных SQL с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-622">Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.</span></span>'
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-623">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-623">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-624">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-624">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-625">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-625">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_2'
    name: 'getSqlDatabaseThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-626">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-626">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-627">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-627">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-628">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-628">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-629">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-629">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-630">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-630">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getSqlDatabaseThroughput_1'
    name: 'getSqlDatabaseThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-631">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-631">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-632">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-632">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-633">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-633">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-634">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-634">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable'
    name: 'getTable(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-635">Получает таблицы с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-635">Gets the Tables under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-636">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-636">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-637">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-637">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-638">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-638">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_2'
    name: 'getTable(string, string, string, RequestOptionsBase, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-639">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-639">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-640">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-640">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-641">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-641">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-642">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-642">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="138ed-643">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-643">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTable_1'
    name: 'getTable(string, string, string, ServiceCallback<Table>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTable(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Table>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-644">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-644">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-645">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-645">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-646">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-646">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Table>
          description: |
            <span data-ttu-id="138ed-647">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-647">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput'
    name: 'getTableThroughput(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-648">Получает количество ЕЗ в секунду таблицы с существующей учетной записью базы данных Azure Cosmos DB с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="138ed-648">Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.</span></span>
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-649">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-649">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-650">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-650">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-651">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-651">Cosmos DB table name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_2'
    name: 'getTableThroughput(string, string, string, RequestOptionsBase, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, options: RequestOptionsBase, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-652">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-652">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-653">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-653">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-654">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-654">Cosmos DB table name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-655">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-655">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-656">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-656">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.getTableThroughput_1'
    name: 'getTableThroughput(string, string, string, ServiceCallback<Throughput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTableThroughput(resourceGroupName: string, accountName: string, tableName: string, callback: ServiceCallback<Throughput>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-657">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-657">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-658">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-658">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-659">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-659">Cosmos DB table name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.Throughput>
          description: |
            <span data-ttu-id="138ed-660">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-660">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsGetTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-661">Список всех Azure Cosmos DB базы данных учетных записей доступен в рамках подписки.</span><span class="sxs-lookup"><span data-stu-id="138ed-661">Lists all the Azure Cosmos DB database accounts available under the subscription.</span></span>
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-662">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-662">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="138ed-663">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-663">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.list_1'
    name: list(ServiceCallback<DatabaseAccountsListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="138ed-664">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-664">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-665">Список всех Azure Cosmos DB базы данных учетных записей в указанной группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="138ed-665">Lists all the Azure Cosmos DB database accounts available under the given resource group.</span></span>
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-666">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-666">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-667">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-667">Name of an Azure resource group.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-668">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-668">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="138ed-669">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-669">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<DatabaseAccountsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<DatabaseAccountsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-670">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-670">Name of an Azure resource group.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
          description: |
            <span data-ttu-id="138ed-671">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-671">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListByResourceGroupResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces'
    name: 'listCassandraKeyspaces(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-672">Список пространств Cassandra с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-672">Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-673">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-673">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-674">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-674">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_2'
    name: 'listCassandraKeyspaces(string, string, RequestOptionsBase, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-675">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-675">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-676">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-676">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-677">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-677">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="138ed-678">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-678">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraKeyspaces_1'
    name: 'listCassandraKeyspaces(string, string, ServiceCallback<CassandraKeyspaceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraKeyspaces(resourceGroupName: string, accountName: string, callback: ServiceCallback<CassandraKeyspaceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-679">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-679">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-680">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-680">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
          description: |
            <span data-ttu-id="138ed-681">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-681">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraKeyspacesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables'
    name: 'listCassandraTables(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-682">Выводит таблицу Cassandra с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-682">Lists the Cassandra table under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-683">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-683">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-684">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-684">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-685">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-685">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_2'
    name: 'listCassandraTables(string, string, string, RequestOptionsBase, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, options: RequestOptionsBase, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-686">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-686">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-687">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-687">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-688">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-688">Cosmos DB keyspace name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-689">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-689">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="138ed-690">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-690">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listCassandraTables_1'
    name: 'listCassandraTables(string, string, string, ServiceCallback<CassandraTableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listCassandraTables(resourceGroupName: string, accountName: string, keyspaceName: string, callback: ServiceCallback<CassandraTableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-691">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-691">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-692">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-692">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-693">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-693">Cosmos DB keyspace name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
          description: |
            <span data-ttu-id="138ed-694">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-694">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListCassandraTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    name: 'listConnectionStrings(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-695">Перечисляет строки подключения для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-695">Lists the connection strings for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-696">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-696">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-697">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-697">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_2'
    name: 'listConnectionStrings(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-698">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-698">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-699">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-699">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-700">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-700">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="138ed-701">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-701">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings_1'
    name: 'listConnectionStrings(string, string, ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listConnectionStrings(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListConnectionStringsResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-702">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-702">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-703">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-703">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
          description: |
            <span data-ttu-id="138ed-704">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-704">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListConnectionStringsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases'
    name: 'listGremlinDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-705">Список баз данных Gremlin с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-705">Lists the Gremlin databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-706">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-706">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-707">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-707">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_2'
    name: 'listGremlinDatabases(string, string, RequestOptionsBase, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-708">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-708">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-709">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-709">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-710">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-710">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-711">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-711">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinDatabases_1'
    name: 'listGremlinDatabases(string, string, ServiceCallback<GremlinDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<GremlinDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-712">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-712">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-713">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-713">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-714">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-714">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs'
    name: 'listGremlinGraphs(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-715">Список графа Gremlin в существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-715">Lists the Gremlin graph under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-716">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-716">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-717">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-717">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-718">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-718">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_2'
    name: 'listGremlinGraphs(string, string, string, RequestOptionsBase, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-719">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-719">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-720">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-720">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-721">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-721">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-722">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-722">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="138ed-723">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-723">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listGremlinGraphs_1'
    name: 'listGremlinGraphs(string, string, string, ServiceCallback<GremlinGraphListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listGremlinGraphs(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<GremlinGraphListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-724">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-724">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-725">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-725">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-726">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-726">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
          description: |
            <span data-ttu-id="138ed-727">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-727">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListGremlinGraphsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    name: 'listKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-728">Список ключей доступа для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-728">Lists the access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-729">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-729">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-730">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-730">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_2'
    name: 'listKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-731">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-731">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-732">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-732">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-733">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-733">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="138ed-734">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-734">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<DatabaseAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-735">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-735">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-736">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-736">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
          description: |
            <span data-ttu-id="138ed-737">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-737">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    name: 'listMetricDefinitions(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-738">Возвращает определения метрик для заданной базы данных учетной записи.</span><span class="sxs-lookup"><span data-stu-id="138ed-738">Retrieves metric definitions for the given database account.</span></span>
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-739">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-739">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-740">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-740">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_2'
    name: 'listMetricDefinitions(string, string, RequestOptionsBase, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-741">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-741">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-742">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-742">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-743">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-743">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="138ed-744">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-744">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions_1'
    name: 'listMetricDefinitions(string, string, ServiceCallback<MetricDefinitionsListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetricDefinitions(resourceGroupName: string, accountName: string, callback: ServiceCallback<MetricDefinitionsListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-745">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-745">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-746">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-746">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
          description: |
            <span data-ttu-id="138ed-747">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-747">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricDefinitionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    name: 'listMetrics(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-748">Получает метрики, определяется заданным фильтром для заданной базы данных учетной записи.</span><span class="sxs-lookup"><span data-stu-id="138ed-748">Retrieves the metrics determined by the given filter for the given database account.</span></span>'
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-749">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-749">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-750">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-750">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="138ed-751">Выражение фильтра OData, описывающий подмножество возвращаемых показателей.</span><span class="sxs-lookup"><span data-stu-id="138ed-751">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="138ed-752">Параметры, которые могут быть отфильтрованы являются name.value (Имя метрики, могут иметь имена или нескольких), startTime, endTime и timeGrain.</span><span class="sxs-lookup"><span data-stu-id="138ed-752">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="138ed-753">Поддерживаемый оператор является eq.</span><span class="sxs-lookup"><span data-stu-id="138ed-753">The supported operator is eq.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_2'
    name: 'listMetrics(string, string, string, RequestOptionsBase, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, options: RequestOptionsBase, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-754">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-754">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-755">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-755">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="138ed-756">Выражение фильтра OData, описывающий подмножество возвращаемых показателей.</span><span class="sxs-lookup"><span data-stu-id="138ed-756">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="138ed-757">Параметры, которые могут быть отфильтрованы являются name.value (Имя метрики, могут иметь имена или нескольких), startTime, endTime и timeGrain.</span><span class="sxs-lookup"><span data-stu-id="138ed-757">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="138ed-758">Поддерживаемый оператор является eq.</span><span class="sxs-lookup"><span data-stu-id="138ed-758">The supported operator is eq.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-759">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-759">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="138ed-760">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-760">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics_1'
    name: 'listMetrics(string, string, string, ServiceCallback<MetricListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMetrics(resourceGroupName: string, accountName: string, filter: string, callback: ServiceCallback<MetricListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-761">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-761">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-762">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-762">Cosmos DB database account name.</span></span>
        - id: filter
          type:
            - string
          description: '<span data-ttu-id="138ed-763">Выражение фильтра OData, описывающий подмножество возвращаемых показателей.</span><span class="sxs-lookup"><span data-stu-id="138ed-763">An OData filter expression that describes a subset of metrics to return.</span></span> <span data-ttu-id="138ed-764">Параметры, которые могут быть отфильтрованы являются name.value (Имя метрики, могут иметь имена или нескольких), startTime, endTime и timeGrain.</span><span class="sxs-lookup"><span data-stu-id="138ed-764">The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain.</span></span> <span data-ttu-id="138ed-765">Поддерживаемый оператор является eq.</span><span class="sxs-lookup"><span data-stu-id="138ed-765">The supported operator is eq.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
          description: |
            <span data-ttu-id="138ed-766">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-766">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMetricsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections'
    name: 'listMongoDBCollections(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-767">Перечисляет коллекцию MongoDB с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-767">Lists the MongoDB collection under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-768">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-768">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-769">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-769">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-770">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-770">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_2'
    name: 'listMongoDBCollections(string, string, string, RequestOptionsBase, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-771">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-771">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-772">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-772">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-773">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-773">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-774">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-774">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="138ed-775">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-775">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBCollections_1'
    name: 'listMongoDBCollections(string, string, string, ServiceCallback<MongoDBCollectionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBCollections(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<MongoDBCollectionListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-776">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-776">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-777">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-777">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-778">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-778">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
          description: |
            <span data-ttu-id="138ed-779">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-779">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBCollectionsResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases'
    name: 'listMongoDBDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-780">Список баз данных MongoDB в существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-780">Lists the MongoDB databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-781">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-781">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-782">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-782">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_2'
    name: 'listMongoDBDatabases(string, string, RequestOptionsBase, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-783">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-783">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-784">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-784">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-785">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-785">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-786">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-786">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMongoDBDatabases_1'
    name: 'listMongoDBDatabases(string, string, ServiceCallback<MongoDBDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listMongoDBDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<MongoDBDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-787">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-787">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-788">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-788">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-789">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-789">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListMongoDBDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    name: 'listReadOnlyKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-790">Список ключей доступа только для чтения для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-790">Lists the read-only access keys for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-791">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-791">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-792">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-792">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_2'
    name: 'listReadOnlyKeys(string, string, RequestOptionsBase, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-793">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-793">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-794">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-794">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-795">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-795">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="138ed-796">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-796">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys_1'
    name: 'listReadOnlyKeys(string, string, ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listReadOnlyKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<DatabaseAccountListReadOnlyKeysResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-797">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-797">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-798">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-798">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
          description: |
            <span data-ttu-id="138ed-799">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-799">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListReadOnlyKeysResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers'
    name: 'listSqlContainers(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-800">Список контейнеров SQL с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-800">Lists the SQL container under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-801">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-801">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-802">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-802">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-803">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-803">Cosmos DB database name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_2'
    name: 'listSqlContainers(string, string, string, RequestOptionsBase, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-804">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-804">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-805">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-805">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-806">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-806">Cosmos DB database name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-807">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-807">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="138ed-808">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-808">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlContainers_1'
    name: 'listSqlContainers(string, string, string, ServiceCallback<SqlContainerListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlContainers(resourceGroupName: string, accountName: string, databaseName: string, callback: ServiceCallback<SqlContainerListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-809">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-809">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-810">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-810">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-811">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-811">Cosmos DB database name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
          description: |
            <span data-ttu-id="138ed-812">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-812">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlContainersResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases'
    name: 'listSqlDatabases(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-813">Список баз данных SQL с существующей учетной записью базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-813">Lists the SQL databases under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-814">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-814">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-815">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-815">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_2'
    name: 'listSqlDatabases(string, string, RequestOptionsBase, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-816">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-816">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-817">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-817">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-818">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-818">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-819">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-819">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listSqlDatabases_1'
    name: 'listSqlDatabases(string, string, ServiceCallback<SqlDatabaseListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listSqlDatabases(resourceGroupName: string, accountName: string, callback: ServiceCallback<SqlDatabaseListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-820">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-820">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-821">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-821">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
          description: |
            <span data-ttu-id="138ed-822">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-822">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListSqlDatabasesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables'
    name: 'listTables(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-823">Перечисляет таблицы в существующую учетную запись базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-823">Lists the Tables under an existing Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-824">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-824">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-825">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-825">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_2'
    name: 'listTables(string, string, RequestOptionsBase, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, options: RequestOptionsBase, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-826">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-826">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-827">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-827">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="138ed-828">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-828">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="138ed-829">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-829">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listTables_1'
    name: 'listTables(string, string, ServiceCallback<TableListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listTables(resourceGroupName: string, accountName: string, callback: ServiceCallback<TableListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-830">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-830">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-831">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-831">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.TableListResult>
          description: |
            <span data-ttu-id="138ed-832">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-832">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListTablesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_2'
    name: 'listUsages(string, string, DatabaseAccountsListUsagesOptionalParams, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options: DatabaseAccountsListUsagesOptionalParams, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-833">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-833">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-834">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-834">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
          description: <span data-ttu-id="138ed-835">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="138ed-835">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="138ed-836">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-836">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    name: 'listUsages(string, string, Models.DatabaseAccountsListUsagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-837">Извлекает данные об использовании (самые последние данные) для заданной базы данных учетной записи.</span><span class="sxs-lookup"><span data-stu-id="138ed-837">Retrieves the usages (most recent data) for the given database account.</span></span>
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, options?: Models.DatabaseAccountsListUsagesOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-838">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-838">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-839">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-839">Cosmos DB database account name.</span></span>
        - id: options
          type:
            - Models.DatabaseAccountsListUsagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages_1'
    name: 'listUsages(string, string, ServiceCallback<UsagesResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listUsages(resourceGroupName: string, accountName: string, callback: ServiceCallback<UsagesResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-840">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-840">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-841">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-841">Cosmos DB database account name.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
          description: |
            <span data-ttu-id="138ed-842">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="138ed-842">The callback</span></span>
      return:
        type:
          - Promise<Models.DatabaseAccountsListUsagesResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.offlineRegion'
    name: 'offlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-843">Автономный режим учетная запись базы данных заданной области для указанного Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-843">Offline the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function offlineRegion(resourceGroupName: string, accountName: string, regionParameterForOffline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-844">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-844">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-845">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-845">Cosmos DB database account name.</span></span>
        - id: regionParameterForOffline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="138ed-846">Регион Cosmos DB в автономный режим для учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-846">Cosmos DB region to offline for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.onlineRegion'
    name: 'onlineRegion(string, string, RegionForOnlineOffline, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-847">Online учетная запись базы данных заданной области для указанного Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-847">Online the specified region for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function onlineRegion(resourceGroupName: string, accountName: string, regionParameterForOnline: RegionForOnlineOffline, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-848">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-848">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-849">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-849">Cosmos DB database account name.</span></span>
        - id: regionParameterForOnline
          type:
            - '@azure/arm-cosmosdb.RegionForOnlineOffline'
          description: <span data-ttu-id="138ed-850">Регион Cosmos DB для интерактивной учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-850">Cosmos DB region to online for the database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.patch'
    name: 'patch(string, string, DatabaseAccountPatchParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-851">Исправления, свойства существующей учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-851">Patches the properties of an existing Azure Cosmos DB database account.</span></span>'
    syntax:
      content: 'function patch(resourceGroupName: string, accountName: string, updateParameters: DatabaseAccountPatchParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-852">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-852">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-853">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-853">Cosmos DB database account name.</span></span>
        - id: updateParameters
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
          description: <span data-ttu-id="138ed-854">Параметр тегов исправление для текущей учетной записи базы данных.</span><span class="sxs-lookup"><span data-stu-id="138ed-854">The tags parameter to patch for the current database account.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsPatchResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.regenerateKey'
    name: 'regenerateKey(string, string, DatabaseAccountRegenerateKeyParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-855">Повторно создает ключ доступа для указанной учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-855">Regenerates an access key for the specified Azure Cosmos DB database account.</span></span>
    syntax:
      content: 'function regenerateKey(resourceGroupName: string, accountName: string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-856">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-856">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-857">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-857">Cosmos DB database account name.</span></span>
        - id: keyToRegenerate
          type:
            - '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
          description: <span data-ttu-id="138ed-858">Имя ключа для повторного создания.</span><span class="sxs-lookup"><span data-stu-id="138ed-858">The name of the key to regenerate.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraKeyspaceThroughput'
    name: 'updateCassandraKeyspaceThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-859">Обновление ru в секунду пространства ключей Cassandra Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-859">Update RUs per second of an Azure Cosmos DB Cassandra Keyspace</span></span>
    syntax:
      content: 'function updateCassandraKeyspaceThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-860">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-860">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-861">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-861">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-862">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-862">Cosmos DB keyspace name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-863">Единицы запросов в секунду параметров для обеспечения текущего пространства ключей Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-863">The RUs per second of the parameters to provide for the current Cassandra Keyspace.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraKeyspaceThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateCassandraTableThroughput'
    name: 'updateCassandraTableThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-864">Обновление единиц запросов в секунду, таблицы Azure Cosmos DB Cassandra</span><span class="sxs-lookup"><span data-stu-id="138ed-864">Update RUs per second of an Azure Cosmos DB Cassandra table</span></span>'
    syntax:
      content: 'function updateCassandraTableThroughput(resourceGroupName: string, accountName: string, keyspaceName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-865">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-865">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-866">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-866">Cosmos DB database account name.</span></span>
        - id: keyspaceName
          type:
            - string
          description: <span data-ttu-id="138ed-867">Имя пространства ключей Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-867">Cosmos DB keyspace name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-868">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-868">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-869">Единицы запросов в секунду параметров для предоставления для текущей таблицы Cassandra.</span><span class="sxs-lookup"><span data-stu-id="138ed-869">The RUs per second of the parameters to provide for the current Cassandra table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateCassandraTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinDatabaseThroughput'
    name: 'updateGremlinDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-870">Обновление единиц запросов в секунду, базы данных Azure Cosmos DB Gremlin</span><span class="sxs-lookup"><span data-stu-id="138ed-870">Update RUs per second of an Azure Cosmos DB Gremlin database</span></span>'
    syntax:
      content: 'function updateGremlinDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-871">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-871">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-872">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-872">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-873">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-873">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: '<span data-ttu-id="138ed-874">Единицы запросов в секунду, параметров и обеспечить для текущей базы данных Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-874">The RUs per second of the parameters to provide for the current Gremlin database.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateGremlinGraphThroughput'
    name: 'updateGremlinGraphThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-875">Обновление единиц запросов в секунду для Azure Cosmos DB Gremlin graph</span><span class="sxs-lookup"><span data-stu-id="138ed-875">Update RUs per second of an Azure Cosmos DB Gremlin graph</span></span>
    syntax:
      content: 'function updateGremlinGraphThroughput(resourceGroupName: string, accountName: string, databaseName: string, graphName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-876">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-876">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-877">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-877">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-878">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-878">Cosmos DB database name.</span></span>
        - id: graphName
          type:
            - string
          description: <span data-ttu-id="138ed-879">Имя диаграммы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-879">Cosmos DB graph name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-880">Единицы запросов в секунду параметров для обеспечения текущего графа Gremlin.</span><span class="sxs-lookup"><span data-stu-id="138ed-880">The RUs per second of the parameters to provide for the current Gremlin graph.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateGremlinGraphThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBCollectionThroughput'
    name: 'updateMongoDBCollectionThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-881">Обновление единиц запросов в секунду коллекции Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-881">Update the RUs per second of an Azure Cosmos DB MongoDB collection</span></span>
    syntax:
      content: 'function updateMongoDBCollectionThroughput(resourceGroupName: string, accountName: string, databaseName: string, collectionName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-882">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-882">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-883">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-883">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-884">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-884">Cosmos DB database name.</span></span>
        - id: collectionName
          type:
            - string
          description: <span data-ttu-id="138ed-885">Имя коллекции Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-885">Cosmos DB collection name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-886">Единицы запросов в секунду параметров для обеспечения текущей коллекции MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-886">The RUs per second of the parameters to provide for the current MongoDB collection.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBCollectionThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateMongoDBDatabaseThroughput'
    name: 'updateMongoDBDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-887">Обновление единиц запросов в секунду к базе данных Azure Cosmos DB MongoDB</span><span class="sxs-lookup"><span data-stu-id="138ed-887">Update RUs per second of the an Azure Cosmos DB MongoDB database</span></span>
    syntax:
      content: 'function updateMongoDBDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-888">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-888">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-889">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-889">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-890">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-890">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-891">Единицы запросов в секунду параметров для предоставления в текущей базе данных MongoDB.</span><span class="sxs-lookup"><span data-stu-id="138ed-891">The RUs per second of the parameters to provide for the current MongoDB database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateMongoDBDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlContainerThroughput'
    name: 'updateSqlContainerThroughput(string, string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-892">Обновление единиц запросов в секунду контейнера Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-892">Update RUs per second of an Azure Cosmos DB SQL container</span></span>
    syntax:
      content: 'function updateSqlContainerThroughput(resourceGroupName: string, accountName: string, databaseName: string, containerName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-893">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-893">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-894">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-894">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-895">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-895">Cosmos DB database name.</span></span>
        - id: containerName
          type:
            - string
          description: <span data-ttu-id="138ed-896">Имя контейнера Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-896">Cosmos DB container name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-897">Параметры для обеспечения ru в секунду в текущем контейнере SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-897">The parameters to provide for the RUs per second of the current SQL container.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlContainerThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateSqlDatabaseThroughput'
    name: 'updateSqlDatabaseThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="138ed-898">Обновление единиц запросов в секунду, базы данных Azure Cosmos DB SQL</span><span class="sxs-lookup"><span data-stu-id="138ed-898">Update RUs per second of an Azure Cosmos DB SQL database</span></span>'
    syntax:
      content: 'function updateSqlDatabaseThroughput(resourceGroupName: string, accountName: string, databaseName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-899">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-899">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-900">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-900">Cosmos DB database account name.</span></span>
        - id: databaseName
          type:
            - string
          description: <span data-ttu-id="138ed-901">Имя базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-901">Cosmos DB database name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-902">Параметры для обеспечения единиц запросов в секунду текущей базы данных SQL.</span><span class="sxs-lookup"><span data-stu-id="138ed-902">The parameters to provide for the RUs per second of the current SQL database.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateSqlDatabaseThroughputResponse>
    package: '@azure/arm-cosmosdb'
  - uid: '@azure/arm-cosmosdb.DatabaseAccounts.updateTableThroughput'
    name: 'updateTableThroughput(string, string, string, ThroughputUpdateParameters, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="138ed-903">Обновление единиц запросов в секунду для таблиц Azure Cosmos DB</span><span class="sxs-lookup"><span data-stu-id="138ed-903">Update RUs per second of an Azure Cosmos DB Table</span></span>
    syntax:
      content: 'function updateTableThroughput(resourceGroupName: string, accountName: string, tableName: string, updateThroughputParameters: ThroughputUpdateParameters, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="138ed-904">Имя группы ресурсов Azure.</span><span class="sxs-lookup"><span data-stu-id="138ed-904">Name of an Azure resource group.</span></span>
        - id: accountName
          type:
            - string
          description: <span data-ttu-id="138ed-905">Имя учетной записи базы данных Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-905">Cosmos DB database account name.</span></span>
        - id: tableName
          type:
            - string
          description: <span data-ttu-id="138ed-906">Имя таблицы Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="138ed-906">Cosmos DB table name.</span></span>
        - id: updateThroughputParameters
          type:
            - '@azure/arm-cosmosdb.ThroughputUpdateParameters'
          description: <span data-ttu-id="138ed-907">Параметры для обеспечения единиц запросов в секунду из текущей таблицы.</span><span class="sxs-lookup"><span data-stu-id="138ed-907">The parameters to provide for the RUs per second of the current Table.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DatabaseAccountsUpdateTableThroughputResponse>
    package: '@azure/arm-cosmosdb'
references:
  - uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
    name: CosmosDBManagementClientContext
    spec.typeScript:
      - name: CosmosDBManagementClientContext
        fullName: CosmosDBManagementClientContext
        uid: '@azure/arm-cosmosdb.CosmosDBManagementClientContext'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
    name: DatabaseAccountCreateUpdateParameters
    spec.typeScript:
      - name: DatabaseAccountCreateUpdateParameters
        fullName: DatabaseAccountCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
    name: CassandraKeyspaceCreateUpdateParameters
    spec.typeScript:
      - name: CassandraKeyspaceCreateUpdateParameters
        fullName: CassandraKeyspaceCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
    name: CassandraTableCreateUpdateParameters
    spec.typeScript:
      - name: CassandraTableCreateUpdateParameters
        fullName: CassandraTableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
    name: GremlinDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: GremlinDatabaseCreateUpdateParameters
        fullName: GremlinDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
    name: GremlinGraphCreateUpdateParameters
    spec.typeScript:
      - name: GremlinGraphCreateUpdateParameters
        fullName: GremlinGraphCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
    name: MongoDBCollectionCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBCollectionCreateUpdateParameters
        fullName: MongoDBCollectionCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBCollectionCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
    name: MongoDBDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: MongoDBDatabaseCreateUpdateParameters
        fullName: MongoDBDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
    name: SqlContainerCreateUpdateParameters
    spec.typeScript:
      - name: SqlContainerCreateUpdateParameters
        fullName: SqlContainerCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlContainerCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
    name: SqlDatabaseCreateUpdateParameters
    spec.typeScript:
      - name: SqlDatabaseCreateUpdateParameters
        fullName: SqlDatabaseCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.SqlDatabaseCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
    name: TableCreateUpdateParameters
    spec.typeScript:
      - name: TableCreateUpdateParameters
        fullName: TableCreateUpdateParameters
        uid: '@azure/arm-cosmosdb.TableCreateUpdateParameters'
  - uid: '@azure/arm-cosmosdb.FailoverPolicies'
    name: FailoverPolicies
    spec.typeScript:
      - name: FailoverPolicies
        fullName: FailoverPolicies
        uid: '@azure/arm-cosmosdb.FailoverPolicies'
  - uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
    name: RegionForOnlineOffline
    spec.typeScript:
      - name: RegionForOnlineOffline
        fullName: RegionForOnlineOffline
        uid: '@azure/arm-cosmosdb.RegionForOnlineOffline'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
    name: DatabaseAccountPatchParameters
    spec.typeScript:
      - name: DatabaseAccountPatchParameters
        fullName: DatabaseAccountPatchParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountPatchParameters'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
    name: DatabaseAccountRegenerateKeyParameters
    spec.typeScript:
      - name: DatabaseAccountRegenerateKeyParameters
        fullName: DatabaseAccountRegenerateKeyParameters
        uid: '@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters'
  - uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
    name: ThroughputUpdateParameters
    spec.typeScript:
      - name: ThroughputUpdateParameters
        fullName: ThroughputUpdateParameters
        uid: '@azure/arm-cosmosdb.ThroughputUpdateParameters'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccount>
    name: DatabaseAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccount
        fullName: DatabaseAccount
        uid: '@azure/arm-cosmosdb.DatabaseAccount'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspace>
    name: CassandraKeyspace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspace
        fullName: CassandraKeyspace
        uid: '@azure/arm-cosmosdb.CassandraKeyspace'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Throughput>
    name: Throughput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Throughput
        fullName: Throughput
        uid: '@azure/arm-cosmosdb.Throughput'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTable>
    name: CassandraTable>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTable
        fullName: CassandraTable
        uid: '@azure/arm-cosmosdb.CassandraTable'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabase>
    name: GremlinDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabase
        fullName: GremlinDatabase
        uid: '@azure/arm-cosmosdb.GremlinDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraph>
    name: GremlinGraph>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraph
        fullName: GremlinGraph
        uid: '@azure/arm-cosmosdb.GremlinGraph'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollection>
    name: MongoDBCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollection
        fullName: MongoDBCollection
        uid: '@azure/arm-cosmosdb.MongoDBCollection'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabase>
    name: MongoDBDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabase
        fullName: MongoDBDatabase
        uid: '@azure/arm-cosmosdb.MongoDBDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult>
    name: DatabaseAccountListReadOnlyKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListReadOnlyKeysResult
        fullName: DatabaseAccountListReadOnlyKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainer>
    name: SqlContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainer
        fullName: SqlContainer
        uid: '@azure/arm-cosmosdb.SqlContainer'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabase>
    name: SqlDatabase>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabase
        fullName: SqlDatabase
        uid: '@azure/arm-cosmosdb.SqlDatabase'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.Table>
    name: Table>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Table
        fullName: Table
        uid: '@azure/arm-cosmosdb.Table'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountsListResult>
    name: DatabaseAccountsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountsListResult
        fullName: DatabaseAccountsListResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraKeyspaceListResult>
    name: CassandraKeyspaceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraKeyspaceListResult
        fullName: CassandraKeyspaceListResult
        uid: '@azure/arm-cosmosdb.CassandraKeyspaceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.CassandraTableListResult>
    name: CassandraTableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CassandraTableListResult
        fullName: CassandraTableListResult
        uid: '@azure/arm-cosmosdb.CassandraTableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult>
    name: DatabaseAccountListConnectionStringsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListConnectionStringsResult
        fullName: DatabaseAccountListConnectionStringsResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinDatabaseListResult>
    name: GremlinDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinDatabaseListResult
        fullName: GremlinDatabaseListResult
        uid: '@azure/arm-cosmosdb.GremlinDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.GremlinGraphListResult>
    name: GremlinGraphListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GremlinGraphListResult
        fullName: GremlinGraphListResult
        uid: '@azure/arm-cosmosdb.GremlinGraphListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.DatabaseAccountListKeysResult>
    name: DatabaseAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DatabaseAccountListKeysResult
        fullName: DatabaseAccountListKeysResult
        uid: '@azure/arm-cosmosdb.DatabaseAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricDefinitionsListResult>
    name: MetricDefinitionsListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricDefinitionsListResult
        fullName: MetricDefinitionsListResult
        uid: '@azure/arm-cosmosdb.MetricDefinitionsListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MetricListResult>
    name: MetricListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MetricListResult
        fullName: MetricListResult
        uid: '@azure/arm-cosmosdb.MetricListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBCollectionListResult>
    name: MongoDBCollectionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBCollectionListResult
        fullName: MongoDBCollectionListResult
        uid: '@azure/arm-cosmosdb.MongoDBCollectionListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.MongoDBDatabaseListResult>
    name: MongoDBDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MongoDBDatabaseListResult
        fullName: MongoDBDatabaseListResult
        uid: '@azure/arm-cosmosdb.MongoDBDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlContainerListResult>
    name: SqlContainerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlContainerListResult
        fullName: SqlContainerListResult
        uid: '@azure/arm-cosmosdb.SqlContainerListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.SqlDatabaseListResult>
    name: SqlDatabaseListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SqlDatabaseListResult
        fullName: SqlDatabaseListResult
        uid: '@azure/arm-cosmosdb.SqlDatabaseListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.TableListResult>
    name: TableListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TableListResult
        fullName: TableListResult
        uid: '@azure/arm-cosmosdb.TableListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-cosmosdb.UsagesResult>
    name: UsagesResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UsagesResult
        fullName: UsagesResult
        uid: '@azure/arm-cosmosdb.UsagesResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'
    name: DatabaseAccountsListUsagesOptionalParams
    spec.typeScript:
      - name: DatabaseAccountsListUsagesOptionalParams
        fullName: DatabaseAccountsListUsagesOptionalParams
        uid: '@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams'