### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters'
    name: WebhookUpdateParameters
    fullName: WebhookUpdateParameters
    children:
      - '@azure/arm-containerregistry.WebhookUpdateParameters.actions'
      - '@azure/arm-containerregistry.WebhookUpdateParameters.customHeaders'
      - '@azure/arm-containerregistry.WebhookUpdateParameters.scope'
      - '@azure/arm-containerregistry.WebhookUpdateParameters.serviceUri'
      - '@azure/arm-containerregistry.WebhookUpdateParameters.status'
      - '@azure/arm-containerregistry.WebhookUpdateParameters.tags'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="fe3f2-101">Параметры для обновления веб-перехватчика.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-101">The parameters for updating a webhook.</span></span>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.actions'
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fe3f2-102">Список действий, которые активируют веб-перехватчика для отправки уведомлений.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-102">The list of actions that trigger the webhook to post notifications.</span></span>'
    optional: true
    syntax:
      content: 'actions?: WebhookAction[]'
      return:
        type:
          - '@azure/arm-containerregistry.WebhookAction[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fe3f2-103">Пользовательские заголовки, которые будут добавляться на веб-перехватчика уведомления.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-103">Custom headers that will be added to the webhook notifications.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.scope'
    name: scope
    fullName: scope
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fe3f2-104">Область действия репозиториев, где событие может быть включено.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-104">The scope of repositories where the event can be triggered.</span></span> <span data-ttu-id="fe3f2-105">Например "foo: \*" означает, что события для всех тегов в репозитории «foo».</span><span class="sxs-lookup"><span data-stu-id="fe3f2-105">For example, ''foo:\*'' means events for all tags under repository ''foo''.</span></span> <span data-ttu-id="fe3f2-106">bar «соответствует» означает, что события bar «соответствует» только.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-106">''foo:bar'' means events for ''foo:bar'' only.</span></span> <span data-ttu-id="fe3f2-107">«foo» соответствует «создано».</span><span class="sxs-lookup"><span data-stu-id="fe3f2-107">''foo'' is equivalent to ''foo:latest''.</span></span> <span data-ttu-id="fe3f2-108">Empty означает все события.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-108">Empty means all events.</span></span>'
    optional: true
    syntax:
      content: 'scope?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.serviceUri'
    name: serviceUri
    fullName: serviceUri
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fe3f2-109">URI службы, веб-перехватчика для отправки уведомлений.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-109">The service URI for the webhook to post notifications.</span></span>'
    optional: true
    syntax:
      content: 'serviceUri?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.status'
    name: status
    fullName: status
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="fe3f2-110">Состояние веб-перехватчик во время вызова операции.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-110">The status of the webhook at the time the operation was called.</span></span> <span data-ttu-id="fe3f2-111">Возможные значения: «enabled», «отключено»</span><span class="sxs-lookup"><span data-stu-id="fe3f2-111">Possible values include: ''enabled'', ''disabled''</span></span>'
    optional: true
    syntax:
      content: 'status?: WebhookStatus'
      return:
        type:
          - '@azure/arm-containerregistry.WebhookStatus'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.WebhookUpdateParameters.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="fe3f2-112">Теги для веб-перехватчика.</span><span class="sxs-lookup"><span data-stu-id="fe3f2-112">The tags for the webhook.</span></span>
    optional: true
    syntax:
      content: 'tags?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-containerregistry'
references:
  - uid: '@azure/arm-containerregistry.WebhookAction[]'
    name: 'WebhookAction[]'
    spec.typeScript:
      - name: WebhookAction
        fullName: WebhookAction
        uid: '@azure/arm-containerregistry.WebhookAction'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-containerregistry.WebhookStatus'
    name: WebhookStatus
    spec.typeScript:
      - name: WebhookStatus
        fullName: WebhookStatus
        uid: '@azure/arm-containerregistry.WebhookStatus'