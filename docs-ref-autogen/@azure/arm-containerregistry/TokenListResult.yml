### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerregistry.TokenListResult'
    name: TokenListResult
    fullName: TokenListResult
    children:
      - '@azure/arm-containerregistry.TokenListResult.Array'
      - '@azure/arm-containerregistry.TokenListResult.concat'
      - '@azure/arm-containerregistry.TokenListResult.concat_1'
      - '@azure/arm-containerregistry.TokenListResult.copyWithin'
      - '@azure/arm-containerregistry.TokenListResult.entries'
      - '@azure/arm-containerregistry.TokenListResult.every'
      - '@azure/arm-containerregistry.TokenListResult.fill'
      - '@azure/arm-containerregistry.TokenListResult.filter_1'
      - '@azure/arm-containerregistry.TokenListResult.filter'
      - '@azure/arm-containerregistry.TokenListResult.find'
      - '@azure/arm-containerregistry.TokenListResult.find_1'
      - '@azure/arm-containerregistry.TokenListResult.findIndex'
      - '@azure/arm-containerregistry.TokenListResult.forEach'
      - '@azure/arm-containerregistry.TokenListResult.indexOf'
      - '@azure/arm-containerregistry.TokenListResult.join'
      - '@azure/arm-containerregistry.TokenListResult.keys'
      - '@azure/arm-containerregistry.TokenListResult.lastIndexOf'
      - '@azure/arm-containerregistry.TokenListResult.length'
      - '@azure/arm-containerregistry.TokenListResult.map'
      - '@azure/arm-containerregistry.TokenListResult.nextLink'
      - '@azure/arm-containerregistry.TokenListResult.pop'
      - '@azure/arm-containerregistry.TokenListResult.push'
      - '@azure/arm-containerregistry.TokenListResult.reduce'
      - '@azure/arm-containerregistry.TokenListResult.reduce_1'
      - '@azure/arm-containerregistry.TokenListResult.reduce_2'
      - '@azure/arm-containerregistry.TokenListResult.reduceRight'
      - '@azure/arm-containerregistry.TokenListResult.reduceRight_1'
      - '@azure/arm-containerregistry.TokenListResult.reduceRight_2'
      - '@azure/arm-containerregistry.TokenListResult.reverse'
      - '@azure/arm-containerregistry.TokenListResult.shift'
      - '@azure/arm-containerregistry.TokenListResult.slice'
      - '@azure/arm-containerregistry.TokenListResult.some'
      - '@azure/arm-containerregistry.TokenListResult.sort'
      - '@azure/arm-containerregistry.TokenListResult.splice_1'
      - '@azure/arm-containerregistry.TokenListResult.splice'
      - '@azure/arm-containerregistry.TokenListResult.toLocaleString'
      - '@azure/arm-containerregistry.TokenListResult.toString'
      - '@azure/arm-containerregistry.TokenListResult.unshift'
      - '@azure/arm-containerregistry.TokenListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-containerregistry.Token>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.concat'
    name: 'concat(ConcatArray<Token>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Объединяет несколько массивов.
    syntax:
      content: 'function concat(items: ConcatArray<Token>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-containerregistry.Token>[]'
          description: |
            Дополнительные элементы для добавления в конец массив1.
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Объединяет несколько массивов.
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            Дополнительные элементы для добавления в конец массив1.
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает этот объект после копирования массива определяется начало и конец тот же массив, начиная с позиции целевой'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: 'Если целевым объектом является отрицательным, он рассматривается как длина + целевой, где length — длина массива.'
        - id: start
          type:
            - number
          description: 'Если start имеет отрицательное значение, он рассматривается как длина + start. Если end имеет отрицательное, оно рассматривается как длина + end.'
        - id: end
          type:
            - undefined | number
          description: |
            Если не указано, длина этого объекта используется в качестве значения по умолчанию.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает итерируемого пары ключей, значение для каждой записи в массиве'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.every'
    name: 'every((value: Token, index: number, array: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Определяет, удовлетворяют ли все элементы массива заданный тест.'
    syntax:
      content: 'function every(callbackfn: (value: Token, index: number, array: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => boolean'
          description: 'Функция, которая принимает до трех аргументов. Каждый метод вызывает функцию callbackfn для каждого элемента в Массив1, пока не callbackfn возвращает значение false, или до конца массива.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.fill'
    name: 'fill(Token, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает этот объект после заполнения разделе определяется первым и последним символом значение
    syntax:
      content: 'function fill(value: Token, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-containerregistry.Token'
          description: значения для заполнения массива раздел с
        - id: start
          type:
            - undefined | number
          description: 'Индекс начала заполнения массиве. Если start имеет отрицательное значение, он рассматривается как длина + start, где length — длина массива.'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            Индекс, чтобы остановить заполнение массиве. Если end имеет отрицательное, оно рассматривается как длина + end.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.filter_1'
    name: 'filter((value: Token, index: number, array: Token[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.'
    syntax:
      content: 'function filter(callbackfn: (value: Token, index: number, array: Token[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => any'
          description: 'Функция, которая принимает до трех аргументов. Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.filter'
    name: 'filter((value: Token, index: number, array: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.'
    syntax:
      content: 'function filter<S>(callbackfn: (value: Token, index: number, array: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => boolean'
          description: 'Функция, которая принимает до трех аргументов. Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.find'
    name: 'find((this: void, value: Token, index: number, obj: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: Token, index: number, obj: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: Token, index: number, obj: Token[]) => boolean'
          description: 'найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true. Если такой элемент найден, поиск немедленно возвращает значение этого элемента. В противном случае поиск возвращает значение undefined.'
        - id: thisArg
          type:
            - any
          description: |
            Если указано, оно будет использоваться как это значение для каждого вызова предиката. Если оно не выполняется, не указано. вместо него используется.
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.find_1'
    name: 'find((value: Token, index: number, obj: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.'
    syntax:
      content: 'function find(predicate: (value: Token, index: number, obj: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Token, index: number, obj: Token[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-containerregistry.Token | undefined'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.findIndex'
    name: 'findIndex((value: Token, index: number, obj: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает индекс первого элемента в массиве, где предикат имеет значение true, а в противном случае -1.'
    syntax:
      content: 'function findIndex(predicate: (value: Token, index: number, obj: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Token, index: number, obj: Token[]) => boolean'
          description: 'найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true. Если такой элемент найден, findIndex немедленно возвращает индекс этого элемента. FindIndex в противном случае возвращает значение -1.'
        - id: thisArg
          type:
            - any
          description: |
            Если указано, оно будет использоваться как это значение для каждого вызова предиката. Если оно не выполняется, не указано. вместо него используется.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.forEach'
    name: 'forEach((value: Token, index: number, array: Token[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Выполняет указанное действие для каждого элемента в массиве.
    syntax:
      content: 'function forEach(callbackfn: (value: Token, index: number, array: Token[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => void'
          description: 'Функция, которая принимает до трех аргументов. forEach вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.indexOf'
    name: 'indexOf(Token, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает индекс первого вхождения значения в массиве.
    syntax:
      content: 'function indexOf(searchElement: Token, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-containerregistry.Token'
          description: 'Значение, которое требуется найти в массиве.'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            Индекс массива, с которого начинается поиск. Если параметр fromIndex опущен, поиск начинается с индекса 0.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Добавляет все элементы массива, разделенных указанной строкой-разделителем.'
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            Строка, используемая для разделения один элемент массива из следующего в результирующую строку. Если этот параметр опущен, элементы массива разделяются запятыми.
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает итерируемого ключей в массиве
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.lastIndexOf'
    name: 'lastIndexOf(Token, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает индекс последнего вхождения указанного значения в массиве.
    syntax:
      content: 'function lastIndexOf(searchElement: Token, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-containerregistry.Token'
          description: 'Значение, которое требуется найти в массиве.'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            Индекс массива, с которого начинается поиск. Если параметр fromIndex опущен, поиск начинается с последнего индекса в массиве.
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Возвращает или задает длину массива. Это номер один, выше, чем наибольший элемент, определенный в массиве.'
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.map'
    name: 'map((value: Token, index: number, array: Token[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Вызывает заданную функцию обратного вызова для каждого элемента массива и возвращает массив, содержащий результаты.'
    syntax:
      content: 'function map<U>(callbackfn: (value: Token, index: number, array: Token[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => U'
          description: 'Функция, которая принимает до трех аргументов. Метод map вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: 'URI, который может использоваться для запроса следующий список токенов.'
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаляет последний элемент из массива и возвращает его.
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-containerregistry.Token | undefined'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.push'
    name: 'push(Token[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Присоединяет новые элементы к массиву и возвращает новую длину массива.
    syntax:
      content: 'function push(items: Token[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-containerregistry.Token[]'
          description: |
            Новые элементы массива.
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduce'
    name: 'reduce((previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Вызывает заданный обратный вызов функции для всех элементов в массиве. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token'
          description: 'Функция, которая принимает до четырех аргументов. Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.'
      return:
        type:
          - '@azure/arm-containerregistry.Token'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduce_1'
    name: 'reduce((previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token, Token)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Вызывает заданный обратный вызов функции для всех элементов в массиве. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token, initialValue: Token)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-containerregistry.Token'
          description: ''
      return:
        type:
          - '@azure/arm-containerregistry.Token'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Вызывает заданный обратный вызов функции для всех элементов в массиве. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U'
          description: 'Функция, которая принимает до четырех аргументов. Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: initialValue
          type:
            - U
          description: |
            Если значение initialValue указано, используется как начальное значение начинается накопление. Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.
      return:
        type:
          - U
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduceRight'
    name: 'reduceRight((previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token'
          description: 'Функция, которая принимает до четырех аргументов. Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.'
      return:
        type:
          - '@azure/arm-containerregistry.Token'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduceRight_1'
    name: 'reduceRight((previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token, Token)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token, initialValue: Token)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Token, currentValue: Token, currentIndex: number, array: Token[]) => Token'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-containerregistry.Token'
          description: ''
      return:
        type:
          - '@azure/arm-containerregistry.Token'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания. Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Token, currentIndex: number, array: Token[]) => U'
          description: 'Функция, которая принимает до четырех аргументов. Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.'
        - id: initialValue
          type:
            - U
          description: |
            Если значение initialValue указано, используется как начальное значение начинается накопление. Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.
      return:
        type:
          - U
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: Резервирует элементы в массиве.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаляет первый элемент из массива и возвращает его.
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-containerregistry.Token | undefined'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает фрагмент массива.
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: Начало указанного фрагмента массива.
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            Конец указанного фрагмента массива.
          optional: true
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.some'
    name: 'some((value: Token, index: number, array: Token[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Определяет, возвращает ли заданной функции обратного вызова значение true для любого элемента массива.'
    syntax:
      content: 'function some(callbackfn: (value: Token, index: number, array: Token[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Token, index: number, array: Token[]) => boolean'
          description: 'Функция, которая принимает до трех аргументов. Метод some вызывает функцию callbackfn для каждого элемента в массив1 callbackfn возвращает false, или до конца массива.'
        - id: thisArg
          type:
            - any
          description: |
            Объект, на который может ссылаться ключевое слово this в функции callbackfn. Если thisArg опущен, не указано. используется в качестве этого значения.
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.sort'
    name: 'sort(undefined | (a: Token, b: Token) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Сортирует массив.
    syntax:
      content: 'function sort(compareFn?: undefined | (a: Token, b: Token) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: Token, b: Token) => number'
          description: |
            Имя функции, используемое для определения порядка элементов. Если этот параметр опущен, элементы сортируются по возрастанию, ASCII символ.
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.splice_1'
    name: 'splice(number, number, Token[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Token[])'
      parameters:
        - id: start
          type:
            - number
          description: 'Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.'
        - id: deleteCount
          type:
            - number
          description: Число удаляемых элементов.
        - id: items
          type:
            - '@azure/arm-containerregistry.Token[]'
          description: |
            Элементов для вставки в массив вместо удаленных элементов.
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: 'Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.'
        - id: deleteCount
          type:
            - undefined | number
          description: |
            Число удаляемых элементов.
          optional: true
      return:
        type:
          - '@azure/arm-containerregistry.Token[]'
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает строковое представление массива. Элементы преобразуются в строку, используя их toLocalString методов.'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает строковое представление массива.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.unshift'
    name: 'unshift(Token[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Вставляет новые элементы в начало массива.
    syntax:
      content: 'function unshift(items: Token[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-containerregistry.Token[]'
          description: |
            Элементов для вставки в начале массива.
      return:
        type:
          - number
    package: '@azure/arm-containerregistry'
  - uid: '@azure/arm-containerregistry.TokenListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает итерируемого значений в массиве
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-containerregistry.Token>
    package: '@azure/arm-containerregistry'
references:
  - uid: Array<@azure/arm-containerregistry.Token>
    name: Token>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-containerregistry.Token>[]'
    name: 'Token>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-containerregistry.Token[]'
    name: 'Token[]'
    spec.typeScript:
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-containerregistry.Token'
    name: Token
    spec.typeScript:
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
  - uid: '@azure/arm-containerregistry.Token | undefined'
    name: Token | undefined
    spec.typeScript:
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-containerregistry.Token>
    name: Token>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: Token
        fullName: Token
        uid: '@azure/arm-containerregistry.Token'
      - name: '>'
        fullName: '>'