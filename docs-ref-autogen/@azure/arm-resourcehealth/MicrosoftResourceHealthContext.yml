### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext'
    name: MicrosoftResourceHealthContext
    fullName: MicrosoftResourceHealthContext
    children:
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.acceptLanguage'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.apiVersion'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.beginLongRunningRequest'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.credentials'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.longRunningOperationRetryTimeout'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.constructor'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.restoreLROPoller'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendLongRunningRequest'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendLRORequest'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendOperationRequest'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendRequest'
      - '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно HttpLongRunningOperationResponse, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Время ожидания в секундах для длительных операций повтора. Значение по умолчанию — 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.constructor'
    name: 'MicrosoftResourceHealthContext(ServiceClientCredentials, string, Models.MicrosoftResourceHealthOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Инициализирует новый экземпляр класса MicrosoftResourceHealth.
    syntax:
      content: 'new MicrosoftResourceHealthContext(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.MicrosoftResourceHealthOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 'Учетные данные, необходимые для клиента для подключения к Azure.'
        - id: subscriptionId
          type:
            - string
          description: 'Учетные данные для подписки, которые однозначно идентифицируют подписку Microsoft Azure. Идентификатор подписки формирует часть URI для каждого вызова службы.'
        - id: options
          type:
            - Models.MicrosoftResourceHealthOptions
          description: ''
          optional: true
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Восстановите LROPoller из предоставленного LROPollState. Этот метод может использоваться для повторного создания LROPoller на другом процессе или компьютере.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Предоставляет механизм для выполнения запроса, которая будет опрашивать и предоставляют результат.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно LROPoller, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Аргументы операции.
        - id: operationSpec
          type:
            - OperationSpec
          description: Спецификация для операции.
        - id: options
          type:
            - RequestOptionsBase
          description: Дополнительные параметры для отправляться при создании запроса.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'OperationSpec, используемые для заполнения httpRequest.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Обратный вызов, вызываемый после получения ответа.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправьте предоставленный httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-resourcehealth'
  - uid: '@azure/arm-resourcehealth.MicrosoftResourceHealthContext.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-resourcehealth'