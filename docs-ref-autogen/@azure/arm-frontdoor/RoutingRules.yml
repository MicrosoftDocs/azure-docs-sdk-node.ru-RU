### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-frontdoor.RoutingRules'
    name: RoutingRules
    fullName: RoutingRules
    children:
      - '@azure/arm-frontdoor.RoutingRules.beginCreateOrUpdate'
      - '@azure/arm-frontdoor.RoutingRules.beginDeleteMethod'
      - '@azure/arm-frontdoor.RoutingRules.createOrUpdate'
      - '@azure/arm-frontdoor.RoutingRules.deleteMethod'
      - '@azure/arm-frontdoor.RoutingRules.get'
      - '@azure/arm-frontdoor.RoutingRules.get_2'
      - '@azure/arm-frontdoor.RoutingRules.get_1'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoor'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoor_2'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoor_1'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext_2'
      - '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext_1'
      - '@azure/arm-frontdoor.RoutingRules.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий RoutingRules.'
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, string, RoutingRule, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает новое правило маршрутизации с указанным именем правила в указанной входной двери.
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: RoutingRule, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: routingRuleParameters
          type:
            - '@azure/arm-frontdoor.RoutingRule'
          description: 'Маршрутизация свойства правила, необходимые для создания нового входной двери.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаление существующего правила маршрутизации с указанными параметрами.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.createOrUpdate'
    name: 'createOrUpdate(string, string, string, RoutingRule, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает новое правило маршрутизации с указанным именем правила в указанной входной двери.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: RoutingRule, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: routingRuleParameters
          type:
            - '@azure/arm-frontdoor.RoutingRule'
          description: 'Маршрутизация свойства правила, необходимые для создания нового входной двери.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoutingRulesCreateOrUpdateResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаление существующего правила маршрутизации с указанными параметрами.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает правило маршрутизации с указанным именем правила в указанной входной двери.
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoutingRulesGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<RoutingRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options: RequestOptionsBase, callback: ServiceCallback<RoutingRule>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRule>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.get_1'
    name: 'get(string, string, string, ServiceCallback<RoutingRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, callback: ServiceCallback<RoutingRule>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: routingRuleName
          type:
            - string
          description: 'Имя правила маршрутизации, который является уникальным в пределах передовой линии.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRule>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoor'
    name: 'listByFrontDoor(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Перечисляет все правила маршрутизации в двери.
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoor_2'
    name: 'listByFrontDoor(string, string, RequestOptionsBase, ServiceCallback<RoutingRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: RequestOptionsBase, callback: ServiceCallback<RoutingRuleListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRuleListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoor_1'
    name: 'listByFrontDoor(string, string, ServiceCallback<RoutingRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<RoutingRuleListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRuleListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext'
    name: 'listByFrontDoorNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Перечисляет все правила маршрутизации в двери.
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext_2'
    name: 'listByFrontDoorNext(string, RequestOptionsBase, ServiceCallback<RoutingRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<RoutingRuleListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRuleListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.listByFrontDoorNext_1'
    name: 'listByFrontDoorNext(string, ServiceCallback<RoutingRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<RoutingRuleListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.RoutingRuleListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.RoutingRulesListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.RoutingRules.constructor'
    name: RoutingRules(FrontDoorManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте RoutingRules.
    syntax:
      content: 'new RoutingRules(client: FrontDoorManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-frontdoor.FrontDoorManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-frontdoor'
references:
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
    name: FrontDoorManagementClientContext
    spec.typeScript:
      - name: FrontDoorManagementClientContext
        fullName: FrontDoorManagementClientContext
        uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
  - uid: '@azure/arm-frontdoor.RoutingRule'
    name: RoutingRule
    spec.typeScript:
      - name: RoutingRule
        fullName: RoutingRule
        uid: '@azure/arm-frontdoor.RoutingRule'
  - uid: ServiceCallback<@azure/arm-frontdoor.RoutingRule>
    name: RoutingRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RoutingRule
        fullName: RoutingRule
        uid: '@azure/arm-frontdoor.RoutingRule'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-frontdoor.RoutingRuleListResult>
    name: RoutingRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RoutingRuleListResult
        fullName: RoutingRuleListResult
        uid: '@azure/arm-frontdoor.RoutingRuleListResult'
      - name: '>'
        fullName: '>'