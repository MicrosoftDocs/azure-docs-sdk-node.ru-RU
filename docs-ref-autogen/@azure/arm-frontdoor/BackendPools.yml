### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-frontdoor.BackendPools'
    name: BackendPools
    fullName: BackendPools
    children:
      - '@azure/arm-frontdoor.BackendPools.constructor'
      - '@azure/arm-frontdoor.BackendPools.beginCreateOrUpdate'
      - '@azure/arm-frontdoor.BackendPools.beginDeleteMethod'
      - '@azure/arm-frontdoor.BackendPools.createOrUpdate'
      - '@azure/arm-frontdoor.BackendPools.deleteMethod'
      - '@azure/arm-frontdoor.BackendPools.get'
      - '@azure/arm-frontdoor.BackendPools.get_2'
      - '@azure/arm-frontdoor.BackendPools.get_1'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoor'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoor_2'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoor_1'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext_2'
      - '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий BackendPools.'
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.constructor'
    name: BackendPools(FrontDoorManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте BackendPools.
    syntax:
      content: 'new BackendPools(client: FrontDoorManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-frontdoor.FrontDoorManagementClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, string, BackendPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает новый серверный пул с указанным именем пула в указанной входной двери.
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: BackendPool, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: backendPoolParameters
          type:
            - '@azure/arm-frontdoor.BackendPool'
          description: 'Свойства пула серверной части, необходимые для создания нового пула.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаляет существующий пул серверной части с указанными параметрами.
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.createOrUpdate'
    name: 'createOrUpdate(string, string, string, BackendPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Создает новый серверный пул с указанным именем пула в указанной входной двери.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: BackendPool, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: backendPoolParameters
          type:
            - '@azure/arm-frontdoor.BackendPool'
          description: 'Свойства пула серверной части, необходимые для создания нового пула.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendPoolsCreateOrUpdateResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Удаляет существующий пул серверной части с указанными параметрами.
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Получает внутренний пул с указанным именем пула в указанной входной двери.
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendPoolsGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<BackendPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options: RequestOptionsBase, callback: ServiceCallback<BackendPool>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPool>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.get_1'
    name: 'get(string, string, string, ServiceCallback<BackendPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, callback: ServiceCallback<BackendPool>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: backendPoolName
          type:
            - string
          description: 'Имя внутреннего пула, который является уникальным в пределах передовой линии.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPool>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsGetResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoor'
    name: 'listByFrontDoor(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Перечисляет все пулы серверной части в входной двери.
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoor_2'
    name: 'listByFrontDoor(string, string, RequestOptionsBase, ServiceCallback<BackendPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: RequestOptionsBase, callback: ServiceCallback<BackendPoolListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPoolListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoor_1'
    name: 'listByFrontDoor(string, string, ServiceCallback<BackendPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<BackendPoolListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Имя группы ресурсов в подписке Azure.
        - id: frontDoorName
          type:
            - string
          description: 'Имя двери, который является глобально уникальным.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPoolListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext'
    name: 'listByFrontDoorNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Перечисляет все пулы серверной части в входной двери.
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext_2'
    name: 'listByFrontDoorNext(string, RequestOptionsBase, ServiceCallback<BackendPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<BackendPoolListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPoolListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
  - uid: '@azure/arm-frontdoor.BackendPools.listByFrontDoorNext_1'
    name: 'listByFrontDoorNext(string, ServiceCallback<BackendPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<BackendPoolListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-frontdoor.BackendPoolListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.BackendPoolsListByFrontDoorNextResponse>
    package: '@azure/arm-frontdoor'
references:
  - uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
    name: FrontDoorManagementClientContext
    spec.typeScript:
      - name: FrontDoorManagementClientContext
        fullName: FrontDoorManagementClientContext
        uid: '@azure/arm-frontdoor.FrontDoorManagementClientContext'
  - uid: '@azure/arm-frontdoor.BackendPool'
    name: BackendPool
    spec.typeScript:
      - name: BackendPool
        fullName: BackendPool
        uid: '@azure/arm-frontdoor.BackendPool'
  - uid: ServiceCallback<@azure/arm-frontdoor.BackendPool>
    name: BackendPool>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendPool
        fullName: BackendPool
        uid: '@azure/arm-frontdoor.BackendPool'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-frontdoor.BackendPoolListResult>
    name: BackendPoolListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendPoolListResult
        fullName: BackendPoolListResult
        uid: '@azure/arm-frontdoor.BackendPoolListResult'
      - name: '>'
        fullName: '>'