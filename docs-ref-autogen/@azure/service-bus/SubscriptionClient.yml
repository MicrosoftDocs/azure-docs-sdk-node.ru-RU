### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SubscriptionClient'
    name: SubscriptionClient
    fullName: SubscriptionClient
    children:
      - '@azure/service-bus.SubscriptionClient.addRule'
      - '@azure/service-bus.SubscriptionClient.close'
      - '@azure/service-bus.SubscriptionClient.createReceiver'
      - '@azure/service-bus.SubscriptionClient.createReceiver_1'
      - '@azure/service-bus.SubscriptionClient.defaultRuleName'
      - '@azure/service-bus.SubscriptionClient.entityPath'
      - '@azure/service-bus.SubscriptionClient.getRules'
      - '@azure/service-bus.SubscriptionClient.id'
      - '@azure/service-bus.SubscriptionClient.peek'
      - '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
      - '@azure/service-bus.SubscriptionClient.removeRule'
      - '@azure/service-bus.SubscriptionClient.subscriptionName'
      - '@azure/service-bus.SubscriptionClient.topicName'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="7ba35-101">Описывает клиента, который обеспечивает взаимодействие с подписку служебной шины.</span><span class="sxs-lookup"><span data-stu-id="7ba35-101">Describes the client that allows interacting with a Service Bus Subscription.</span></span>
      <span data-ttu-id="7ba35-102">Используйте `createSubscriptionClient` функции в объекте ServiceBusClient, чтобы создать экземпляр SubscriptionClient</span><span class="sxs-lookup"><span data-stu-id="7ba35-102">Use the `createSubscriptionClient` function on the ServiceBusClient object to instantiate a SubscriptionClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.addRule'
    name: 'addRule(string, boolean | string | CorrelationFilter, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-103">Добавляет правило в подписке, как определено имя данного правила, фильтра и действие.</span><span class="sxs-lookup"><span data-stu-id="7ba35-103">Adds a rule on the subscription as defined by the given rule name, filter and action.</span></span>
      <span data-ttu-id="7ba35-104">**Примечание**. Удалите фильтр по умолчанию true на подписку, прежде чем добавить правило.</span><span class="sxs-lookup"><span data-stu-id="7ba35-104">**Note**: Remove the default true filter on the subscription before adding a rule.</span></span>
      <span data-ttu-id="7ba35-105">В противном случае добавлено правило не оказывает влияния, как всегда дает первоначальное значение true, фильтр подписки, получение всех сообщений.</span><span class="sxs-lookup"><span data-stu-id="7ba35-105">Otherwise, the added rule will have no affect as the true filter will always result in the subscription receiving all messages.</span></span>
    syntax:
      content: 'function addRule(ruleName: string, filter: boolean | string | CorrelationFilter, sqlRuleActionExpression?: undefined | string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: <span data-ttu-id="7ba35-106">Имя правила.</span><span class="sxs-lookup"><span data-stu-id="7ba35-106">Name of the rule</span></span>
        - id: filter
          type:
            - boolean | string | @azure/service-bus.CorrelationFilter
          description: '<span data-ttu-id="7ba35-107">Логическое значение, выражения SQL или фильтре корреляции.</span><span class="sxs-lookup"><span data-stu-id="7ba35-107">A Boolean, SQL expression or a Correlation filter.</span></span> <span data-ttu-id="7ba35-108">Синтаксис SQL-фильтром, см. в разделе [синтаксис SQLFilter](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span><span class="sxs-lookup"><span data-stu-id="7ba35-108">For SQL Filter syntax, see [SQLFilter syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span></span>'
        - id: sqlRuleActionExpression
          type:
            - undefined | string
          description: |
            <span data-ttu-id="7ba35-109">Действие, выполняемое, если сообщение удовлетворяет выражения фильтрации.</span><span class="sxs-lookup"><span data-stu-id="7ba35-109">Action to perform if the message satisfies the filtering expression.</span></span> <span data-ttu-id="7ba35-110">Синтаксис SQL Rule Action, см. в разделе [синтаксис SQLRuleAction](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span><span class="sxs-lookup"><span data-stu-id="7ba35-110">For SQL Rule Action syntax, see [SQLRuleAction syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span></span>
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-111">Закрывает ссылку AMQP для получателей, созданные этим клиентом.</span><span class="sxs-lookup"><span data-stu-id="7ba35-111">Closes the AMQP link for the receivers created by this client.</span></span>
      <span data-ttu-id="7ba35-112">После закрытия ни SubscriptionClient, ни его получателей можно использовать для других операций.</span><span class="sxs-lookup"><span data-stu-id="7ba35-112">Once closed, neither the SubscriptionClient nor its receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-113">Создает приемник для получения сообщений из подписки, которая не поддерживает сеансы отключены.</span><span class="sxs-lookup"><span data-stu-id="7ba35-113">Creates a Receiver for receiving messages from a Subscription which does not have sessions enabled.</span></span>
      - <span data-ttu-id="7ba35-114">Вызывает ошибку, если приемник открыть уже существует для этого SubscriptionClient.</span><span class="sxs-lookup"><span data-stu-id="7ba35-114">Throws error if an open receiver already exists for this SubscriptionClient.</span></span>
      - <span data-ttu-id="7ba35-115">Создает `InvalidOperationError` Если подписка имеет сеансы отключены (в этом случае используйте перегрузку этого метода, который принимает `sessionOptions` аргумент)</span><span class="sxs-lookup"><span data-stu-id="7ba35-115">Throws `InvalidOperationError` if the Subscription has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="7ba35-116">Перечисление, указывающее режим, в котором должны быть получены сообщения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-116">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="7ba35-117">Возможные значения:</span><span class="sxs-lookup"><span data-stu-id="7ba35-117">Possible values are:</span></span>
            - <span data-ttu-id="7ba35-118">`ReceiveMode.peekLock`: После получения сообщения в этом режиме получатель имеет блокировку на сообщение в течение определенного периода времени.</span><span class="sxs-lookup"><span data-stu-id="7ba35-118">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="7ba35-119">Если сообщение не сопоставлена к этому моменту, она попадает в Service Bus, чтобы выбрать с помощью следующей операции получения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-119">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="7ba35-120">`ReceiveMode.receiveAndDelete`: Сообщения, полученные в этом режиме автоматически удаляются из служебной шины.</span><span class="sxs-lookup"><span data-stu-id="7ba35-120">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-121">Создает приемник для получения сообщений из сеанса с поддержкой подписки.</span><span class="sxs-lookup"><span data-stu-id="7ba35-121">Creates a Receiver for receiving messages from a session enabled Subscription.</span></span> <span data-ttu-id="7ba35-122">При sessionId не указан, используется случайное сеанса среди доступных сеансов.</span><span class="sxs-lookup"><span data-stu-id="7ba35-122">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="7ba35-123">Вызывает ошибку, если приемник открыть уже существует для указанного sessionId.</span><span class="sxs-lookup"><span data-stu-id="7ba35-123">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="7ba35-124">Создает `SessionCannotBeLockedError` Если подписка не поддерживает сеансы отключены (в этом случае не следует передавать `sessionOptions` аргумент) или если служебной шины не может получить блокировку сеанса (в которых вариантов повторите попытку через некоторое время)</span><span class="sxs-lookup"><span data-stu-id="7ba35-124">Throws `SessionCannotBeLockedError` if the Subscription does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="7ba35-125">Перечисление, указывающее режим, в котором должны быть получены сообщения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-125">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="7ba35-126">Возможные значения:</span><span class="sxs-lookup"><span data-stu-id="7ba35-126">Possible values are:</span></span>
            - <span data-ttu-id="7ba35-127">`ReceiveMode.peekLock`: После получения сообщения в этом режиме получатель имеет блокировку на сообщение в течение определенного периода времени.</span><span class="sxs-lookup"><span data-stu-id="7ba35-127">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="7ba35-128">Если сообщение не сопоставлена к этому моменту, она попадает в Service Bus, чтобы выбрать с помощью следующей операции получения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-128">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="7ba35-129">`ReceiveMode.receiveAndDelete`: Сообщения, полученные в этом режиме автоматически удаляются из служебной шины.</span><span class="sxs-lookup"><span data-stu-id="7ba35-129">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="7ba35-130">Параметры для обеспечения получателя сеанса sessionId и продолжительность блокировки автоматического обновления.</span><span class="sxs-lookup"><span data-stu-id="7ba35-130">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.defaultRuleName'
    name: defaultRuleName
    fullName: defaultRuleName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7ba35-131">Имя правила по умолчанию для подписки.</span><span class="sxs-lookup"><span data-stu-id="7ba35-131">The name of the default rule on the subscription.</span></span>
    syntax:
      content: 'defaultRuleName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7ba35-132">Путь к подписку служебной шины, для которого создается этот клиент.</span><span class="sxs-lookup"><span data-stu-id="7ba35-132">The path for the Service Bus Subscription for which this client is created.</span></span>'
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.getRules'
    name: getRules()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="7ba35-133">Возвращает все правила, связанные с подпиской</span><span class="sxs-lookup"><span data-stu-id="7ba35-133">Gets all rules associated with the subscription</span></span>'
    syntax:
      content: function getRules()
      parameters: []
      return:
        type:
          - 'Promise<@azure/service-bus.RuleDescription[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="7ba35-134">Уникальный идентификатор для данного клиента.</span><span class="sxs-lookup"><span data-stu-id="7ba35-134">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-135">Извлекает следующий пакет активных сообщений (включая отложенный но не deadlettered сообщения).</span><span class="sxs-lookup"><span data-stu-id="7ba35-135">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="7ba35-136">Первый вызов `peek()` получает первое сообщение active.</span><span class="sxs-lookup"><span data-stu-id="7ba35-136">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="7ba35-137">Каждый последующий вызов извлекает следующее сообщение.</span><span class="sxs-lookup"><span data-stu-id="7ba35-137">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="7ba35-138">В отличие от `received` сообщение, `peeked` сообщения является версией только для чтения сообщения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-138">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="7ba35-139">Он не может быть `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="7ba35-139">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="7ba35-140">Не удалось обновить блокировку на нем.</span><span class="sxs-lookup"><span data-stu-id="7ba35-140">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-141">Считывает требуемое число активных сообщений (включая отложенный но не сообщения deadlettered) из указанного порядкового номера.</span><span class="sxs-lookup"><span data-stu-id="7ba35-141">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="7ba35-142">В отличие от `received` сообщение, `peeked` сообщения является версией только для чтения сообщения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-142">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="7ba35-143">Он не может быть `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="7ba35-143">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="7ba35-144">Не удалось обновить блокировку на нем.</span><span class="sxs-lookup"><span data-stu-id="7ba35-144">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: '<span data-ttu-id="7ba35-145">Порядковый номер, с которого следует прочитать сообщение.</span><span class="sxs-lookup"><span data-stu-id="7ba35-145">The sequence number from where to read the message.</span></span>'
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.removeRule'
    name: removeRule(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="7ba35-146">Удаление правила в подписке, идентифицируемое по его имени данного правила.</span><span class="sxs-lookup"><span data-stu-id="7ba35-146">Removes the rule on the subscription identified by the given rule name.</span></span>
      <span data-ttu-id="7ba35-147">**Внимание**: Если удаляются все правила в подписке, подписка не получит сообщения.</span><span class="sxs-lookup"><span data-stu-id="7ba35-147">**Caution**: If all rules on a subscription are removed, then the subscription will not receive any more messages.</span></span>
    syntax:
      content: 'function removeRule(ruleName: string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7ba35-148">Имя в подписке служебной шины, для которого создается этот клиент.</span><span class="sxs-lookup"><span data-stu-id="7ba35-148">The name of the Service Bus Subscription for which this client is created.</span></span>'
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="7ba35-149">Имя раздела служебной шины, для которого подписки, создается этот клиент.</span><span class="sxs-lookup"><span data-stu-id="7ba35-149">The name of the Service Bus Topic for whose Subscription, this client is created.</span></span>'
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: boolean | string | @azure/service-bus.CorrelationFilter
    name: CorrelationFilter
    spec.typeScript:
      - name: 'boolean | string | '
        fullName: 'boolean | string | '
      - name: CorrelationFilter
        fullName: CorrelationFilter
        uid: '@azure/service-bus.CorrelationFilter'
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: 'Promise<@azure/service-bus.RuleDescription[]>'
    name: 'RuleDescription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'