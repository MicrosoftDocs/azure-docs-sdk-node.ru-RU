### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm'
    name: ListManagementTerm
    fullName: ListManagementTerm
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="74425-101">Класс, представляющий ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="74425-101">Class representing a ListManagementTerm.</span></span>'
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
    name: 'addTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="74425-102">Добавьте условие в список термин с идентификатором, равным списка переданный идентификатор списка.</span><span class="sxs-lookup"><span data-stu-id="74425-102">Add a term to the term list with list Id equal to list Id passed.</span></span>'
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-103">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-103">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-104">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-104">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-105">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-105">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
    name: 'addTerm(string, string, string, RequestOptionsBase, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-106">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-106">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-107">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-107">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-108">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-108">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="74425-109">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="74425-109">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="74425-110">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-110">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
    name: 'addTerm(string, string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-111">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-111">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-112">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-112">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-113">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-113">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="74425-114">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-114">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
    name: 'deleteAllTerms(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="74425-115">Удаляет все условия из списка со списком идентификатор равен списку переданный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="74425-115">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-116">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-116">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-117">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-117">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
    name: 'deleteAllTerms(string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-118">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-118">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-119">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-119">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="74425-120">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="74425-120">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="74425-121">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-121">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
    name: 'deleteAllTerms(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-122">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-122">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-123">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-123">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="74425-124">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-124">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
    name: 'deleteTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="74425-125">Удаляет условие из списка со списком идентификатор равен списку переданный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="74425-125">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-126">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-126">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-127">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-127">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-128">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-128">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
    name: 'deleteTerm(string, string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-129">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-129">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-130">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-130">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-131">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-131">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="74425-132">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="74425-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="74425-133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-133">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
    name: 'deleteTerm(string, string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-134">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-134">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="74425-135">Термин для удаления</span><span class="sxs-lookup"><span data-stu-id="74425-135">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-136">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-136">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="74425-137">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-137">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
    name: 'getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options: ListManagementTermGetAllTermsOptionalParams, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-138">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-138">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-139">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-139">Language of the terms.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
          description: <span data-ttu-id="74425-140">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="74425-140">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="74425-141">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-141">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
    name: 'getAllTerms(string, string, Models.ListManagementTermGetAllTermsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="74425-142">Получает все условия из списка со списком идентификатор равен списку переданный идентификатор.</span><span class="sxs-lookup"><span data-stu-id="74425-142">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-143">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-143">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-144">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-144">Language of the terms.</span></span>
        - id: options
          type:
            - Models.ListManagementTermGetAllTermsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
    name: 'getAllTerms(string, string, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="74425-145">Список идентификатор списка изображений.</span><span class="sxs-lookup"><span data-stu-id="74425-145">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="74425-146">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="74425-146">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="74425-147">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="74425-147">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    name: ListManagementTerm(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="74425-148">Создайте ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="74425-148">Create a ListManagementTerm.</span></span>
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="74425-149">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="74425-149">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
    name: Terms>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Terms
        fullName: Terms
        uid: '@azure/cognitiveservices-contentmoderator.Terms'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
    name: ListManagementTermGetAllTermsOptionalParams
    spec.typeScript:
      - name: ListManagementTermGetAllTermsOptionalParams
        fullName: ListManagementTermGetAllTermsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'