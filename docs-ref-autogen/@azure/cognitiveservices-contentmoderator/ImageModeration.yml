### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration'
    name: ImageModeration
    fullName: ImageModeration
    children:
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.constructor'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий ImageModeration.'
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2'
    name: 'evaluateFileInput(msRest.HttpRequestBody, ImageModerationEvaluateFileInputOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationEvaluateFileInputOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput'
    name: 'evaluateFileInput(msRest.HttpRequestBody, Models.ImageModerationEvaluateFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.'
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationEvaluateFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - Models.ImageModerationEvaluateFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1'
    name: 'evaluateFileInput(msRest.HttpRequestBody, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2'
    name: 'evaluateMethod(ImageModerationEvaluateMethodOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateMethod(options: ImageModerationEvaluateMethodOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod'
    name: evaluateMethod(Models.ImageModerationEvaluateMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.'
    syntax:
      content: 'function evaluateMethod(options?: Models.ImageModerationEvaluateMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationEvaluateMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1'
    name: evaluateMethod(ServiceCallback<Evaluate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateMethod(callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2'
    name: 'evaluateUrlInput(string, BodyModel, ImageModerationEvaluateUrlInputOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationEvaluateUrlInputOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput'
    name: 'evaluateUrlInput(string, BodyModel, Models.ImageModerationEvaluateUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.'
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationEvaluateUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - Models.ImageModerationEvaluateUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1'
    name: 'evaluateUrlInput(string, BodyModel, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_2'
    name: 'findFaces(ImageModerationFindFacesOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFaces(options: ImageModerationFindFacesOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces'
    name: findFaces(Models.ImageModerationFindFacesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает список лиц найти.
    syntax:
      content: 'function findFaces(options?: Models.ImageModerationFindFacesOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationFindFacesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_1'
    name: findFaces(ServiceCallback<FoundFaces>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFaces(callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2'
    name: 'findFacesFileInput(msRest.HttpRequestBody, ImageModerationFindFacesFileInputOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationFindFacesFileInputOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput'
    name: 'findFacesFileInput(msRest.HttpRequestBody, Models.ImageModerationFindFacesFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает список лиц найти.
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationFindFacesFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - Models.ImageModerationFindFacesFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1'
    name: 'findFacesFileInput(msRest.HttpRequestBody, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2'
    name: 'findFacesUrlInput(string, BodyModel, ImageModerationFindFacesUrlInputOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationFindFacesUrlInputOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput'
    name: 'findFacesUrlInput(string, BodyModel, Models.ImageModerationFindFacesUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Возвращает список лиц найти.
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationFindFacesUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - Models.ImageModerationFindFacesUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1'
    name: 'findFacesUrlInput(string, BodyModel, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.constructor'
    name: ImageModeration(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте ImageModeration.
    syntax:
      content: 'new ImageModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2'
    name: 'matchFileInput(msRest.HttpRequestBody, ImageModerationMatchFileInputOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationMatchFileInputOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput'
    name: 'matchFileInput(msRest.HttpRequestBody, Models.ImageModerationMatchFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Соответствуют соответствует изображения для одного из пользовательского образа перечислены. Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.
      Возвращает идентификатор и тегами соответствующий образ.<br/>
      <br/>
      Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationMatchFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - Models.ImageModerationMatchFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1'
    name: 'matchFileInput(msRest.HttpRequestBody, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_2'
    name: 'matchMethod(ImageModerationMatchMethodOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchMethod(options: ImageModerationMatchMethodOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod'
    name: matchMethod(Models.ImageModerationMatchMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Соответствуют соответствует изображения для одного из пользовательского образа перечислены. Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.
      Возвращает идентификатор и тегами соответствующий образ.<br/>
      <br/>
      Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.
    syntax:
      content: 'function matchMethod(options?: Models.ImageModerationMatchMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationMatchMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_1'
    name: matchMethod(ServiceCallback<MatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchMethod(callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2'
    name: 'matchUrlInput(string, BodyModel, ImageModerationMatchUrlInputOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationMatchUrlInputOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput'
    name: 'matchUrlInput(string, BodyModel, Models.ImageModerationMatchUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Соответствуют соответствует изображения для одного из пользовательского образа перечислены. Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.
      Возвращает идентификатор и тегами соответствующий образ.<br/>
      <br/>
      Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationMatchUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - Models.ImageModerationMatchUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1'
    name: 'matchUrlInput(string, BodyModel, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, ImageModerationOCRFileInputOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options: ImageModerationOCRFileInputOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, Models.ImageModerationOCRFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает текст найден для языка, указанного в изображении. Если язык не указан во входных данных обнаружения по умолчанию используется английский.'
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationOCRFileInputOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: options
          type:
            - Models.ImageModerationOCRFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: Файл изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2'
    name: 'oCRMethod(string, ImageModerationOCRMethodOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRMethod(language: string, options: ImageModerationOCRMethodOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod'
    name: 'oCRMethod(string, Models.ImageModerationOCRMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает текст найден для языка, указанного в изображении. Если язык не указан во входных данных обнаружения по умолчанию используется английский.'
    syntax:
      content: 'function oCRMethod(language: string, options?: Models.ImageModerationOCRMethodOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: options
          type:
            - Models.ImageModerationOCRMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1'
    name: 'oCRMethod(string, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRMethod(language: string, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2'
    name: 'oCRUrlInput(string, string, BodyModel, ImageModerationOCRUrlInputOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options: ImageModerationOCRUrlInputOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput'
    name: 'oCRUrlInput(string, string, BodyModel, Models.ImageModerationOCRUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Возвращает текст найден для языка, указанного в изображении. Если язык не указан во входных данных обнаружения по умолчанию используется английский.'
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationOCRUrlInputOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: options
          type:
            - Models.ImageModerationOCRUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1'
    name: 'oCRUrlInput(string, string, BodyModel, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: Язык условия.
        - id: contentType
          type:
            - string
          description: Тип содержимого.
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: URL-адрес изображения.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
    name: Evaluate>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Evaluate
        fullName: Evaluate
        uid: '@azure/cognitiveservices-contentmoderator.Evaluate'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
    name: ImageModerationEvaluateFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateFileInputOptionalParams
        fullName: ImageModerationEvaluateFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
    name: ImageModerationEvaluateMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateMethodOptionalParams
        fullName: ImageModerationEvaluateMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.BodyModel'
    name: BodyModel
    spec.typeScript:
      - name: BodyModel
        fullName: BodyModel
        uid: '@azure/cognitiveservices-contentmoderator.BodyModel'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
    name: ImageModerationEvaluateUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateUrlInputOptionalParams
        fullName: ImageModerationEvaluateUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
    name: FoundFaces>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FoundFaces
        fullName: FoundFaces
        uid: '@azure/cognitiveservices-contentmoderator.FoundFaces'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
    name: ImageModerationFindFacesOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesOptionalParams
        fullName: ImageModerationFindFacesOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
    name: ImageModerationFindFacesFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesFileInputOptionalParams
        fullName: ImageModerationFindFacesFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
    name: ImageModerationFindFacesUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesUrlInputOptionalParams
        fullName: ImageModerationFindFacesUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
    name: MatchResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MatchResponse
        fullName: MatchResponse
        uid: '@azure/cognitiveservices-contentmoderator.MatchResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
    name: ImageModerationMatchFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchFileInputOptionalParams
        fullName: ImageModerationMatchFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
    name: ImageModerationMatchMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchMethodOptionalParams
        fullName: ImageModerationMatchMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
    name: ImageModerationMatchUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchUrlInputOptionalParams
        fullName: ImageModerationMatchUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
    name: OCR>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OCR
        fullName: OCR
        uid: '@azure/cognitiveservices-contentmoderator.OCR'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
    name: ImageModerationOCRFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRFileInputOptionalParams
        fullName: ImageModerationOCRFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
    name: ImageModerationOCRMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRMethodOptionalParams
        fullName: ImageModerationOCRMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'
    name: ImageModerationOCRUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRUrlInputOptionalParams
        fullName: ImageModerationOCRUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'