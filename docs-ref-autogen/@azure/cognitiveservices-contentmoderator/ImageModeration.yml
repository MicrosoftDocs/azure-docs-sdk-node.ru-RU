### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration'
    name: ImageModeration
    fullName: ImageModeration
    children:
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.constructor'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput'
      - '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="d3d7f-101">Класс, представляющий ImageModeration.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-101">Class representing a ImageModeration.</span></span>'
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_2'
    name: 'evaluateFileInput(msRest.HttpRequestBody, ImageModerationEvaluateFileInputOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationEvaluateFileInputOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-102">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-102">The image file.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
          description: <span data-ttu-id="d3d7f-103">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-103">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-104">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-104">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput'
    name: 'evaluateFileInput(msRest.HttpRequestBody, Models.ImageModerationEvaluateFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-105">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-105">Returns probabilities of the image containing racy or adult content.</span></span>'
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationEvaluateFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-106">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-106">The image file.</span></span>
        - id: options
          type:
            - Models.ImageModerationEvaluateFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput_1'
    name: 'evaluateFileInput(msRest.HttpRequestBody, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-107">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-107">The image file.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-108">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-108">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_2'
    name: 'evaluateMethod(ImageModerationEvaluateMethodOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateMethod(options: ImageModerationEvaluateMethodOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
          description: <span data-ttu-id="d3d7f-109">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-109">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-110">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-110">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod'
    name: evaluateMethod(Models.ImageModerationEvaluateMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-111">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-111">Returns probabilities of the image containing racy or adult content.</span></span>'
    syntax:
      content: 'function evaluateMethod(options?: Models.ImageModerationEvaluateMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationEvaluateMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateMethod_1'
    name: evaluateMethod(ServiceCallback<Evaluate>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateMethod(callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-112">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-112">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_2'
    name: 'evaluateUrlInput(string, BodyModel, ImageModerationEvaluateUrlInputOptionalParams, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationEvaluateUrlInputOptionalParams, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-113">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-113">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-114">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-114">The image url.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
          description: <span data-ttu-id="d3d7f-115">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-115">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-116">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-116">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput'
    name: 'evaluateUrlInput(string, BodyModel, Models.ImageModerationEvaluateUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-117">Возвращает вероятности из образа, содержащего материалов непристойного характера взрослых.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-117">Returns probabilities of the image containing racy or adult content.</span></span>'
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationEvaluateUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-118">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-118">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-119">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-119">The image url.</span></span>
        - id: options
          type:
            - Models.ImageModerationEvaluateUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput_1'
    name: 'evaluateUrlInput(string, BodyModel, ServiceCallback<Evaluate>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluateUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<Evaluate>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-120">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-120">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-121">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-121">The image url.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
          description: |
            <span data-ttu-id="d3d7f-122">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-122">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationEvaluateUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_2'
    name: 'findFaces(ImageModerationFindFacesOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFaces(options: ImageModerationFindFacesOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
          description: <span data-ttu-id="d3d7f-123">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-123">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-124">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-124">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces'
    name: findFaces(Models.ImageModerationFindFacesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d3d7f-125">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-125">Returns the list of faces found.</span></span>
    syntax:
      content: 'function findFaces(options?: Models.ImageModerationFindFacesOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationFindFacesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFaces_1'
    name: findFaces(ServiceCallback<FoundFaces>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFaces(callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-126">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-126">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_2'
    name: 'findFacesFileInput(msRest.HttpRequestBody, ImageModerationFindFacesFileInputOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationFindFacesFileInputOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-127">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-127">The image file.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
          description: <span data-ttu-id="d3d7f-128">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-128">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-129">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-129">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput'
    name: 'findFacesFileInput(msRest.HttpRequestBody, Models.ImageModerationFindFacesFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d3d7f-130">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-130">Returns the list of faces found.</span></span>
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationFindFacesFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-131">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-131">The image file.</span></span>
        - id: options
          type:
            - Models.ImageModerationFindFacesFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput_1'
    name: 'findFacesFileInput(msRest.HttpRequestBody, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-132">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-132">The image file.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-133">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-133">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_2'
    name: 'findFacesUrlInput(string, BodyModel, ImageModerationFindFacesUrlInputOptionalParams, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationFindFacesUrlInputOptionalParams, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-134">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-134">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-135">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-135">The image url.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
          description: <span data-ttu-id="d3d7f-136">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-136">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-137">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-137">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput'
    name: 'findFacesUrlInput(string, BodyModel, Models.ImageModerationFindFacesUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d3d7f-138">Возвращает список лиц найти.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-138">Returns the list of faces found.</span></span>
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationFindFacesUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-139">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-139">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-140">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-140">The image url.</span></span>
        - id: options
          type:
            - Models.ImageModerationFindFacesUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput_1'
    name: 'findFacesUrlInput(string, BodyModel, ServiceCallback<FoundFaces>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findFacesUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<FoundFaces>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-141">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-141">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-142">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-142">The image url.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
          description: |
            <span data-ttu-id="d3d7f-143">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-143">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationFindFacesUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.constructor'
    name: ImageModeration(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d3d7f-144">Создайте ImageModeration.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-144">Create a ImageModeration.</span></span>
    syntax:
      content: 'new ImageModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="d3d7f-145">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-145">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_2'
    name: 'matchFileInput(msRest.HttpRequestBody, ImageModerationMatchFileInputOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, options: ImageModerationMatchFileInputOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-146">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-146">The image file.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
          description: <span data-ttu-id="d3d7f-147">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-147">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-148">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-148">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput'
    name: 'matchFileInput(msRest.HttpRequestBody, Models.ImageModerationMatchFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d3d7f-149">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-149">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="d3d7f-150">Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-150">You can create and manage your custom image lists using <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>
      <span data-ttu-id="d3d7f-151">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-151">Returns ID and tags of matching image.</span></span><br/>
      <br/>
      <span data-ttu-id="d3d7f-152">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-152">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationMatchFileInputOptionalParams)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-153">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-153">The image file.</span></span>
        - id: options
          type:
            - Models.ImageModerationMatchFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchFileInput_1'
    name: 'matchFileInput(msRest.HttpRequestBody, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchFileInput(imageStream: msRest.HttpRequestBody, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-154">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-154">The image file.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-155">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-155">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_2'
    name: 'matchMethod(ImageModerationMatchMethodOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchMethod(options: ImageModerationMatchMethodOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
          description: <span data-ttu-id="d3d7f-156">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-156">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-157">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-157">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod'
    name: matchMethod(Models.ImageModerationMatchMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d3d7f-158">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-158">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="d3d7f-159">Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-159">You can create and manage your custom image lists using <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>
      <span data-ttu-id="d3d7f-160">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-160">Returns ID and tags of matching image.</span></span><br/>
      <br/>
      <span data-ttu-id="d3d7f-161">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-161">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
    syntax:
      content: 'function matchMethod(options?: Models.ImageModerationMatchMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ImageModerationMatchMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchMethod_1'
    name: matchMethod(ServiceCallback<MatchResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchMethod(callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-162">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_2'
    name: 'matchUrlInput(string, BodyModel, ImageModerationMatchUrlInputOptionalParams, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options: ImageModerationMatchUrlInputOptionalParams, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-163">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-163">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-164">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-164">The image url.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
          description: <span data-ttu-id="d3d7f-165">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-165">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-166">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-166">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput'
    name: 'matchUrlInput(string, BodyModel, Models.ImageModerationMatchUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d3d7f-167">Соответствуют соответствует изображения для одного из пользовательского образа перечислены.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-167">Fuzzily match an image against one of your custom Image Lists.</span></span> <span data-ttu-id="d3d7f-168">Можно создавать и управлять списками пользовательский образ с помощью <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">это</a> API.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-168">You can create and manage your custom image lists using <a
      href="/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe">this</a> API.</span></span>
      <span data-ttu-id="d3d7f-169">Возвращает идентификатор и тегами соответствующий образ.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-169">Returns ID and tags of matching image.</span></span><br/>
      <br/>
      <span data-ttu-id="d3d7f-170">Примечание. Обновить индекс должен запускаться на соответствующий список изображений до добавления и удаления, отражаются в ответе.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-170">Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.</span></span>
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationMatchUrlInputOptionalParams)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-171">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-171">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-172">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-172">The image url.</span></span>
        - id: options
          type:
            - Models.ImageModerationMatchUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.matchUrlInput_1'
    name: 'matchUrlInput(string, BodyModel, ServiceCallback<MatchResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function matchUrlInput(contentType: string, imageUrl: BodyModel, callback: ServiceCallback<MatchResponse>)'
      parameters:
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-173">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-173">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-174">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-174">The image url.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
          description: |
            <span data-ttu-id="d3d7f-175">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-175">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationMatchUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_2'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, ImageModerationOCRFileInputOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options: ImageModerationOCRFileInputOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-176">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-176">Language of the terms.</span></span>
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-177">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-177">The image file.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
          description: <span data-ttu-id="d3d7f-178">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-178">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-179">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-179">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, Models.ImageModerationOCRFileInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-180">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-180">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="d3d7f-181">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-181">If no language is specified in input then the detection defaults to English.</span></span>'
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationOCRFileInputOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-182">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-182">Language of the terms.</span></span>
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-183">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-183">The image file.</span></span>
        - id: options
          type:
            - Models.ImageModerationOCRFileInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRFileInput_1'
    name: 'oCRFileInput(string, msRest.HttpRequestBody, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-184">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-184">Language of the terms.</span></span>
        - id: imageStream
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="d3d7f-185">Файл изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-185">The image file.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-186">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-186">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRFileInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_2'
    name: 'oCRMethod(string, ImageModerationOCRMethodOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRMethod(language: string, options: ImageModerationOCRMethodOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-187">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-187">Language of the terms.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
          description: <span data-ttu-id="d3d7f-188">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-188">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-189">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-189">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod'
    name: 'oCRMethod(string, Models.ImageModerationOCRMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-190">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-190">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="d3d7f-191">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-191">If no language is specified in input then the detection defaults to English.</span></span>'
    syntax:
      content: 'function oCRMethod(language: string, options?: Models.ImageModerationOCRMethodOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-192">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-192">Language of the terms.</span></span>
        - id: options
          type:
            - Models.ImageModerationOCRMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRMethod_1'
    name: 'oCRMethod(string, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRMethod(language: string, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-193">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-193">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-194">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-194">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRMethodResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_2'
    name: 'oCRUrlInput(string, string, BodyModel, ImageModerationOCRUrlInputOptionalParams, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options: ImageModerationOCRUrlInputOptionalParams, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-195">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-195">Language of the terms.</span></span>
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-196">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-196">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-197">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-197">The image url.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'
          description: <span data-ttu-id="d3d7f-198">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="d3d7f-198">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-199">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-199">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput'
    name: 'oCRUrlInput(string, string, BodyModel, Models.ImageModerationOCRUrlInputOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="d3d7f-200">Возвращает текст найден для языка, указанного в изображении.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-200">Returns any text found in the image for the language specified.</span></span> <span data-ttu-id="d3d7f-201">Если язык не указан во входных данных обнаружения по умолчанию используется английский.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-201">If no language is specified in input then the detection defaults to English.</span></span>'
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, options?: Models.ImageModerationOCRUrlInputOptionalParams)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-202">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-202">Language of the terms.</span></span>
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-203">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-203">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-204">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-204">The image url.</span></span>
        - id: options
          type:
            - Models.ImageModerationOCRUrlInputOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput_1'
    name: 'oCRUrlInput(string, string, BodyModel, ServiceCallback<OCR>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function oCRUrlInput(language: string, contentType: string, imageUrl: BodyModel, callback: ServiceCallback<OCR>)'
      parameters:
        - id: language
          type:
            - string
          description: <span data-ttu-id="d3d7f-205">Язык условия.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-205">Language of the terms.</span></span>
        - id: contentType
          type:
            - string
          description: <span data-ttu-id="d3d7f-206">Тип содержимого.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-206">The content type.</span></span>
        - id: imageUrl
          type:
            - '@azure/cognitiveservices-contentmoderator.BodyModel'
          description: <span data-ttu-id="d3d7f-207">URL-адрес изображения.</span><span class="sxs-lookup"><span data-stu-id="d3d7f-207">The image url.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
          description: |
            <span data-ttu-id="d3d7f-208">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="d3d7f-208">The callback</span></span>
      return:
        type:
          - Promise<Models.ImageModerationOCRUrlInputResponse>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Evaluate>
    name: Evaluate>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Evaluate
        fullName: Evaluate
        uid: '@azure/cognitiveservices-contentmoderator.Evaluate'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
    name: ImageModerationEvaluateFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateFileInputOptionalParams
        fullName: ImageModerationEvaluateFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
    name: ImageModerationEvaluateMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateMethodOptionalParams
        fullName: ImageModerationEvaluateMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.BodyModel'
    name: BodyModel
    spec.typeScript:
      - name: BodyModel
        fullName: BodyModel
        uid: '@azure/cognitiveservices-contentmoderator.BodyModel'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
    name: ImageModerationEvaluateUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationEvaluateUrlInputOptionalParams
        fullName: ImageModerationEvaluateUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationEvaluateUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.FoundFaces>
    name: FoundFaces>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FoundFaces
        fullName: FoundFaces
        uid: '@azure/cognitiveservices-contentmoderator.FoundFaces'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
    name: ImageModerationFindFacesOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesOptionalParams
        fullName: ImageModerationFindFacesOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
    name: ImageModerationFindFacesFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesFileInputOptionalParams
        fullName: ImageModerationFindFacesFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
    name: ImageModerationFindFacesUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationFindFacesUrlInputOptionalParams
        fullName: ImageModerationFindFacesUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationFindFacesUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.MatchResponse>
    name: MatchResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: MatchResponse
        fullName: MatchResponse
        uid: '@azure/cognitiveservices-contentmoderator.MatchResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
    name: ImageModerationMatchFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchFileInputOptionalParams
        fullName: ImageModerationMatchFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
    name: ImageModerationMatchMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchMethodOptionalParams
        fullName: ImageModerationMatchMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
    name: ImageModerationMatchUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationMatchUrlInputOptionalParams
        fullName: ImageModerationMatchUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationMatchUrlInputOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.OCR>
    name: OCR>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OCR
        fullName: OCR
        uid: '@azure/cognitiveservices-contentmoderator.OCR'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
    name: ImageModerationOCRFileInputOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRFileInputOptionalParams
        fullName: ImageModerationOCRFileInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRFileInputOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
    name: ImageModerationOCRMethodOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRMethodOptionalParams
        fullName: ImageModerationOCRMethodOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRMethodOptionalParams'
  - uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'
    name: ImageModerationOCRUrlInputOptionalParams
    spec.typeScript:
      - name: ImageModerationOCRUrlInputOptionalParams
        fullName: ImageModerationOCRUrlInputOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ImageModerationOCRUrlInputOptionalParams'