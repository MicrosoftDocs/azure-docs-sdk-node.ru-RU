### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-policy.PolicyAssignments'
    name: PolicyAssignments
    fullName: PolicyAssignments
    children:
      - '@azure/arm-policy.PolicyAssignments.create'
      - '@azure/arm-policy.PolicyAssignments.create_2'
      - '@azure/arm-policy.PolicyAssignments.create_1'
      - '@azure/arm-policy.PolicyAssignments.createById'
      - '@azure/arm-policy.PolicyAssignments.createById_2'
      - '@azure/arm-policy.PolicyAssignments.createById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteById'
      - '@azure/arm-policy.PolicyAssignments.deleteById_2'
      - '@azure/arm-policy.PolicyAssignments.deleteById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
      - '@azure/arm-policy.PolicyAssignments.get'
      - '@azure/arm-policy.PolicyAssignments.get_2'
      - '@azure/arm-policy.PolicyAssignments.get_1'
      - '@azure/arm-policy.PolicyAssignments.getById'
      - '@azure/arm-policy.PolicyAssignments.getById_2'
      - '@azure/arm-policy.PolicyAssignments.getById_1'
      - '@azure/arm-policy.PolicyAssignments.list'
      - '@azure/arm-policy.PolicyAssignments.list_2'
      - '@azure/arm-policy.PolicyAssignments.list_1'
      - '@azure/arm-policy.PolicyAssignments.listForResource'
      - '@azure/arm-policy.PolicyAssignments.listForResource_2'
      - '@azure/arm-policy.PolicyAssignments.listForResource_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
      - '@azure/arm-policy.PolicyAssignments.listNext'
      - '@azure/arm-policy.PolicyAssignments.listNext_2'
      - '@azure/arm-policy.PolicyAssignments.listNext_1'
      - '@azure/arm-policy.PolicyAssignments.constructor'
    langs:
      - typeScript
    type: class
    summary: '<span data-ttu-id="163fc-101">Класс, представляющий PolicyAssignments.</span><span class="sxs-lookup"><span data-stu-id="163fc-101">Class representing a PolicyAssignments.</span></span>'
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create'
    name: 'create(string, string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-102">Эта операция создает или обновляет назначение политики с заданной области и именем.</span><span class="sxs-lookup"><span data-stu-id="163fc-102">This operation creates or updates a policy assignment with the given scope and name.</span></span> <span data-ttu-id="163fc-103">Назначения политик применяются ко всем ресурсам, содержащихся в своей области.</span><span class="sxs-lookup"><span data-stu-id="163fc-103">Policy assignments apply to all resources contained within their scope.</span></span> <span data-ttu-id="163fc-104">Например, при назначении политики в области действия группы ресурсов, что политика применяется ко всем ресурсам в группе.</span><span class="sxs-lookup"><span data-stu-id="163fc-104">For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.</span></span>'
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-105">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-105">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-106">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-106">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-107">Имя назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-107">The name of the policy assignment.</span></span>
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-108">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-108">Parameters for the policy assignment.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_2'
    name: 'create(string, string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-109">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-109">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-110">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-110">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-111">Имя назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-111">The name of the policy assignment.</span></span>
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-112">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-112">Parameters for the policy assignment.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-113">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-113">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-114">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-114">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_1'
    name: 'create(string, string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-115">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-115">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-116">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-116">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-117">Имя назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-117">The name of the policy assignment.</span></span>
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-118">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-118">Parameters for the policy assignment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-119">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-119">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById'
    name: 'createById(string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-120">Эта операция создает или обновляет назначение политики с заданным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="163fc-120">This operation creates or updates the policy assignment with the given ID.</span></span> <span data-ttu-id="163fc-121">Назначения политик в области применяются ко всем ресурсам, содержащихся в этой области.</span><span class="sxs-lookup"><span data-stu-id="163fc-121">Policy assignments made on a scope apply to all resources contained in that scope.</span></span> <span data-ttu-id="163fc-122">Например, при назначении политики к группе ресурсов, политика применяется ко всем ресурсам в группе.</span><span class="sxs-lookup"><span data-stu-id="163fc-122">For example, when you assign a policy to a resource group that policy applies to all resources in the group.</span></span> <span data-ttu-id="163fc-123">Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-123">Policy assignment IDs have this format: ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span> <span data-ttu-id="163fc-124">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} ".</span><span class="sxs-lookup"><span data-stu-id="163fc-124">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''.</span></span>'
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-125">Идентификатор назначения политики для создания.</span><span class="sxs-lookup"><span data-stu-id="163fc-125">The ID of the policy assignment to create.</span></span> <span data-ttu-id="163fc-126">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-126">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-127">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-127">Parameters for policy assignment.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_2'
    name: 'createById(string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-128">Идентификатор назначения политики для создания.</span><span class="sxs-lookup"><span data-stu-id="163fc-128">The ID of the policy assignment to create.</span></span> <span data-ttu-id="163fc-129">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-129">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-130">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-130">Parameters for policy assignment.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-131">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-131">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-132">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-132">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_1'
    name: 'createById(string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-133">Идентификатор назначения политики для создания.</span><span class="sxs-lookup"><span data-stu-id="163fc-133">The ID of the policy assignment to create.</span></span> <span data-ttu-id="163fc-134">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-134">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: <span data-ttu-id="163fc-135">Параметры для назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-135">Parameters for policy assignment.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-136">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-136">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById'
    name: 'deleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-137">Эта операция удаляет политику с заданным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="163fc-137">This operation deletes the policy with the given ID.</span></span> <span data-ttu-id="163fc-138">Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-138">Policy assignment IDs have this format: ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span> <span data-ttu-id="163fc-139">Допустимые форматы для {scope}: "/ providers/Microsoft.Management/managementGroups/{managementGroup}" (группы управления), «/ subscriptions / {subscriptionId}» (подписка), "/ subscriptions / {subscriptionId} /resourceGroups/ {} resourceGroupName} "(группа ресурсов), или" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "(ресурс).</span><span class="sxs-lookup"><span data-stu-id="163fc-139">Valid formats for {scope} are: ''/providers/Microsoft.Management/managementGroups/{managementGroup}'' (management group), ''/subscriptions/{subscriptionId}'' (subscription), ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'' (resource group), or ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'' (resource).</span></span>'
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-140">Идентификатор назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-140">The ID of the policy assignment to delete.</span></span> <span data-ttu-id="163fc-141">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-141">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_2'
    name: 'deleteById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-142">Идентификатор назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-142">The ID of the policy assignment to delete.</span></span> <span data-ttu-id="163fc-143">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-143">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-144">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-144">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-145">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-145">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_1'
    name: 'deleteById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-146">Идентификатор назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-146">The ID of the policy assignment to delete.</span></span> <span data-ttu-id="163fc-147">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-147">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-148">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-148">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-149">Эта операция удаляет назначение политики, по его имени и область, которую он был создан.</span><span class="sxs-lookup"><span data-stu-id="163fc-149">This operation deletes a policy assignment, given its name and the scope it was created in.</span></span> <span data-ttu-id="163fc-150">Область назначения политики является частью его идентификатор предыдущего "/ providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}".</span><span class="sxs-lookup"><span data-stu-id="163fc-150">The scope of a policy assignment is the part of its ID preceding ''/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-151">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-151">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-152">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-152">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-153">Имя назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-153">The name of the policy assignment to delete.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-154">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-154">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-155">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-155">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-156">Имя назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-156">The name of the policy assignment to delete.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-157">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-157">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-158">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-158">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-159">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-159">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-160">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-160">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-161">Имя назначения политики для удаления.</span><span class="sxs-lookup"><span data-stu-id="163fc-161">The name of the policy assignment to delete.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-162">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-162">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-163">Эта операция получает назначение одной политики, по его имени и область, которую он был создан в.</span><span class="sxs-lookup"><span data-stu-id="163fc-163">This operation retrieves a single policy assignment, given its name and the scope it was created at.</span></span>'
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-164">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-164">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-165">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-165">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-166">Имя назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-166">The name of the policy assignment to get.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-167">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-167">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-168">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-168">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-169">Имя назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-169">The name of the policy assignment to get.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-170">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-170">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-171">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-171">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_1'
    name: 'get(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: '<span data-ttu-id="163fc-172">Область назначения политики.</span><span class="sxs-lookup"><span data-stu-id="163fc-172">The scope of the policy assignment.</span></span> <span data-ttu-id="163fc-173">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "</span><span class="sxs-lookup"><span data-stu-id="163fc-173">Valid scopes are: management group (format: ''/providers/Microsoft.Management/managementGroups/{managementGroup}''), subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}''</span></span>'
        - id: policyAssignmentName
          type:
            - string
          description: <span data-ttu-id="163fc-174">Имя назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-174">The name of the policy assignment to get.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-175">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-175">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById'
    name: 'getById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="163fc-176">Операция извлекает назначение политики с заданным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="163fc-176">The operation retrieves the policy assignment with the given ID.</span></span> <span data-ttu-id="163fc-177">Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-177">Policy assignment IDs have this format: '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.</span></span>
      <span data-ttu-id="163fc-178">Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} ".</span><span class="sxs-lookup"><span data-stu-id="163fc-178">Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.</span></span>
    syntax:
      content: 'function getById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-179">Идентификатор назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-179">The ID of the policy assignment to get.</span></span> <span data-ttu-id="163fc-180">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-180">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_2'
    name: 'getById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-181">Идентификатор назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-181">The ID of the policy assignment to get.</span></span> <span data-ttu-id="163fc-182">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-182">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-183">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-183">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-184">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-184">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_1'
    name: 'getById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: '<span data-ttu-id="163fc-185">Идентификатор назначения политики для получения.</span><span class="sxs-lookup"><span data-stu-id="163fc-185">The ID of the policy assignment to get.</span></span> <span data-ttu-id="163fc-186">Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».</span><span class="sxs-lookup"><span data-stu-id="163fc-186">Use the format ''{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}''.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            <span data-ttu-id="163fc-187">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-187">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list'
    name: list(Models.PolicyAssignmentsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-188">Эта операция получает список все назначения политики, связанные с данной подписки, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-188">This operation retrieves the list of all policy assignments associated with the given subscription that match the optional given $filter.</span></span> <span data-ttu-id="163fc-189">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''.</span><span class="sxs-lookup"><span data-stu-id="163fc-189">Valid values for $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''.</span></span> <span data-ttu-id="163fc-190">Если $filter не указано, неотфильтрованный список включает все назначения политики, связанные с подпиской, включая те, которые применяются непосредственно или из групп управления, содержащие данной подписки, в качестве также применяется к объектам внутри подписка.</span><span class="sxs-lookup"><span data-stu-id="163fc-190">If $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription.</span></span> <span data-ttu-id="163fc-191">Если $filter=atScope(), этот список включает все назначения политики, которые применяются для подписки, которая имеет все, что в списке без фильтра, за исключением случаев, применяемые к объектам, содержащимся в пределах подписки.</span><span class="sxs-lookup"><span data-stu-id="163fc-191">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except those applied to objects contained within the subscription.</span></span> <span data-ttu-id="163fc-192">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к подписке и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-192">If $filter=policyDefinitionId eq ''{value}'' is provided, the returned list includes only policy assignments that apply to the subscription and assign the policy definition whose id is {value}.</span></span>'
    syntax:
      content: 'function list(options?: Models.PolicyAssignmentsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PolicyAssignmentsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_2'
    name: 'list(PolicyAssignmentsListOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PolicyAssignmentsListOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
          description: <span data-ttu-id="163fc-193">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-193">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-194">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-194">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_1'
    name: list(ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-195">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-195">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource'
    name: 'listForResource(string, string, string, string, string, Models.PolicyAssignmentsListForResourceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="163fc-196">Эта операция получает список все назначения политики, связанные с указанного ресурса в указанной группе ресурсов и подписке, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-196">This operation retrieves the list of all policy assignments associated with the specified resource in the given resource group and subscription that match the optional given $filter.</span></span>
      <span data-ttu-id="163fc-197">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''.</span><span class="sxs-lookup"><span data-stu-id="163fc-197">Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''.</span></span> <span data-ttu-id="163fc-198">Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с ресурсом, включая те, которые применяются непосредственно или из всех области видимости, как также применяются к ресурсам, содержащимся в нем.</span><span class="sxs-lookup"><span data-stu-id="163fc-198">If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource, including those that apply directly or from all containing scopes, as well as any applied to resources contained within the resource.</span></span> <span data-ttu-id="163fc-199">Если $filter=atScope(), этот список включает все назначения политики, которые применяются к ресурсу, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащимся в нем.</span><span class="sxs-lookup"><span data-stu-id="163fc-199">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource, which is everything in the unfiltered list except those applied to resources contained within the resource.</span></span> <span data-ttu-id="163fc-200">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, применяемых к ресурсу и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-200">If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes only policy assignments that apply to the resource and assign the policy definition whose id is {value}.</span></span>
      <span data-ttu-id="163fc-201">Три параметра, а также имя ресурсов используются для идентификации конкретного ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-201">Three parameters plus the resource name are used to identify a specific resource.</span></span> <span data-ttu-id="163fc-202">Если ресурс не является частью родительского ресурса (более распространенный случай), не должен быть указан путь к родительскому ресурсу (или предоставленного как '').</span><span class="sxs-lookup"><span data-stu-id="163fc-202">If the resource is not part of a parent resource (the more common case), the parent resource path should not be provided (or provided as '').</span></span> <span data-ttu-id="163fc-203">Например можно было указывать веб-приложения ({Пространство_имен_поставщиков_ресурсов} == «Microsoft.Web», {parentResourcePath} == '', {resourceType} == {resourceName} «sites» == «MyWebApp»).</span><span class="sxs-lookup"><span data-stu-id="163fc-203">For example a web app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} == 'MyWebApp').</span></span> <span data-ttu-id="163fc-204">Если ресурс является частью родительского ресурса, необходимо предоставить все параметры.</span><span class="sxs-lookup"><span data-stu-id="163fc-204">If the resource is part of a parent resource, then all parameters should be provided.</span></span> <span data-ttu-id="163fc-205">Например можно было указывать DNS-имя виртуальной машины ({Пространство_имен_поставщиков_ресурсов} == 'Microsoft.Compute', {parentResourcePath} == ' virtualMachines/Моя_виртуальная_машина», {resourceType} == {resourceName} «domainNames» == «MyComputerName»).</span><span class="sxs-lookup"><span data-stu-id="163fc-205">For example a virtual machine DNS name could be specified as ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames', {resourceName} == 'MyComputerName').</span></span> <span data-ttu-id="163fc-206">Является удобной альтернативой отдельно указав имя пространства имен и тип исключать в параметре {resourceType}, форматирования: ({Пространство_имен_поставщиков_ресурсов} == '', {parentResourcePath} == '', {resourceType} == «Microsoft.Web/sites», {} resourceName} == «MyWebApp»).</span><span class="sxs-lookup"><span data-stu-id="163fc-206">A convenient alternative to providing the namespace and type name separately is to provide both in the {resourceType} parameter, format: ({resourceProviderNamespace} == '', {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').</span></span>
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Models.PolicyAssignmentsListForResourceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-207">Имя группы ресурсов, содержащей ресурс.</span><span class="sxs-lookup"><span data-stu-id="163fc-207">The name of the resource group containing the resource.</span></span>'
        - id: resourceProviderNamespace
          type:
            - string
          description: '<span data-ttu-id="163fc-208">Пространство имен поставщика ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163fc-208">The namespace of the resource provider.</span></span> <span data-ttu-id="163fc-209">Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)</span><span class="sxs-lookup"><span data-stu-id="163fc-209">For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)</span></span>'
        - id: parentResourcePath
          type:
            - string
          description: '<span data-ttu-id="163fc-210">Родительский путь к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="163fc-210">The parent resource path.</span></span> <span data-ttu-id="163fc-211">Используйте пустую строку, если такового не имеется.</span><span class="sxs-lookup"><span data-stu-id="163fc-211">Use empty string if there is none.</span></span>'
        - id: resourceType
          type:
            - string
          description: '<span data-ttu-id="163fc-212">Имя типа ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-212">The resource type name.</span></span> <span data-ttu-id="163fc-213">Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).</span><span class="sxs-lookup"><span data-stu-id="163fc-213">For example the type name of a web app is ''sites'' (from Microsoft.Web/sites).</span></span>'
        - id: resourceName
          type:
            - string
          description: <span data-ttu-id="163fc-214">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-214">The name of the resource.</span></span>
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_2'
    name: 'listForResource(string, string, string, string, string, PolicyAssignmentsListForResourceOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: PolicyAssignmentsListForResourceOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-215">Имя группы ресурсов, содержащей ресурс.</span><span class="sxs-lookup"><span data-stu-id="163fc-215">The name of the resource group containing the resource.</span></span>'
        - id: resourceProviderNamespace
          type:
            - string
          description: '<span data-ttu-id="163fc-216">Пространство имен поставщика ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163fc-216">The namespace of the resource provider.</span></span> <span data-ttu-id="163fc-217">Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)</span><span class="sxs-lookup"><span data-stu-id="163fc-217">For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)</span></span>'
        - id: parentResourcePath
          type:
            - string
          description: '<span data-ttu-id="163fc-218">Родительский путь к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="163fc-218">The parent resource path.</span></span> <span data-ttu-id="163fc-219">Используйте пустую строку, если такового не имеется.</span><span class="sxs-lookup"><span data-stu-id="163fc-219">Use empty string if there is none.</span></span>'
        - id: resourceType
          type:
            - string
          description: '<span data-ttu-id="163fc-220">Имя типа ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-220">The resource type name.</span></span> <span data-ttu-id="163fc-221">Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).</span><span class="sxs-lookup"><span data-stu-id="163fc-221">For example the type name of a web app is ''sites'' (from Microsoft.Web/sites).</span></span>'
        - id: resourceName
          type:
            - string
          description: <span data-ttu-id="163fc-222">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-222">The name of the resource.</span></span>
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
          description: <span data-ttu-id="163fc-223">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-223">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-224">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-224">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_1'
    name: 'listForResource(string, string, string, string, string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-225">Имя группы ресурсов, содержащей ресурс.</span><span class="sxs-lookup"><span data-stu-id="163fc-225">The name of the resource group containing the resource.</span></span>'
        - id: resourceProviderNamespace
          type:
            - string
          description: '<span data-ttu-id="163fc-226">Пространство имен поставщика ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163fc-226">The namespace of the resource provider.</span></span> <span data-ttu-id="163fc-227">Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)</span><span class="sxs-lookup"><span data-stu-id="163fc-227">For example, the namespace of a virtual machine is Microsoft.Compute (from Microsoft.Compute/virtualMachines)</span></span>'
        - id: parentResourcePath
          type:
            - string
          description: '<span data-ttu-id="163fc-228">Родительский путь к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="163fc-228">The parent resource path.</span></span> <span data-ttu-id="163fc-229">Используйте пустую строку, если такового не имеется.</span><span class="sxs-lookup"><span data-stu-id="163fc-229">Use empty string if there is none.</span></span>'
        - id: resourceType
          type:
            - string
          description: '<span data-ttu-id="163fc-230">Имя типа ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-230">The resource type name.</span></span> <span data-ttu-id="163fc-231">Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).</span><span class="sxs-lookup"><span data-stu-id="163fc-231">For example the type name of a web app is ''sites'' (from Microsoft.Web/sites).</span></span>'
        - id: resourceName
          type:
            - string
          description: <span data-ttu-id="163fc-232">Имя ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-232">The name of the resource.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-233">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-233">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
    name: 'listForResourceGroup(string, Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-234">Эта операция получает список все назначения политики, связанные с указанной группе ресурсов в данной подписки, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-234">This operation retrieves the list of all policy assignments associated with the given resource group in the given subscription that match the optional given $filter.</span></span> <span data-ttu-id="163fc-235">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''.</span><span class="sxs-lookup"><span data-stu-id="163fc-235">Valid values for $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''.</span></span> <span data-ttu-id="163fc-236">Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с группой ресурсов, включая те, которые применяются непосредственно или применить из области, также применяются к ресурсы, содержащиеся в группе ресурсов, содержащего.</span><span class="sxs-lookup"><span data-stu-id="163fc-236">If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource group, including those that apply directly or apply from containing scopes, as well as any applied to resources contained within the resource group.</span></span> <span data-ttu-id="163fc-237">Если $filter=atScope(), этот список включает все назначения политики, применяемые к группе ресурсов, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащиеся в группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163fc-237">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource group, which is everything in the unfiltered list except those applied to resources contained within the resource group.</span></span> <span data-ttu-id="163fc-238">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к группе ресурсов и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-238">If $filter=policyDefinitionId eq ''{value}'' is provided, the returned list includes only policy assignments that apply to the resource group and assign the policy definition whose id is {value}.</span></span>'
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options?: Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-239">Имя группы ресурсов, содержащий назначения политик.</span><span class="sxs-lookup"><span data-stu-id="163fc-239">The name of the resource group that contains policy assignments.</span></span>'
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
    name: 'listForResourceGroup(string, PolicyAssignmentsListForResourceGroupOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options: PolicyAssignmentsListForResourceGroupOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-240">Имя группы ресурсов, содержащий назначения политик.</span><span class="sxs-lookup"><span data-stu-id="163fc-240">The name of the resource group that contains policy assignments.</span></span>'
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
          description: <span data-ttu-id="163fc-241">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-241">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-242">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-242">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
    name: 'listForResourceGroup(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: '<span data-ttu-id="163fc-243">Имя группы ресурсов, содержащий назначения политик.</span><span class="sxs-lookup"><span data-stu-id="163fc-243">The name of the resource group that contains policy assignments.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-244">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-244">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
    name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-245">Эта операция получает список все назначения политики, связанные с указанной группе ресурсов в данной подписки, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-245">This operation retrieves the list of all policy assignments associated with the given resource group in the given subscription that match the optional given $filter.</span></span> <span data-ttu-id="163fc-246">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''.</span><span class="sxs-lookup"><span data-stu-id="163fc-246">Valid values for $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''.</span></span> <span data-ttu-id="163fc-247">Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с группой ресурсов, включая те, которые применяются непосредственно или применить из области, также применяются к ресурсы, содержащиеся в группе ресурсов, содержащего.</span><span class="sxs-lookup"><span data-stu-id="163fc-247">If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource group, including those that apply directly or apply from containing scopes, as well as any applied to resources contained within the resource group.</span></span> <span data-ttu-id="163fc-248">Если $filter=atScope(), этот список включает все назначения политики, применяемые к группе ресурсов, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащиеся в группе ресурсов.</span><span class="sxs-lookup"><span data-stu-id="163fc-248">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource group, which is everything in the unfiltered list except those applied to resources contained within the resource group.</span></span> <span data-ttu-id="163fc-249">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к группе ресурсов и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-249">If $filter=policyDefinitionId eq ''{value}'' is provided, the returned list includes only policy assignments that apply to the resource group and assign the policy definition whose id is {value}.</span></span>'
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-250">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-250">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
    name: 'listForResourceGroupNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-251">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-251">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-252">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-252">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-253">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-253">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
    name: 'listForResourceGroupNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-254">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-254">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-255">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-255">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext'
    name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="163fc-256">Эта операция получает список все назначения политики, связанные с указанного ресурса в указанной группе ресурсов и подписке, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-256">This operation retrieves the list of all policy assignments associated with the specified resource in the given resource group and subscription that match the optional given $filter.</span></span>
      <span data-ttu-id="163fc-257">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''.</span><span class="sxs-lookup"><span data-stu-id="163fc-257">Valid values for $filter are: 'atScope()' or 'policyDefinitionId eq '{value}''.</span></span> <span data-ttu-id="163fc-258">Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с ресурсом, включая те, которые применяются непосредственно или из всех области видимости, как также применяются к ресурсам, содержащимся в нем.</span><span class="sxs-lookup"><span data-stu-id="163fc-258">If $filter is not provided, the unfiltered list includes all policy assignments associated with the resource, including those that apply directly or from all containing scopes, as well as any applied to resources contained within the resource.</span></span> <span data-ttu-id="163fc-259">Если $filter=atScope(), этот список включает все назначения политики, которые применяются к ресурсу, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащимся в нем.</span><span class="sxs-lookup"><span data-stu-id="163fc-259">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the resource, which is everything in the unfiltered list except those applied to resources contained within the resource.</span></span> <span data-ttu-id="163fc-260">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, применяемых к ресурсу и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-260">If $filter=policyDefinitionId eq '{value}' is provided, the returned list includes only policy assignments that apply to the resource and assign the policy definition whose id is {value}.</span></span>
      <span data-ttu-id="163fc-261">Три параметра, а также имя ресурсов используются для идентификации конкретного ресурса.</span><span class="sxs-lookup"><span data-stu-id="163fc-261">Three parameters plus the resource name are used to identify a specific resource.</span></span> <span data-ttu-id="163fc-262">Если ресурс не является частью родительского ресурса (более распространенный случай), не должен быть указан путь к родительскому ресурсу (или предоставленного как '').</span><span class="sxs-lookup"><span data-stu-id="163fc-262">If the resource is not part of a parent resource (the more common case), the parent resource path should not be provided (or provided as '').</span></span> <span data-ttu-id="163fc-263">Например можно было указывать веб-приложения ({Пространство_имен_поставщиков_ресурсов} == «Microsoft.Web», {parentResourcePath} == '', {resourceType} == {resourceName} «sites» == «MyWebApp»).</span><span class="sxs-lookup"><span data-stu-id="163fc-263">For example a web app could be specified as ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} == '', {resourceType} == 'sites', {resourceName} == 'MyWebApp').</span></span> <span data-ttu-id="163fc-264">Если ресурс является частью родительского ресурса, необходимо предоставить все параметры.</span><span class="sxs-lookup"><span data-stu-id="163fc-264">If the resource is part of a parent resource, then all parameters should be provided.</span></span> <span data-ttu-id="163fc-265">Например можно было указывать DNS-имя виртуальной машины ({Пространство_имен_поставщиков_ресурсов} == 'Microsoft.Compute', {parentResourcePath} == ' virtualMachines/Моя_виртуальная_машина», {resourceType} == {resourceName} «domainNames» == «MyComputerName»).</span><span class="sxs-lookup"><span data-stu-id="163fc-265">For example a virtual machine DNS name could be specified as ({resourceProviderNamespace} == 'Microsoft.Compute', {parentResourcePath} == 'virtualMachines/MyVirtualMachine', {resourceType} == 'domainNames', {resourceName} == 'MyComputerName').</span></span> <span data-ttu-id="163fc-266">Является удобной альтернативой отдельно указав имя пространства имен и тип исключать в параметре {resourceType}, форматирования: ({Пространство_имен_поставщиков_ресурсов} == '', {parentResourcePath} == '', {resourceType} == «Microsoft.Web/sites», {} resourceName} == «MyWebApp»).</span><span class="sxs-lookup"><span data-stu-id="163fc-266">A convenient alternative to providing the namespace and type name separately is to provide both in the {resourceType} parameter, format: ({resourceProviderNamespace} == '', {parentResourcePath} == '', {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').</span></span>
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-267">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-267">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
    name: 'listForResourceNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-268">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-268">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-269">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-269">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-270">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-270">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
    name: 'listForResourceNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-271">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-271">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-272">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-272">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="163fc-273">Эта операция получает список все назначения политики, связанные с данной подписки, которые соответствуют необязательно, учитывая $filter.</span><span class="sxs-lookup"><span data-stu-id="163fc-273">This operation retrieves the list of all policy assignments associated with the given subscription that match the optional given $filter.</span></span> <span data-ttu-id="163fc-274">Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''.</span><span class="sxs-lookup"><span data-stu-id="163fc-274">Valid values for $filter are: ''atScope()'' or ''policyDefinitionId eq ''{value}''''.</span></span> <span data-ttu-id="163fc-275">Если $filter не указано, неотфильтрованный список включает все назначения политики, связанные с подпиской, включая те, которые применяются непосредственно или из групп управления, содержащие данной подписки, в качестве также применяется к объектам внутри подписка.</span><span class="sxs-lookup"><span data-stu-id="163fc-275">If $filter is not provided, the unfiltered list includes all policy assignments associated with the subscription, including those that apply directly or from management groups that contain the given subscription, as well as any applied to objects contained within the subscription.</span></span> <span data-ttu-id="163fc-276">Если $filter=atScope(), этот список включает все назначения политики, которые применяются для подписки, которая имеет все, что в списке без фильтра, за исключением случаев, применяемые к объектам, содержащимся в пределах подписки.</span><span class="sxs-lookup"><span data-stu-id="163fc-276">If $filter=atScope() is provided, the returned list includes all policy assignments that apply to the subscription, which is everything in the unfiltered list except those applied to objects contained within the subscription.</span></span> <span data-ttu-id="163fc-277">Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к подписке и назначение определения политики, идентификатор которого — {value}.</span><span class="sxs-lookup"><span data-stu-id="163fc-277">If $filter=policyDefinitionId eq ''{value}'' is provided, the returned list includes only policy assignments that apply to the subscription and assign the policy definition whose id is {value}.</span></span>'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-278">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-278">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-279">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-279">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="163fc-280">Возможно использование необязательных параметров</span><span class="sxs-lookup"><span data-stu-id="163fc-280">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-281">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-281">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_1'
    name: 'listNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="163fc-282">NextLink из предыдущего успешного вызова операции List.</span><span class="sxs-lookup"><span data-stu-id="163fc-282">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            <span data-ttu-id="163fc-283">Функция обратного вызова</span><span class="sxs-lookup"><span data-stu-id="163fc-283">The callback</span></span>
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.constructor'
    name: PolicyAssignments(PolicyClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="163fc-284">Создайте PolicyAssignments.</span><span class="sxs-lookup"><span data-stu-id="163fc-284">Create a PolicyAssignments.</span></span>
    syntax:
      content: 'new PolicyAssignments(client: PolicyClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-policy.PolicyClientContext'
          description: |
            <span data-ttu-id="163fc-285">Ссылка на клиента службы.</span><span class="sxs-lookup"><span data-stu-id="163fc-285">Reference to the service client.</span></span>
    package: '@azure/arm-policy'
references:
  - uid: '@azure/arm-policy.PolicyClientContext'
    name: PolicyClientContext
    spec.typeScript:
      - name: PolicyClientContext
        fullName: PolicyClientContext
        uid: '@azure/arm-policy.PolicyClientContext'
  - uid: '@azure/arm-policy.PolicyAssignment'
    name: PolicyAssignment
    spec.typeScript:
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignment>
    name: PolicyAssignment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
    name: PolicyAssignmentListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: '@azure/arm-policy.PolicyAssignmentListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
    name: PolicyAssignmentsListOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListOptionalParams
        fullName: PolicyAssignmentsListOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
    name: PolicyAssignmentsListForResourceOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceOptionalParams
        fullName: PolicyAssignmentsListForResourceOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
    name: PolicyAssignmentsListForResourceGroupOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceGroupOptionalParams
        fullName: PolicyAssignmentsListForResourceGroupOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'