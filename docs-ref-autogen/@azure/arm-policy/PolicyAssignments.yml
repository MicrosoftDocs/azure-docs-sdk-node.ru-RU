### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-policy.PolicyAssignments'
    name: PolicyAssignments
    fullName: PolicyAssignments
    children:
      - '@azure/arm-policy.PolicyAssignments.create'
      - '@azure/arm-policy.PolicyAssignments.create_2'
      - '@azure/arm-policy.PolicyAssignments.create_1'
      - '@azure/arm-policy.PolicyAssignments.createById'
      - '@azure/arm-policy.PolicyAssignments.createById_2'
      - '@azure/arm-policy.PolicyAssignments.createById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteById'
      - '@azure/arm-policy.PolicyAssignments.deleteById_2'
      - '@azure/arm-policy.PolicyAssignments.deleteById_1'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
      - '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
      - '@azure/arm-policy.PolicyAssignments.get'
      - '@azure/arm-policy.PolicyAssignments.get_2'
      - '@azure/arm-policy.PolicyAssignments.get_1'
      - '@azure/arm-policy.PolicyAssignments.getById'
      - '@azure/arm-policy.PolicyAssignments.getById_2'
      - '@azure/arm-policy.PolicyAssignments.getById_1'
      - '@azure/arm-policy.PolicyAssignments.list'
      - '@azure/arm-policy.PolicyAssignments.list_2'
      - '@azure/arm-policy.PolicyAssignments.list_1'
      - '@azure/arm-policy.PolicyAssignments.listForResource'
      - '@azure/arm-policy.PolicyAssignments.listForResource_2'
      - '@azure/arm-policy.PolicyAssignments.listForResource_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
      - '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
      - '@azure/arm-policy.PolicyAssignments.listNext'
      - '@azure/arm-policy.PolicyAssignments.listNext_2'
      - '@azure/arm-policy.PolicyAssignments.listNext_1'
      - '@azure/arm-policy.PolicyAssignments.constructor'
    langs:
      - typeScript
    type: class
    summary: 'Класс, представляющий PolicyAssignments.'
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create'
    name: 'create(string, string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция создает или обновляет назначение политики с заданной области и именем. Назначения политик применяются ко всем ресурсам, содержащихся в своей области. Например, при назначении политики в области действия группы ресурсов, что политика применяется ко всем ресурсам в группе.'
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_2'
    name: 'create(string, string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.create_1'
    name: 'create(string, string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(scope: string, policyAssignmentName: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики.
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById'
    name: 'createById(string, PolicyAssignment, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция создает или обновляет назначение политики с заданным идентификатором. Назначения политик в области применяются ко всем ресурсам, содержащихся в этой области. Например, при назначении политики к группе ресурсов, политика применяется ко всем ресурсам в группе. Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}». Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} ".'
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для создания. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_2'
    name: 'createById(string, PolicyAssignment, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для создания. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.createById_1'
    name: 'createById(string, PolicyAssignment, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createById(policyAssignmentId: string, parameters: PolicyAssignment, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для создания. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: parameters
          type:
            - '@azure/arm-policy.PolicyAssignment'
          description: Параметры для назначения политики.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsCreateByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById'
    name: 'deleteById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция удаляет политику с заданным идентификатором. Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}». Допустимые форматы для {scope}: "/ providers/Microsoft.Management/managementGroups/{managementGroup}" (группы управления), «/ subscriptions / {subscriptionId}» (подписка), "/ subscriptions / {subscriptionId} /resourceGroups/ {} resourceGroupName} "(группа ресурсов), или" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "(ресурс).'
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для удаления. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_2'
    name: 'deleteById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для удаления. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteById_1'
    name: 'deleteById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для удаления. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция удаляет назначение политики, по его имени и область, которую он был создан. Область назначения политики является частью его идентификатор предыдущего "/ providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}".'
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для удаления.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для удаления.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для удаления.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsDeleteMethodResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция получает назначение одной политики, по его имени и область, которую он был создан в.'
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для получения.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для получения.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.get_1'
    name: 'get(string, string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(scope: string, policyAssignmentName: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: scope
          type:
            - string
          description: 'Область назначения политики. Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} "'
        - id: policyAssignmentName
          type:
            - string
          description: Имя назначения политики для получения.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById'
    name: 'getById(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Операция извлекает назначение политики с заданным идентификатором. Политика назначения идентификаторы имеют следующий формат: «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».
      Допустимыми областями являются: группы управления (формат: "/ providers/Microsoft.Management/managementGroups/{managementGroup}"), подписку (формат: «/ subscriptions / {subscriptionId}»), группа ресурсов (формат: "/ subscriptions / {subscriptionId} / resourceGroups / {resourceGroupName} ", или ресурс (формат:" / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} /providers/ {Пространство_имен_поставщиков_ресурсов} / [{parentResourcePath} /] {Тип_ресурса} / {resourceName} ".
    syntax:
      content: 'function getById(policyAssignmentId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для получения. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_2'
    name: 'getById(string, RequestOptionsBase, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для получения. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.getById_1'
    name: 'getById(string, ServiceCallback<PolicyAssignment>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getById(policyAssignmentId: string, callback: ServiceCallback<PolicyAssignment>)'
      parameters:
        - id: policyAssignmentId
          type:
            - string
          description: 'Идентификатор назначения политики для получения. Используйте формат «{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}».'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignment>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsGetByIdResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list'
    name: list(Models.PolicyAssignmentsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция получает список все назначения политики, связанные с данной подписки, которые соответствуют необязательно, учитывая $filter. Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''. Если $filter не указано, неотфильтрованный список включает все назначения политики, связанные с подпиской, включая те, которые применяются непосредственно или из групп управления, содержащие данной подписки, в качестве также применяется к объектам внутри подписка. Если $filter=atScope(), этот список включает все назначения политики, которые применяются для подписки, которая имеет все, что в списке без фильтра, за исключением случаев, применяемые к объектам, содержащимся в пределах подписки. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к подписке и назначение определения политики, идентификатор которого — {value}.'
    syntax:
      content: 'function list(options?: Models.PolicyAssignmentsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PolicyAssignmentsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_2'
    name: 'list(PolicyAssignmentsListOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PolicyAssignmentsListOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.list_1'
    name: list(ServiceCallback<PolicyAssignmentListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource'
    name: 'listForResource(string, string, string, string, string, Models.PolicyAssignmentsListForResourceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Эта операция получает список все назначения политики, связанные с указанного ресурса в указанной группе ресурсов и подписке, которые соответствуют необязательно, учитывая $filter.
      Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''. Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с ресурсом, включая те, которые применяются непосредственно или из всех области видимости, как также применяются к ресурсам, содержащимся в нем. Если $filter=atScope(), этот список включает все назначения политики, которые применяются к ресурсу, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащимся в нем. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, применяемых к ресурсу и назначение определения политики, идентификатор которого — {value}.
      Три параметра, а также имя ресурсов используются для идентификации конкретного ресурса. Если ресурс не является частью родительского ресурса (более распространенный случай), не должен быть указан путь к родительскому ресурсу (или предоставленного как ''). Например можно было указывать веб-приложения ({Пространство_имен_поставщиков_ресурсов} == «Microsoft.Web», {parentResourcePath} == '', {resourceType} == {resourceName} «sites» == «MyWebApp»). Если ресурс является частью родительского ресурса, необходимо предоставить все параметры. Например можно было указывать DNS-имя виртуальной машины ({Пространство_имен_поставщиков_ресурсов} == 'Microsoft.Compute', {parentResourcePath} == ' virtualMachines/Моя_виртуальная_машина», {resourceType} == {resourceName} «domainNames» == «MyComputerName»). Является удобной альтернативой отдельно указав имя пространства имен и тип исключать в параметре {resourceType}, форматирования: ({Пространство_имен_поставщиков_ресурсов} == '', {parentResourcePath} == '', {resourceType} == «Microsoft.Web/sites», {} resourceName} == «MyWebApp»).
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Models.PolicyAssignmentsListForResourceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов. Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type:
            - string
          description: 'Родительский путь к ресурсу. Используйте пустую строку, если такового не имеется.'
        - id: resourceType
          type:
            - string
          description: 'Имя типа ресурса. Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).'
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_2'
    name: 'listForResource(string, string, string, string, string, PolicyAssignmentsListForResourceOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: PolicyAssignmentsListForResourceOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов. Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type:
            - string
          description: 'Родительский путь к ресурсу. Используйте пустую строку, если такового не имеется.'
        - id: resourceType
          type:
            - string
          description: 'Имя типа ресурса. Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).'
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResource_1'
    name: 'listForResource(string, string, string, string, string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащей ресурс.'
        - id: resourceProviderNamespace
          type:
            - string
          description: Пространство имен поставщика ресурсов. Например пространство имен виртуальных машин является Microsoft.Compute (из Microsoft.Compute/virtualMachines)
        - id: parentResourcePath
          type:
            - string
          description: 'Родительский путь к ресурсу. Используйте пустую строку, если такового не имеется.'
        - id: resourceType
          type:
            - string
          description: 'Имя типа ресурса. Например, имя типа веб-приложения является «сайты» (из Microsoft.Web/sites).'
        - id: resourceName
          type:
            - string
          description: Имя ресурса.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup'
    name: 'listForResourceGroup(string, Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция получает список все назначения политики, связанные с указанной группе ресурсов в данной подписки, которые соответствуют необязательно, учитывая $filter. Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''. Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с группой ресурсов, включая те, которые применяются непосредственно или применить из области, также применяются к ресурсы, содержащиеся в группе ресурсов, содержащего. Если $filter=atScope(), этот список включает все назначения политики, применяемые к группе ресурсов, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащиеся в группе ресурсов. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к группе ресурсов и назначение определения политики, идентификатор которого — {value}.'
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options?: Models.PolicyAssignmentsListForResourceGroupOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащий назначения политик.'
        - id: options
          type:
            - Models.PolicyAssignmentsListForResourceGroupOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_2'
    name: 'listForResourceGroup(string, PolicyAssignmentsListForResourceGroupOptionalParams, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, options: PolicyAssignmentsListForResourceGroupOptionalParams, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащий назначения политик.'
        - id: options
          type:
            - '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroup_1'
    name: 'listForResourceGroup(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroup(resourceGroupName: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 'Имя группы ресурсов, содержащий назначения политик.'
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext'
    name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция получает список все назначения политики, связанные с указанной группе ресурсов в данной подписки, которые соответствуют необязательно, учитывая $filter. Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''. Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с группой ресурсов, включая те, которые применяются непосредственно или применить из области, также применяются к ресурсы, содержащиеся в группе ресурсов, содержащего. Если $filter=atScope(), этот список включает все назначения политики, применяемые к группе ресурсов, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащиеся в группе ресурсов. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к группе ресурсов и назначение определения политики, идентификатор которого — {value}.'
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_2'
    name: 'listForResourceGroupNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceGroupNext_1'
    name: 'listForResourceGroupNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceGroupNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext'
    name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Эта операция получает список все назначения политики, связанные с указанного ресурса в указанной группе ресурсов и подписке, которые соответствуют необязательно, учитывая $filter.
      Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''. Если $filter не задан, неотфильтрованный список содержит все назначения политики, связанные с ресурсом, включая те, которые применяются непосредственно или из всех области видимости, как также применяются к ресурсам, содержащимся в нем. Если $filter=atScope(), этот список включает все назначения политики, которые применяются к ресурсу, который является все, что в списке без фильтра, за исключением случаев, применяемые к ресурсам, содержащимся в нем. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, применяемых к ресурсу и назначение определения политики, идентификатор которого — {value}.
      Три параметра, а также имя ресурсов используются для идентификации конкретного ресурса. Если ресурс не является частью родительского ресурса (более распространенный случай), не должен быть указан путь к родительскому ресурсу (или предоставленного как ''). Например можно было указывать веб-приложения ({Пространство_имен_поставщиков_ресурсов} == «Microsoft.Web», {parentResourcePath} == '', {resourceType} == {resourceName} «sites» == «MyWebApp»). Если ресурс является частью родительского ресурса, необходимо предоставить все параметры. Например можно было указывать DNS-имя виртуальной машины ({Пространство_имен_поставщиков_ресурсов} == 'Microsoft.Compute', {parentResourcePath} == ' virtualMachines/Моя_виртуальная_машина», {resourceType} == {resourceName} «domainNames» == «MyComputerName»). Является удобной альтернативой отдельно указав имя пространства имен и тип исключать в параметре {resourceType}, форматирования: ({Пространство_имен_поставщиков_ресурсов} == '', {parentResourcePath} == '', {resourceType} == «Microsoft.Web/sites», {} resourceName} == «MyWebApp»).
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_2'
    name: 'listForResourceNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listForResourceNext_1'
    name: 'listForResourceNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listForResourceNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListForResourceNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Эта операция получает список все назначения политики, связанные с данной подписки, которые соответствуют необязательно, учитывая $filter. Допустимые значения для $filter: «atScope()» или "policyDefinitionId eq" {value}''''. Если $filter не указано, неотфильтрованный список включает все назначения политики, связанные с подпиской, включая те, которые применяются непосредственно или из групп управления, содержащие данной подписки, в качестве также применяется к объектам внутри подписка. Если $filter=atScope(), этот список включает все назначения политики, которые применяются для подписки, которая имеет все, что в списке без фильтра, за исключением случаев, применяемые к объектам, содержащимся в пределах подписки. Если $filter = policyDefinitionId eq «{value}» предоставлен, этот список включает только назначения политик, которые применяются к подписке и назначение определения политики, идентификатор которого — {value}.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: options
          type:
            - RequestOptionsBase
          description: Возможно использование необязательных параметров
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.listNext_1'
    name: 'listNext(string, ServiceCallback<PolicyAssignmentListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<PolicyAssignmentListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink из предыдущего успешного вызова операции List.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
          description: |
            Функция обратного вызова
      return:
        type:
          - Promise<Models.PolicyAssignmentsListNextResponse>
    package: '@azure/arm-policy'
  - uid: '@azure/arm-policy.PolicyAssignments.constructor'
    name: PolicyAssignments(PolicyClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Создайте PolicyAssignments.
    syntax:
      content: 'new PolicyAssignments(client: PolicyClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-policy.PolicyClientContext'
          description: |
            Ссылка на клиента службы.
    package: '@azure/arm-policy'
references:
  - uid: '@azure/arm-policy.PolicyClientContext'
    name: PolicyClientContext
    spec.typeScript:
      - name: PolicyClientContext
        fullName: PolicyClientContext
        uid: '@azure/arm-policy.PolicyClientContext'
  - uid: '@azure/arm-policy.PolicyAssignment'
    name: PolicyAssignment
    spec.typeScript:
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignment>
    name: PolicyAssignment>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignment
        fullName: PolicyAssignment
        uid: '@azure/arm-policy.PolicyAssignment'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-policy.PolicyAssignmentListResult>
    name: PolicyAssignmentListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PolicyAssignmentListResult
        fullName: PolicyAssignmentListResult
        uid: '@azure/arm-policy.PolicyAssignmentListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
    name: PolicyAssignmentsListOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListOptionalParams
        fullName: PolicyAssignmentsListOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
    name: PolicyAssignmentsListForResourceOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceOptionalParams
        fullName: PolicyAssignmentsListForResourceOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceOptionalParams'
  - uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'
    name: PolicyAssignmentsListForResourceGroupOptionalParams
    spec.typeScript:
      - name: PolicyAssignmentsListForResourceGroupOptionalParams
        fullName: PolicyAssignmentsListForResourceGroupOptionalParams
        uid: '@azure/arm-policy.PolicyAssignmentsListForResourceGroupOptionalParams'