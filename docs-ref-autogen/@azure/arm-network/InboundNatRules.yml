### YamlMime:UniversalReference
ms.openlocfilehash: d1eedadbcee477561339f43ffe9843711f8524ed
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 12/20/2018
ms.locfileid: "53708718"
items:
- uid: '@azure/arm-network.InboundNatRules'
  name: InboundNatRules
  fullName: InboundNatRules
  children:
  - '@azure/arm-network.InboundNatRules.beginCreateOrUpdate'
  - '@azure/arm-network.InboundNatRules.beginDeleteMethod'
  - '@azure/arm-network.InboundNatRules.createOrUpdate'
  - '@azure/arm-network.InboundNatRules.deleteMethod'
  - '@azure/arm-network.InboundNatRules.get_2'
  - '@azure/arm-network.InboundNatRules.get'
  - '@azure/arm-network.InboundNatRules.get_1'
  - '@azure/arm-network.InboundNatRules.constructor'
  - '@azure/arm-network.InboundNatRules.list'
  - '@azure/arm-network.InboundNatRules.list_2'
  - '@azure/arm-network.InboundNatRules.list_1'
  - '@azure/arm-network.InboundNatRules.listNext'
  - '@azure/arm-network.InboundNatRules.listNext_2'
  - '@azure/arm-network.InboundNatRules.listNext_1'
  langs:
  - typeScript
  type: class
  summary: Класс, представляющий InboundNatRules.
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.beginCreateOrUpdate'
  name: beginCreateOrUpdate(string, string, string, InboundNatRule, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет правило nat для входящего трафика балансировщика нагрузки.
  syntax:
    content: 'function beginCreateOrUpdate(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, inboundNatRuleParameters: InboundNatRule, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: inboundNatRuleParameters
      type:
      - '@azure/arm-network.InboundNatRule'
      description: Параметры, предоставленные для создания или обновления правила nat для входящего трафика.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<LROPoller>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.beginDeleteMethod'
  name: beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет правило nat для входящего трафика подсистемы балансировки нагрузки.
  syntax:
    content: 'function beginDeleteMethod(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<LROPoller>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.createOrUpdate'
  name: createOrUpdate(string, string, string, InboundNatRule, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Создает или обновляет правило nat для входящего трафика балансировщика нагрузки.
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, inboundNatRuleParameters: InboundNatRule, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: inboundNatRuleParameters
      type:
      - '@azure/arm-network.InboundNatRule'
      description: Параметры, предоставленные для создания или обновления правила nat для входящего трафика.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.InboundNatRulesCreateOrUpdateResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.deleteMethod'
  name: deleteMethod(string, string, string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Удаляет правило nat для входящего трафика подсистемы балансировки нагрузки.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<RestResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.get_2'
  name: get(string, string, string, InboundNatRulesGetOptionalParams, ServiceCallback<InboundNatRule>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, options: InboundNatRulesGetOptionalParams, callback: ServiceCallback<InboundNatRule>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: options
      type:
      - '@azure/arm-network.InboundNatRulesGetOptionalParams'
      description: Возможно использование необязательных параметров
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRule>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.get'
  name: get(string, string, string, Models.InboundNatRulesGetOptionalParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает правило nat для входящего трафика подсистемы балансировки нагрузки.
  syntax:
    content: 'function get(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, options?: Models.InboundNatRulesGetOptionalParams)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: options
      type:
      - Models.InboundNatRulesGetOptionalParams
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.InboundNatRulesGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.get_1'
  name: get(string, string, string, ServiceCallback<InboundNatRule>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(resourceGroupName: string, loadBalancerName: string, inboundNatRuleName: string, callback: ServiceCallback<InboundNatRule>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: inboundNatRuleName
      type:
      - string
      description: Имя правила nat для входящего трафика.
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRule>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.constructor'
  name: InboundNatRules(NetworkManagementClientContext)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Создайте InboundNatRules.
  syntax:
    content: 'new InboundNatRules(client: NetworkManagementClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/arm-network.NetworkManagementClientContext'
      description: >
        Ссылка на клиента службы.
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.list'
  name: list(string, string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все правила nat для входящего трафика подсистемы балансировки нагрузки.
  syntax:
    content: 'function list(resourceGroupName: string, loadBalancerName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.InboundNatRulesListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.list_2'
  name: list(string, string, RequestOptionsBase, ServiceCallback<InboundNatRuleListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function list(resourceGroupName: string, loadBalancerName: string, options: RequestOptionsBase, callback: ServiceCallback<InboundNatRuleListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: options
      type:
      - RequestOptionsBase
      description: Возможно использование необязательных параметров
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRuleListResult>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.list_1'
  name: list(string, string, ServiceCallback<InboundNatRuleListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function list(resourceGroupName: string, loadBalancerName: string, callback: ServiceCallback<InboundNatRuleListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: Имя группы ресурсов.
    - id: loadBalancerName
      type:
      - string
      description: Имя подсистемы балансировки нагрузки.
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRuleListResult>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.listNext'
  name: listNext(string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: Возвращает все правила nat для входящего трафика подсистемы балансировки нагрузки.
  syntax:
    content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: NextLink из предыдущего успешного вызова операции List.
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.InboundNatRulesListNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.listNext_2'
  name: listNext(string, RequestOptionsBase, ServiceCallback<InboundNatRuleListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<InboundNatRuleListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: NextLink из предыдущего успешного вызова операции List.
    - id: options
      type:
      - RequestOptionsBase
      description: Возможно использование необязательных параметров
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRuleListResult>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesListNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.InboundNatRules.listNext_1'
  name: listNext(string, ServiceCallback<InboundNatRuleListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<InboundNatRuleListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: NextLink из предыдущего успешного вызова операции List.
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.InboundNatRuleListResult>
      description: >
        Функция обратного вызова
    return:
      type:
      - Promise<Models.InboundNatRulesListNextResponse>
  package: '@azure/arm-network'
references:
- uid: '@azure/arm-network.NetworkManagementClientContext'
  name: NetworkManagementClientContext
  spec.typeScript:
  - name: NetworkManagementClientContext
    fullName: NetworkManagementClientContext
    uid: '@azure/arm-network.NetworkManagementClientContext'
- uid: '@azure/arm-network.InboundNatRule'
  name: InboundNatRule
  spec.typeScript:
  - name: InboundNatRule
    fullName: InboundNatRule
    uid: '@azure/arm-network.InboundNatRule'
- uid: ServiceCallback<@azure/arm-network.InboundNatRule>
  name: InboundNatRule>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: InboundNatRule
    fullName: InboundNatRule
    uid: '@azure/arm-network.InboundNatRule'
  - name: '>'
    fullName: '>'
- uid: '@azure/arm-network.InboundNatRulesGetOptionalParams'
  name: InboundNatRulesGetOptionalParams
  spec.typeScript:
  - name: InboundNatRulesGetOptionalParams
    fullName: InboundNatRulesGetOptionalParams
    uid: '@azure/arm-network.InboundNatRulesGetOptionalParams'
- uid: ServiceCallback<@azure/arm-network.InboundNatRuleListResult>
  name: InboundNatRuleListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: InboundNatRuleListResult
    fullName: InboundNatRuleListResult
    uid: '@azure/arm-network.InboundNatRuleListResult'
  - name: '>'
    fullName: '>'
