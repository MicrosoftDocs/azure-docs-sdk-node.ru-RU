### YamlMime:UniversalReference
ms.openlocfilehash: f8106145cc2f1591901b57d76a3dcdbd0f179424
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41702672"
items:
- uid: '@azure/cosmos.Container'
  name: Container
  fullName: Container
  children:
  - '@azure/cosmos.Container.conflict'
  - '@azure/cosmos.Container.database'
  - '@azure/cosmos.Container.delete'
  - '@azure/cosmos.Container.extractPartitionKey'
  - '@azure/cosmos.Container.id'
  - '@azure/cosmos.Container.item'
  - '@azure/cosmos.Container.items'
  - '@azure/cosmos.Container.read'
  - '@azure/cosmos.Container.replace'
  - '@azure/cosmos.Container.storedProcedure'
  - '@azure/cosmos.Container.storedProcedures'
  - '@azure/cosmos.Container.trigger'
  - '@azure/cosmos.Container.triggers'
  - '@azure/cosmos.Container.url'
  - '@azure/cosmos.Container.userDefinedFunction'
  - '@azure/cosmos.Container.userDefinedFunctions'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="9e140-101">Операции чтения, замены или удаления контейнера определенной, существующий по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="9e140-101">Operations for reading, replacing, or deleting a specific, existing container by id.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.conflict'
  name: conflict
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-102">Используется для чтения, замены или удаления конкретного, существующие <xref:Conflict> по идентификатору. Используйте `.conflicts` для создания новых конфликтов или запросов/чтения все конфликты.</span><span class="sxs-lookup"><span data-stu-id="9e140-102">Used to read, replace, or delete a specific, existing <xref:Conflict> by id. Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.</span></span>
  syntax:
    content: 'function conflict(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="9e140-103">Идентификатор <xref:Conflict>.</span><span class="sxs-lookup"><span data-stu-id="9e140-103">The id of the <xref:Conflict>.</span></span>
    return:
      type:
      - '@azure/cosmos.Conflict'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.database'
  name: database
  fullName: database
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'database: Database'
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-104">Удаление контейнера</span><span class="sxs-lookup"><span data-stu-id="9e140-104">Delete the container</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.extractPartitionKey'
  name: extractPartitionKey
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function extractPartitionKey(document: any, partitionKeyDefinition: PartitionKeyDefinition)'
    parameters:
    - id: document
      type:
      - any
      description: ''
    - id: partitionKeyDefinition
      type:
      - '@azure/cosmos.PartitionKeyDefinition'
      description: ''
    return:
      type:
      - '@azure/cosmos.PartitionKey[]'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.item'
  name: item
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="9e140-105">Используется для чтения, замены или удаления конкретного, существующие <xref:Item> по идентификатору. Используйте `.items` для создания новых элементов или запросов/чтения всех элементов.</span><span class="sxs-lookup"><span data-stu-id="9e140-105">Used to read, replace, or delete a specific, existing <xref:Item> by id. Use `.items` for creating new items, or querying/reading all items.</span></span>
  syntax:
    content: 'function item(id: string, partitionKey?: string)'
    parameters:
    - id: id
      type:
      - string
      description: <span data-ttu-id="9e140-106">Идентификатор <xref:Item>.</span><span class="sxs-lookup"><span data-stu-id="9e140-106">The id of the <xref:Item>.</span></span>
    - id: partitionKey
      type:
      - string
      description: <span data-ttu-id="9e140-107">Ключ раздела <xref:Item>.</span><span class="sxs-lookup"><span data-stu-id="9e140-107">The partition key of the <xref:Item>.</span></span> <span data-ttu-id="9e140-108">(Требуется для секционированных контейнеров).</span><span class="sxs-lookup"><span data-stu-id="9e140-108">(Required for partitioned containers).</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.Item'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.items'
  name: items
  fullName: items
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="9e140-109">Операции для создания новых элементов и чтения/запроса все элементы для чтения, замене или удалении существующего элемента, используют `.item(id)`.</span><span class="sxs-lookup"><span data-stu-id="9e140-109">Operations for creating new items, and reading/querying all items For reading, replacing, or deleting an existing item, use `.item(id)`.</span></span>
  syntax:
    content: 'items: Items'
    return:
      type:
      - '@azure/cosmos.Items'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-110">Считывание определения контейнера</span><span class="sxs-lookup"><span data-stu-id="9e140-110">Read the container's definition</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-111">Замените определение контейнера</span><span class="sxs-lookup"><span data-stu-id="9e140-111">Replace the container's definition</span></span>
  syntax:
    content: 'function replace(body: ContainerDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ContainerDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedure'
  name: storedProcedure
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-112">Используется для чтения, замены или удаления конкретного, существующие <xref:StoredProcedure> по идентификатору. Используйте `.storedProcedures` для создания новых хранимых процедур или запросов/чтения все хранимые процедуры.</span><span class="sxs-lookup"><span data-stu-id="9e140-112">Used to read, replace, or delete a specific, existing <xref:StoredProcedure> by id. Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.</span></span>
  syntax:
    content: 'function storedProcedure(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="9e140-113">Идентификатор <xref:StoredProcedure>.</span><span class="sxs-lookup"><span data-stu-id="9e140-113">The id of the <xref:StoredProcedure>.</span></span>
    return:
      type:
      - '@azure/cosmos.StoredProcedure'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedures'
  name: storedProcedures
  fullName: storedProcedures
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="9e140-114">Операции для создания новых хранимых процедур и чтения/запроса все хранимые процедуры.</span><span class="sxs-lookup"><span data-stu-id="9e140-114">Operations for creating new stored procedures, and reading/querying all stored procedures.</span></span>

    <span data-ttu-id="9e140-115">Для чтения, замены или удаления существующей хранимой процедуры, используйте `.storedProcedure(id)`.</span><span class="sxs-lookup"><span data-stu-id="9e140-115">For reading, replacing, or deleting an existing stored procedure, use `.storedProcedure(id)`.</span></span>
  syntax:
    content: 'storedProcedures: StoredProcedures'
    return:
      type:
      - '@azure/cosmos.StoredProcedures'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.trigger'
  name: trigger
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-116">Используется для чтения, замены или удаления конкретного, существующие <xref:Trigger> по идентификатору. Используйте `.triggers` для создания новых триггеров или запросов/чтения всех триггеров.</span><span class="sxs-lookup"><span data-stu-id="9e140-116">Used to read, replace, or delete a specific, existing <xref:Trigger> by id. Use `.triggers` for creating new triggers, or querying/reading all triggers.</span></span>
  syntax:
    content: 'function trigger(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="9e140-117">Идентификатор <xref:Trigger>.</span><span class="sxs-lookup"><span data-stu-id="9e140-117">The id of the <xref:Trigger>.</span></span>
    return:
      type:
      - '@azure/cosmos.Trigger'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.triggers'
  name: triggers
  fullName: triggers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="9e140-118">Операции для создания новых триггеров и чтения/запроса всех триггеров.</span><span class="sxs-lookup"><span data-stu-id="9e140-118">Operations for creating new triggers, and reading/querying all triggers.</span></span>

    <span data-ttu-id="9e140-119">Для чтения, замены или удаления существующего триггера, используйте `.trigger(id)`.</span><span class="sxs-lookup"><span data-stu-id="9e140-119">For reading, replacing, or deleting an existing trigger, use `.trigger(id)`.</span></span>
  syntax:
    content: 'triggers: Triggers'
    return:
      type:
      - '@azure/cosmos.Triggers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="9e140-120">Возвращает URL-адрес ссылки на ресурс.</span><span class="sxs-lookup"><span data-stu-id="9e140-120">Returns a reference URL to the resource.</span></span> <span data-ttu-id="9e140-121">Используется для связывания в разрешениях.</span><span class="sxs-lookup"><span data-stu-id="9e140-121">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunction'
  name: userDefinedFunction
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9e140-122">Используется для чтения, замены или удаления конкретного, существующие <xref:UserDefinedFunction> по идентификатору. Используйте `.userDefinedFunctions` для создания новых определяемых пользователем функций или запросов/чтения все определяемые пользователем функции.</span><span class="sxs-lookup"><span data-stu-id="9e140-122">Used to read, replace, or delete a specific, existing <xref:UserDefinedFunction> by id. Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.</span></span>
  syntax:
    content: 'function userDefinedFunction(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="9e140-123">Идентификатор <xref:UserDefinedFunction>.</span><span class="sxs-lookup"><span data-stu-id="9e140-123">The id of the <xref:UserDefinedFunction>.</span></span>
    return:
      type:
      - '@azure/cosmos.UserDefinedFunction'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunctions'
  name: userDefinedFunctions
  fullName: userDefinedFunctions
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="9e140-124">Функции определяются операции для создания нового пользователя и чтения/запросов всех пользователей определенные функции.</span><span class="sxs-lookup"><span data-stu-id="9e140-124">Operations for creating new user defined functions, and reading/querying all user defined functions.</span></span>

    <span data-ttu-id="9e140-125">Для чтения, замены или удаления существующей определяемой пользователем функции, используйте `.userDefinedFunction(id)`.</span><span class="sxs-lookup"><span data-stu-id="9e140-125">For reading, replacing, or deleting an existing user defined function, use `.userDefinedFunction(id)`.</span></span>
  syntax:
    content: 'userDefinedFunctions: UserDefinedFunctions'
    return:
      type:
      - '@azure/cosmos.UserDefinedFunctions'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.Items'
  spec.typeScript:
  - name: Items
    fullName: Items
    uid: '@azure/cosmos.Items'
- uid: '@azure/cosmos.StoredProcedures'
  spec.typeScript:
  - name: StoredProcedures
    fullName: StoredProcedures
    uid: '@azure/cosmos.StoredProcedures'
- uid: '@azure/cosmos.Triggers'
  spec.typeScript:
  - name: Triggers
    fullName: Triggers
    uid: '@azure/cosmos.Triggers'
- uid: '@azure/cosmos.UserDefinedFunctions'
  spec.typeScript:
  - name: UserDefinedFunctions
    fullName: UserDefinedFunctions
    uid: '@azure/cosmos.UserDefinedFunctions'
- uid: '@azure/cosmos.Conflict'
  spec.typeScript:
  - name: Conflict
    fullName: Conflict
    uid: '@azure/cosmos.Conflict'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ContainerResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContainerResponse
    fullName: ContainerResponse
    uid: '@azure/cosmos.ContainerResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.PartitionKeyDefinition'
  spec.typeScript:
  - name: PartitionKeyDefinition
    fullName: PartitionKeyDefinition
    uid: '@azure/cosmos.PartitionKeyDefinition'
- uid: '@azure/cosmos.PartitionKey[]'
  spec.typeScript:
  - name: PartitionKey
    fullName: PartitionKey
    uid: '@azure/cosmos.PartitionKey'
  - name: '[]'
    fullName: '[]'
- uid: '@azure/cosmos.Item'
  spec.typeScript:
  - name: Item
    fullName: Item
    uid: '@azure/cosmos.Item'
- uid: '@azure/cosmos.ContainerDefinition'
  spec.typeScript:
  - name: ContainerDefinition
    fullName: ContainerDefinition
    uid: '@azure/cosmos.ContainerDefinition'
- uid: '@azure/cosmos.StoredProcedure'
  spec.typeScript:
  - name: StoredProcedure
    fullName: StoredProcedure
    uid: '@azure/cosmos.StoredProcedure'
- uid: '@azure/cosmos.Trigger'
  spec.typeScript:
  - name: Trigger
    fullName: Trigger
    uid: '@azure/cosmos.Trigger'
- uid: '@azure/cosmos.UserDefinedFunction'
  spec.typeScript:
  - name: UserDefinedFunction
    fullName: UserDefinedFunction
    uid: '@azure/cosmos.UserDefinedFunction'
