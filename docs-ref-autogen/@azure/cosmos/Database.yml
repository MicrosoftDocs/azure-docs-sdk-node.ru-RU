### YamlMime:UniversalReference
ms.openlocfilehash: 4beb3e4403ee3d2adac43843b0b8f717f13d012a
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/12/2018
ms.locfileid: "40073441"
items:
- uid: '@azure/cosmos.Database'
  name: Database
  fullName: Database
  children:
  - '@azure/cosmos.Database.client'
  - '@azure/cosmos.Database.container'
  - '@azure/cosmos.Database.containers'
  - '@azure/cosmos.Database.constructor'
  - '@azure/cosmos.Database.delete'
  - '@azure/cosmos.Database.id'
  - '@azure/cosmos.Database.read'
  - '@azure/cosmos.Database.url'
  - '@azure/cosmos.Database.user'
  - '@azure/cosmos.Database.users'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="24b17-101">Операции для чтения или удаление существующей базы данных.</span><span class="sxs-lookup"><span data-stu-id="24b17-101">Operations for reading or deleting an existing database.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.client'
  name: client
  fullName: client
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'client: CosmosClient'
    return:
      type:
      - '@azure/cosmos.CosmosClient'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.container'
  name: container
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="24b17-102">Используется для чтения, замены или удаления конкретного, существующие <xref:Database> по идентификатору. Используйте `.containers` создавая контейнеры или запросов/чтения всех контейнеров.</span><span class="sxs-lookup"><span data-stu-id="24b17-102">Used to read, replace, or delete a specific, existing <xref:Database> by id. Use `.containers` creating new containers, or querying/reading all containers.</span></span>
  syntax:
    content: 'function container(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.containers'
  name: containers
  fullName: containers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="24b17-103">Используется для создания новых контейнеров или запросов/чтения всех контейнеров.</span><span class="sxs-lookup"><span data-stu-id="24b17-103">Used for creating new containers, or querying/reading all containers.</span></span>

    <span data-ttu-id="24b17-104">Используйте `.container(id)` для чтения, замены или удаления конкретного, существующие <xref:Database> по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="24b17-104">Use `.container(id)` to read, replace, or delete a specific, existing <xref:Database> by id.</span></span>
  syntax:
    content: 'containers: Containers'
    return:
      type:
      - '@azure/cosmos.Containers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.constructor'
  name: Database
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="24b17-105">Возвращает новый <xref:Database> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="24b17-105">Returns a new <xref:Database> instance.</span></span>

    <span data-ttu-id="24b17-106">Примечание: планируется получить этот объект из объекта <xref:CosmosClient> через `client.databsae(id)`, не для реализации объекта его самостоятельно.</span><span class="sxs-lookup"><span data-stu-id="24b17-106">Note: the intention is to get this object from <xref:CosmosClient> via `client.databsae(id)`, not to instaniate it yourself.</span></span>
  syntax:
    content: 'new Database(client: CosmosClient, id: string)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
    - id: id
      type:
      - string
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="24b17-107">Удаление указанной базы данных.</span><span class="sxs-lookup"><span data-stu-id="24b17-107">Delete the given Database.</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="24b17-108">Чтение определения данной базе данных.</span><span class="sxs-lookup"><span data-stu-id="24b17-108">Read the definition of the given Database.</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="24b17-109">Возвращает URL-адрес ссылки на ресурс.</span><span class="sxs-lookup"><span data-stu-id="24b17-109">Returns a reference URL to the resource.</span></span> <span data-ttu-id="24b17-110">Используется для связывания в разрешениях.</span><span class="sxs-lookup"><span data-stu-id="24b17-110">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.user'
  name: user
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="24b17-111">Используется для чтения, замены или удаления конкретного, существующие <xref:User> по идентификатору. Используйте `.users` для создания новых пользователей или запросов/чтения всех пользователей.</span><span class="sxs-lookup"><span data-stu-id="24b17-111">Used to read, replace, or delete a specific, existing <xref:User> by id. Use `.users` for creating new users, or querying/reading all users.</span></span>
  syntax:
    content: 'function user(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.User'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.users'
  name: users
  fullName: users
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="24b17-112">Используется для создания новых пользователей или запросов/чтения всех пользователей.</span><span class="sxs-lookup"><span data-stu-id="24b17-112">Used for creating new users, or querying/reading all users.</span></span>

    <span data-ttu-id="24b17-113">Используйте `.user(id)` для чтения, замены или удаления конкретного, существующие <xref:User> по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="24b17-113">Use `.user(id)` to read, replace, or delete a specific, existing <xref:User> by id.</span></span>
  syntax:
    content: 'users: Users'
    return:
      type:
      - '@azure/cosmos.Users'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.Containers'
  spec.typeScript:
  - name: Containers
    fullName: Containers
    uid: '@azure/cosmos.Containers'
- uid: '@azure/cosmos.Users'
  spec.typeScript:
  - name: Users
    fullName: Users
    uid: '@azure/cosmos.Users'
- uid: '@azure/cosmos.Container'
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.User'
  spec.typeScript:
  - name: User
    fullName: User
    uid: '@azure/cosmos.User'
