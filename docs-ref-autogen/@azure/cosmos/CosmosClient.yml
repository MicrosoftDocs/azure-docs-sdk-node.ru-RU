### YamlMime:UniversalReference
ms.openlocfilehash: fbcee71d1ece8c1b2b3ffbc94fe318f5cb5e0036
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 08/22/2018
ms.locfileid: "41695813"
items:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  fullName: CosmosClient
  children:
  - '@azure/cosmos.CosmosClient.constructor'
  - '@azure/cosmos.CosmosClient.database'
  - '@azure/cosmos.CosmosClient.databases'
  - '@azure/cosmos.CosmosClient.getDatabaseAccount'
  - '@azure/cosmos.CosmosClient.offer'
  - '@azure/cosmos.CosmosClient.offers'
  langs:
  - typeScript
  type: class
  summary: >-
    <span data-ttu-id="a450b-101">Предоставляет клиентский логическое представление учетной записи базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="a450b-101">Provides a client-side logical representation of the Azure Cosmos DB database account.</span></span>

    <span data-ttu-id="a450b-102">Этот клиент используется для настройки и выполнения запросов в службу базы данных Azure Cosmos DB.</span><span class="sxs-lookup"><span data-stu-id="a450b-102">This client is used to configure and execute requests in the Azure Cosmos DB database service.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.constructor'
  name: CosmosClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new CosmosClient(options: CosmosClientOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.CosmosClientOptions'
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.database'
  name: database
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="a450b-103">Используется для чтения, обновления или удаления существующей базы данных по идентификатору или доступ к контейнеры, принадлежащие к этой базе данных.</span><span class="sxs-lookup"><span data-stu-id="a450b-103">Used for reading, updating, or deleting a existing database by id or accessing containers belonging to that database.</span></span>

    <span data-ttu-id="a450b-104">Это не выполняю сетевой вызов.</span><span class="sxs-lookup"><span data-stu-id="a450b-104">This does not make a network call.</span></span> <span data-ttu-id="a450b-105">Используйте `.read` для получения сведений о базе данных после получения <xref:Database> объекта.</span><span class="sxs-lookup"><span data-stu-id="a450b-105">Use `.read` to get info about the database after getting the <xref:Database> object.</span></span>
  syntax:
    content: 'function database(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: <span data-ttu-id="a450b-106">Идентификатор базы данных.</span><span class="sxs-lookup"><span data-stu-id="a450b-106">The id of the database.</span></span>
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.databases'
  name: databases
  fullName: databases
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="a450b-107">Используется для создания новых баз данных или запросов/чтения всех баз данных.</span><span class="sxs-lookup"><span data-stu-id="a450b-107">Used for creating new databases, or querying/reading all databases.</span></span>

    <span data-ttu-id="a450b-108">Используйте `.database(id)` для чтения, замена или удаление определенных, существующие базы данных по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="a450b-108">Use `.database(id)` to read, replace, or delete a specific, existing database by id.</span></span>
  syntax:
    content: 'databases: Databases'
    return:
      type:
      - '@azure/cosmos.Databases'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getDatabaseAccount'
  name: getDatabaseAccount
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a450b-109">Получение сведений о текущем <xref:DatabaseAccount> (включая какие регионы поддерживаются и т. д.)</span><span class="sxs-lookup"><span data-stu-id="a450b-109">Get information about the current <xref:DatabaseAccount> (including which regions are supported, etc.)</span></span>
  syntax:
    content: 'function getDatabaseAccount(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offer'
  name: offer
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="a450b-110">Используется для чтения, или обновление существующего предложения по идентификатору.</span><span class="sxs-lookup"><span data-stu-id="a450b-110">Used for reading, or updating a existing offer by id.</span></span>
  syntax:
    content: 'function offer(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="a450b-111">Идентификатор предложения.</span><span class="sxs-lookup"><span data-stu-id="a450b-111">The id of the offer.</span></span>
    return:
      type:
      - '@azure/cosmos.Offer'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offers'
  name: offers
  fullName: offers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="a450b-112">Используется для запроса и чтении всех предложений.</span><span class="sxs-lookup"><span data-stu-id="a450b-112">Used for querying & reading all offers.</span></span>

    <span data-ttu-id="a450b-113">Используйте `.offer(id)` для чтения или заменить существующие предложения.</span><span class="sxs-lookup"><span data-stu-id="a450b-113">Use `.offer(id)` to read, or replace existing offers.</span></span>
  syntax:
    content: 'offers: Offers'
    return:
      type:
      - '@azure/cosmos.Offers'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClientOptions'
  spec.typeScript:
  - name: CosmosClientOptions
    fullName: CosmosClientOptions
    uid: '@azure/cosmos.CosmosClientOptions'
- uid: '@azure/cosmos.Databases'
  spec.typeScript:
  - name: Databases
    fullName: Databases
    uid: '@azure/cosmos.Databases'
- uid: '@azure/cosmos.Offers'
  spec.typeScript:
  - name: Offers
    fullName: Offers
    uid: '@azure/cosmos.Offers'
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: <
    fullName: <
  - name: DatabaseAccount
    fullName: DatabaseAccount
    uid: '@azure/cosmos.DatabaseAccount'
  - name: ', '
    fullName: ', '
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.Offer'
  spec.typeScript:
  - name: Offer
    fullName: Offer
    uid: '@azure/cosmos.Offer'
