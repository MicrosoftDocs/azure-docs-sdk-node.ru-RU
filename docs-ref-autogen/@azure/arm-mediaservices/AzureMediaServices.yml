### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-mediaservices.AzureMediaServices'
    name: AzureMediaServices
    fullName: AzureMediaServices
    children:
      - '@azure/arm-mediaservices.AzureMediaServices.acceptLanguage'
      - '@azure/arm-mediaservices.AzureMediaServices.accountFilters'
      - '@azure/arm-mediaservices.AzureMediaServices.apiVersion'
      - '@azure/arm-mediaservices.AzureMediaServices.assetFilters'
      - '@azure/arm-mediaservices.AzureMediaServices.assets'
      - '@azure/arm-mediaservices.AzureMediaServices.constructor'
      - '@azure/arm-mediaservices.AzureMediaServices.beginLongRunningRequest'
      - '@azure/arm-mediaservices.AzureMediaServices.contentKeyPolicies'
      - '@azure/arm-mediaservices.AzureMediaServices.credentials'
      - '@azure/arm-mediaservices.AzureMediaServices.jobs'
      - '@azure/arm-mediaservices.AzureMediaServices.liveEvents'
      - '@azure/arm-mediaservices.AzureMediaServices.liveOutputs'
      - '@azure/arm-mediaservices.AzureMediaServices.locations'
      - '@azure/arm-mediaservices.AzureMediaServices.longRunningOperationRetryTimeout'
      - '@azure/arm-mediaservices.AzureMediaServices.mediaservices'
      - '@azure/arm-mediaservices.AzureMediaServices.operations'
      - '@azure/arm-mediaservices.AzureMediaServices.restoreLROPoller'
      - '@azure/arm-mediaservices.AzureMediaServices.sendLongRunningRequest'
      - '@azure/arm-mediaservices.AzureMediaServices.sendLRORequest'
      - '@azure/arm-mediaservices.AzureMediaServices.sendOperationRequest'
      - '@azure/arm-mediaservices.AzureMediaServices.sendRequest'
      - '@azure/arm-mediaservices.AzureMediaServices.streamingEndpoints'
      - '@azure/arm-mediaservices.AzureMediaServices.streamingLocators'
      - '@azure/arm-mediaservices.AzureMediaServices.streamingPolicies'
      - '@azure/arm-mediaservices.AzureMediaServices.subscriptionId'
      - '@azure/arm-mediaservices.AzureMediaServices.transforms'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-mediaservices.AzureMediaServicesContext'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.accountFilters'
    name: accountFilters
    fullName: accountFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accountFilters: AccountFilters'
      return:
        type:
          - '@azure/arm-mediaservices.AccountFilters'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.assetFilters'
    name: assetFilters
    fullName: assetFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'assetFilters: AssetFilters'
      return:
        type:
          - '@azure/arm-mediaservices.AssetFilters'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.assets'
    name: assets
    fullName: assets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'assets: Assets'
      return:
        type:
          - '@azure/arm-mediaservices.Assets'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.constructor'
    name: 'AzureMediaServices(ServiceClientCredentials, string, Models.AzureMediaServicesOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Инициализирует новый экземпляр класса AzureMediaServices.
    syntax:
      content: 'new AzureMediaServices(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.AzureMediaServicesOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 'Учетные данные, необходимые для клиента для подключения к Azure.'
        - id: subscriptionId
          type:
            - string
          description: Уникальный идентификатор для подписки Microsoft Azure.
        - id: options
          type:
            - Models.AzureMediaServicesOptions
          description: ''
          optional: true
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно HttpLongRunningOperationResponse, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.contentKeyPolicies'
    name: contentKeyPolicies
    fullName: contentKeyPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'contentKeyPolicies: ContentKeyPolicies'
      return:
        type:
          - '@azure/arm-mediaservices.ContentKeyPolicies'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.jobs'
    name: jobs
    fullName: jobs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'jobs: Jobs'
      return:
        type:
          - '@azure/arm-mediaservices.Jobs'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.liveEvents'
    name: liveEvents
    fullName: liveEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'liveEvents: LiveEvents'
      return:
        type:
          - '@azure/arm-mediaservices.LiveEvents'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.liveOutputs'
    name: liveOutputs
    fullName: liveOutputs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'liveOutputs: LiveOutputs'
      return:
        type:
          - '@azure/arm-mediaservices.LiveOutputs'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.locations'
    name: locations
    fullName: locations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'locations: Locations'
      return:
        type:
          - '@azure/arm-mediaservices.Locations'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Время ожидания в секундах для длительных операций повтора. Значение по умолчанию — 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.mediaservices'
    name: mediaservices
    fullName: mediaservices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'mediaservices: Mediaservices'
      return:
        type:
          - '@azure/arm-mediaservices.Mediaservices'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-mediaservices.Operations'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Восстановите LROPoller из предоставленного LROPollState. Этот метод может использоваться для повторного создания LROPoller на другом процессе или компьютере.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Предоставляет механизм для выполнения запроса, которая будет опрашивать и предоставляют результат.'
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: Объект запроса
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправить первоначальный запрос LRO (длительные операции) и получить обратно LROPoller, который предоставляет методы для опроса LRO и проверки, если завершения LRO при выполнении.'
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Аргументы операции.
        - id: operationSpec
          type:
            - OperationSpec
          description: Спецификация для операции.
        - id: options
          type:
            - RequestOptionsBase
          description: Дополнительные параметры для отправляться при создании запроса.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Отправьте запрос HTTP, который заполняется с помощью предоставленного OperationSpec.'
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: 'Аргументы, которые будут заполнены шаблонного значения HTTP-запроса из.'
        - id: operationSpec
          type:
            - OperationSpec
          description: 'OperationSpec, используемые для заполнения httpRequest.'
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            Обратный вызов, вызываемый после получения ответа.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Отправьте предоставленный httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.streamingEndpoints'
    name: streamingEndpoints
    fullName: streamingEndpoints
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'streamingEndpoints: StreamingEndpoints'
      return:
        type:
          - '@azure/arm-mediaservices.StreamingEndpoints'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.streamingLocators'
    name: streamingLocators
    fullName: streamingLocators
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'streamingLocators: StreamingLocators'
      return:
        type:
          - '@azure/arm-mediaservices.StreamingLocators'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.streamingPolicies'
    name: streamingPolicies
    fullName: streamingPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'streamingPolicies: StreamingPolicies'
      return:
        type:
          - '@azure/arm-mediaservices.StreamingPolicies'
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.AzureMediaServices.transforms'
    name: transforms
    fullName: transforms
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'transforms: Transforms'
      return:
        type:
          - '@azure/arm-mediaservices.Transforms'
    package: '@azure/arm-mediaservices'
references:
  - uid: '@azure/arm-mediaservices.AzureMediaServicesContext'
    name: AzureMediaServicesContext
    spec.typeScript:
      - name: AzureMediaServicesContext
        fullName: AzureMediaServicesContext
        uid: '@azure/arm-mediaservices.AzureMediaServicesContext'
  - uid: '@azure/arm-mediaservices.AccountFilters'
    name: AccountFilters
    spec.typeScript:
      - name: AccountFilters
        fullName: AccountFilters
        uid: '@azure/arm-mediaservices.AccountFilters'
  - uid: '@azure/arm-mediaservices.AssetFilters'
    name: AssetFilters
    spec.typeScript:
      - name: AssetFilters
        fullName: AssetFilters
        uid: '@azure/arm-mediaservices.AssetFilters'
  - uid: '@azure/arm-mediaservices.Assets'
    name: Assets
    spec.typeScript:
      - name: Assets
        fullName: Assets
        uid: '@azure/arm-mediaservices.Assets'
  - uid: '@azure/arm-mediaservices.ContentKeyPolicies'
    name: ContentKeyPolicies
    spec.typeScript:
      - name: ContentKeyPolicies
        fullName: ContentKeyPolicies
        uid: '@azure/arm-mediaservices.ContentKeyPolicies'
  - uid: '@azure/arm-mediaservices.Jobs'
    name: Jobs
    spec.typeScript:
      - name: Jobs
        fullName: Jobs
        uid: '@azure/arm-mediaservices.Jobs'
  - uid: '@azure/arm-mediaservices.LiveEvents'
    name: LiveEvents
    spec.typeScript:
      - name: LiveEvents
        fullName: LiveEvents
        uid: '@azure/arm-mediaservices.LiveEvents'
  - uid: '@azure/arm-mediaservices.LiveOutputs'
    name: LiveOutputs
    spec.typeScript:
      - name: LiveOutputs
        fullName: LiveOutputs
        uid: '@azure/arm-mediaservices.LiveOutputs'
  - uid: '@azure/arm-mediaservices.Locations'
    name: Locations
    spec.typeScript:
      - name: Locations
        fullName: Locations
        uid: '@azure/arm-mediaservices.Locations'
  - uid: '@azure/arm-mediaservices.Mediaservices'
    name: Mediaservices
    spec.typeScript:
      - name: Mediaservices
        fullName: Mediaservices
        uid: '@azure/arm-mediaservices.Mediaservices'
  - uid: '@azure/arm-mediaservices.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-mediaservices.Operations'
  - uid: '@azure/arm-mediaservices.StreamingEndpoints'
    name: StreamingEndpoints
    spec.typeScript:
      - name: StreamingEndpoints
        fullName: StreamingEndpoints
        uid: '@azure/arm-mediaservices.StreamingEndpoints'
  - uid: '@azure/arm-mediaservices.StreamingLocators'
    name: StreamingLocators
    spec.typeScript:
      - name: StreamingLocators
        fullName: StreamingLocators
        uid: '@azure/arm-mediaservices.StreamingLocators'
  - uid: '@azure/arm-mediaservices.StreamingPolicies'
    name: StreamingPolicies
    spec.typeScript:
      - name: StreamingPolicies
        fullName: StreamingPolicies
        uid: '@azure/arm-mediaservices.StreamingPolicies'
  - uid: '@azure/arm-mediaservices.Transforms'
    name: Transforms
    spec.typeScript:
      - name: Transforms
        fullName: Transforms
        uid: '@azure/arm-mediaservices.Transforms'