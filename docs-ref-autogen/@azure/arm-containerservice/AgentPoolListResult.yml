### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerservice.AgentPoolListResult'
    name: AgentPoolListResult
    fullName: AgentPoolListResult
    children:
      - '@azure/arm-containerservice.AgentPoolListResult.Array'
      - '@azure/arm-containerservice.AgentPoolListResult.concat'
      - '@azure/arm-containerservice.AgentPoolListResult.concat_1'
      - '@azure/arm-containerservice.AgentPoolListResult.copyWithin'
      - '@azure/arm-containerservice.AgentPoolListResult.entries'
      - '@azure/arm-containerservice.AgentPoolListResult.every'
      - '@azure/arm-containerservice.AgentPoolListResult.fill'
      - '@azure/arm-containerservice.AgentPoolListResult.filter_1'
      - '@azure/arm-containerservice.AgentPoolListResult.filter'
      - '@azure/arm-containerservice.AgentPoolListResult.find'
      - '@azure/arm-containerservice.AgentPoolListResult.find_1'
      - '@azure/arm-containerservice.AgentPoolListResult.findIndex'
      - '@azure/arm-containerservice.AgentPoolListResult.forEach'
      - '@azure/arm-containerservice.AgentPoolListResult.indexOf'
      - '@azure/arm-containerservice.AgentPoolListResult.join'
      - '@azure/arm-containerservice.AgentPoolListResult.keys'
      - '@azure/arm-containerservice.AgentPoolListResult.lastIndexOf'
      - '@azure/arm-containerservice.AgentPoolListResult.length'
      - '@azure/arm-containerservice.AgentPoolListResult.map'
      - '@azure/arm-containerservice.AgentPoolListResult.nextLink'
      - '@azure/arm-containerservice.AgentPoolListResult.pop'
      - '@azure/arm-containerservice.AgentPoolListResult.push'
      - '@azure/arm-containerservice.AgentPoolListResult.reduce'
      - '@azure/arm-containerservice.AgentPoolListResult.reduce_1'
      - '@azure/arm-containerservice.AgentPoolListResult.reduce_2'
      - '@azure/arm-containerservice.AgentPoolListResult.reduceRight'
      - '@azure/arm-containerservice.AgentPoolListResult.reduceRight_1'
      - '@azure/arm-containerservice.AgentPoolListResult.reduceRight_2'
      - '@azure/arm-containerservice.AgentPoolListResult.reverse'
      - '@azure/arm-containerservice.AgentPoolListResult.shift'
      - '@azure/arm-containerservice.AgentPoolListResult.slice'
      - '@azure/arm-containerservice.AgentPoolListResult.some'
      - '@azure/arm-containerservice.AgentPoolListResult.sort'
      - '@azure/arm-containerservice.AgentPoolListResult.splice_1'
      - '@azure/arm-containerservice.AgentPoolListResult.splice'
      - '@azure/arm-containerservice.AgentPoolListResult.toLocaleString'
      - '@azure/arm-containerservice.AgentPoolListResult.toString'
      - '@azure/arm-containerservice.AgentPoolListResult.unshift'
      - '@azure/arm-containerservice.AgentPoolListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-containerservice.AgentPool>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.concat'
    name: 'concat(ConcatArray<AgentPool>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-101">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<AgentPool>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-containerservice.AgentPool>[]'
          description: |
            <span data-ttu-id="37dfc-102">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="37dfc-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-103">Объединяет несколько массивов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="37dfc-104">Дополнительные элементы для добавления в конец массив1.</span><span class="sxs-lookup"><span data-stu-id="37dfc-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-105">Возвращает этот объект после копирования массива определяется начало и конец тот же массив, начиная с позиции целевой</span><span class="sxs-lookup"><span data-stu-id="37dfc-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="37dfc-106">Если целевым объектом является отрицательным, он рассматривается как длина + целевой, где length — длина массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="37dfc-107">Если start имеет отрицательное значение, он рассматривается как длина + start.</span><span class="sxs-lookup"><span data-stu-id="37dfc-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="37dfc-108">Если end имеет отрицательное, оно рассматривается как длина + end.</span><span class="sxs-lookup"><span data-stu-id="37dfc-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-109">Если не указано, длина этого объекта используется в качестве значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="37dfc-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-110">Возвращает итерируемого пары ключей, значение для каждой записи в массиве</span><span class="sxs-lookup"><span data-stu-id="37dfc-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.every'
    name: 'every((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-111">Определяет, удовлетворяют ли все элементы массива заданный тест.</span><span class="sxs-lookup"><span data-stu-id="37dfc-111">Determines whether all the members of an array satisfy the specified test.</span></span>'
    syntax:
      content: 'function every(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="37dfc-112">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-113">Каждый метод вызывает функцию callbackfn для каждого элемента в Массив1, пока не callbackfn возвращает значение false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-114">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-115">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.fill'
    name: 'fill(AgentPool, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-116">Возвращает этот объект после заполнения разделе определяется первым и последним символом значение</span><span class="sxs-lookup"><span data-stu-id="37dfc-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: AgentPool, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: <span data-ttu-id="37dfc-117">значения для заполнения массива раздел с</span><span class="sxs-lookup"><span data-stu-id="37dfc-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="37dfc-118">Индекс начала заполнения массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-118">index to start filling the array at.</span></span> <span data-ttu-id="37dfc-119">Если start имеет отрицательное значение, он рассматривается как длина + start, где length — длина массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-120">Индекс, чтобы остановить заполнение массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-120">index to stop filling the array at.</span></span> <span data-ttu-id="37dfc-121">Если end имеет отрицательное, оно рассматривается как длина + end.</span><span class="sxs-lookup"><span data-stu-id="37dfc-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.filter_1'
    name: 'filter((value: AgentPool, index: number, array: AgentPool[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-122">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => any'
          description: '<span data-ttu-id="37dfc-123">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-124">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-125">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-126">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.filter'
    name: 'filter((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-127">Возвращает элементы массива, которые удовлетворяют условию, указанному в функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>'
    syntax:
      content: 'function filter<S>(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="37dfc-128">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-129">Метод фильтрации вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-130">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-131">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.find'
    name: 'find((this: void, value: AgentPool, index: number, obj: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-132">Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.</span><span class="sxs-lookup"><span data-stu-id="37dfc-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: AgentPool, index: number, obj: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: AgentPool, index: number, obj: AgentPool[]) => boolean'
          description: '<span data-ttu-id="37dfc-133">найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true.</span><span class="sxs-lookup"><span data-stu-id="37dfc-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="37dfc-134">Если такой элемент найден, поиск немедленно возвращает значение этого элемента.</span><span class="sxs-lookup"><span data-stu-id="37dfc-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="37dfc-135">В противном случае поиск возвращает значение undefined.</span><span class="sxs-lookup"><span data-stu-id="37dfc-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-136">Если указано, оно будет использоваться как это значение для каждого вызова предиката.</span><span class="sxs-lookup"><span data-stu-id="37dfc-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="37dfc-137">Если оно не выполняется, не указано. вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="37dfc-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.find_1'
    name: 'find((value: AgentPool, index: number, obj: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-138">Возвращает значение первого элемента в массиве, где предикат имеет значение true и не определено в противном случае.</span><span class="sxs-lookup"><span data-stu-id="37dfc-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: AgentPool, index: number, obj: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: AgentPool, index: number, obj: AgentPool[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-containerservice.AgentPool | undefined'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.findIndex'
    name: 'findIndex((value: AgentPool, index: number, obj: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-139">Возвращает индекс первого элемента в массиве, где предикат имеет значение true, а в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="37dfc-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: AgentPool, index: number, obj: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: AgentPool, index: number, obj: AgentPool[]) => boolean'
          description: '<span data-ttu-id="37dfc-140">найти предикат вызовы один раз для каждого элемента массива в порядке возрастания, пока найдет, когда предикат возвращает значение true.</span><span class="sxs-lookup"><span data-stu-id="37dfc-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="37dfc-141">Если такой элемент найден, findIndex немедленно возвращает индекс этого элемента.</span><span class="sxs-lookup"><span data-stu-id="37dfc-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="37dfc-142">FindIndex в противном случае возвращает значение -1.</span><span class="sxs-lookup"><span data-stu-id="37dfc-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-143">Если указано, оно будет использоваться как это значение для каждого вызова предиката.</span><span class="sxs-lookup"><span data-stu-id="37dfc-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="37dfc-144">Если оно не выполняется, не указано. вместо него используется.</span><span class="sxs-lookup"><span data-stu-id="37dfc-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.forEach'
    name: 'forEach((value: AgentPool, index: number, array: AgentPool[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-145">Выполняет указанное действие для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => void'
          description: '<span data-ttu-id="37dfc-146">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-147">forEach вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-147">forEach calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-148">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-149">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.indexOf'
    name: 'indexOf(AgentPool, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-150">Возвращает индекс первого вхождения значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: AgentPool, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: '<span data-ttu-id="37dfc-151">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-151">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-152">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="37dfc-152">The array index at which to begin the search.</span></span> <span data-ttu-id="37dfc-153">Если параметр fromIndex опущен, поиск начинается с индекса 0.</span><span class="sxs-lookup"><span data-stu-id="37dfc-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-154">Добавляет все элементы массива, разделенных указанной строкой-разделителем.</span><span class="sxs-lookup"><span data-stu-id="37dfc-154">Adds all the elements of an array separated by the specified separator string.</span></span>'
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="37dfc-155">Строка, используемая для разделения один элемент массива из следующего в результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="37dfc-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="37dfc-156">Если этот параметр опущен, элементы массива разделяются запятыми.</span><span class="sxs-lookup"><span data-stu-id="37dfc-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-157">Возвращает итерируемого ключей в массиве</span><span class="sxs-lookup"><span data-stu-id="37dfc-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.lastIndexOf'
    name: 'lastIndexOf(AgentPool, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-158">Возвращает индекс последнего вхождения указанного значения в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: AgentPool, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: '<span data-ttu-id="37dfc-159">Значение, которое требуется найти в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-159">The value to locate in the array.</span></span>'
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-160">Индекс массива, с которого начинается поиск.</span><span class="sxs-lookup"><span data-stu-id="37dfc-160">The array index at which to begin the search.</span></span> <span data-ttu-id="37dfc-161">Если параметр fromIndex опущен, поиск начинается с последнего индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="37dfc-162">Возвращает или задает длину массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="37dfc-163">Это номер один, выше, чем наибольший элемент, определенный в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-163">This is a number one higher than the highest element defined in an array.</span></span>'
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.map'
    name: 'map((value: AgentPool, index: number, array: AgentPool[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-164">Вызывает заданную функцию обратного вызова для каждого элемента массива и возвращает массив, содержащий результаты.</span><span class="sxs-lookup"><span data-stu-id="37dfc-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="37dfc-165">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-166">Метод map вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-166">The map method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-167">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-168">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="37dfc-169">URL-адрес для получения следующего набора результатов пула агента.</span><span class="sxs-lookup"><span data-stu-id="37dfc-169">The URL to get the next set of agent pool results.</span></span>
      <span data-ttu-id="37dfc-170">**ПРИМЕЧАНИЕ. Это свойство не сериализуется. Он может быть заполнен только на сервере.**</span><span class="sxs-lookup"><span data-stu-id="37dfc-170">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-171">Удаляет последний элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="37dfc-171">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-containerservice.AgentPool | undefined'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.push'
    name: 'push(AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-172">Присоединяет новые элементы к массиву и возвращает новую длину массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-172">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: AgentPool[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="37dfc-173">Новые элементы массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-173">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduce'
    name: 'reduce((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-174">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-174">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="37dfc-175">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-175">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: '<span data-ttu-id="37dfc-176">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-176">A function that accepts up to four arguments.</span></span> <span data-ttu-id="37dfc-177">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-177">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-containerservice.AgentPool'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduce_1'
    name: 'reduce((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-178">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="37dfc-179">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, initialValue: AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: ''
      return:
        type:
          - '@azure/arm-containerservice.AgentPool'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-180">Вызывает заданный обратный вызов функции для всех элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-180">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="37dfc-181">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-181">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="37dfc-182">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-182">A function that accepts up to four arguments.</span></span> <span data-ttu-id="37dfc-183">Метод reduce вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-183">The reduce method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="37dfc-184">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="37dfc-184">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="37dfc-185">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-185">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduceRight'
    name: 'reduceRight((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-186">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="37dfc-186">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="37dfc-187">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-187">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: '<span data-ttu-id="37dfc-188">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-188">A function that accepts up to four arguments.</span></span> <span data-ttu-id="37dfc-189">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-189">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
      return:
        type:
          - '@azure/arm-containerservice.AgentPool'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduceRight_1'
    name: 'reduceRight((previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, AgentPool)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-190">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="37dfc-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="37dfc-191">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool, initialValue: AgentPool)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: AgentPool, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => AgentPool'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: ''
      return:
        type:
          - '@azure/arm-containerservice.AgentPool'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-192">Вызывает заданный обратный вызов функции для всех элементов в массиве, в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="37dfc-192">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="37dfc-193">Возвращаемое значение функции обратного вызова — накопленный результат и предоставляется в качестве аргумента при следующем вызове функции обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="37dfc-193">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: AgentPool, currentIndex: number, array: AgentPool[]) => U'
          description: '<span data-ttu-id="37dfc-194">Функция, которая принимает до четырех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-194">A function that accepts up to four arguments.</span></span> <span data-ttu-id="37dfc-195">Метод reduceRight вызывает функцию callbackfn один раз для каждого элемента в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-195">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>'
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="37dfc-196">Если значение initialValue указано, используется как начальное значение начинается накопление.</span><span class="sxs-lookup"><span data-stu-id="37dfc-196">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="37dfc-197">Первый вызов функции callbackfn предоставляет это значение в качестве аргумента вместо значения массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-197">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-198">Резервирует элементы в массиве.</span><span class="sxs-lookup"><span data-stu-id="37dfc-198">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-199">Удаляет первый элемент из массива и возвращает его.</span><span class="sxs-lookup"><span data-stu-id="37dfc-199">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-containerservice.AgentPool | undefined'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-200">Возвращает фрагмент массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-200">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="37dfc-201">Начало указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-201">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-202">Конец указанного фрагмента массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-202">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.some'
    name: 'some((value: AgentPool, index: number, array: AgentPool[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-203">Определяет, возвращает ли заданной функции обратного вызова значение true для любого элемента массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-203">Determines whether the specified callback function returns true for any element of an array.</span></span>'
    syntax:
      content: 'function some(callbackfn: (value: AgentPool, index: number, array: AgentPool[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: AgentPool, index: number, array: AgentPool[]) => boolean'
          description: '<span data-ttu-id="37dfc-204">Функция, которая принимает до трех аргументов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-204">A function that accepts up to three arguments.</span></span> <span data-ttu-id="37dfc-205">Метод some вызывает функцию callbackfn для каждого элемента в массив1 callbackfn возвращает false, или до конца массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-205">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="37dfc-206">Объект, на который может ссылаться ключевое слово this в функции callbackfn.</span><span class="sxs-lookup"><span data-stu-id="37dfc-206">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="37dfc-207">Если thisArg опущен, не указано. используется в качестве этого значения.</span><span class="sxs-lookup"><span data-stu-id="37dfc-207">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.sort'
    name: 'sort(undefined | (a: AgentPool, b: AgentPool) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-208">Сортирует массив.</span><span class="sxs-lookup"><span data-stu-id="37dfc-208">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: AgentPool, b: AgentPool) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: AgentPool, b: AgentPool) => number'
          description: |
            <span data-ttu-id="37dfc-209">Имя функции, используемое для определения порядка элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-209">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="37dfc-210">Если этот параметр опущен, элементы сортируются по возрастанию, ASCII символ.</span><span class="sxs-lookup"><span data-stu-id="37dfc-210">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.splice_1'
    name: 'splice(number, number, AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-211">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="37dfc-211">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: AgentPool[])'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="37dfc-212">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-212">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="37dfc-213">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-213">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="37dfc-214">Элементов для вставки в массив вместо удаленных элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-214">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-215">Удаляет элементы из массива и при необходимости вставляет новые элементы на их место, возвращая удаленные элементы.</span><span class="sxs-lookup"><span data-stu-id="37dfc-215">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: '<span data-ttu-id="37dfc-216">Отсчитываемый от нуля расположение в массиве, с которой начинается удаление элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-216">The zero-based location in the array from which to start removing elements.</span></span>'
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="37dfc-217">Число удаляемых элементов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-217">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-containerservice.AgentPool[]'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="37dfc-218">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-218">Returns a string representation of an array.</span></span> <span data-ttu-id="37dfc-219">Элементы преобразуются в строку, используя их toLocalString методов.</span><span class="sxs-lookup"><span data-stu-id="37dfc-219">The elements are converted to string using their toLocalString methods.</span></span>'
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-220">Возвращает строковое представление массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-220">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.unshift'
    name: 'unshift(AgentPool[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-221">Вставляет новые элементы в начало массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-221">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: AgentPool[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-containerservice.AgentPool[]'
          description: |
            <span data-ttu-id="37dfc-222">Элементов для вставки в начале массива.</span><span class="sxs-lookup"><span data-stu-id="37dfc-222">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPoolListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="37dfc-223">Возвращает итерируемого значений в массиве</span><span class="sxs-lookup"><span data-stu-id="37dfc-223">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-containerservice.AgentPool>
    package: '@azure/arm-containerservice'
references:
  - uid: Array<@azure/arm-containerservice.AgentPool>
    name: AgentPool>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-containerservice.AgentPool>[]'
    name: 'AgentPool>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-containerservice.AgentPool[]'
    name: 'AgentPool[]'
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-containerservice.AgentPool'
    name: AgentPool
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
  - uid: '@azure/arm-containerservice.AgentPool | undefined'
    name: AgentPool | undefined
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-containerservice.AgentPool>
    name: AgentPool>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: '>'
        fullName: '>'